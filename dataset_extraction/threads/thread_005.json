[{"subject": "Re: checkout/checkin/uncheckout vs. lock/unlock", "content": "Couple more thoughts...\n\nUsing LOCK also allows us to leverage the lock discovery mechanism as well\nas any DASL searching semnatics.\n\nChris\n\n                -----Original Message-----\n                From:   Chris Kaler [mailto:ckaler@microsoft.com]\n                Sent:   Monday, November 30, 1998 11:40 AM\n                To:     'Geoffrey M. Clemm'; ietf-dav-versioning@w3.org\n                Subject:        RE: checkout/checkin/uncheckout vs.\nlock/unlock\n\n                What we agreed to was that we liked multiple methods instead\nof just one\n                :-).  However, we discovered that there was a conflict\nbetween checkout and\n                lock.  I was supposed to start an email thread about it, but\ngot hung up.\n\n                My idea was that if we make them the same method, you remove\nmuch of the\n                confusion.  A checkout is, in many ways, a lock.  You\n\"checkout\" either\n                shared or exclusive.  That is the same as a lock.  The only\ndifference is\n                that you have a working resource.\n\n                                - What if you want to leave the working\nresource available\n                for anyone\n                                to modify?  In what sense have you created a\nlock?\n\n                You make it shared and everything is fine\n\n                                - When you checkin a resource, you have now\nmade an\n                immutable revision.\n                                In what sense have you \"unlocked\" anything?\n\n                I argue that a checkout is an implicit lock against the\nresource and by\n                checking in, you have removed that lock.\n\n                                - Converely, when you \"uncheckout\" a working\nresource, you\n                delete it.\n                                In what sense have you \"locked\" anything?\n\n                This is another reason why I like the LOCK method.  In many\nsystems,\n                explicit locking is used.  PUTs with require the lock-id to\nbe specified.\n                By tieing the two together, clients don't need to worry (or\nthink) abou the\n                \"working resource\".  They do their PUT to the versioned\nresource and specify\n                the checkout lock.  The server validates the lock and\nupdates the working\n                resource.  I actually think this is much easier for the\nclient than having\n                to track the versioned resource, the working resource, and\nthe lock-id.\n                Less information, consistent protocol.\n\n                                - When you \"checkout\" a versioned resource,\nyou create a new\n                (working)\n                                resource.  A \"lock\" is not something you\nexpect to create a\n                new resource.\n\n                But many (most) checkouts result in the versioned resource\nbeing locked in\n                some way.  So this approach lessens the round-trips and the\ninformation the\n                client must track and keeps the protocol almost exactly the\nsame as\n                non-versioning.\n\n                Chris\n\n\n                                -----Original Message-----\n                                From:   Geoffrey M. Clemm\n[mailto:gclemm@tantalum.atria.com]\n                                Sent:   Tuesday, November 03, 1998 10:30 AM\n                                To:     ietf-dav-versioning@w3.org\n                                Subject:        checkout/checkin/uncheckout\nvs. lock/unlock\n\n\n                                Why was the checkout/checkin/uncheckout\nfunctionality\n                assigned\n                                to the lock/unlock methods?  As I recall, in\nour last\n                meeting,\n                                we agreed (or at least, all of us but Chris\nagreed, and\n                Chris\n                                reluctantly accepted :-) that they each\nreally needed to be\n                a\n                                separate method.\n\n                                There was a proposal to allow you to\noptionally \"lock\" a\n                working\n                                resource as part of the checkout command\n(which is fine with\n                me),\n                                but making the checkout command actually be\na variant of the\n                \"lock\"\n                                makes no sense to me.\n\n                                - What if you want to leave the working\nresource available\n                for anyone\n                                to modify?  In what sense have you created a\nlock?\n\n                                - When you checkin a resource, you have now\nmade an\n                immutable revision.\n                                In what sense have you \"unlocked\" anything?\n\n                                - Converely, when you \"uncheckout\" a working\nresource, you\n                delete it.\n                                In what sense have you \"locked\" anything?\n\n                                - When you \"checkout\" a versioned resource,\nyou create a new\n                (working)\n                                resource.  A \"lock\" is not something you\nexpect to create a\n                new resource.\n\n                                So I propose that we not overload\nlock/unlock, but that we\n                have 3 new\n                                methods: CHECKIN, CHECKOUT, UNCHECKOUT.\n\n                                Cheers,\n                                Geoff\n\n\n                                Note: my previous message to\nietf-dav-versioning@w3.org\n                appears to\n                                have been distributed fine (or at least, it\nmake it back to\n                me with\n                                no trouble.  So whatever problem Chris was\nhaving seems to\n                have either\n                                been fixed, or is a local problem at his\nhome mailing site.\n     \n   \n\n", "id": "lists-005-10008710"}, {"subject": "Version Model, XML Version History white paper", "content": "In mid-October, Jim Amsden sent me a white paper giving an object-oriented\nmodel of a DAV resource which supports versioning, as well as a proposal for\nhow to linearize a version history using XML.  It was initially sent out to\nDesign Team members, but it didn't cause any debate, and deserves broader\nreview.\n\nI've placed this document on the WebDAV site at:\n\nhttp://www.ics.uci.edu/pub/ietf/webdav/versioning/vhist/\n\n- Jim\n     \n   \n\n", "id": "lists-005-10016023"}, {"subject": "Re: Version Model, XML Version History white paper", "content": "At 8:56 PM -0400 11/30/98, Jim Whitehead wrote:\n>In mid-October, Jim Amsden sent me a white paper giving an object-oriented\n>model of a DAV resource which supports versioning, as well as a proposal for\n>how to linearize a version history using XML.  It was initially sent out to\n>Design Team members, but it didn't cause any debate, and deserves broader\n>review.\n\nI don't know about anyone else, but I never received this. It sounds\ninteresting and I'll read it before the meeting meet.\n\n  -- David\n\nDavid Durand              dgd@cs.bu.edu  \\  david@dynamicDiagrams.com\nBoston University Computer Science        \\  Sr. Analyst\nhttp://www.cs.bu.edu/students/grads/dgd/   \\  Dynamic Diagrams\n--------------------------------------------\\  http://www.dynamicDiagrams.com/\nMAPA: mapping for the WWW                    \\\n     \n   \n\n", "id": "lists-005-10019290"}, {"subject": "Re: checkout/checkin/uncheckout vs. lock/unlock", "content": ">I'd like to hear who these people are.  Most people I talk to either do\n>implicit versioning (don't want to be bothered by it, just make it happen)\n>or use exclusive versioning (which requires locking).  So I find this\n>requirement confusing.  Not to mean its invalid, I've just never heard it\n>before.\n\nI've certainly mentioned it almost every time I open my mouth. It's one of\nmy little obsessions.\n\nIf you're supporting tight collaboration, you may prefer to allow\n(temporary) divergence in document state in order to achieve maximal\nprogress (automatic forking is one way to avoid locking). Similarly, if you\nare relying on merge tools (like the CVS model for software version\ncontrol) you may prefer to create a conflict that can be resolved later,\nrather than block the human.\n\nMy database teacher always used to point out that some actions (like making\na report to a terminal, or starting a user interaction) inherently\ncommitcommit a transaction because you \"can't abort the user.\" Similarly in\nediting, you may not want to lock out a user, but that doesn't mean that\nyou just want to lose information either.\n\nSeparating checkout (reservation, as we called it in the requirements\ndocument) from locking makes this distinction clear. It also separates the\n\"transaction management\" function of a checkout (maintaining whatever state\nthe server may need to maintain) from the locking function: (which enforces\naccess conditions on a resource).\n\nOne thing we _could have_ (I'm not advocating this, but some might) is a\nresponse that would let a server tell a client that a lock has been\nassigned as a result of the checkout operation. Servers that enforce\nlocking all the time would then be able to inform clients of the needed\nlock ID. This makes the protocol more complex, but reduces the round trips\nfor a lock/checkout pair.\n\nThose of you who are building servers that enforce this kind of locking\nprobably know more than I do about whether that's a needed tradeoff.\n\n  -- David\n\nDavid Durand              dgd@cs.bu.edu  \\  david@dynamicDiagrams.com\nBoston University Computer Science        \\  Sr. Analyst\nhttp://www.cs.bu.edu/students/grads/dgd/   \\  Dynamic Diagrams\n--------------------------------------------\\  http://www.dynamicDiagrams.com/\nMAPA: mapping for the WWW                    \\\n     \n   \n\n", "id": "lists-005-10023192"}, {"subject": "Re: checkout/checkin/uncheckout vs. lock/unlock", "content": "At 3:39 PM -0400 11/30/98, Chris Kaler wrote:\n>My idea was that if we make them the same method, you remove much of the\n>confusion.  A checkout is, in many ways, a lock.  You \"checkout\" either\n>shared or exclusive.  That is the same as a lock.  The only difference is\n>that you have a working resource.\n\nWell, the working resource is the important thing. Locking (in the sense of\nblocking some operations) is purely optional depending on a server's\ndesired policy. This seems like two things glommed together into one method\nto me.\n\n>               - What if you want to leave the working resource available\n>for anyone\n>               to modify?  In what sense have you created a lock?\n\n>You make it shared and everything is fine\n\n>               - When you checkin a resource, you have now made an\n>immutable revision.\n>               In what sense have you \"unlocked\" anything?\n\n>I argue that a checkout is an implicit lock against the resource and by\n>checking in, you have removed that lock.\n\nSince the resource was not modifiable, it's a funny kind of lock. If the\naccess is non-exclusive (anyone else can do a checkout as well), it's not\neven a lock in the sense that it blocks other checkout operations. In fact,\nin that case, it's not very lock-like at all, since no operation is blocked\nby it.\n\nYou didn't actually answer the objections either, but just repeated your\nassertion. Maybe my verbose statement of why it's not a lock will give you\na better handle for arguing your point.\n\nSo I think that the notion is rather confusing. Servers that don't offer\nlocking (are then required to supply \"non-exclusive locks\", and track their\nIDs, when in fact they need no such objects or functions... While I approve\nof complexity in the server more than complexity in the client, it seems to\nme that this makes life harder for clients as well...\n\n>               - Converely, when you \"uncheckout\" a working resource, you\n>delete it.\n>               In what sense have you \"locked\" anything?\n\n>This is another reason why I like the LOCK method.  In many systems,\n>explicit locking is used.  PUTs with require the lock-id to be specified.\n>By tieing the two together, clients don't need to worry (or think) abou the\n>\"working resource\".  They do their PUT to the versioned resource and specify\n>the checkout lock.  The server validates the lock and updates the working\n>resource.  I actually think this is much easier for the client than having\n>to track the versioned resource, the working resource, and the lock-id.\n>Less information, consistent protocol.\n\nYou seem to making a round-trips argument. In my other message, I suggest\nthat this could be optimized without merging the two methods. It always\nseemed reasonable to me that a checkout _might_ create a lock (since that's\nthe way many systems work). Requiring that a lock be created seems a\ndifferent kettle of fish (since other systems don't have the notion of\nlocking).\n\n>               - When you \"checkout\" a versioned resource, you create a new\n>(working)\n>               resource.  A \"lock\" is not something you expect to create a\n>new resource.\n\n>But many (most) checkouts result in the versioned resource being locked in\n>some way.  So this approach lessens the round-trips and the information the\n>client must track and keeps the protocol almost exactly the same as\n>non-versioning.\n\nThis merger would be a lot more appealing if the semantics of \"checkout\nlocks\" really matched the semantics of other locks: since a \"non-exclusive\ncheckout lock\" is actually equivalent to no locking at all, this strikes me\nas more confusing than useful, especially since the extra round trip can be\neliminated _without_ merging the concepts of checkout and lock for\neverybody.\n\n  -- David\n\nDavid Durand              dgd@cs.bu.edu  \\  david@dynamicDiagrams.com\nBoston University Computer Science        \\  Sr. Analyst\nhttp://www.cs.bu.edu/students/grads/dgd/   \\  Dynamic Diagrams\n--------------------------------------------\\  http://www.dynamicDiagrams.com/\nMAPA: mapping for the WWW                    \\\n     \n   \n\n", "id": "lists-005-10028816"}, {"subject": "Re: checkout/checkin/uncheckout vs. lock/unlock", "content": "There are several types of locks.  Shared, Advisory, and Exclusive.  I\ncannot see why you would (in most cases) want to check out a resource\nwithout taking one of these locks.  In a collaboration world, you want to\nknow who else is working on the document.  Locks provide an existing\nmechanism to discover and manage this information.\n\nPersonally, I don't like the idea of method side-effects: \"BTW this\noperation also locked something.\"\n\nHopefully we can continue this discussion on Wed.\n\nChris\n\n                -----Original Message-----\n                From:   David G. Durand [mailto:dgd@cs.bu.edu]\n                Sent:   Monday, November 30, 1998 6:00 PM\n                To:     ietf-dav-versioning@w3.org\n                Subject:        RE: checkout/checkin/uncheckout vs.\nlock/unlock\n\n                >I'd like to hear who these people are.  Most people I talk\nto either do\n                >implicit versioning (don't want to be bothered by it, just\nmake it happen)\n                >or use exclusive versioning (which requires locking).  So I\nfind this\n                >requirement confusing.  Not to mean its invalid, I've just\nnever heard it\n                >before.\n\n                I've certainly mentioned it almost every time I open my\nmouth. It's one of\n                my little obsessions.\n\n                If you're supporting tight collaboration, you may prefer to\nallow\n                (temporary) divergence in document state in order to achieve\nmaximal\n                progress (automatic forking is one way to avoid locking).\nSimilarly, if you\n                are relying on merge tools (like the CVS model for software\nversion\n                control) you may prefer to create a conflict that can be\nresolved later,\n                rather than block the human.\n\n                My database teacher always used to point out that some\nactions (like making\n                a report to a terminal, or starting a user interaction)\ninherently\n                commitcommit a transaction because you \"can't abort the\nuser.\" Similarly in\n                editing, you may not want to lock out a user, but that\ndoesn't mean that\n                you just want to lose information either.\n\n                Separating checkout (reservation, as we called it in the\nrequirements\n                document) from locking makes this distinction clear. It also\nseparates the\n                \"transaction management\" function of a checkout (maintaining\nwhatever state\n                the server may need to maintain) from the locking function:\n(which enforces\n                access conditions on a resource).\n\n                One thing we _could have_ (I'm not advocating this, but some\nmight) is a\n                response that would let a server tell a client that a lock\nhas been\n                assigned as a result of the checkout operation. Servers that\nenforce\n                locking all the time would then be able to inform clients of\nthe needed\n                lock ID. This makes the protocol more complex, but reduces\nthe round trips\n                for a lock/checkout pair.\n\n                Those of you who are building servers that enforce this kind\nof locking\n                probably know more than I do about whether that's a needed\ntradeoff.\n\n                  -- David\n                \n                David Durand              dgd@cs.bu.edu  \\\ndavid@dynamicDiagrams.com\n                Boston University Computer Science        \\  Sr. Analyst\n                http://www.cs.bu.edu/students/grads/dgd/   \\  Dynamic\nDiagrams\n                --------------------------------------------\\\nhttp://www.dynamicDiagrams.com/\n                MAPA: mapping for the WWW\n\\\n     \n   \n\n", "id": "lists-005-10035736"}, {"subject": "Re: checkout/checkin/uncheckout vs. lock/unlock", "content": "Rather than scatter comments, I'll comment here...\n\nI think that locking and the working resource are both important.  As I go\naround and ask people what checkout means to them, I hear both.  The problem\nwe discovered at the last meeting is that CHECKOUT and LOCK have overlap and\nyou either have to perform an extra round-trip on the most common operation,\nhave one method effect the other, or merge the methods.  Given that LOCK\nexists and has many of the semantics we desire: discovery, cancel, supports\nmultiple types of locks, and eventually searchable from DASL, it seems like\na win to keep the complexity down and just merge the two.  It also makes the\nprotocol changes from non-versioning to versioning a small delta that builds\non the existing protocol.  This was my reasoning.\n\nRemember that revisions are partially mutable.  There are mutable properties\nand several folks have indicated that most of their properties are mutable.\nActually, I think the working resource is only interesting when you are\ndoing shared updates.\n\nChris\n\n                -----Original Message-----\n                From:   David G. Durand [mailto:dgd@cs.bu.edu]\n                Sent:   Monday, November 30, 1998 6:36 PM\n                To:     Chris Kaler; 'Geoffrey M. Clemm';\nietf-dav-versioning@w3.org\n                Subject:        RE: checkout/checkin/uncheckout vs.\nlock/unlock\n\n                At 3:39 PM -0400 11/30/98, Chris Kaler wrote:\n                >My idea was that if we make them the same method, you\nremove much of the\n                >confusion.  A checkout is, in many ways, a lock.  You\n\"checkout\" either\n                >shared or exclusive.  That is the same as a lock.  The only\ndifference is\n                >that you have a working resource.\n\n                Well, the working resource is the important thing. Locking\n(in the sense of\n                blocking some operations) is purely optional depending on a\nserver's\n                desired policy. This seems like two things glommed together\ninto one method\n                to me.\n\n                >               - What if you want to leave the working\nresource available\n                >for anyone\n                >               to modify?  In what sense have you created a\nlock?\n\n                >You make it shared and everything is fine\n\n                >               - When you checkin a resource, you have now\nmade an\n                >immutable revision.\n                >               In what sense have you \"unlocked\" anything?\n\n                >I argue that a checkout is an implicit lock against the\nresource and by\n                >checking in, you have removed that lock.\n\n                Since the resource was not modifiable, it's a funny kind of\nlock. If the\n                access is non-exclusive (anyone else can do a checkout as\nwell), it's not\n                even a lock in the sense that it blocks other checkout\noperations. In fact,\n                in that case, it's not very lock-like at all, since no\noperation is blocked\n                by it.\n\n                You didn't actually answer the objections either, but just\nrepeated your\n                assertion. Maybe my verbose statement of why it's not a lock\nwill give you\n                a better handle for arguing your point.\n\n                So I think that the notion is rather confusing. Servers that\ndon't offer\n                locking (are then required to supply \"non-exclusive locks\",\nand track their\n                IDs, when in fact they need no such objects or functions...\nWhile I approve\n                of complexity in the server more than complexity in the\nclient, it seems to\n                me that this makes life harder for clients as well...\n\n                >               - Converely, when you \"uncheckout\" a working\nresource, you\n                >delete it.\n                >               In what sense have you \"locked\" anything?\n\n                >This is another reason why I like the LOCK method.  In many\nsystems,\n                >explicit locking is used.  PUTs with require the lock-id to\nbe specified.\n                >By tieing the two together, clients don't need to worry (or\nthink) abou the\n                >\"working resource\".  They do their PUT to the versioned\nresource and specify\n                >the checkout lock.  The server validates the lock and\nupdates the working\n                >resource.  I actually think this is much easier for the\nclient than having\n                >to track the versioned resource, the working resource, and\nthe lock-id.\n                >Less information, consistent protocol.\n\n                You seem to making a round-trips argument. In my other\nmessage, I suggest\n                that this could be optimized without merging the two\nmethods. It always\n                seemed reasonable to me that a checkout _might_ create a\nlock (since that's\n                the way many systems work). Requiring that a lock be created\nseems a\n                different kettle of fish (since other systems don't have the\nnotion of\n                locking).\n\n                >               - When you \"checkout\" a versioned resource,\nyou create a new\n                >(working)\n                >               resource.  A \"lock\" is not something you\nexpect to create a\n                >new resource.\n\n                >But many (most) checkouts result in the versioned resource\nbeing locked in\n                >some way.  So this approach lessens the round-trips and the\ninformation the\n                >client must track and keeps the protocol almost exactly the\nsame as\n                >non-versioning.\n\n                This merger would be a lot more appealing if the semantics\nof \"checkout\n                locks\" really matched the semantics of other locks: since a\n\"non-exclusive\n                checkout lock\" is actually equivalent to no locking at all,\nthis strikes me\n                as more confusing than useful, especially since the extra\nround trip can be\n                eliminated _without_ merging the concepts of checkout and\nlock for\n                everybody.\n\n                  -- David\n                \n                David Durand              dgd@cs.bu.edu  \\\ndavid@dynamicDiagrams.com\n                Boston University Computer Science        \\  Sr. Analyst\n                http://www.cs.bu.edu/students/grads/dgd/   \\  Dynamic\nDiagrams\n                --------------------------------------------\\\nhttp://www.dynamicDiagrams.com/\n                MAPA: mapping for the WWW\n\\\n     \n   \n\n", "id": "lists-005-10042123"}, {"subject": "Re: checkout/checkin/uncheckout vs. lock/unlock", "content": "Chris Kaler wrote:\n\n> There are several types of locks.  Shared, Advisory, and Exclusive.  I\n> cannot see why you would (in most cases) want to check out a resource\n> without taking one of these locks.  In a collaboration world, you want to\n> know who else is working on the document.  Locks provide an existing\n> mechanism to discover and manage this information.\n\nCVS is widely used for collaboration, and in the standard mode of\noperation no locks are taken out and there is no way to know who else\nhas anything checked out. In fact, to \"release\" a version under CVS you\ncan just do rm -r...\n\nCheers,\n\nBen.\n\n\n--\nBen Laurie            |Phone: +44 (181) 735 0686| Apache Group member\nFreelance Consultant  |Fax:   +44 (181) 735 0689|http://www.apache.org/\nand Technical Director|Email: ben@algroup.co.uk |\nA.L. Digital Ltd,     |Apache-SSL author     http://www.apache-ssl.org/\nLondon, England.      |\"Apache: TDG\" http://www.ora.com/catalog/apache/\n     \n   \n\n", "id": "lists-005-10050872"}, {"subject": "Re: checkout/checkin/uncheckout vs. lock/unlock", "content": "At 6:20 AM -0400 12/1/98, Ben Laurie wrote:\n>Chris Kaler wrote:\n>>\n>> There are several types of locks.  Shared, Advisory, and Exclusive.  I\n>> cannot see why you would (in most cases) want to check out a resource\n>> without taking one of these locks.  In a collaboration world, you want to\n>> know who else is working on the document.  Locks provide an existing\n>> mechanism to discover and manage this information.\n\n>CVS is widely used for collaboration, and in the standard mode of\n>operation no locks are taken out and there is no way to know who else\n>has anything checked out. In fact, to \"release\" a version under CVS you\n>can just do rm -r...\n\nI was going to say \"my point exactly\" but in fact the CVS model is _more_\nradical -- there's really no need for even a checkout operation in that\nmodel. Checkout is sufficient to provide notification, etc. It's doubtful\nthat all of the notification and status mechanisms for locks will be\nexactly the same as those for collaboration. Even if the mechanisms are the\nsame, if the operations are combined, you can't implement separate policies\nfor the two situations. And that's clearly more suspect.\n\nTo me the similarities in notification and discovery can't hide the basic\ndisconnect with repect to core functionality: a checkout simply need not\nlock anything (depending on server policy). Given that, it's not\nappropriate to call it a lock, or to overload the locking methods.\n\n  -- David\n\nDavid Durand              dgd@cs.bu.edu  \\  david@dynamicDiagrams.com\nBoston University Computer Science        \\  Sr. Analyst\nhttp://www.cs.bu.edu/students/grads/dgd/   \\  Dynamic Diagrams\n--------------------------------------------\\  http://www.dynamicDiagrams.com/\nMAPA: mapping for the WWW                    \\\n     \n   \n\n", "id": "lists-005-10055067"}, {"subject": "Re: defining a versioned resource to be a \"collection\"", "content": "At 6:24 PM -0400 11/5/98, Chris Kaler wrote:\n>We would also have to add the notion of a \"default\" member to a collection.\n>That is, if I do a GET on the versioned resource, which is just a\n>collection, which resource within the collection do I return (this is the\n>PIN method, but the semantics are a little broader now -- not that this is\n>bad).\n\nAs I understand collections, the result of doing a GET is server defined\n(as we have properties for accessing metadata and contents information for\ncollections). Defining that a particular kind of collection responds to GET\nin a particular way is exactly the kind of thing this leeway was intended\nto support. I don't see it as a bizarre new thing, but a sensible leverage\nof a method we created for just this kind of case!\n\n>When building Web sites, the inter-page links are very important.  I believe\n>people want to be able to version their sites without requiring a lot of\n>link updating to occur.\n\nI agree with this very strongly, but I don't think your mechanism is the\nonly (or even the best) way to ensure this.\n\nAny method of mapping a specific version of a resource to a specific part\nof a URL tree will accomplish this. Configurations do this (and there may\nbe different levels of complexity). The use of default versions is _surely_\nseparate from the use of a special header, since the default version is\nproduced when the header is omitted (or perhaps has a special value).\n\nThe real problem with the header technique is that it duplicates a\nmechanism that we'll need anyway (the ability to create a URL that\nrepresents a particular revision of a versioned resource). We must have\nsuch URLs to support version-specific links (e.g. for copy-editing\napplications). So why create a duplicate mechanism involving new HTTP\nheaders that duplicates that functionality.\n\nYou articulate a the case for configurations or some other way of getting a\n\"friendly\" default-version URL space. That's separate from the Header/URL\nissue.\n\n>That is, I should be able to create different\n>branches and have my links still work by passing in headers to qualify the\n>URI.  By introducing namespace changes to refer to the branches and versions\n>(or even configurations), you force the links to have to change.\n\nThe headers are a red herring, I think. To restate the requirement:\n\n\"We must be able to have a URL space where HTML links (relative URLs at\nleast, and perhaps absolute ones) will not be broken because the HTML files\nare stored in versioned resources.\"\n\n   -- David\n\n\n\nDavid Durand              dgd@cs.bu.edu  \\  david@dynamicDiagrams.com\nBoston University Computer Science        \\  Sr. Analyst\nhttp://www.cs.bu.edu/students/grads/dgd/   \\  Dynamic Diagrams\n--------------------------------------------\\  http://www.dynamicDiagrams.com/\nMAPA: mapping for the WWW                    \\\n     \n   \n\n", "id": "lists-005-10060147"}, {"subject": "Re: versioned collections: a proposal", "content": "   From: Chris Kaler <ckaler@microsoft.com>\n\n   I agree that versioned collections are difficult.\n\nJust to be clear, I believe that you have to be careful when you are\ndesigning versioned collection support because several obvious\napproaches don't work, but I don't believe supporting/implementing\nthem is difficult/expensive if you get the design right.\n\n   For that reason I added\n   the properties to discover what level of collection versioning a resource\n   supported.  I think it is reasonable to make this generally optional.\n\nCertainly it should be optional whether or not a given collection is a\nversioned resource (just as is the case for non-collections).  I\nstrongly disagree that \"versioned collections\" should be an optional\npart of WebDAV versioning support, since without them, there's no way\nto have a reliable mechanism for accessing previous versions of a Web site.\n\n   I don't think that collections have references is viable.\n\nThat will come as a shock to the advanced collections team (:-).\n\n   First, the client\n   should have to do anything different if it is working on a versioned\n   collection that if it is working on a non-versioned collection.  This is\n   hard, but not impossible using references.\n\nHow is this hard?  The purpose of direct references is specifically to\nmake this possible/easy.\n\n   However, I think the namespace\n   shouldn't differ at all.  That is, I should be able to take a Web site that\n   isn't versioned, and enable versioning on it without requiring the structure\n   of the Web site to be changed.\n\nWith all the versioning systems I know of, when you convert a resource\nfrom being non-versioned to being versioned, a new object (the\n\"versioned resource\") is created, either in some directory (e.g. an\nRCS \",v\" file) or in some repository.  If you consider the addition of\na \"repository\" resource to the Web site (to hold the versioned\nresources) to be a structure change, then I will argue both that this\nis a very minor and a very necessary restructuring.\n\nNote that the addition of the repository is the only change to the\nuser visible \"structure\".  The tree that has been placed under version\ncontrol now is a \"workspace\", but the structure of the workspace is\nidentical to the structure of the tree before it was placed under\nversion control.\n\nCheers,\nGeoff\n     \n   \n\n", "id": "lists-005-10066351"}, {"subject": "Re: versioned collections: a proposal", "content": ">Just to be clear, I believe that you have to be careful when you are\n>designing versioned collection support because several obvious\n>approaches don't work, but I don't believe supporting/implementing\n>them is difficult/expensive if you get the design right.....\n\nI just want to say that I agree with Geoff on his message. The statement\nthat I have extracted above conveys my sentiment. In particular, getting the\ndesign right is hard with the Web because the collection and evolution\naspect of the Web is made tricky because of\n\n    - the type of collections that web sites are\n    - the type of property support needed for web collections\n    - the type of collaboration needed in authoring webs\n\nThis is why I liked Geoff's design that he circulated a while ago. It\nprovides for minimal needed functionality and yet addresses future\nextensibility. It draws the design \"line in the sand\" at the right place and\nin the right way\n\nThe discussion that preceded this message about collections with references,\nmutable properties, one method for lock and versioning all point to the\ndifficulty of getting this right.\n     \n   \n\n", "id": "lists-005-10071800"}, {"subject": "CHECKIN/CHECKOUT", "content": "Even though we missed the Jan 11 deadline, Jim Amsden and I have been\nhard at work on the WebDAV versioning model, and hope to have some\ndocuments to send out by the end of January (Jim even flew up to\nMass in last week's ice storm for 2 days to work on it with me,\nwhich definitely deserves a \"beyond-the-call-of-duty\" award).\n\nBefore I get my part of those documents finished up, I wanted to send\nout the long-promised \"CHECKOUT/CHECKIN\" document.  This document has\nbeen significantly affected by the results of our modeling efforts, and\nso will probably bear only remote resemblance to what folks remember of\nthe various prior conversations on the subject.\n\nSo with that in mind, here's what I've got:\n\n------------------------------------------------------------\n\nCHECKOUT/CHECKIN\n\n\nPutting a Resource under Version Control\n\nWhen a resource is put under version control, it becomes unwriteable.\nIn order to modify a resource, it must first be checked out, then can\nbe modified one or more times, and then checked back in to indicate\nyou are done modifying it.  If your CHECKOUT fails, it means someone\nelse is currently modifying the document, so you should only do a GET\nwith the understanding that the results are only temporarily valid.\n\n\nCheckout vs. Lock\n\nNote the distinction between a (write) LOCK and CHECKOUT.  The LOCK\ntakes a resource that is writeable by everyone and temporarily makes\nit unwriteable by everyone except the lock holder (until it is\nUNLOCK'ed).  A CHECKOUT takes a resource that is unwriteable by\neveryone, and temporarily makes it writeable (until it is CHECKIN'd).\nIt is reasonable to apply a LOCK to a checked-out resource, but is\nnot required.  In particular, many systems will decide the LOCK\nis irrelevant, since a \"friendly\" client will delay writing until\nit can perform a CHECKOUT, and an \"unfriendly\" client can just wait\nuntil the UNLOCK and then trash the resource contents at will.\n\n\nImmutable-Revisions\n\nAn immutable-revision is a revision whose contents (and immutable\nproperties) cannot be changed.  More precisely, an attempt to retrieve\nthe contents or immutable properties of an immutable-revision will\nalways return the same contents or will fail.  Therefore a server can\ndelete the contents or properties of an immutable-revision (resulting\nin a failure when an attempt is made to retrieve those contents or\nproperties), but can never delete the immutable-revision itself.\n\n\nMutable-Revisions\n\nA mutable-revision is a revision whose contents and properties can be\nchanged, although an attempt to change the contents or the \"immutable\nproperties\" of a mutable-revision must be preceded by an explicit\n\"checkout/thaw\" operation, and then should be followed by a\n\"checkin/freeze\" operation to return it to a read-only state.  This\nthen requires two flavors of checkout: a checkout that unfreezes an\nexisting mutable-revision (which I'll call CHECKOUT) and a checkout\nthat creates a new (unfrozen) mutable-revision that is based on an\nexisting mutable-revision (which I'll call CHECKOUT-NEW).\n\n\nBranching\n\nWhen a versioned resource supports immutable-revisions, it is still\nnecessary to support \"change\".  In particular, there must be some\nresource that you can name, that will periodically take on new values.\nFor a versioned resource with immutable-revisions, this analogue to a\nmutable-revision is called a \"branch\".  Like a mutable-revision, a\nbranch can be checked-out, changed, and then checked-back in.  The tip\nof the branch then reflects this change.  Also as with mutable\nrevisions, you sometimes want to check out a new branch that is based\non (the tip of) an existing branch, which requires another flavor of\ncheckout (i.e. CHECKOUT-NEW).\n\nFrom a protocol perspective, this provides a way to unify the worlds\nof mutable and immtable-revisions.  In each world, there is CHECKOUT,\nCHECKOUT-NEW, and CHECKIN, where CHECKOUT modifies an existing\nmodifiable entitity, while CHECKOUT-NEW creates a new modifiable\nentity that can be modified in parallel with the original entity.\nCHECKIN is used in either case to return the resource to a readonly state.\n\nThe alternative is to provide THAW/FREEZE operations that can only be\napplied to mutable-revisions, resulting in inoperability between\nservers that support mutable-revisions and servers that support\nimmutable-revisions.\n\n\nSpecifying CHECKOUT/CHECKOUT-NEW Policy\n\nFor versioning individual documents, it is sufficient to just let the\nuser select CHECKOUT or CHECKOUT-NEW, as they see fit.  For\nversioning sets of related resources that are being modified in\nparallel by multiple users over the course of multiple sessions, it is\nessential that the server provide a mechanism for the client to store\nits versioning policy in a form that can be queried (and updated) by\nmultiple clients over multiple sessions.  This is especially true when\nthe CHECKOUT choice for a particular resource is dependent on the\ncurrent state of the revision graph for that resource.  I propose that\nthe \"workspace\" resource that stores the version-selection-rules is\nthe appropriate place to store this information, since the modification\nand creation of new revisions must be synchronized with the\nversion-selection-rules, or else newly created revisions might\ndisappear from view as soon as they are checked in.\n\nBottom line: A CHECKOUT, CHECKOUT-NEW, and CHECKIN command, with no\nspecial CHECKOUT/IN headers (which should make Larry happy :-).\n\nNote for Dave: The CHECKIN-NEW would be used to produce the \"anonymous\nnew change-set\" you wanted.\n\nNote for Brad: A workspace property would be used to achieve the\n-force_branch_on_new_version functionality that you wanted.\n\nNote for All: This doesn't discuss UNCHECKOUT.\n\nCheers,\nGeoff\n     \n   \n\n", "id": "lists-005-10107637"}, {"subject": "Re: CHECKIN/CHECKOUT - URNs and Destroying Immutable Resources", "content": "Reviewing early drafts of anything is always difficult. By their very nature\nearly drafts tend to have lots of unresolved issues. As a reviewer you want\nto get clarification of those issues but as a working group member you don't\nwant to discourage authors.\n\nThen again, speaking from long painful experience, the WebDAV WG's normal\nreview process involves taking the authors out back and beating them\nsenseless.\n\nI've tried not to cling to closely to tradition in my own review.\n\nI have also decided to break my review into separate posts so as to\nfacilitate conversation.\n\n                        Yaron\n\nSo Spoke Geoffrey:\n\n> Putting a Resource under Version Control\n\n> When a resource is put under version control, it becomes unwriteable.\n> In order to modify a resource, it must first be checked out, then can\n> be modified one or more times, and then checked back in to indicate\n> you are done modifying it.  If your CHECKOUT fails, it means someone\n> else is currently modifying the document, so you should only do a GET\n> with the understanding that the results are only temporarily valid.\n\n\n1) First you say that a resource under version control is unwriteable and\nthen you explain how to modify a resource. I'm confused. I suspect you need\nto discuss your model a bit. One can infer a lot about the model by reading\nthe rest of the paper but I dislike having to infer, because I tend to infer\nincorrectly.\n\n2) CHECKOUTs can fail for many reasons wholly unrelated to current use. But\nthe statement does lead one to infer that the proposed versioning system can\nnot support multiple simultaneous checkouts. Is this true?\n\n\n> Checkout vs. Lock\n\n> Note the distinction between a (write) LOCK and CHECKOUT.  The LOCK\n> takes a resource that is writeable by everyone and temporarily makes\n> it unwriteable by everyone except the lock holder (until it is\n> UNLOCK'ed).  A CHECKOUT takes a resource that is unwriteable by\n> everyone, and temporarily makes it writeable (until it is CHECKIN'd).\n> It is reasonable to apply a LOCK to a checked-out resource, but is\n> not required.  In particular, many systems will decide the LOCK\n> is irrelevant, since a \"friendly\" client will delay writing until\n> it can perform a CHECKOUT, and an \"unfriendly\" client can just wait\n> until the UNLOCK and then trash the resource contents at will.\n\n\nThe distinction between shared and exclusive locks should be pointed out.\n\nI will defer my points regarding mutable resources to another post.\n\n\n> Immutable-Revisions\n\n> An immutable-revision is a revision whose contents (and immutable\n> properties) cannot be changed.  More precisely, an attempt to retrieve\n> the contents or immutable properties of an immutable-revision will\n> always return the same contents or will fail.  Therefore a server can\n> delete the contents or properties of an immutable-revision (resulting\n> in a failure when an attempt is made to retrieve those contents or\n> properties), but can never delete the immutable-revision itself.\n\n\nIf I understand your meaning in saying \"never delete the immutable-revision\nitself\" you are implying that a server could nuke all the state associated\nwith the immutable-revision but not a note specifying that once upon a time\nsuch a revision did exist and did hold a certain position in the version\ntree. However the reality is that people will want to destroy even notices\nof the existence of a revision for any number of reasons, some more\nnefarious than others. I suspect it is unrealistic of us to expect the\nprotocol to be able to prevent this.\n\nThere is the additional problem of what to do if the resource is destroyed\nand its HTTP URL gets re-used. Who will return the \"this resource has been\nnuked\" notice? The way the language is current written it would seem that\nonce you assign an HTTP URL to a version of a resource, even if you destroy\nthe resource, you are still required to reserve the HTTP URL so it can\nreturn the \"this resource doesn't exist anymore\" error. I suspect we will\nfind significant opposition to this idea. People tend to get touchy about\ntheir HTTP URL namespaces.\n\nOne alternative is to require that a note be dropped into the version\nhistory specifying that there did once exist a version with a set of\nparticular characteristics but its resource has since been destroyed. I\ndon't think this is a good idea because it means that we need to refer to a\nresource (even one which doesn't currently exist) without the use of a URI.\nThis is likely to muck up the protocol in all sorts of unhappy ways. What we\nneed is a URI which refers to a resource independently of the HTTP URL used\nto actually retrieve the resource.\n\nWhich brings us to URNs. I don't propose we actually use URNs, I don't like\nthem very much. But the underlying concept is sound. We should require that\nall resources have a URI associated with them that meets the same uniqueness\nrequirements we place on lock token URIs. The URIs DO NOT HAVE TO BE\nRESOLVABLE. If they are, bonus points, but it is not necessary for the\nprotocol to work properly.\n\nWhen a resource is created it must be assigned one of these universally\nunique URIs. The URI can then be used with the IF header on any requests to\nan HTTP URL so as to ensure that the request will only succeed if the\nresource is the same resource as the one specified by the URI.\n\nThe history graph is then free to refer to both the URI and any known URLs\nthat the resource is available under. If the HTTP URL is changed or the\nresource is destroyed then the graph will only refer to the universally\nunique URI. This allows the version to still be refereed to in various\noperations (such as creating a child) even though it doesn't exist.\n     \n   \n\n", "id": "lists-005-10115689"}, {"subject": "Re: CHECKIN/CHECKOUT - Mutable resources and a call for consensus", "content": "This is the second part of my comments on Geoffrey's spec.\n\n\n> Mutable-Revisions\n\n> A mutable-revision is a revision whose contents and properties can be\n> changed, although an attempt to change the contents or the \"immutable\n> properties\" of a mutable-revision must be preceded by an explicit\n> \"checkout/thaw\" operation, and then should be followed by a\n> \"checkin/freeze\" operation to return it to a read-only state.  This\n> then requires two flavors of checkout: a checkout that unfreezes an\n> existing mutable-revision (which I'll call CHECKOUT) and a checkout\n> that creates a new (unfrozen) mutable-revision that is based on an\n> existing mutable-revision (which I'll call CHECKOUT-NEW).\n\n\nThis paragraph leads me to two questions:\n\n                1) Should mutable resource management be in-scope for\nWebDAV?\n                2) Are the mutable resource and versioning models similar\nenough to justify worrying about their interoperability?\n\nI do not believe that WG consensus exists on the answer to question 1. There\nwas discussion on the issue amongst the original WebDAV authors but no\nconclusion was ever reached as versioning work was shut down in favor of\nsolidifying the rest of the spec. Consequently the issue was never presented\nto the WG for discussion and consensus.\n\nAs for question 2, I would be very interested in hearing the reasoning\nbehind the versioning authors' opinions on these matters. A presentation of\nthe versioning model and a separate presentation on the mutable resource\nmanagement model with a compare/contrast between the two would probably go a\nlong way to clarifying the issues.\n\nUntil the versioning authors have a chance to respond I would offer the\nfollowing as food for thought:\n\nA versioning client may be willing to use core WebDAV methods such as\nPROPFIND/PROPPATCH and GET against a mutable resource server. But such a\nclient could not, for example, pull down the history of a mutable resource\nsince the client's fundamental assumption is that while a history can be\nexpanded its existing relationships can not be changed. Additionally, such a\nversioning client would most likely not want to execute check-in/out against\na mutable resource server given that the result is not a versioned resource.\nThus a versioning client can not fully interoperate with a mutable resource\nserver.\n\nA mutable resource client is likely to be more flexible in dealing with a\nversioning server. It certainly can use the core WebDAV commands and will\nhave no problem pulling down a history. It will run into trouble, however,\nwhen it tries to use check-in/out since the user is expecting that they can\nchange resources. Still, one can see mutable clients working around this\nproblem fairly easily since it is a similar problem to access control. Thus\na mutable client can interoperate, almost fully, with a versioning server.\n\nThus it would seem that mutable clients should be able to interoperate with\nversioning servers but not the other way around. This argues for separating\nversioning design from Mutable design. This could mean breaking the speak\ninto two parts or even just having two separate specs. [Insert standard\ndisclaimers about not doing anything gratuitous in the versioning standard\nwhich make it impossible to layer the mutable standard on top.] [Insert\nstandard disclaimers about not allowing the versioning standard to be\nunnecessarily complicated for the sole purpose of making the mutable\nstandard designer's jobs easier.]\n\n\n                                                Yaron\n     \n   \n\n", "id": "lists-005-10124384"}, {"subject": "Re: CHECKIN/CHECKOUT - Branching", "content": "Welcome to the third in my seemingly endless series of comments on\nGeoffrey's proposal.\n\n\n> Branching\n\n> When a versioned resource supports immutable-revisions, it is still\n> necessary to support \"change\".  In particular, there must be some\n> resource that you can name, that will periodically take on new values.\n> For a versioned resource with immutable-revisions, this analogue to a\n> mutable-revision is called a \"branch\".  Like a mutable-revision, a\n> branch can be checked-out, changed, and then checked-back in.  The tip\n> of the branch then reflects this change.  Also as with mutable\n> revisions, you sometimes want to check out a new branch that is based\n> on (the tip of) an existing branch, which requires another flavor of\n> checkout (i.e. CHECKOUT-NEW).\n\n\nCan you please provide an example of a resource \"that you can name, that\nwill periodically take on new values\" which is an appropriate subject of a\nversioning system?\n\nBranching, as I understand the term, describes a situation where a versioned\nresource has more than one child. I am having difficulty coming up with a\ncompelling scenario that would cause us to treat a checkout that would\nresult in a branch any differently than any other checkout. As such I don't\nsee the compelling reason for introducing a new method.\n\n> From a protocol perspective, this provides a way to unify the worlds\n> of mutable and immtable-revisions.  In each world, there is CHECKOUT,\n> CHECKOUT-NEW, and CHECKIN, where CHECKOUT modifies an existing\n> modifiable entitity, while CHECKOUT-NEW creates a new modifiable\n> entity that can be modified in parallel with the original entity.\n> CHECKIN is used in either case to return the resource to a\n> readonly state.\n\n> The alternative is to provide THAW/FREEZE operations that can only be\n> applied to mutable-revisions, resulting in inoperability between\n> servers that support mutable-revisions and servers that support\n> immutable-revisions.\n\n\nI will defer my analysis of the appropriateness of thaw/freeze vs\ncheckout-new until we make further progress on the more fundamental issues\nof the appropriateness of worrying about mutable resource management as well\nas the necessity of CHECKOUT-NEW in a versioning system.\n\n\n                        Yaron\n     \n   \n\n", "id": "lists-005-10130842"}, {"subject": "Re: CHECKIN/CHECKOUT - Versioning Policies?", "content": "Welcome to the fourth and final entry in my series of comments on Geoffrey's\nproposal.\n\n\n> Specifying CHECKOUT/CHECKOUT-NEW Policy\n\n> For versioning individual documents, it is sufficient to just let the\n> user select CHECKOUT or CHECKOUT-NEW, as they see fit.  For\n> versioning sets of related resources that are being modified in\n> parallel by multiple users over the course of multiple sessions, it is\n> essential that the server provide a mechanism for the client to store\n> its versioning policy in a form that can be queried (and updated) by\n> multiple clients over multiple sessions.  This is especially true when\n> the CHECKOUT choice for a particular resource is dependent on the\n> current state of the revision graph for that resource.  I propose that\n> the \"workspace\" resource that stores the version-selection-rules is\n> the appropriate place to store this information, since the\n> modification\n> and creation of new revisions must be synchronized with the\n> version-selection-rules, or else newly created revisions might\n> disappear from view as soon as they are checked in.\n\n\nClient versioning policy? I thought we killed this back in '97!\n\nIn December of 1996 Andre van der Hoek put forward a post to the list that\nsummarized a proposal he had made previously to the authors\n(http://lists.w3.org/Archives/Public/w3c-dist-auth/1996OctDec/0199.html). In\nessence it proposed that clients be allowed to tell servers what their\nversioning policy is.\n\nThe issue was investigated, at length, by the working group and the proposal\nwas rejected in its entirety. The reason for the rejection was as follows:\n\n1) Many DM vendors indicated that their users demanded the ability to\nspecify a single versioning policy for their server and would demand that\nall clients that interoperate with their server must use that versioning\npolicy. The key issue wasn't the particular policy the server used so much\nas the ability of the server to absolutely rely upon a particular policy\nalways being used across all its resources. Without this guarantee it became\nimpossible to apply meaningful security policies and to interoperably share\nversioning data across resources since the knowledge needed to understand\nthe information changed based on which client used which policy against\nwhich resource. Matters became especially bad if clients were allowed to\nchange the policy on a resource once the policy had been established.\n\n2) Client vendors indicated that their clients would be written to use a\nparticular versioning policy and would refuse to interoperate with any\nserver which did not implement that policy. The basis of their reasoning was\nthat the UI the client implemented had to be tuned to a particular policy.\nIf the policy could change based on the resource being talked to then the UI\nwould have to change with it. Furthermore, it is hard enough to write a\nclient which supports a single versioning policy. It is next to impossible\nto write, debug, document, and then educate one's users about a client whose\npolicy could change on a resource by resource basis.\n\nAt the same time the WG got an \"in your face\" demonstration of just how bad\nvariable policies could be in terms of code and protocol complexity. After\nAndre's post in Dec '96 there was a WebDAV WG meeting in Irvine in Jan '97.\nAt the time the various DM vendors refused to compromise in how versioning\nworked. Each insisted that versioning must work exactly the way their system\nimplemented it. For example, we couldn't get consensus on an issue as simple\nas \"if you do a check out is there a working draft? If so, is it created on\nthe server or the client?\" So Jim and I presented a protocol that did\neverything everyone wanted. I only think it required three round trips and 8\ndifferent axis's of negotiation. You can see some of the discussion on both\nclient versioning and policies and on the versioning design noted down as\npart of day two in\nhttp://www.ics.uci.edu/%7Eejw/authoring/irvine/minutes.txt. Unfortunately\nthe meeting notes don't do a great job of recording the discussions that\nvarious comments sparked. Those of you who really enjoy pain can check out\nsection 9 of http://www.ics.uci.edu/~ejw/authoring/webdav-draft-06.html for\nthe details. Try not to laugh/cry too hard.\n\nBut the point was made, negotiation and variable policies didn't work. While\nI realize that the policies discussed here are not the same as those\ndiscussed in the document I believe the line of reasoning that made us\nreject policies in '97 will lead us to the same conclusion in '99.\n\nEither way, in '97, the WG consensus was that there would be no negotiation\non versioning policy. Neither clients nor servers would be allowed to\ndictate policy. Rather the WG instructed the authors to come up with a\nsingle policy and make that the standard.\n\n> Bottom line: A CHECKOUT, CHECKOUT-NEW, and CHECKIN command, with no\n> special CHECKOUT/IN headers (which should make Larry happy :-).\n\n> Note for Dave: The CHECKIN-NEW would be used to produce the \"anonymous\n> new change-set\" you wanted.\n\n> Note for Brad: A workspace property would be used to achieve the\n> -force_branch_on_new_version functionality that you wanted.\n\n> Note for All: This doesn't discuss UNCHECKOUT.\n\n> Cheers,\n> Geoff\n     \n   \n\n", "id": "lists-005-10135915"}, {"subject": "Re: CHECKIN/CHECKOUT - URNs and Destroying Immutable Resources", "content": "   From: Yaron Goland <yarong@microsoft.com>\n\n   Then again, speaking from long painful experience, the WebDAV WG's normal\n   review process involves taking the authors out back and beating them\n   senseless.\n\nBetter some bruises than a bad spec ... so bring on the beatings!  (:-)\n\nAnd to emphasize a note in my original posting, this represents a\nproposal to the design team, *NOT* a consensus document from the design team!\n\n   > Putting a Resource under Version Control\n\n   > When a resource is put under version control, it becomes unwriteable.\n   > In order to modify a resource, it must first be checked out, then can\n   > be modified one or more times, and then checked back in to indicate\n   > you are done modifying it.  If your CHECKOUT fails, it means someone\n   > else is currently modifying the document, so you should only do a GET\n   > with the understanding that the results are only temporarily valid.\n\n\n   1) First you say that a resource under version control is unwriteable and\n   then you explain how to modify a resource. I'm confused. I suspect you need\n   to discuss your model a bit. One can infer a lot about the model by reading\n   the rest of the paper but I dislike having to infer, because I tend to infer\n   incorrectly.\n\nI have tried to apply the terms \"readonly/unwriteable\" and \"writeable\"\nconsistently to refer to a temporary state of a resource, and use the\nterm \"mutable\" and \"immutable\" to refer to a permanent state of a\nresource.  So when you put a resource under version control, it\nbecomes unwriteable, but you can apply a method to it (CHECKOUT) to make\nit writeable.  In contrast, a versioned resource is mutable.  In this\nproposal, it is only certain kinds of revisions that are immutable\n(namely, immutable-revisions).\n\n   2) CHECKOUTs can fail for many reasons wholly unrelated to current use. But\n   the statement does lead one to infer that the proposed versioning system can\n   not support multiple simultaneous checkouts. Is this true?\n\nOnly one checkout of a given mutable-revision (branch) of a versioned\nresource, yes.  If you want to check-out an already checked-out mutable-\nrevision (branch), you need to use the CHECKOUT-NEW method, which checks\nout a new mutable-revision (branch) of the versioned resource.\n\nNote: some systems (like ClearCase) support an \"unreserved checkout\".\nIf we want to support this concept (and I'm not advocating that we do),\nthen we would just adjust the definition to say that there can be at most\none \"reserved\" checkout of a mutable-revision (branch).\n\n   > Checkout vs. Lock\n\n   > Note the distinction between a (write) LOCK and CHECKOUT.  The LOCK\n   > takes a resource that is writeable by everyone and temporarily makes\n   > it unwriteable by everyone except the lock holder (until it is\n   > UNLOCK'ed).  A CHECKOUT takes a resource that is unwriteable by\n   > everyone, and temporarily makes it writeable (until it is CHECKIN'd).\n   > It is reasonable to apply a LOCK to a checked-out resource, but is\n   > not required.  In particular, many systems will decide the LOCK\n   > is irrelevant, since a \"friendly\" client will delay writing until\n   > it can perform a CHECKOUT, and an \"unfriendly\" client can just wait\n   > until the UNLOCK and then trash the resource contents at will.\n\n\n   The distinction between shared and exclusive locks should be pointed out.\n\nI don't believe this distinction is relevant here.  The point is that in\nany model which assumes a LOCK/UNLOCK paradigm (whether it is a shared or\nan exclusive lock), an unfriendly client can trash the resource as soon as\nit is unlocked.  If on the other hand, you support just a LOCK paradigm\n(where you do not assume the resource is unlocked when you are done with it),\nthen you are \"limiting the scope of damage\" (which is a good thing), but\nthat is very different from synchronizing updates between multiple (possibly\nconcurrent) authors, which is what CHECKOUT/CHECKIN is all about.\n\n   > Immutable-Revisions\n\n   > An immutable-revision is a revision whose contents (and immutable\n   > properties) cannot be changed.  More precisely, an attempt to retrieve\n   > the contents or immutable properties of an immutable-revision will\n   > always return the same contents or will fail.  Therefore a server can\n   > delete the contents or properties of an immutable-revision (resulting\n   > in a failure when an attempt is made to retrieve those contents or\n   > properties), but can never delete the immutable-revision itself.\n\n\n   If I understand your meaning in saying \"never delete the immutable-revision\n   itself\" you are implying that a server could nuke all the state associated\n   with the immutable-revision but not a note specifying that once upon a time\n   such a revision did exist and did hold a certain position in the version\n   tree.\n\nYes.\n\n   However the reality is that people will want to destroy even notices\n   of the existence of a revision for any number of reasons, some more\n   nefarious than others. I suspect it is unrealistic of us to expect the\n   protocol to be able to prevent this.\n\nWhat non-nefarious people want to do is to make old revisions no\nlonger visible, and to conserve space.  The protocol should/must\nsupport both of these operations.  Giving a server (with its own\nunique-id generator) control over some part of the URI space (which is\nfeasible and common in CM systems) takes care of the rest.  The\nprotocol can't prevent the server from doing something different,\nbut to the extent that the server deviates from the protocol, it will\nnot act as a client expects/intends.\n\n   There is the additional problem of what to do if the resource is destroyed\n   and its HTTP URL gets re-used. Who will return the \"this resource has been\n   nuked\" notice? The way the language is current written it would seem that\n   once you assign an HTTP URL to a version of a resource, even if you destroy\n   the resource, you are still required to reserve the HTTP URL so it can\n   return the \"this resource doesn't exist anymore\" error. I suspect we will\n   find significant opposition to this idea. People tend to get touchy about\n   their HTTP URL namespaces.\n\nPeople also get touchy if their CM system lies about the previous state\nof their resources.  To support both perspectives, we support both\nmutable-revisions and immutable-revisions, where the protocol is designed\nso that these two models can interoperate.  So if you don't care about\nreliable resource history, you can just go with a WebDAV server that only\nsupports mutable-revisions.  If you want reliable history, you go with\none that also supports immutable-revisions (in this proposal, the immutable\nrevision protocol is a proper super-set of the mutable revision protocol).\n\n   One alternative is to require that a note be dropped into the version\n   history specifying that there did once exist a version with a set of\n   particular characteristics but its resource has since been destroyed. I\n   don't think this is a good idea because it means that we need to refer to a\n   resource (even one which doesn't currently exist) without the use of a URI.\n   This is likely to muck up the protocol in all sorts of unhappy ways.\n\nThe server might well internally implement it along these lines, but this\nimplementation choice certainly shouldn't be exposed in the protocol.\n\n   What we\n   need is a URI which refers to a resource independently of the HTTP URL used\n   to actually retrieve the resource.\n\nOther than giving control of part of the URL namespace to the versioning system\n(which is what every CM system does), why can't it be a URL?\n\n   Which brings us to URNs. I don't propose we actually use URNs, I don't like\n   them very much. But the underlying concept is sound. We should require that\n   all resources have a URI associated with them that meets the same uniqueness\n   requirements we place on lock token URIs. The URIs DO NOT HAVE TO BE\n   RESOLVABLE. If they are, bonus points, but it is not necessary for the\n   protocol to work properly.\n\nNot good enough.  I need to be able to find this resource, not just detect\nwhether two different URL's refer to it.  It's the resource that tells me\nthe URL's of the other revisions associated with this resource.\n\n   When a resource is created it must be assigned one of these universally\n   unique URIs. The URI can then be used with the IF header on any requests to\n   an HTTP URL so as to ensure that the request will only succeed if the\n   resource is the same resource as the one specified by the URI.\n\nSee above.\n\n   The history graph is then free to refer to both the URI and any known URLs\n   that the resource is available under. If the HTTP URL is changed or the\n   resource is destroyed then the graph will only refer to the universally\n   unique URI. This allows the version to still be refereed to in various\n   operations (such as creating a child) even though it doesn't exist.\n\nThis doesn't give me the reliable history that I require for effective\nconfiguration management.  Over the lifetime of a resource, there will\nbe hundreds of revisions of the resource, most of which are no longer\n\"active\".  But periodically, I need to refer to some of them as\nfull-fledged resources, with their properties and contents accessible\nand intact.  Having them stamped with some URI that gives me no\nability to locate them is of little, if any, value.\n\nThere's a good chance that email doesn't provide the bandwidth we need\nhere, so voice or even visual communication may be required.  The\nsurvivor (if any) then could report back to the mailing list (:-).\n\nCheers,\nGeoff\n     \n   \n\n", "id": "lists-005-10144315"}, {"subject": "Re: CHECKIN/CHECKOUT - Mutable resources and a call for consensus", "content": "   From: Yaron Goland <yarong@microsoft.com>\n\n   > Mutable-Revisions\n\n   > A mutable-revision is a revision whose contents and properties can be\n   > changed, although an attempt to change the contents or the \"immutable\n   > properties\" of a mutable-revision must be preceded by an explicit\n   > \"checkout/thaw\" operation, and then should be followed by a\n   > \"checkin/freeze\" operation to return it to a read-only state.  This\n   > then requires two flavors of checkout: a checkout that unfreezes an\n   > existing mutable-revision (which I'll call CHECKOUT) and a checkout\n   > that creates a new (unfrozen) mutable-revision that is based on an\n   > existing mutable-revision (which I'll call CHECKOUT-NEW).\n\n   This paragraph leads me to two questions:\n\n                   1) Should mutable resource management be in-scope for\n   WebDAV?\n\nWhen looked at \"properly\" they are just a natural simplified subset of\nimmutable resource management, so I'd say, yes.\n\n                   2) Are the mutable resource and versioning models similar\n   enough to justify worrying about their interoperability?\n\nYes.  Both use checkout/checkin to handle multi-author control,\nand both allow creation of additional mutable resources (branches)\nto handle parallel work.\n\n   I do not believe that WG consensus exists on the answer to question 1. There\n   was discussion on the issue amongst the original WebDAV authors but no\n   conclusion was ever reached as versioning work was shut down in favor of\n   solidifying the rest of the spec. Consequently the issue was never presented\n   to the WG for discussion and consensus.\n\n   As for question 2, I would be very interested in hearing the reasoning\n   behind the versioning authors' opinions on these matters. A presentation of\n   the versioning model and a separate presentation on the mutable resource\n   management model with a compare/contrast between the two would probably go a\n   long way to clarifying the issues.\n\nFair enough.  We'll produce such a presentation following the imminent\ndesign meeting in Utah.\n\n   Until the versioning authors have a chance to respond I would offer the\n   following as food for thought:\n\n   A versioning client may be willing to use core WebDAV methods such as\n   PROPFIND/PROPPATCH and GET against a mutable resource server. But such a\n   client could not, for example, pull down the history of a mutable resource\n   since the client's fundamental assumption is that while a history can be\n   expanded its existing relationships can not be changed.\n\nNote: I'll use the terms:\n\"mutable-revision client\" and \"immutable-revision client\"\nrather than \"mutable resource client\" and \"versioning client\".\n\nA mutable-revision client can pulldown the \"mutable history\", where\nmutable history contains the information about what mutable-revision\nwas the \"base\" for another mutable-revision.\n\nAn immutable-revision client can pulldown the \"mutable history\"\n(i.e. the \"branch history\") or the \"immutable history\" of the\nversioned resource.\n\n   Additionally, such a\n   versioning client would most likely not want to execute check-in/out against\n   a mutable resource server given that the result is not a versioned resource.\n   Thus a versioning client can not fully interoperate with a mutable resource\n   server.\n\nI disagree.  If there are importand documents that are stored on a\nmutable-revision server, then you'd like to just use your immutable-revision\nclient just as you always did.  You wouldn't be able to retrieve the\nimmutable-history of the resource, but you can do a CHECKOUT, or if that fails\nbecause some other client already had it checked-out, you can do a\nCHECKOUT-NEW to get a new mutable resource (although you might think\nof it as a branch).  You then do a CHECKIN when you are done, and you\nhave published your work, just as you would against an immutable revision\nserver.\n\n   A mutable resource client is likely to be more flexible in dealing with a\n   versioning server.\n\nI'm not sure what you mean by \"more flexible\".  Every mutable-revision\nprotocol sequence (in this proposal) can be applied against an immutable-\nrevision server, with the intended results.  It just would produce some\nimmutable revisions as a side-effect, but this wouldn't be visible to\nthe mutable-resource client.\n\n   It certainly can use the core WebDAV commands and will\n   have no problem pulling down a history.\n\nThe history it would pull down would be the \"mutable revision history\",\nnot the \"immutable revision history\" (although it could find the latter\nwith a suitable manual search through the appropriate properties).\n\n   It will run into trouble, however,\n   when it tries to use check-in/out since the user is expecting that they can\n   change resources.\n\nNo, an immutable revision server will also support the notion of a\n\"mutable revision\", either with a floating label, or with branches,\nor with change-sets, or whatever (up to the server).\n\n   Still, one can see mutable clients working around this\n   problem fairly easily since it is a similar problem to access control. Thus\n   a mutable client can interoperate, almost fully, with a versioning server.\n\nMake that \"fully\", and we agree (:-).\n\n   Thus it would seem that mutable clients should be able to interoperate with\n   versioning servers but not the other way around.\n\nAn immutable-revision client can do all its standard checkout/in against\nthe mutable-revision server, and can then get the mutable revision history.\nIt just won't be able to get the immutable history, because it wasn't\nbeing kept.  But I can still use my immutable-revision client effectively\n(and in the standard way) agains a mutable-revision server.\n\n   This argues for separating\n   versioning design from Mutable design. This could mean breaking the speak\n   into two parts or even just having two separate specs. [Insert standard\n   disclaimers about not doing anything gratuitous in the versioning standard\n   which make it impossible to layer the mutable standard on top.] [Insert\n   standard disclaimers about not allowing the versioning standard to be\n   unnecessarily complicated for the sole purpose of making the mutable\n   standard designer's jobs easier.]\n\nIt provides far better interoperability if you have levels of protocol,\nwhere one level is a proper superset of the other (as WebDAV sits above\nHTTP-1.1).  Since immutable-revisions inherently provide a service not\navailable to mutable-revisions (namely reliable history and effective\nmerge support through common ancestor calculations), the layering that\nprovides better interoperability is layering immutability above mutability,\nnot the other way around.\n\nCheers,\nGeoff\n     \n   \n\n", "id": "lists-005-10157296"}, {"subject": "Re: CHECKIN/CHECKOUT - Branching", "content": "   From: Yaron Goland <yarong@microsoft.com>\n\n   > Branching\n\n   > When a versioned resource supports immutable-revisions, it is still\n   > necessary to support \"change\".  In particular, there must be some\n   > resource that you can name, that will periodically take on new values.\n   > For a versioned resource with immutable-revisions, this analogue to a\n   > mutable-revision is called a \"branch\".  Like a mutable-revision, a\n   > branch can be checked-out, changed, and then checked-back in.  The tip\n   > of the branch then reflects this change.  Also as with mutable\n   > revisions, you sometimes want to check out a new branch that is based\n   > on (the tip of) an existing branch, which requires another flavor of\n   > checkout (i.e. CHECKOUT-NEW).\n\n\n   Can you please provide an example of a resource \"that you can name, that\n   will periodically take on new values\" which is an appropriate subject of a\n   versioning system?\n\nSome CM systems implement it as a \"floating label\".  Others implement it\nas \"the tip of a branch\".  Others implement it as an \"unfrozen configuration\".\nThe implementations all differ, but the concept is the same.  There is a\n\"mutable thing\" that you can ask to see in your workspace, and that is\nupdated when anyone does a \"CHECKIN\" to that mutable thing.  The fact that\nan immutable history is kept for that mutable thing is another characteristic\nof immutable-revisions systems, that differentiates them from basic\nmutable revision systems.\n\n   Branching, as I understand the term, describes a situation where a versioned\n   resource has more than one child. I am having difficulty coming up with a\n   compelling scenario that would cause us to treat a checkout that would\n   result in a branch any differently than any other checkout. As such I don't\n   see the compelling reason for introducing a new method.\n\nIt is true that the in practice that the term \"branch\" is used to mean\nboth \"a child having more than one child\" and \"a sequence of immutable\nrevisions on a single line of descent\".  After much confusion based on\nfailing to make this distinction, the versioning design team has adopted\nthe term \"fork\" for the first concept, and reserved the term \"branch\"\nfor the second.  One of the key distinctions is that a branching system\nrequires that at most one child of a revision can be on the same \"branch\"\nas its parent.  So you \"branch\" when you create a child that is not on\nthe same branch as its parent.  Notice that you can branch without creating\na fork.\n\nNow as for a compelling reason for treating a checkout that would result in\na branch differently from one that does not, one of the commonest version\nselection rules is \"branch-LATEST\", i.e. I would like to see the latest\nrevision on a particular branch.  If you checkout/in something on that\nbranch, everyone seeing that branch-LATEST will see your change, while\nif you checkout/in something on some new branch (based on that branch)\nonly people asking to see that new branch-LATEST will see your change.\nNotice the identical behavior of \"branch-LATEST\" and mutable revisions.\n\nCheers,\nGeoff\n     \n   \n\n", "id": "lists-005-10167021"}, {"subject": "Re: CHECKIN/CHECKOUT - Versioning Policies?", "content": "   From: Yaron Goland <yarong@microsoft.com>\n\n   Welcome to the fourth and final entry in my series of comments on Geoffrey's\n   proposal.\n\nAnd my congratulations to Yaron for his detailed comments (and to anyone\nthat has made it this far :-).\n\n   > Specifying CHECKOUT/CHECKOUT-NEW Policy\n\n   > For versioning individual documents, it is sufficient to just let the\n   > user select CHECKOUT or CHECKOUT-NEW, as they see fit.  For\n   > versioning sets of related resources that are being modified in\n   > parallel by multiple users over the course of multiple sessions, it is\n   > essential that the server provide a mechanism for the client to store\n   > its versioning policy in a form that can be queried (and updated) by\n   > multiple clients over multiple sessions.  This is especially true when\n   > the CHECKOUT choice for a particular resource is dependent on the\n   > current state of the revision graph for that resource.  I propose that\n   > the \"workspace\" resource that stores the version-selection-rules is\n   > the appropriate place to store this information, since the\n   > modification\n   > and creation of new revisions must be synchronized with the\n   > version-selection-rules, or else newly created revisions might\n   > disappear from view as soon as they are checked in.\n\n\n   Client versioning policy? I thought we killed this back in '97!\n\nOoops.  Clearly I used the wrong term (:-).  After reading Yaron's comments\non this topic, it's clear what I meant by \"versioning policy\" is different from\nwhat was discussed on the list, because I cannot see how what I intend by\nthe term can result in any of the dire effects Yaron describes.\n\nI'll read back over the indicated archival mail discussions, and then\nshould be able to clarify the distinction between what I mean by it,\nand what was discussed in '97.\n\nCheers,\nGeoff\n     \n   \n\n", "id": "lists-005-10173064"}, {"subject": "forking on checkin vs. on checkout", "content": "Hello Geoff and the rest of the versioning design team.  Thanks\nfor doing a great job proposing a workable versioning model!\n\nGeoff wrote:\n> Only one checkout of a given mutable-revision (branch) of a versioned\n> resource, yes.  If you want to check-out an already checked-out mutable-\n> revision (branch), you need to use the CHECKOUT-NEW method, which checks\n> out a new mutable-revision (branch) of the versioned resource.\n\nDoes this imply that a fork occurs as soon as a second check-out\nis performed on a revision?  The alternative model delays the fork\nuntil the second check-in is performed.  That approach has some\nmajor benefits, not the least of which is that the second user to\ncheck-in can be given the option of merging all the changes and\nthus avoiding the fork altogether.\n\nAnother alternative model has the fork happening on check-out,\nbut doesn't give either child revision special status until the\nfirst one is checked in.  In particular, until a check-in occurs\none wouldn't know which child will become the immediate successor\non the same branch as their shared parent, and which -- in the\nabsence of a merge -- would be shunted off to a side-branch.\n\nEither of these alternatives supports a less structured style\nof cooperative work, without sacrificing any revision-control\nrigor.\n\n--\nSean Shapira         sds@jazzie.com         +1 206 443 2028\n               Serving the Net since 1990.\n     \n   \n\n", "id": "lists-005-10178065"}, {"subject": "Re: forking on checkin vs. on checkout", "content": "   From: sds@jazzie.com (Sean Shapira)\n\n   Geoff wrote:\n   > Only one checkout of a given mutable-revision (branch) of a versioned\n   > resource, yes.  If you want to check-out an already checked-out mutable-\n   > revision (branch), you need to use the CHECKOUT-NEW method, which checks\n   > out a new mutable-revision (branch) of the versioned resource.\n\n   Does this imply that a fork occurs as soon as a second check-out\n   is performed on a revision?  The alternative model delays the fork\n   until the second check-in is performed.  That approach has some\n   major benefits, not the least of which is that the second user to\n   check-in can be given the option of merging all the changes and\n   thus avoiding the fork altogether.\n\nExcellent question.\n\nFirst the easy part, i.e. for mutable-revisions.  With\nmutable-revisions, a CHECKOUT-NEW has to create a new revision,\nbecause somebody else has checked out the current revision, and if you\nmake changes to it while that person has it checked out, you'd stomp\non that persons changes.\n\nNow for the harder part, i.e. for immutable-revisions.  The key here\nis that the protocol can be kept simple by just treating this as\nsomething you tell the server once, (i.e. a property of your \"workspace\"),\nand then when you perform a CHECKOUT, it looks at this property of your\nworkspace to see whether to do a \"reserved\" CHECKOUT-NEW (i.e. create the\nbranch at checkout time) or an \"unreserved\" CHECKOUT-NEW (i.e. just merge\nback to the original branch on checkin).  One reason why this is better\napproach is that this decision tends to persist between sessions, so if\nwe required it to be explicitly stated on every CHECKOUT, the client\nwould end up storing this information anyway as some property of a\nresource so it can retrieve the value between sessions.  So we might as\nwell standardize this property so that clients can find this property\non any server that supports this notion.  Finally, this has the advantage\nthat it keeps the CHECKOUT protocol identical for mutable and immutable\nrevisions.\n\n   Another alternative model has the fork happening on check-out,\n   but doesn't give either child revision special status until the\n   first one is checked in.  In particular, until a check-in occurs\n   one wouldn't know which child will become the immediate successor\n   on the same branch as their shared parent, and which -- in the\n   absence of a merge -- would be shunted off to a side-branch.\n\n   Either of these alternatives supports a less structured style\n   of cooperative work, without sacrificing any revision-control\n   rigor.\n\nYes, each of these alternatives is reasonable.  For very common alternatives\nlike these, I think we should define in WebDAV the workspace property values\nthat will select them (e.g. DAV:unreserved and DAV:branch-if-necessary).\nI'd like to defer the details of this property until I've posted a\ndescription of a \"workspace\", since that is the resource on which this\nproperty is proposed to live.\n\nCheers,\nGeoff\n     \n   \n\n", "id": "lists-005-10182617"}, {"subject": "Re: CHECKIN/CHECKOUT - URNs and Destroying Immutable Resources", "content": "At 10:46 PM -0500 1/19/99, Yaron Goland wrote:\n>Geoffrey Clemm wrote:\n>> When a resource is put under version control, it becomes unwriteable.\n>> In order to modify a resource, it must first be checked out, then can\n>> be modified one or more times, and then checked back in to indicate\n>> you are done modifying it.  If your CHECKOUT fails, it means someone\n>> else is currently modifying the document, so you should only do a GET\n>> with the understanding that the results are only temporarily valid.\n>>\n\n>1) First you say that a resource under version control is unwriteable and\n>then you explain how to modify a resource. I'm confused. I suspect you need\n>to discuss your model a bit. One can infer a lot about the model by reading\n>the rest of the paper but I dislike having to infer, because I tend to infer\n>incorrectly.\n\nThere are two kinds of version control: one where a version is immutable,\nand one where it isn't. Geoff is proposing that these be unified. There's\nalso an ambiguity with respect to \"writeable\": a system that preserves\nimmutable _revisions_ a resource is still writeable, but only by creating a\nnew revision, not by modifying an existing revision. For a system that\ndoesn't preserve immutable revisions, this distinction is masked by the\nfact that there's a number of distinct objects (any of which might be\nmutable, depending on whether or not they are frozen).\n\nBy having the same protocol element be used for named branches and \"mutable\nversions,\" we can hide the distinctions between these different kinds of\nsystems in a way that they can interoperate. Clients that don't care about\nimmutability will simply never even notice that a server may be maintaining\nimmutable revisions in the background.\n\n>2) CHECKOUTs can fail for many reasons wholly unrelated to current use. But\n>the statement does lead one to infer that the proposed versioning system can\n>not support multiple simultaneous checkouts. Is this true?\n\nI hope not.\n\n>> Checkout vs. Lock\n>>\n>> Note the distinction between a (write) LOCK and CHECKOUT.  The LOCK\n>> takes a resource that is writeable by everyone and temporarily makes\n>> it unwriteable by everyone except the lock holder (until it is\n>> UNLOCK'ed).  A CHECKOUT takes a resource that is unwriteable by\n>> everyone, and temporarily makes it writeable (until it is CHECKIN'd).\n>> It is reasonable to apply a LOCK to a checked-out resource, but is\n>> not required.  In particular, many systems will decide the LOCK\n>> is irrelevant, since a \"friendly\" client will delay writing until\n>> it can perform a CHECKOUT, and an \"unfriendly\" client can just wait\n>> until the UNLOCK and then trash the resource contents at will.\n\n>The distinction between shared and exclusive locks should be pointed out.\n\nit seems that Yaron is right, and checkout now implies the taking of a\nlock. This seems to kill the notion that we had been calling \"auto forking\"\n(where a server creates a revision tree fork when a conflict occurs, and\nnever blocks any update attempt). I still think we should separate\ndeclaration of an editing session (checkout) from blocking of competing\naccesses (locking). We may need to request a lock in the same message that\nwe request a checkout (and fail if we can't get it), but that's niot the\nsame thing.\n\n\n>I will defer my points regarding mutable resources to another post.\n>> Immutable-Revisions\n\n>>snip\n\n\n>If I understand your meaning in saying \"never delete the immutable-revision\n>itself\" you are implying that a server could nuke all the state associated\n>with the immutable-revision but not a note specifying that once upon a time\n>such a revision did exist and did hold a certain position in the version\n>tree. However the reality is that people will want to destroy even notices\n>of the existence of a revision for any number of reasons, some more\n>nefarious than others. I suspect it is unrealistic of us to expect the\n>protocol to be able to prevent this.\n\nThis is an issue that was raised in the requirements: configuration\nmanagement does not work if revision IDs are ever re-used. _As long as_ the\nresource exists, its revision IDs must not be re-used. Hiding the past\nexistence of a revision is pretty irrelevant: if the server never re-uses\nthe revision ID, the client really can't know _why_ that is the case. If\nthe server has a requirement to perform such hiding, then it's free to hand\nout opaque version names (like MD5 digests, say) -- this leaves a client no\nway to deduce what revisions may or may not have existed in the past, only\nwhat revisions are currently part of the resource's history.\n\n>There is the additional problem of what to do if the resource is destroyed\n>and its HTTP URL gets re-used. Who will return the \"this resource has been\n>nuked\" notice? The way the language is current written it would seem that\n>once you assign an HTTP URL to a version of a resource, even if you destroy\n>the resource, you are still required to reserve the HTTP URL so it can\n>return the \"this resource doesn't exist anymore\" error. I suspect we will\n>find significant opposition to this idea. People tend to get touchy about\n>their HTTP URL namespaces.\n\nIn the requirements, we stated that this is true _only as long as the URL\nrepresents the same resource_. Geoff's proposal meets that requirement.\nWhen a resource is destroyed its revisions _and the constraint_ vanish.\n\n>One alternative is to require that a note be dropped into the version\n>history specifying that there did once exist a version with a set of\n>particular characteristics but its resource has since been destroyed.\n\nNo need.\n\nIf the _server_ allows revisions to be removed, then it must keep an\ninternal note to that effect. The client doesn't need to know about this.\nOr are you making a feature request? I thought an earlier point was that\nyou want to hide the previous existence of a version.\n\n> I\n>don't think this is a good idea because it means that we need to refer to a\n>resource (even one which doesn't currently exist) without the use of a URI.\n>This is likely to muck up the protocol in all sorts of unhappy ways. What we\n>need is a URI which refers to a resource independently of the HTTP URL used\n>to actually retrieve the resource.\n\nThis sounds like the URI for the \"versioned resource\" as opposed to the URI\nfor the resource, or the URI for the revisions. There are a lot of\ndefinitions in the versioning goals draft that may make this discussion\nclearer. For instance, the word \"version\" is undefined, as having too many\nimplications. It gets used as a typo for revision, and sometimes as a way\nof indicating a reference to the \"informal\" concept.\n\n>Which brings us to URNs. I don't propose we actually use URNs, I don't like\n>them very much.\n\nI don't think they matter much here, and URIs automatically include them\nanyway.\n\n> But the underlying concept is sound.\n\nSo what's not to like: URN is a name for an underlying concept that must be\nenforced by a policy commitment in system implementation and deployment\nsupported by administrative commitments to ensure uniqueness.\n\n>We should require that\n>all resources have a URI associated with them that meets the same uniqueness\n>requirements we place on lock token URIs. The URIs DO NOT HAVE TO BE\n>RESOLVABLE. If they are, bonus points, but it is not necessary for the\n>protocol to work properly.\n\nThe goals document defines terms for a whole host of logical entities. We\nall expect that these will all have URIs... You may be complaining about\nsomething that's not yet written up because the protocol isn't mature\nenough, and\n\n>When a resource is created it must be assigned one of these universally\n>unique URIs. The URI can then be used with the IF header on any requests to\n>an HTTP URL so as to ensure that the request will only succeed if the\n>resource is the same resource as the one specified by the URI.\n\nThis solution imposes a needless burden. It would be very useful to have\nuniversal unique names for all versions of all resources _ever_ -- but it's\nnot required for many useful systems. Where it is required, everything\nproposed so far will work just as well with URNs instead of URLs, except\nthat the use of URNs would solve the uniqueness problem.\n\n>The history graph is then free to refer to both the URI and any known URLs\n>that the resource is available under. If the HTTP URL is changed or the\n>resource is destroyed then the graph will only refer to the universally\n>unique URI. This allows the version to still be refereed to in various\n>operations (such as creating a child) even though it doesn't exist.\n\nThis is useful, indeed, but not an issue that we need solve. As long as we\nuse the term URI, people can use URNs when they require a globally unique\npersisten identifier. URN is just the IETF standard way to register and\ncreate such identifiers.\n\nOne thing that you should bear in mind about URNs: resolution is not a\nrequirement on URNs, only their registration with IANA, their syntax, and\nthe creation of an assignment method that ensures global uniqueness and\npersistence.\n\nBut as I said, this is an issue that need not be addressed by this group.\n\n  -- David\n\nDavid Durand              dgd@cs.bu.edu  \\  david@dynamicDiagrams.com\nBoston University Computer Science        \\  Sr. Analyst\nhttp://www.cs.bu.edu/students/grads/dgd/   \\  Dynamic Diagrams\n--------------------------------------------\\  http://www.dynamicDiagrams.com/\nMAPA: mapping for the WWW                    \\\n     \n   \n\n", "id": "lists-005-10188965"}, {"subject": "Re: CHECKIN/CHECKOUT - Mutable resources and a call for consensus", "content": "At 11:58 PM -0500 1/19/99, Yaron Goland wrote:\n>This is the second part of my comments on Geoffrey's spec.\n\n>>\n>> Mutable-Revisions\n>>\n>> A mutable-revision is a revision whose contents and properties can be\n>> changed, although an attempt to change the contents or the \"immutable\n>> properties\" of a mutable-revision must be preceded by an explicit\n>> \"checkout/thaw\" operation, and then should be followed by a\n>> \"checkin/freeze\" operation to return it to a read-only state.  This\n>> then requires two flavors of checkout: a checkout that unfreezes an\n>> existing mutable-revision (which I'll call CHECKOUT) and a checkout\n>> that creates a new (unfrozen) mutable-revision that is based on an\n>> existing mutable-revision (which I'll call CHECKOUT-NEW).\n>>\n\n>This paragraph leads me to two questions:\n\n>               1) Should mutable resource management be in-scope for\n>WebDAV?\n\nAt the last meeting, (and the previous one) it became clear that this is a\nreal requirement for the class of what you might call \"office document\nmanagement systems\".\n\nSo, in a word, \"yes.\"\n\n\n>               2) Are the mutable resource and versioning models similar\n>enough to justify worrying about their interoperability?\n\n>I do not believe that WG consensus exists on the answer to question 1. There\n>was discussion on the issue amongst the original WebDAV authors but no\n>conclusion was ever reached as versioning work was shut down in favor of\n>solidifying the rest of the spec. Consequently the issue was never presented\n>to the WG for discussion and consensus.\n\nThis is the versioning authoring team. We reach consensus among ourselves,\nand the WG gets their licks in. I think the case is very strong, and the\nwhole point of this group is to get a subset of the \"experts\" to make\npreliminary decisions to focus the WG discussion.\n\n>As for question 2, I would be very interested in hearing the reasoning\n>behind the versioning authors' opinions on these matters. A presentation of\n>the versioning model and a separate presentation on the mutable resource\n>management model with a compare/contrast between the two would probably go a\n>long way to clarifying the issues.\n\nsure, these are all in-progress work items of this group. Some of the\ndrafts are already available. Of course, like many working documents, much\nis left unsaid because the group agrees on it, and some things will need to\nbe made more explicit.\n\n>A versioning client may be willing to use core WebDAV methods such as\n>PROPFIND/PROPPATCH and GET against a mutable resource server. But such a\n>client could not, for example, pull down the history of a mutable resource\n>since the client's fundamental assumption is that while a history can be\n>expanded its existing relationships can not be changed. Additionally, such a\n>versioning client would most likely not want to execute check-in/out against\n>a mutable resource server given that the result is not a versioned resource.\n>Thus a versioning client can not fully interoperate with a mutable resource\n>server.\n\nIn Geoffrey's proposal, both kinds of client make their requests at the\nsame point in the protocol. Of course a versioning client will have a\ntrouble because there is no revision graph, nor any support for\nconfiguration management, but the same protocol elements will be used by\nthe client to perform that same basic operations. Of course a great deal of\nfunctionality will be unavailable.\n\nWe are also anticipating a two-tier set of versioning functions: \"mutable\nresource\" or \"document management\" level, and configuration level.\nConfiguration level functions only work when the full set of immutable\nrevision operation semantics are available. So a level II client talking to\na level I server must only use that subset of the operations that the\nserver supports.\n\nI like Geoffrey's proposal a lot, because the level I protocol looks\nexactly the same as the level II protocol, but with fewer methods, and\nweaker semantic guarantees.\n\nInteroperable doesn't mean interchangeable -- there's a reason that you\nmight want the level II features, but it's eased if level II _only adds_\nthings.\n\n   -- David\n\n>A mutable resource client is likely to be more flexible in dealing with a\n>versioning server. It certainly can use the core WebDAV commands and will\n>have no problem pulling down a history. It will run into trouble, however,\n>when it tries to use check-in/out since the user is expecting that they can\n>change resources. Still, one can see mutable clients working around this\n>problem fairly easily since it is a similar problem to access control. Thus\n>a mutable client can interoperate, almost fully, with a versioning server.\n\nThe mutable client works perfectly, since what it thinks of as a \"version\"\nthe server thinks of as a \"branch\" -- a named chain of immutable revisions,\nwith default access to the most recent. The client never issues the\nadvanced messages that would inform it of the extra revisions that it\ndoesn't know about, though, given the right URI, it could actually access\nthose revisions...\n\n\n>Thus it would seem that mutable clients should be able to interoperate with\n>versioning servers but not the other way around. This argues for separating\n>versioning design from Mutable design. This could mean breaking the speak\n>into two parts or even just having two separate specs. [Insert standard\n>disclaimers about not doing anything gratuitous in the versioning standard\n>which make it impossible to layer the mutable standard on top.] [Insert\n>standard disclaimers about not allowing the versioning standard to be\n>unnecessarily complicated for the sole purpose of making the mutable\n>standard designer's jobs easier.]\n\nWe can do better than that, by using subsetting, since the common semantics\nare enough to make that possible.\n\n  -- David\n\nDavid Durand              dgd@cs.bu.edu  \\  david@dynamicDiagrams.com\nBoston University Computer Science        \\  Sr. Analyst\nhttp://www.cs.bu.edu/students/grads/dgd/   \\  Dynamic Diagrams\n--------------------------------------------\\  http://www.dynamicDiagrams.com/\nMAPA: mapping for the WWW                    \\\n     \n   \n\n", "id": "lists-005-10201855"}, {"subject": "Re: CHECKIN/CHECKOUT - Versioning Policies?", "content": "At 12:15 AM -0500 1/20/99, Yaron Goland wrote:\n>Welcome to the fourth and final entry in my series of comments on Geoffrey's\n>proposal.\n>Client versioning policy? I thought we killed this back in '97!\n\n>In December of 1996 Andre van der Hoek put forward a post to the list that\n>summarized a proposal he had made previously to the authors\n>(http://lists.w3.org/Archives/Public/w3c-dist-auth/1996OctDec/0199.html). In\n>essence it proposed that clients be allowed to tell servers what their\n>versioning policy is.\n\nThis is not Geoffrey's proposal. Again, some stuff hasn't been written down\nyet, but the version selection rule mechanism will be a requirement for\nconfiguration-level servers -- all clients and servers will have a common\nlanguage for policy (albeit a very restricted one).\n\n\n>The issue was investigated, at length, by the working group and the proposal\n>was rejected in its entirety. The reason for the rejection was as follows:\n\nThis is a different proposal.\n\n>1) Many DM vendors indicated that their users demanded the ability to\n>specify a single versioning policy for their server and would demand that\n>all clients that interoperate with their server must use that versioning\n>policy. The key issue wasn't the particular policy the server used so much\n>as the ability of the server to absolutely rely upon a particular policy\n>always being used across all its resources. Without this guarantee it became\n>impossible to apply meaningful security policies and to interoperably share\n>versioning data across resources since the knowledge needed to understand\n>the information changed based on which client used which policy against\n>which resource. Matters became especially bad if clients were allowed to\n>change the policy on a resource once the policy had been established.\n\nThis simply isn't relevant to the current proposal, which has to do with\nconfiguration management, and not the Document Management level of the\nprotocol.\n\n>2) Client vendors indicated that their clients would be written to use a\n>particular versioning policy and would refuse to interoperate with any\n>server which did not implement that policy. The basis of their reasoning was\n>that the UI the client implemented had to be tuned to a particular policy.\n>If the policy could change based on the resource being talked to then the UI\n>would have to change with it. Furthermore, it is hard enough to write a\n>client which supports a single versioning policy. It is next to impossible\n>to write, debug, document, and then educate one's users about a client whose\n>policy could change on a resource by resource basis.\n\n>At the same time the WG got an \"in your face\" demonstration of just how bad\n>variable policies could be in terms of code and protocol complexity. After\n>Andre's post in Dec '96 there was a WebDAV WG meeting in Irvine in Jan '97.\n>At the time the various DM vendors refused to compromise in how versioning\n>worked. Each insisted that versioning must work exactly the way their system\n>implemented it. For example, we couldn't get consensus on an issue as simple\n>as \"if you do a check out is there a working draft? If so, is it created on\n>the server or the client?\" So Jim and I presented a protocol that did\n>everything everyone wanted. I only think it required three round trips and 8\n>different axis's of negotiation. You can see some of the discussion on both\n>client versioning and policies and on the versioning design noted down as\n>part of day two in\n>http://www.ics.uci.edu/%7Eejw/authoring/irvine/minutes.txt. Unfortunately\n>the meeting notes don't do a great job of recording the discussions that\n>various comments sparked. Those of you who really enjoy pain can check out\n>section 9 of http://www.ics.uci.edu/~ejw/authoring/webdav-draft-06.html for\n>the details. Try not to laugh/cry too hard.\n\nWe have a fair cross-section of these communities in the current group, and\nare making progress. Jim is at each meeting, and has not claimed that we're\nrunning down exactly the same path as before, so I think there must be some\ndifferences.\n\nfurthermore, things are much more layered now, so that people can choose to\nimplement just base WebDAV, DM-style versioning, or Configuration\nmanagement. We are constrained to make the protocol workable (as far as\npossible) with the levels lower down, and currently we are managing this.\n\nSo I move that blanket objections based on the past history of other\nproposals be avoided, and that we stick to concrete issues with the current\nproposals.\n\n>But the point was made, negotiation and variable policies didn't work. While\n>I realize that the policies discussed here are not the same as those\n>discussed in the document I believe the line of reasoning that made us\n>reject policies in '97 will lead us to the same conclusion in '99\n\nThen you'll have to present an argument to that effect. This is indeed so\nunlike the kinds of things that \"versioning policy\" referred to back then,\nthat the relevance of those discussions seems almost nil to me. I was\nthere, and in fact it was those fruitless discussions (and the chance to\ncontribute to XML) that made me leave DAV at that time.\n\n>Either way, in '97, the WG consensus was that there would be no negotiation\n>on versioning policy. Neither clients nor servers would be allowed to\n>dictate policy. Rather the WG instructed the authors to come up with a\n>single policy and make that the standard.\n\nSince that is what we are doing, I don't see that there's a problem.\n\n  -- David\n\nDavid Durand              dgd@cs.bu.edu  \\  david@dynamicDiagrams.com\nBoston University Computer Science        \\  Sr. Analyst\nhttp://www.cs.bu.edu/students/grads/dgd/   \\  Dynamic Diagrams\n--------------------------------------------\\  http://www.dynamicDiagrams.com/\nMAPA: mapping for the WWW                    \\\n     \n   \n\n", "id": "lists-005-10211102"}, {"subject": "Re: forking on checkin vs. on checkout", "content": "At 8:04 AM -0500 1/20/99, Sean Shapira wrote:\n>Does this imply that a fork occurs as soon as a second check-out\n>is performed on a revision?  The alternative model delays the fork\n>until the second check-in is performed.  That approach has some\n>major benefits, not the least of which is that the second user to\n>check-in can be given the option of merging all the changes and\n>thus avoiding the fork altogether.\n\n>Another alternative model has the fork happening on check-out,\n>but doesn't give either child revision special status until the\n>first one is checked in.  In particular, until a check-in occurs\n>one wouldn't know which child will become the immediate successor\n>on the same branch as their shared parent, and which -- in the\n>absence of a merge -- would be shunted off to a side-branch.\n\n>Either of these alternatives supports a less structured style\n>of cooperative work, without sacrificing any revision-control\n>rigor.\n\nHear hear!\n\nI still think servers need to have the flexibilty to decide which\noperations (CHECKIN/CHECKOUT) _actually_ cause forking to occur. Whether we\nwant to allow headers for clients to _request_ they happen at particular\ntimes is a different question.\n\n  -- David\n\nDavid Durand              dgd@cs.bu.edu  \\  david@dynamicDiagrams.com\nBoston University Computer Science        \\  Sr. Analyst\nhttp://www.cs.bu.edu/students/grads/dgd/   \\  Dynamic Diagrams\n--------------------------------------------\\  http://www.dynamicDiagrams.com/\nMAPA: mapping for the WWW                    \\\n     \n   \n\n", "id": "lists-005-10220345"}, {"subject": "Re: CHECKIN/CHECKOUT", "content": "I am excited to see that the authors have made great progress amongst\nthemselves. Unfortunately an insufficient amount of information has been\nreleased for non-authors to have a meaningful conversation with the authors.\nHopefully after the next author's meeting a series of drafts will be\nreleased which will make further conversation possible. I look forward to\nit.\n\n                        Yaron\n     \n   \n\n", "id": "lists-005-10225107"}, {"subject": "Re: CHECKIN/CHECKOUT - Mutable resources and a call for consensus", "content": "          1) Should mutable resource management be in-scope for\nWebDAV?\n          2) Are the mutable resource and versioning models similar\nenough to justify worrying about their interoperability?\n\nYaron,\n\nThere seems to be versioning WG consensus that 1) should be in scope in\norder to provide sufficient for typical document management system\nsemantics. A number members, including myself and Geoff Clemm feel that\nmutable revisions  compromise versioning and configuration management and\nshould not be included in the protocol. However, we found that in order to\nmake progress, we had to yield and support the more flexible DMS semantics.\n\nOn your second question, this was discussed at length in the Portland WG\nmeeting, and it was generally agreed that the DMS servers didn't want to\nhave a separate protocol, but wanted to share most of the semantics of more\nformal versioning systems, but with the additional freedom to change\nrevisions. Interoperability was a secondary goal, and as you point out,\nclients from both camps could be confused by servers supporting the other\ncamp. This is an unfortunate result of having a lot of options.\n\nThis issue has consumed a lot of the versioning WG's attention and effort,\nperhaps at the cost of reaching consensus in other important areas. I think\nwe should formulate use cases that motivate these various semantic\nalternatives, and look for common agreement. I also think we need to focus\non semantic coverage of versioning, parallel development, and configuration\nmanagement before we introduce semantic variants, options, and\noptimizations. Otherwise we run the risk of including some feature only to\ndiscover it doesn't make sense in the context of other features.\n\nFor example, in systems that support parallel development, when activities\nare merged, the system can generate the conflicts list, and can maintain\nthe list as they are resolved by the author. Having this capability is of\nenormous importance because it helps make sure changes aren't lost. If\nrevisions are allowed to change, then an author cannot rely on the\nconflicts list. New conflicts could be created at any time without any\nrecord. Similarly, changing revisions of resources in a configuration used\nto deploy a web application compromises the ability to re-create a\nparticular distribution. Sure, changing a spelling mistake in a document\nmight not have any significant effect on the configuration, but what about\nchanging an assignment in a script that is part of an HTML page? Where does\nit stop? Is this something you want to leave up to any author to decide?\nAuthoring web resources is much more than authoring static documents, and\nthe versioning requirements are much stricter. The question is, do document\nmanagement systems have the same semantics? Should they? Do they care about\nparallel development and configurations? How many options do we expect\nclient applications to deal with? Are these issues we want to resolve in\nthe protocol, or are they client issues?\n     \n   \n\n", "id": "lists-005-10228342"}, {"subject": "Interoperability between Mutable and Immutable Versioning", "content": "To clarify my position on this topic, it is my belief that the protocol\ncould be designed in a way to make mutable and immutable versioning\nincompatible (i.e. by providing a THAW and FREEZE operations that\nwould fail on versioned resources that supported immutable revisions),\nor could be written in a way to make them compatible (i.e. by providing\na consistent interpretation of CHECKOUT/CHECKIN for both.\n\nThe CHECKOUT/CHECKIN model I posted in my earlier message is the\nlatter (i.e. interoperable) protocol.  In this form, I not only\nbelieve that mutable versioning is acceptable, but I advocate it as an\ninteroperable simplification of the more powerful but more complex\nconfiguration management protocol.\n\nCheers,\nGeoff\n     \n   \n\n", "id": "lists-005-10233977"}, {"subject": "Re: CHECKIN/CHECKOUT - Mutable resources and a call for consensus", "content": "At the Orlando IETF meeting we (Geoff, Yaron, and I) came up with an\nagreement on the semantics of mutable/immutable revisions that it seems we\nare backing away from now. As I recall, we came up with some pretty simple\nsemantics that provided what everyone wanted without requiring different\nserver options. Here's what I remember was the conclusion of the \"pool\"\ndiscussion:\n\n1. Mutability of a revision is a property of the revision, not the server.\nIt is up to the author to determine on a revision-by-revision basis whether\na revision is mutable or not.\n\nFor example, a revision of a static document might be considered mutable if\nit has no legal issues as changing a revision would have no significant\nconsequences. On the other hand, a servlet accessing a database query\nreturning sensitive business information as part of a complex e-business\napplication might need to be immutable so different versions of the\napplication can be deployed. It is also possible that both resources\nparticipate in the same application.\n\n2. Revisions can be related in two different ways: successor/predecessor,\nand derived from. These are different relationships having different\nsemantics.\n\nThese relationships reflect the different versioning semantics of document\nmanagement systems and typical CM systems. There is really no problem\nhaving two relationships. We just have to define the semantics and the\nmethods to create them. These follow:\n\n3. A mutable revision cannot participate in a successor/predecessor\nrelationship because the semantics of such a relationship are not\nmaintained.\n\nThis allows a server to know and rely on the meaning of\nsuccessor/predecessor relationships which enables support for merging and\nconfiguration semantics.\n\n4. A versioned resource has two revision histories, the\nsuccessor/predecessor history, and the derived from history. The actual\nsemantics of derived from relationship are not specified by WebDAV as they\nare unpredictable, WebDAV only maintains the relationship. Both histories\nare available through the same query.\n\n5. A working revision of a versioned resource revision (mutable or not) is\ncreated by checking out the resource.\n\nThere is no change in checkout semantics for mutable or immutable\nrevisions. If the revision is already checked out, then the checkout will\nfail. The author must set the current activity in his workspace to a new\nactivity and checkout the revision in the new, parallel activity.\nMutability is not derived from the checked out resource, nor is it\ndetermined at checkout time (you don't have a revision yet).\n\n6. An author determines whether a revision is mutable or not when the\nrevision is checked in. This establishes the full relationship with the\nrevision that was checked out. If it is checked in as an immutable\nrevision, then the relationship is successor/predecessor. If it is checked\nis as mutable, then the relationship is derived from.\n\nThis lets the author decide on a revision-by-revision, resource-by-resource\nbasis the mutability of a revision. This is not specified as a server\noption. Client applications can exploit either or both semantics on any\nserver. That is, the server provides both mechanisms, and the client picks\nthe policy it wants. As Yaron pointed out, this approach won't scale to too\nmany different semantic variants, so we should pick them carefully. But in\ngeneral, the server is about mechanism, and the client is about exploiting\nmechanism to provide specific policies.\n\n7. If a working version was checked out from a mutable revision, and\nchecked back in as immutable, then the predecessor/successor relationship\nis established with the closest immutable predecessor up the line of\ndescent.\n\nThis is required to ensure the semantics of successor/predecessor can be\nmaintained.\n\n8. Mutable revisions cannot be members of a configuration.\n\nThis is required to support the usual expected semantics of configurations:\nreproducibility.\n\n9. A mutable revision  cannot be the source of a merge.\n\nThis is required to support deterministic merging and reliable merge\nconflict lists. Note the last two indicate that parallel development and\nconfiguration management are not well supported for mutable revisions, and\nwould not likely be available to DMS clients. It is assumed that DMS\nclients are not as interested in these facilities as mutable revisions\nwould cause unpredictable and unexpected results. Note however that if they\nbecome interested, all they need to do is change a header on checkin to\nmake the revision immutable, and they get all the parallel development and\nconfiguration management semantics from then on, on the same resource and\non the same server.\n\n10. A mutable revision can be changed with a simple PUT or PROPPATCH. It\ndoes not need to be checked out in order to change its contents or\nproperties. The is no record of these changes maintained by the server\nother than the last modified DAV property.\n\nWe could include \"thaw\"/\"freeze\" operations that work only on mutable\nrevisions to make changing them harder, thereby highlighting the\nconsequences of such an operation, but I don't believe this is worth the\nbother.\n\n11. An immutable revision can never be made mutable.\n\nThis again ensures the integrity of successor/predecessor relationships and\nthe semantics that depend on them. If an author wants a mutable version, he\ncan checkout the immutable revision, and check it back is as mutable in\norder to create a new, mutable revision. If the resource is already checked\nout, then this would require a new activity.\n\n12. Workspace version selection rules can include mutable and immutable\nrevisions.\n\nSo there is no change in how revisions are accessed. However, a mutable\nrevision cannot be in a configuration, so this limits the version selection\nrules that can be used to specify mutable revisions.\n\n13. Activities can contain mutable revisions, but these activities cannot\nbe the source of a merge.\n\nWe may want to modify the semantics of the conflict list to include\nline-of-descent conflicts of immutable revisions, and an indication of\npotential, undetermined conflicts that could arise at any time due to\nchanges in mutable revisions. Then at least the server could tell the\nauthor about the potential for lost updates even though it can't ever\nindicate the conflict is resolved as it can for line-of descent conflicts\nwhen the merge is completed.\n\nSo I think there are only a few protocol consequences to these rules.\n\n1. checkin needs a header to indicate if the new revision is mutable or\nnot.\n\n2. The protocol for accessing the history needs to indicate is the\npredecessor/successor, derived from, or both histories are desired.\n\n3. The other methods must support the semantics above, but there shouldn't\nbe any protocol changes required.\n\nThis needs to be more fully thought out, and tested against the as yet\nunknown or unspecified scenarios. But I think this is what we agreed to at\nOrlando, seems pretty simple, does what I think the DMS people want,\nanswers the interoperability question, would be relatively easy to\nimplement, maintains the semantics required to support deterministic\nparallel development and configurations, eliminates server options, and\nkeeps the protocol simple.\n\nAm I missing something? Is this what we agreed to? Does it do what we want?\n     \n   \n\n", "id": "lists-005-10237604"}, {"subject": "Re: Interoperability between Mutable and Immutable Versioning", "content": "Personally, I like the THAW/FREEZE idea we discussed because it requires an\novert action to replace an older revision.  I guess I don't really get what\nit means to \"checkout\" an old revision that will be replaced on checkin and\nnot branched.  To mean they seem like dissimilar things that need to\ninteroperate.  Doing a THAW, GET, PUT, FREEZE seems a viable approach for\nDMS systems that need to do this.  I still think the mainline case is that\nyou checkout/in and create immutable revisions.  The THAW/FREEZE is just a\nway to support DMS scenarios within the versioning model.\n\nChris\n\n-----Original Message-----\nFrom: Geoffrey M. Clemm [mailto:gclemm@tantalum.atria.com]\nSent: Thursday, January 21, 1999 8:42 AM\nTo: ietf-dav-versioning@w3.org\nSubject: Interoperability between Mutable and Immutable Versioning\n\n\n\nTo clarify my position on this topic, it is my belief that the protocol\ncould be designed in a way to make mutable and immutable versioning\nincompatible (i.e. by providing a THAW and FREEZE operations that\nwould fail on versioned resources that supported immutable revisions),\nor could be written in a way to make them compatible (i.e. by providing\na consistent interpretation of CHECKOUT/CHECKIN for both.\n\nThe CHECKOUT/CHECKIN model I posted in my earlier message is the\nlatter (i.e. interoperable) protocol.  In this form, I not only\nbelieve that mutable versioning is acceptable, but I advocate it as an\ninteroperable simplification of the more powerful but more complex\nconfiguration management protocol.\n\nCheers,\nGeoff\n     \n   \n\n", "id": "lists-005-10247601"}, {"subject": "Re: CHECKIN/CHECKOUT - Mutable resources and a call for consensus", "content": "Some comments intermixed below...\n\n-----Original Message-----\nFrom: jamsden@us.ibm.com [mailto:jamsden@us.ibm.com]\nSent: Thursday, January 21, 1999 9:22 AM\nTo: gclemm@tantalum.atria.com; Yaron Goland\nCc: ietf-dav-versioning@w3.org\nSubject: Re: CHECKIN/CHECKOUT - Mutable resources and a call for\nconsensus\n\n\n\n\nAt the Orlando IETF meeting we (Geoff, Yaron, and I) came up with an\nagreement on the semantics of mutable/immutable revisions that it seems we\nare backing away from now. As I recall, we came up with some pretty simple\nsemantics that provided what everyone wanted without requiring different\nserver options. Here's what I remember was the conclusion of the \"pool\"\ndiscussion:\n\n1. Mutability of a revision is a property of the revision, not the server.\nIt is up to the author to determine on a revision-by-revision basis whether\na revision is mutable or not.\n\nFor example, a revision of a static document might be considered mutable if\nit has no legal issues as changing a revision would have no significant\nconsequences. On the other hand, a servlet accessing a database query\nreturning sensitive business information as part of a complex e-business\napplication might need to be immutable so different versions of the\napplication can be deployed. It is also possible that both resources\nparticipate in the same application.\n\n[CK] I think it is perfectly reasonable for a server to not support\n     mutable revisions.  In Portland we discussed this and said that\n     FREEZE/THAW were optional and a server could fail all requests.\n\n2. Revisions can be related in two different ways: successor/predecessor,\nand derived from. These are different relationships having different\nsemantics.\n\nThese relationships reflect the different versioning semantics of document\nmanagement systems and typical CM systems. There is really no problem\nhaving two relationships. We just have to define the semantics and the\nmethods to create them. These follow:\n\n3. A mutable revision cannot participate in a successor/predecessor\nrelationship because the semantics of such a relationship are not\nmaintained.\n\nThis allows a server to know and rely on the meaning of\nsuccessor/predecessor relationships which enables support for merging and\nconfiguration semantics.\n\n[CK] I don't agree with that.  I think the predecessor/successor\nrelationship\n     is still valid, you just can't make immutable guarantees.  This is\n     bad for source control, but can be fine for some DMS systems.\n\n4. A versioned resource has two revision histories, the\nsuccessor/predecessor history, and the derived from history. The actual\nsemantics of derived from relationship are not specified by WebDAV as they\nare unpredictable, WebDAV only maintains the relationship. Both histories\nare available through the same query.\n\n[CK] Agreed.  Geoff wanted the ability to get a combined list and I\n     think that is fine as well.\n\n5. A working revision of a versioned resource revision (mutable or not) is\ncreated by checking out the resource.\n\nThere is no change in checkout semantics for mutable or immutable\nrevisions. If the revision is already checked out, then the checkout will\nfail. The author must set the current activity in his workspace to a new\nactivity and checkout the revision in the new, parallel activity.\nMutability is not derived from the checked out resource, nor is it\ndetermined at checkout time (you don't have a revision yet).\n\n[CK] I guess I don't get what it means to \"checkout\" a mutable revision\n     that isn't the tip.  That would imply a branch to me.  Why wouldn't\n     I THAW it, GET it, PUT it, and FREEZE it?  Although technically I\n     don't have a problem with THAW it, check it out, check it in, and\n     FREEZE it, it just seems weird because the checkout is creating a\n     mutable version which the \"THAW\" already did.\n\n6. An author determines whether a revision is mutable or not when the\nrevision is checked in. This establishes the full relationship with the\nrevision that was checked out. If it is checked in as an immutable\nrevision, then the relationship is successor/predecessor. If it is checked\nis as mutable, then the relationship is derived from.\n\n[CK] I guess I don't see mutability as a checkin attribute.  I think this\n     is an attribute of the revision.  I think that it is fine to require\n     this to be an overt action by the user which the server can prevent.\n\nThis lets the author decide on a revision-by-revision, resource-by-resource\nbasis the mutability of a revision. This is not specified as a server\noption. Client applications can exploit either or both semantics on any\nserver. That is, the server provides both mechanisms, and the client picks\nthe policy it wants. As Yaron pointed out, this approach won't scale to too\nmany different semantic variants, so we should pick them carefully. But in\ngeneral, the server is about mechanism, and the client is about exploiting\nmechanism to provide specific policies.\n\n[CK] Except that a server MUST retain the right to not allow mutable\nversions.\n     This is acceptable for a source control system, for example.\n\n7. If a working version was checked out from a mutable revision, and\nchecked back in as immutable, then the predecessor/successor relationship\nis established with the closest immutable predecessor up the line of\ndescent.\n\nThis is required to ensure the semantics of successor/predecessor can be\nmaintained.\n\n[CK] Since I don't see the checkin changing the immutability, this seems\n     odd to me.  I think we are getting the revision graph manipulation\n     involved where it doesn't belong.  The scenario is simple.  Version\n     3 of the document has a typo and I just want to fix it -- and I declare\n     that it is OK.  The pred/succ relation doesn't change (2 is before 3\nand\n     4 is after 3).  The client can detect that revision 3 was THAWed and\n     see that the modified time is later than 4 and that's OK.  If you\naccept\n     THAW, then the pred/succ is a logical relationship and not guaranteed\nto\n     be a physical one.\n\n8. Mutable revisions cannot be members of a configuration.\n\nThis is required to support the usual expected semantics of configurations:\nreproducibility.\n\n[CK] I think this is too strong.  A way to use a configuration is for\n     reproducibility, but I don't think that is the only value of a\n     configuration.  I could also use it as a way to organize my work.\n\n9. A mutable revision  cannot be the source of a merge.\n\nThis is required to support deterministic merging and reliable merge\nconflict lists. Note the last two indicate that parallel development and\nconfiguration management are not well supported for mutable revisions, and\nwould not likely be available to DMS clients. It is assumed that DMS\nclients are not as interested in these facilities as mutable revisions\nwould cause unpredictable and unexpected results. Note however that if they\nbecome interested, all they need to do is change a header on checkin to\nmake the revision immutable, and they get all the parallel development and\nconfiguration management semantics from then on, on the same resource and\non the same server.\n\n[CK] I don't think we should have the server involved in merge.  This is\n     a client operation that is reflected in the client-maintained\nderivation\n     fields.\n\n10. A mutable revision can be changed with a simple PUT or PROPPATCH. It\ndoes not need to be checked out in order to change its contents or\nproperties. The is no record of these changes maintained by the server\nother than the last modified DAV property.\n\n[CK] Agreed -- although this seems to conflict the statements above.\n     Maybe I just missed something?\n\nWe could include \"thaw\"/\"freeze\" operations that work only on mutable\nrevisions to make changing them harder, thereby highlighting the\nconsequences of such an operation, but I don't believe this is worth the\nbother.\n\n[CK] I do.  I think the gesture is important.\n\n11. An immutable revision can never be made mutable.\n\nThis again ensures the integrity of successor/predecessor relationships and\nthe semantics that depend on them. If an author wants a mutable version, he\ncan checkout the immutable revision, and check it back is as mutable in\norder to create a new, mutable revision. If the resource is already checked\nout, then this would require a new activity.\n\n[CK] I think this makes sense for source control systems, but not for DMS\n     systems.  I think the FREEZE/THAW we agreed to in Portland is fine\n     and the properties can be used to detect if a revision has been\n     mutable.\n\n12. Workspace version selection rules can include mutable and immutable\nrevisions.\n\nSo there is no change in how revisions are accessed. However, a mutable\nrevision cannot be in a configuration, so this limits the version selection\nrules that can be used to specify mutable revisions.\n\n[CK] I assume this is through standard property selection semantics.\n\n13. Activities can contain mutable revisions, but these activities cannot\nbe the source of a merge.\n\nWe may want to modify the semantics of the conflict list to include\nline-of-descent conflicts of immutable revisions, and an indication of\npotential, undetermined conflicts that could arise at any time due to\nchanges in mutable revisions. Then at least the server could tell the\nauthor about the potential for lost updates even though it can't ever\nindicate the conflict is resolved as it can for line-of descent conflicts\nwhen the merge is completed.\n\n[CK] It's not clear to me that a sweeping exclusion is always the right\n     thing to do.\n\nSo I think there are only a few protocol consequences to these rules.\n\n1. checkin needs a header to indicate if the new revision is mutable or\nnot.\n\n[CK] As stated, I disagree with this.  This feels more like a resource\n     property that a method \"side effect\".\n\n2. The protocol for accessing the history needs to indicate is the\npredecessor/successor, derived from, or both histories are desired.\n\n[CK] Agreed.\n\n3. The other methods must support the semantics above, but there shouldn't\nbe any protocol changes required.\n\nThis needs to be more fully thought out, and tested against the as yet\nunknown or unspecified scenarios. But I think this is what we agreed to at\nOrlando, seems pretty simple, does what I think the DMS people want,\nanswers the interoperability question, would be relatively easy to\nimplement, maintains the semantics required to support deterministic\nparallel development and configurations, eliminates server options, and\nkeeps the protocol simple.\n\nAm I missing something? Is this what we agreed to? Does it do what we want?\n\n[CK] I look forward to the Utah meeting to discuss this.  I thought the\n     conversations in Portland were good, so I look forward to hearing\n     the discussion from Orlando.  I'm still inclined to stick with\n     FREEZE/THAW, but hey, I like LOCK to check out :-)\n     \n   \n\n", "id": "lists-005-10252477"}, {"subject": "Re: CHECKIN/CHECKOUT - Mutable resources and a call for consensus", "content": "Chris Kaler wrote:\n> [CK] I think this is too strong.  A way to use a configuration is for\n>      reproducibility, but I don't think that is the only value of a\n>      configuration.  I could also use it as a way to organize my work.\n\nSo just as someone suggested \"mutable revisions\", there\ncould be \"irreproducible configurations\"?\n\n--\nSean Shapira         sds@jazzie.com         +1 206 443 2028\n               Serving the Net since 1990.\n     \n   \n\n", "id": "lists-005-10266442"}, {"subject": "Re: CHECKIN/CHECKOUT - Mutable resources and a call for consensus", "content": "Chris,\n\nYou're up pretty early! Must have had trouble sleeping if this thread got\nyou going.\n\nI think there are a couple of misunderstandings that caused some of your\nconcerns. I'll try to clear them up. You may have to refer back to the\noriginal document for context, but I didn't want to reinclude such a long\nnote. The numbers below correspond to the original note.\n\n1. I don't have any problem with making support for mutable revisions an\noption. I don't want to make support for immutable revisions an additional\noption though. If a server supports DAV versioning, it supports immutable\nrevisions. It may in addition support mutable revisions. I just like to\nlimit the options where ever possible. In the \"pool\" scenario, its the\nmutable header on checkin that would be optional.\n\n\n3. We want predecessor/successor to always have well-defined, consistent\nmeaning that supports richer merging and configuration management\nsemantics. As you pointed out, these semantics cannot be guaranteed unless\nthe participants are immutable. So we want to reserve a relationship that\nhas these semantics and call it predecessor/successor as the conventional\nmeaning of these terms fits nicely. The \"derived from\" relationship is\nincluded to support more flexible semantics and mutable revisions.\n\n5. This is where I think there is some confusion. Given an mutable\nrevision, an author can either change it with PUT or PROPPATCH directly, or\ncheck it out to create a new revision and check it back in. In the first\ncase, there is only one revision, and its state changes. In the second\ncase, there are TWO revisions with the derived from revision having the new\nstate, and the original revision is unchanged. This allows the DMS client\nto choose if it wants a new revision (use checkout), or update the existing\nmutable revision (PUT). So you don't need to checkout a mutable revision to\nchange it. This is orthogonal to the freeze/thaw issue. These methods could\nstill be applied to a mutable revision before it can be changed without\neffecting the semantics of checkin/checkout.\n\nThis is also orthogonal to branching. Since you don't need to checkout a\nmutable revision to change it, then branching isn't an issue. If the\nrevision is immutable, or if it is mutable and the author wants a new\nrevision (not an update of the existing revision), and you want to change a\nnon-tip revision, you'll need to create a new activity (which might be\nimplemented as a branch). Sorry, that sentance reads more complicated than\nit is, but you get the point.\n\n6. I think we are in agreement. I also think mutability is a property of\nthe resource, and its association with predecessors, successors, and\nderivations. This is why I think mutability is established on checkin. When\nyou have a versioned resource checked out, you have a working revision, and\nthe relationship to its predecessor is not fully established. The mutable\nheader on checkin tells the server what relationship to create:\nsuccessor/predecessor, or derived from source/destination. It also\nindicates as a result of the relationship semantics whether the revision is\nmutable or not. Note that this information may be derived from the\nrelationship, and not be an attribute of the revision at all.\n\nAgain, I don't have any problem with servers disallowing mutable revisions.\n\n7. [CK] Since I don't see the checkin changing the immutability, this seems\n     odd to me.  I think we are getting the revision graph manipulation\n     involved where it doesn't belong.  The scenario is simple.  Version\n     3 of the document has a typo and I just want to fix it -- and I\ndeclare\n     that it is OK.  The pred/succ relation doesn't change (2 is before 3\nand\n     4 is after 3).  The client can detect that revision 3 was THAWed and\n     see that the modified time is later than 4 and that's OK.  If you\naccept\n     THAW, then the pred/succ is a logical relationship and not\nguaranteedto\n     be a physical one.\n\nAh, but the predecessor/successor relationship DOES change. The revision\nyou said was the predecessor no longer exists. This might be fine for a\nspelling correction, but it a dangerous and missleading lie for many other\nchanges. Merge control is lost, configurations are no longer reproducable.\nHence the need to separate predecessor/successor relationships from derived\nfrom relationships. Predecessor/successor means more than 2 is before 3 and\n4 is after 3. That's what derived from says. Checkin doesn't change the\nmutability, it establishes it. Mutability can never be changed once\nestablished.\n\n8. You're right, configurations can be used for more than just release\nmanagement. For example, setting the version selection rule in your\nworkspace. However, this is a case where the strongest semantic defines the\nmeaning. If configurations are ever to be useful for release management\n(one of their primary uses), then they cannot ever contain mutable\nrevisions. We could introduce the notion of \"mutable configurations\" that\nchange as a result of updates to revisions in the configuration, but I\nthink this is totally unnecessary. Configurations have real value when\ntheir integrity depends on maintaining the associations between their\nmember revisions. Otherwise, just use a collection.\n\n9. Parallel development can be more trouble than its worth if there isn't\ngood support for merging activities. There are two problems: 1) what needs\nto be merged, and when am I done, and 2) how do I merge a given resource.\nBy retaining the revision history and checking out resources in activities,\nWebDAV can easily support 1). 2) requires resource-specific facilities and\nshould be out of scope for WebDAV. However servers can give the source and\ndestination revisions, as well as their least common ancestor: things that\nare essential to any merge tool.\n\n10. Again, it is not necessary to checkout a mutable revision to change it.\nYou might be confusing these semantics with Geoff's proposal which does use\ncheckout in this manner.\n\nI could be easily convinced to include the freeze/thaw semantics, just\nnever on mutable revisions. They should only be a gesture, and not have any\nsemantic meaning. I just left them out due to my minimalist tendencies.\n\n11. [CK] I think this makes sense for source control systems, but not for\nDMS\n     systems.  I think the FREEZE/THAW we agreed to in Portland is fine\n     and the properties can be used to detect if a revision has been\n     mutable.\n\nDMS systems wouldn't check things is as immutable, so there should never be\na need to thaw an immutable revision. So this doesn't seem like a\nrestriction.\n\n12. These semantics make no assumption about either the protocol, or how\nservers might implement them. I'm trying to stay as far away from those\ndiscussions as possible so we can concentrate on the scenarios we want to\nsupport, and the semantics of supporting them. However, I would assume a\nworkspace is a resource having content, likely expressed in an XML document\nthat would contain the version selection rule and a link to the current\nactivity, also a resource. We don't need to overload the property mechanism\nfor this, they could just be new, DAV defined resource types.\n\nProtocol issues:\n\n1. It is a revision and revision relationship problem, but one that is\nestablished at checkin time. So mutability needs to be specified as part of\ncheckin.\n     \n   \n\n", "id": "lists-005-10270075"}, {"subject": "Re: CHECKIN/CHECKOUT - Mutable resources and a call for consensus", "content": ">For example, in systems that support parallel development, when activities\n>are merged, the system can generate the conflicts list, and can maintain\n>the list as they are resolved by the author. Having this capability is of\n>enormous importance because it helps make sure changes aren't lost. If\n>revisions are allowed to change, then an author cannot rely on the\n>conflicts list. New conflicts could be created at any time without any\n>record. Similarly, changing revisions of resources in a configuration used\n>to deploy a web application compromises the ability to re-create a\n>particular distribution.\n\nHear, Hear.\n\n>Sure, changing a spelling mistake in a document\n>might not have any significant effect on the configuration, but what about\n>changing an assignment in a script that is part of an HTML page? Where does\n>it stop? Is this something you want to leave up to any author to decide?\n>Authoring web resources is much more than authoring static documents, and\n>the versioning requirements are much stricter. The question is, do document\n>management systems have the same semantics? Should they? Do they care about\n>parallel development and configurations? How many options do we expect\n>client applications to deal with? Are these issues we want to resolve in\n>the protocol, or are they client issues?\n\n\n\nIMHO these are important issues that the versioning working group should\ndeal with.\n     \n   \n\n", "id": "lists-005-10280140"}, {"subject": "Re: CHECKIN/CHECKOUT - Mutable resources and a call for consensus", "content": "Jim,\n\nI just wanted to say that I  am in agreement with your previous 2 notes.\nFrom my perspective, it captures the requirements of parallel development,\nmerging, and managing configurations of a web of documents.\n\nFrom our perspective, these are useful functionalities to support in the DAV\nprotocol.\n\nSankar\n     \n   \n\n", "id": "lists-005-10284391"}, {"subject": "Re: CHECKIN/CHECKOUT - Mutable resources and a call for consensus", "content": "There has been a general thread through the posts of the versioning authors\nwhich lead me to believe that the authors may not be familiar with how\nconsensus is reached in an IETF WG. Especially the WebDAV WG which has a\nlong established tradition in this area. To quote from section 3.2 of\nftp://ftp.isi.edu/in-notes/rfc2418.txt:\n\n   Decisions reached during a face-to-face meeting about\n   topics or issues which have not been discussed on the mailing list,\n   or are significantly different from previously arrived mailing list\n   consensus MUST be reviewed on the mailing list.\n\nI know how frustrating this rule can be. You go to a meeting, you argue for\ndays on end, your throat goes raw and finally you get consensus amongst the\nattendees. Then you have to go do it all over again on the mailing list.\nHowever that is the nature of the beast.\n\nA quick review of the mailing list archives (both of the versioning list and\nthe main list) did not turn up any explicit discussion of the inclusion of\nmutable resources in WebDAV. Given that this issue requires the group to\naddress matters wholly irrelevant to traditional versioning and thus make\nthe protocol more complex and the time to standardization longer I believe\nthat a rough consensus should be arrived at before we continue down this\ncourse.\n\nGiven that one can produce an extremely useful standard which does not have\nany support for mutable resources I think there is a strong argument to be\nmade for punting mutable resources to a separate spec to be written after\nthe versioning spec is finished.\n\n                        Yaron\n\n> -----Original Message-----\n> From: jamsden@us.ibm.com [mailto:jamsden@us.ibm.com]\n> Sent: Thursday, January 21, 1999 8:07 AM\n> To: Yaron Goland\n> Cc: gclemm@tantalum.atria.com; ietf-dav-versioning@w3.org\n> Subject: RE: CHECKIN/CHECKOUT - Mutable resources and a call for\n> consensus\n\n\n\n\n>           1) Should mutable resource management be in-scope for\n> WebDAV?\n>           2) Are the mutable resource and versioning models similar\n> enough to justify worrying about their interoperability?\n\n> Yaron,\n\n> There seems to be versioning WG consensus that 1) should be\n> in scope in\n> order to provide sufficient for typical document management system\n> semantics. A number members, including myself and Geoff Clemm\n> feel that\n> mutable revisions  compromise versioning and configuration\n> management and\n> should not be included in the protocol. However, we found\n> that in order to\n> make progress, we had to yield and support the more flexible\n> DMS semantics.\n\n> On your second question, this was discussed at length in the\n> Portland WG\n> meeting, and it was generally agreed that the DMS servers\n> didn't want to\n> have a separate protocol, but wanted to share most of the\n> semantics of more\n> formal versioning systems, but with the additional freedom to change\n> revisions. Interoperability was a secondary goal, and as you\n> point out,\n> clients from both camps could be confused by servers\n> supporting the other\n> camp. This is an unfortunate result of having a lot of options.\n\n> This issue has consumed a lot of the versioning WG's\n> attention and effort,\n> perhaps at the cost of reaching consensus in other important\n> areas. I think\n> we should formulate use cases that motivate these various semantic\n> alternatives, and look for common agreement. I also think we\n> need to focus\n> on semantic coverage of versioning, parallel development, and\n> configuration\n> management before we introduce semantic variants, options, and\n> optimizations. Otherwise we run the risk of including some\n> feature only to\n> discover it doesn't make sense in the context of other features.\n\n> For example, in systems that support parallel development,\n> when activities\n> are merged, the system can generate the conflicts list, and\n> can maintain\n> the list as they are resolved by the author. Having this\n> capability is of\n> enormous importance because it helps make sure changes aren't lost. If\n> revisions are allowed to change, then an author cannot rely on the\n> conflicts list. New conflicts could be created at any time without any\n> record. Similarly, changing revisions of resources in a\n> configuration used\n> to deploy a web application compromises the ability to re-create a\n> particular distribution. Sure, changing a spelling mistake in\n> a document\n> might not have any significant effect on the configuration,\n> but what about\n> changing an assignment in a script that is part of an HTML\n> page? Where does\n> it stop? Is this something you want to leave up to any author\n> to decide?\n> Authoring web resources is much more than authoring static\n> documents, and\n> the versioning requirements are much stricter. The question\n> is, do document\n> management systems have the same semantics? Should they? Do\n> they care about\n> parallel development and configurations? How many options do we expect\n> client applications to deal with? Are these issues we want to\n> resolve in\n> the protocol, or are they client issues?\n\n\n\n     \n   \n\n", "id": "lists-005-10287478"}, {"subject": "Re: Interoperability between Mutable and Immutable Versioning", "content": "As Geoffrey pointed out in one of his posts the definition of branch used by\nthe versioning authors is different than the one I presented in my post\nwhich the authors refer to as forked. I read Geoffrey's definition of branch\na number of times and I still do not understand it. I would appreciate\nfurther clarification so I can understand the arguments being held between\nthe authors.\n\n                        Thanks,\n                                        Yaron\n\n> -----Original Message-----\n> From: Chris Kaler [mailto:ckaler@microsoft.com]\n> Sent: Thursday, January 21, 1999 9:31 AM\n> To: 'Geoffrey M. Clemm'; ietf-dav-versioning@w3.org\n> Subject: RE: Interoperability between Mutable and Immutable Versioning\n\n\n\n> Personally, I like the THAW/FREEZE idea we discussed because\n> it requires an\n> overt action to replace an older revision.  I guess I don't\n> really get what\n> it means to \"checkout\" an old revision that will be replaced\n> on checkin and\n> not branched.  To mean they seem like dissimilar things that need to\n> interoperate.  Doing a THAW, GET, PUT, FREEZE seems a viable\n> approach for\n> DMS systems that need to do this.  I still think the mainline\n> case is that\n> you checkout/in and create immutable revisions.  The\n> THAW/FREEZE is just a\n> way to support DMS scenarios within the versioning model.\n\n> Chris\n\n> -----Original Message-----\n> From: Geoffrey M. Clemm [mailto:gclemm@tantalum.atria.com]\n> Sent: Thursday, January 21, 1999 8:42 AM\n> To: ietf-dav-versioning@w3.org\n> Subject: Interoperability between Mutable and Immutable Versioning\n\n\n\n> To clarify my position on this topic, it is my belief that\n> the protocol\n> could be designed in a way to make mutable and immutable versioning\n> incompatible (i.e. by providing a THAW and FREEZE operations that\n> would fail on versioned resources that supported immutable revisions),\n> or could be written in a way to make them compatible (i.e. by\n> providing\n> a consistent interpretation of CHECKOUT/CHECKIN for both.\n\n> The CHECKOUT/CHECKIN model I posted in my earlier message is the\n> latter (i.e. interoperable) protocol.  In this form, I not only\n> believe that mutable versioning is acceptable, but I advocate it as an\n> interoperable simplification of the more powerful but more complex\n> configuration management protocol.\n\n> Cheers,\n> Geoff\n\n     \n   \n\n", "id": "lists-005-10295718"}, {"subject": "Re: CHECKIN/CHECKOUT - Mutable resources and a call for consensus", "content": "At 11:10 PM -0500 1/21/99, Yaron Goland wrote:\n>There has been a general thread through the posts of the versioning authors\n>which lead me to believe that the authors may not be familiar with how\n>consensus is reached in an IETF WG. Especially the WebDAV WG which has a\n>long established tradition in this area. To quote from section 3.2 of\n>ftp://ftp.isi.edu/in-notes/rfc2418.txt:\n\n>   Decisions reached during a face-to-face meeting about\n>   topics or issues which have not been discussed on the mailing list,\n>   or are significantly different from previously arrived mailing list\n>   consensus MUST be reviewed on the mailing list.\n\n>I know how frustrating this rule can be. You go to a meeting, you argue for\n>days on end, your throat goes raw and finally you get consensus amongst the\n>attendees. Then you have to go do it all over again on the mailing list.\n>However that is the nature of the beast.\n\nSome of us are quite aware of this. However, when the documents are\nincomplete, and the proposals are still unclear, there's a limit to how\nenlightening such a discussion can be. I fully believe that the current\nprocedure is intended to allow convergence within a small group before\nopening up a free-for-all.\n\nAs in the previous DAV standard, this is somewhat less-open than a\ntraditional IETF process, since one proposal has a full team creating and\nsupporting it, and the others probably will not.\n\nI was not happy during the first DAV process because of these very factors,\nbut in the end the standard is pretty good. You may now be understanding\nsome of the frustration that others expressed to you the first time around.\n\nIn both cases, there is no intention to _ram something through_ the Working\ngroup, simply to deal effectively with what has proven to be an\nexceptionally complex design space. I am also convinced that there's a good\ncross-section of the entire community in the authoring team, so that there\nare not any obvious \"blind spots.\"\n\nIn any case, all drafts will go through the normal working group process,\nso that your claims of process problems are premature. The quote says that\ndecisions must be reviewed on the mailing list, not _made on it_. (though\nthat is also possible.\n\nMy memory of the discussions (I dropped out only when it was clear that\nversioning was not going to go into the first rev), was not one of clear\nconsensus. At that time I was on the other side. It was also at least two\nyears ago, and little substantive discussion on these topics has taken\nplace until very recently. In other words, the argument that we're\nreversing a clear consensus seems weak to me, even though I also think that\nit's preamture to\nworry about the question at all.\n\nIn other words, I think the objection is irrelevant first (because the\nprocess is not being violated) and wrong anyway (because clear consensus is\nnot established).\n\n>A quick review of the mailing list archives (both of the versioning list and\n>the main list) did not turn up any explicit discussion of the inclusion of\n>mutable resources in WebDAV.\n\nRight. you're seeing it now (in imperfect form) and you'll see it again,\nbut probably in the form of reaction to actualt proposals.\n\n> Given that this issue requires the group to\n>address matters wholly irrelevant to traditional versioning and thus make\n>the protocol more complex and the time to standardization longer I believe\n>that a rough consensus should be arrived at before we continue down this\n>course.\n\n While I'm sympathetic to your comment about \"traditional versioning,\" I've\nfound that there are a lot of traditions out there, and that each must be\nexamined carefully for its virtues and drawbacks (and the relevance of its\ncommunity).\n\n>Given that one can produce an extremely useful standard which does not have\n>any support for mutable resources I think there is a strong argument to be\n>made for punting mutable resources to a separate spec to be written after\n>the versioning spec is finished.\n\nOne of the things that became very clear in discussions with the\noffice-document management people is that without mutable versions they\nprobably will not find DAV versioning useful enough to implement. A Web\nversioning standard that doesn't work with an important class of authoring\napplications will be _much_ less useful than one that does.\n\nOne of the things that is exciting about Geoff's proposal is that it\nactually unifies these two views of the world without adding protocol\ncomplexity, or doing violence to the semantic expectations of either kind\nof client or server.\n\nIt is _not_ easy to get the first time. It took me a few hours to actually\nbelieve that it works, partly because it makes a non-obvious equivalence\nbetween linear lines of descent (as implemented by almost every\nconfiguration management system), and mutable versions (as used by office\ndocument management products). It also removes behavior options, since the\nsame exact operations are available at the basic versioning _and_ the\nadvanced versioning levels -- but of course advanced versioning\n(configuration management) has a bunch of extra stuff that it can do as\nwell...\n\nIf we were talking about _extra_ complexity for an unimportant class of\nflient and server, I'd be with you, but it's actually a a very important\nclass of applications, and it's _simpler_ than the competing proposals.\n\n -- David\n\nDavid Durand              dgd@cs.bu.edu  \\  david@dynamicDiagrams.com\nBoston University Computer Science        \\  Sr. Analyst\nhttp://www.cs.bu.edu/students/grads/dgd/   \\  Dynamic Diagrams\n--------------------------------------------\\  http://www.dynamicDiagrams.com/\nMAPA: mapping for the WWW                    \\\n     \n   \n\n", "id": "lists-005-10301275"}, {"subject": "Re: CHECKIN/CHECKOUT - Mutable resources and a call for consensus", "content": "I'm currently heads-down on getting a draft of the versioning model\nprepared for distribution ... hopefully by the middle of next week.\nThat should give us more common ground for discussion (and if not,\nI'll keep fixing it until it does! :-).\n\nCheers,\nGeoff\n     \n   \n\n", "id": "lists-005-10310079"}, {"subject": "Re: CHECKIN/CHECKOUT - Mutable resources and a call for consensus", "content": "The purpose of my response was strictly to challenge James Amsden's post\n(the one I was directly responding to) that consensus already exists on the\nissue of support for mutable resources. My point is that consensus most\ncertainly does not exist because only the mailing list can be used to\nmeasure consensus and the issues have not been presented to the mailing\nlist.\n\nI hope the authors don't get the wrong message. No one is angry at them or\nurging them to hurry up. Real work only began last December. The progress\nthat has already been made is breath taking and I'm sure the group is happy\nto wait an extra month or two until the authors are able to fully agree with\neach and provide a unified proposal to the working group.\n\nI don't believe the process is broken. I just want to make sure that the\nauthors fully understand how the process works.\n\n                        Yaron\n\n> -----Original Message-----\n> From: David G. Durand [mailto:dgd@cs.bu.edu]\n> Sent: Friday, January 22, 1999 6:25 AM\n> To: Keith Moore (E-mail); ietf-dav-versioning@w3.org; Jim Whitehead\n> (E-mail)\n> Subject: RE: CHECKIN/CHECKOUT - Mutable resources and a call for\n> consensus\n\n\n> At 11:10 PM -0500 1/21/99, Yaron Goland wrote:\n> >There has been a general thread through the posts of the\n> versioning authors\n> >which lead me to believe that the authors may not be\n> familiar with how\n> >consensus is reached in an IETF WG. Especially the WebDAV WG\n> which has a\n> >long established tradition in this area. To quote from section 3.2 of\n> >ftp://ftp.isi.edu/in-notes/rfc2418.txt:\n> >\n> >   Decisions reached during a face-to-face meeting about\n> >   topics or issues which have not been discussed on the\n> mailing list,\n> >   or are significantly different from previously arrived\n> mailing list\n> >   consensus MUST be reviewed on the mailing list.\n> >\n> >I know how frustrating this rule can be. You go to a\n> meeting, you argue for\n> >days on end, your throat goes raw and finally you get\n> consensus amongst the\n> >attendees. Then you have to go do it all over again on the\n> mailing list.\n> >However that is the nature of the beast.\n\n> Some of us are quite aware of this. However, when the documents are\n> incomplete, and the proposals are still unclear, there's a\n> limit to how\n> enlightening such a discussion can be. I fully believe that\n> the current\n> procedure is intended to allow convergence within a small group before\n> opening up a free-for-all.\n\n> As in the previous DAV standard, this is somewhat less-open than a\n> traditional IETF process, since one proposal has a full team\n> creating and\n> supporting it, and the others probably will not.\n\n> I was not happy during the first DAV process because of these\n> very factors,\n> but in the end the standard is pretty good. You may now be\n> understanding\n> some of the frustration that others expressed to you the\n> first time around.\n\n> In both cases, there is no intention to _ram something\n> through_ the Working\n> group, simply to deal effectively with what has proven to be an\n> exceptionally complex design space. I am also convinced that\n> there's a good\n> cross-section of the entire community in the authoring team,\n> so that there\n> are not any obvious \"blind spots.\"\n\n> In any case, all drafts will go through the normal working\n> group process,\n> so that your claims of process problems are premature. The\n> quote says that\n> decisions must be reviewed on the mailing list, not _made on\n> it_. (though\n> that is also possible.\n\n> My memory of the discussions (I dropped out only when it was\n> clear that\n> versioning was not going to go into the first rev), was not\n> one of clear\n> consensus. At that time I was on the other side. It was also\n> at least two\n> years ago, and little substantive discussion on these topics has taken\n> place until very recently. In other words, the argument that we're\n> reversing a clear consensus seems weak to me, even though I\n> also think that\n> it's preamture to\n> worry about the question at all.\n\n> In other words, I think the objection is irrelevant first (because the\n> process is not being violated) and wrong anyway (because\n> clear consensus is\n> not established).\n\n> >A quick review of the mailing list archives (both of the\n> versioning list and\n> >the main list) did not turn up any explicit discussion of\n> the inclusion of\n> >mutable resources in WebDAV.\n\n> Right. you're seeing it now (in imperfect form) and you'll\n> see it again,\n> but probably in the form of reaction to actualt proposals.\n\n> > Given that this issue requires the group to\n> >address matters wholly irrelevant to traditional versioning\n> and thus make\n> >the protocol more complex and the time to standardization\n> longer I believe\n> >that a rough consensus should be arrived at before we\n> continue down this\n> >course.\n\n>  While I'm sympathetic to your comment about \"traditional\n> versioning,\" I've\n> found that there are a lot of traditions out there, and that\n> each must be\n> examined carefully for its virtues and drawbacks (and the\n> relevance of its\n> community).\n\n> >Given that one can produce an extremely useful standard\n> which does not have\n> >any support for mutable resources I think there is a strong\n> argument to be\n> >made for punting mutable resources to a separate spec to be\n> written after\n> >the versioning spec is finished.\n\n> One of the things that became very clear in discussions with the\n> office-document management people is that without mutable\n> versions they\n> probably will not find DAV versioning useful enough to\n> implement. A Web\n> versioning standard that doesn't work with an important class\n> of authoring\n> applications will be _much_ less useful than one that does.\n\n> One of the things that is exciting about Geoff's proposal is that it\n> actually unifies these two views of the world without adding protocol\n> complexity, or doing violence to the semantic expectations of\n> either kind\n> of client or server.\n\n> It is _not_ easy to get the first time. It took me a few\n> hours to actually\n> believe that it works, partly because it makes a non-obvious\n> equivalence\n> between linear lines of descent (as implemented by almost every\n> configuration management system), and mutable versions (as\n> used by office\n> document management products). It also removes behavior\n> options, since the\n> same exact operations are available at the basic versioning _and_ the\n> advanced versioning levels -- but of course advanced versioning\n> (configuration management) has a bunch of extra stuff that it\n> can do as\n> well...\n\n> If we were talking about _extra_ complexity for an\n> unimportant class of\n> flient and server, I'd be with you, but it's actually a a\n> very important\n> class of applications, and it's _simpler_ than the competing\n> proposals.\n\n>  -- David\n> \n> David Durand              dgd@cs.bu.edu  \\  david@dynamicDiagrams.com\n> Boston University Computer Science        \\  Sr. Analyst\n> http://www.cs.bu.edu/students/grads/dgd/   \\  Dynamic Diagrams\n> --------------------------------------------\\\n> http://www.dynamicDiagrams.com/\n> MAPA: mapping for the WWW\n> \\\n\n     \n   \n\n", "id": "lists-005-10313044"}, {"subject": "Interim versioning goals document available", "content": "An interim revision of the versioning goals document is now available at:\n\nhttp://www.ics.uci.edu/pub/ietf/webdav/versioning/version-goals-01221999.htm\n\nThis document is a stable intermediate revision prior to releasing this\ndocument as an Internet Draft.\n\nThanks are due Jim Amsden for his recent hard work revising this document,\nand to John Stracke for his initial work on it.\n\n- Jim\n     \n   \n\n", "id": "lists-005-10323791"}, {"subject": "Merge Example in &lt;version-goals-01221999.htm&gt;", "content": "The <version-goals-01221999.htm> draft provides an excellent\nfictitious example of a version control system in use, showing\nhow \"activities\" are used to prepare for later merges.  But the\nexample does not make clear where merged revisions appear in the\nrevision histories of versioned resources.\n\nAs it happens, this fictitious usage scenario also provides an\nexcellent opportunity for discussion of some apparent weaknesses\nin \"first checkout is special\" revision control systems.\n\nThe example describes a user named Joe who began doing some work\nin the \"mainline\" activity, and a user named Jane who later began\nwork on the same versioned resource in a separate \"image_updates\"\nactivity.  When Joe attempts to merge the activities, \"There are\na number of places where he added new functions that do not have\nimages as Jane didn't know they were there.\"  Nonetheless, \"Once\nthe changes are complete, Joe checks in the merged version.\"\n\nBut version-goals-01221999.htm does not make clear where in the\nis-derived-from graph Joe's merged revision appears.  Given that\nit lacks some needed images, the new revision apparently belongs\nat the tip of the branch associated with the image_updates activity.\nIt doesn't yet belong on the mainline branch since not all the\nimage update work has been done.  But once the new revision has\nbeen placed in the image_updates branch, Jane can easily see Joe's\nnew functions and add the images they need.\n\nWhile this approach does work, I assert it is unfair to Jane.  She\ncompleted her work before Joe completed his.  Why wasn't her work\nadded back into the mainline?  She was done, and could have created\na mainline revision that made her work more publically available.\nYet as I understand the system proposed, she could not do this because\nJoe, by mere virtue of having checked out the file first, claimed the\nright to check in first as well.\n\nDid I read the proposal correctly in this regard?\n\n--\nSean Shapira         sds@jazzie.com         +1 206 443 2028\n               Serving the Net since 1990.\n     \n   \n\n", "id": "lists-005-10326815"}, {"subject": "Re: Merge Example in &lt;version-goals-01221999.htm&gt;", "content": "First a note for the folks interested in simple versioning: this is a\n\"configuration management\" scenario.  Activity and workspaces do not\nappear in \"document management\", since this level of control (and its\nassociated increase in complexity) is not required.\n\n   From: sds@jazzie.com (Sean Shapira)\n\n   The <version-goals-01221999.htm> draft provides an excellent\n   fictitious example of a version control system in use, showing\n   how \"activities\" are used to prepare for later merges.  But the\n   example does not make clear where merged revisions appear in the\n   revision histories of versioned resources.\n\nThat is actually intended.  That information would appear in\nthe \"versioning model\" and \"versioning protocol\" documents.\nThe goals document is just intended to layout the terminology and\nthe problem/scenario space.\n\n   As it happens, this fictitious usage scenario also provides an\n   excellent opportunity for discussion of some apparent weaknesses\n   in \"first checkout is special\" revision control systems.\n\nOne of the reasons that the concept of an \"activity\" was\nintroduced was to address this problem.  The (almost complete)\nversion model will detail how this is done, but the goals\ndocument provides the concepts that will be used.\n\n   The example describes a user named Joe who began doing some work\n   in the \"mainline\" activity, and a user named Jane who later began\n   work on the same versioned resource in a separate \"image_updates\"\n   activity.  When Joe attempts to merge the activities, \"There are\n   a number of places where he added new functions that do not have\n   images as Jane didn't know they were there.\"  Nonetheless, \"Once\n   the changes are complete, Joe checks in the merged version.\"\n\n   But version-goals-01221999.htm does not make clear where in the\n   is-derived-from graph Joe's merged revision appears.\n\nThe new revision resulting from the merge will have the appropriate\ntwo predecessor revisions (i.e. the two being merged), and the new\nrevision will be marked as being part of the mainline activity\n(the current-activity of Joe's workspace).\n\n   Given that\n   it lacks some needed images, the new revision apparently belongs\n   at the tip of the branch associated with the image_updates activity.\n\nI'll stick to the term \"activity\", to avoid confusion with a\nparticular underlying branching implementation.  As to which activity\nthis new revision belongs to, that's Joe's choice.  Joe indicate his\nchoice by setting the \"current-activity\" of his workspace.  He has\ncurrently selected the mainline activity, but he could have chosen\nthe images_update activity, or some new \"merge_images_to_mainline\"\nactivity.\n\n   It doesn't yet belong on the mainline branch since not all the\n   image update work has been done.\n\nHe could still want the partial work to appear on the mainline activity.\nOr not.  That's a choice Joe has to make.\n\n   But once the new revision has\n   been placed in the image_updates branch, Jane can easily see Joe's\n   new functions and add the images they need.\n\nTrue.\n\n   While this approach does work, I assert it is unfair to Jane.  She\n   completed her work before Joe completed his.  Why wasn't her work\n   added back into the mainline?  She was done, and could have created\n   a mainline revision that made her work more publically available.\n   Yet as I understand the system proposed, she could not do this because\n   Joe, by mere virtue of having checked out the file first, claimed the\n   right to check in first as well.\n\n   Did I read the proposal correctly in this regard?\n\nJoe doesn't claim the right to checkin on the mainline activity\nbecause he checked out the file first, but rather because he was the\none working on the mainline activity when he did his checkout.  The\nassumption is that he is in the middle of making some consistent\nchange to the mainline.\n\nIf you want whoever gets done first to be able to check their work\ninto the mainline, then you just make it policy that everyone does\ntheir work in some private activity, and then only work on the\nmainline when they are actually doing their merge.  (You certainly\ndon't want two people trying to merge into the same file in the\nmainline at the same time).\n\nDoes this address your concerns?\n\nCheers,\nGeoff\n     \n   \n\n", "id": "lists-005-10331649"}, {"subject": "Re: Merge Example in &lt;version-goals-01221999.htm&gt;", "content": "Responding to some of Geoff's comments/questions in reverse order:\n\n> Does this address your concerns?\n\nYes, I think it does.  Thanks!\n\n> Joe doesn't claim the right to checkin on the mainline activity\n> because he checked out the file first, but rather because he was the\n> one working on the mainline activity when he did his checkout.  The\n> assumption is that he is in the middle of making some consistent\n> change to the mainline.\n\nJoe started to make a change to to the mainline.  Then Jane started\nto make a change to the mainline.  Something in the protocol forced\nJane to create a separate activity for her work, whereas nothing in\nthe protocol forced Joe to do so.\n\n> If you want whoever gets done first to be able to check their work\n> into the mainline, then you just make it policy that everyone does\n> their work in some private activity, and then only work on the\n> mainline when they are actually doing their merge.\n\nThis certainly suffices.  What advise would you give on where to\nimplement this policy so that it is the automatic behavior of the\nsystem whenever anyone checks out any versioned resource?  Would\nit be enforced/facilitated by a special client?  A special server?\nIf in the server, does the protocol allow the server to fail Joe's\ncheckout because he didn't specify a new activity for his work,\njust as it failed Jane's checkout for this reason?\n\n--\nSean Shapira         sds@jazzie.com         +1 206 443 2028\n     \n   \n\n", "id": "lists-005-10339128"}, {"subject": "Re: Merge Example in &lt;version-goals-01221999.htm&gt;", "content": "Sean,\n\nThanks for the thorough review, it's appreciated.\n\nMerging makes no assumptions about the correctness of the merge. Joe is\nfree to do whatever he wants when merging in Jane's image_updates activity.\nThe is-derived-from relationship is from Joe's original checked in version\non the mainline activity, and there is an is-merged-from relationship with\nthe revision from Jane's activity. While the resource is checked out, Joe\ncan completely ignore Jane's changes, accept them all and note that some\nare missing sending Jane a note to add the missing images, or create the\nmissing images himself. The versioning and merging semantics provide no\npolicy for this, only a controlled mechanism. From the conflict report, Joe\nis sure he knows what needs to be done to merge Janes activity with his,\nbut it is up to him to decide how to do it. System supported auto-merging\ncould help with this, but there will always need to be human interaction\nwith any merge.\n     \n   \n\n", "id": "lists-005-10343885"}, {"subject": "Re: Merge Example in &lt;version-goals-01221999.htm&gt;", "content": "This certainly suffices.  What advise would you give on where to\nimplement this policy so that it is the automatic behavior of the\nsystem whenever anyone checks out any versioned resource?  Would\nit be enforced/facilitated by a special client?  A special server?\nIf in the server, does the protocol allow the server to fail Joe's\ncheckout because he didn't specify a new activity for his work,\njust as it failed Jane's checkout for this reason?\n\n\nSean,\n\nThe typical way to handle parallel development is to have the owner of a\nresource control the mainline activity and do most merging. In situations\nwhere there is no clear owner, or perhaps many different owners over the\nlifecycle of the resource, the mainline can be completely reserved by some\nCM administrator and given out through access control mechanisms in a\ncontrolled manner. The danger with these approaches is that they produce a\nlot of parallel activities that require merging, and may result in a\ngreater potential for merge errors. An alternative is to be more proactive\nabout who is doing what changes when, and plan activities to avoid parallel\ndevelopment on the same resources. These are issues that are beyond the\nprotocol or its semantics though as different organizations will want to\nuse the protocol to support many different policies.\n\nThese behaviors could be implemented in a client application, or they could\nbe handled by manual administration and/or development procedures.\n     \n   \n\n", "id": "lists-005-10347985"}, {"subject": "Mutable Revisions", "content": "Geoff,\n\nI think I have a way to \"merge\" our two ideas for managing mutability that\ngives up both what we want while keeping the protocol simple. The thing I\nlike about your approach is the semantics of checkout for protecting\nresources is more formal than lock, and provides consistent semantics\nbetween DMS and CM style servers. On the other hand, my approach lets you\nmix mutable and immutable revisions on the same resource which seems\nreasonable. Take a look at the use case I added to the goals document for\nthis. Here's the idea:\n\n1. To make any change to a versioned resource, you must check it out first,\neven if the revision being checked out is mutable.\n\nThis means that you can't PUT or PROPPATCH a mutable revision without\nchecking it out first. This is different than my original proposal, and\neliminates the need for freeze/thaw. Checkout/checkin play that role.\n\n2. At checkout time, you can decide if you want to create a new revision,\nor update the existing revision. This option is only available on mutable\nrevisions. Immutable revisions will always require a new revision.\n\nSo this is the same as your checkout and checkoutNew (I would probably use\na parameter and one method though).\n\n3. At checkin time, you decide if you want your new revision (no matter how\nit was checked out) to be mutable or not.\n\nThis comes from my proposal. If the ancestor is mutable, and you want to\ncheckin immutable, then the predecessor relationship is set to the closest\nimmutable ancestor if any. The was-derived-from relationship is still to\nthe original ancestor, so the is-derived-from and was-derived-from\nrelationships are to two different ancestors. I think this supports all the\nrules required for merging and CM, provides flexibility, preserves checkout\nsemantics on revisons, and is very simple.\n\n4. Servers are free to disallow checkout without creating a new version,\nand to checkin as a mutable revision. Servers that provide both DMS and CM\nsemantics can choose the defaults on checkout (new or not), and checkin\n(mutable or not).\n\nThis is the distinction between DMS and CM servers. DMS servers have the\nextra flexibility, but loose merge reports and configurations on mutable\nrevisions. CM servers trade off the flexibility for the richer semantics\nfor merge and configurations. Clients can either be DMS, CM, or even both\nif desired.\n\nWhat do you think? I haven't thought about the implementation implications,\nbut it seems like this could be implemented any number of ways.\n     \n   \n\n", "id": "lists-005-10352233"}, {"subject": "Re: Mutable Revisions", "content": "Having CHECKOUT/CHECKOUT-NEW/CHECKIN as the protocol for both mutable\nand immutable clients is a major part of what I think is important.\n\nI don't see what value there is though in having a server that supports\nimmutable revisions to *ever* not create a new immutable revision on\ncheckin.  (This is not to say there aren't any, just that there aren't\nany that I currently can see).\n\nIn contrast, the advantages of having an immutable revision\nserver always create a new immutable revision on checkin include:\n\n- no protocol constraints or complexity imposed on either a mutable client\n  or mutable server\n- allows existing immutable revision CM systems to successfuly handle\n  all immutable client requests.\n- allows immutable clients to create reliable configurations and do\n  intelligent merging of data created by mutable clients.\n\nCheers,\nGeoff\n     \n   \n\n", "id": "lists-005-10357237"}, {"subject": "Re: CHECKIN/CHECKOUT", "content": "Geoff,\n\nSome comments and questions  below in <jra> tags.\n\n\n\n\n\n\"Geoffrey M. Clemm\" <gclemm@tantalum.atria.com> on 01/19/99 12:19:36 AM\n\nTo:   ietf-dav-versioning@w3.org\ncc:    (bcc: Jim Amsden/Raleigh/IBM)\nSubject:  CHECKIN/CHECKOUT\n\n\n\n\n\nEven though we missed the Jan 11 deadline, Jim Amsden and I have been\nhard at work on the WebDAV versioning model, and hope to have some\ndocuments to send out by the end of January (Jim even flew up to\nMass in last week's ice storm for 2 days to work on it with me,\nwhich definitely deserves a \"beyond-the-call-of-duty\" award).\n\nBefore I get my part of those documents finished up, I wanted to send\nout the long-promised \"CHECKOUT/CHECKIN\" document.  This document has\nbeen significantly affected by the results of our modeling efforts, and\nso will probably bear only remote resemblance to what folks remember of\nthe various prior conversations on the subject.\n\nSo with that in mind, here's what I've got:\n\n------------------------------------------------------------\n\nCHECKOUT/CHECKIN\n\n\nPutting a Resource under Version Control\n\nWhen a resource is put under version control, it becomes unwriteable.\nIn order to modify a resource, it must first be checked out, then can\nbe modified one or more times, and then checked back in to indicate\nyou are done modifying it.  If your CHECKOUT fails, it means someone\nelse is currently modifying the document, so you should only do a GET\nwith the understanding that the results are only temporarily valid.\n\n\nCheckout vs. Lock\n\nNote the distinction between a (write) LOCK and CHECKOUT.  The LOCK\ntakes a resource that is writeable by everyone and temporarily makes\nit unwriteable by everyone except the lock holder (until it is\nUNLOCK'ed).  A CHECKOUT takes a resource that is unwriteable by\neveryone, and temporarily makes it writeable (until it is CHECKIN'd).\nIt is reasonable to apply a LOCK to a checked-out resource, but is\nnot required.  In particular, many systems will decide the LOCK\nis irrelevant, since a \"friendly\" client will delay writing until\nit can perform a CHECKOUT, and an \"unfriendly\" client can just wait\nuntil the UNLOCK and then trash the resource contents at will.\n\n<jra>\nBut then CHECKOUT/CHECKIN are really the same as UNLOCK/LOCK where the user\nor server had decided to leave the resource locked by default instead of\nunlocked. I'm not suggesting this semantic should be exploited, just that\nthere is a correspondence.\n</jra>\n\nImmutable-Revisions\n\nAn immutable-revision is a revision whose contents (and immutable\nproperties) cannot be changed.  More precisely, an attempt to retrieve\nthe contents or immutable properties of an immutable-revision will\nalways return the same contents or will fail.  Therefore a server can\ndelete the contents or properties of an immutable-revision (resulting\nin a failure when an attempt is made to retrieve those contents or\nproperties), but can never delete the immutable-revision itself.\n\n\nMutable-Revisions\n\nA mutable-revision is a revision whose contents and properties can be\nchanged, although an attempt to change the contents or the \"immutable\nproperties\" of a mutable-revision must be preceded by an explicit\n\"checkout/thaw\" operation, and then should be followed by a\n\"checkin/freeze\" operation to return it to a read-only state.  This\nthen requires two flavors of checkout: a checkout that unfreezes an\nexisting mutable-revision (which I'll call CHECKOUT) and a checkout\nthat creates a new (unfrozen) mutable-revision that is based on an\nexisting mutable-revision (which I'll call CHECKOUT-NEW).\n\n\nBranching\n\nWhen a versioned resource supports immutable-revisions, it is still\nnecessary to support \"change\".  In particular, there must be some\nresource that you can name, that will periodically take on new values.\nFor a versioned resource with immutable-revisions, this analogue to a\nmutable-revision is called a \"branch\".  Like a mutable-revision, a\nbranch can be checked-out, changed, and then checked-back in.  The tip\nof the branch then reflects this change.  Also as with mutable\nrevisions, you sometimes want to check out a new branch that is based\non (the tip of) an existing branch, which requires another flavor of\ncheckout (i.e. CHECKOUT-NEW).\n\n<jra>\nSo how does this relate to activities where a revision is checked out in\nthe context of an activity? Also, what's the difference between checking\nout a branch, and checking out-new on a revision? It seems confusing that\nwe checkout a branch resource in order to change some other resource. I\ndon't think the analogy above holds. For mutable revisions, checkout just\nmakes it writable in place. Checkout-new creates a new revision in the\ncontext of an activity. Say there is no parallel development. Then all\ncheckout-news are done in the same activity and one gets a single\nline-of-descent. This is what you described as checkout on a branch for\nmutable revisions above.\n\nCreating new activities to support parallel development is likely to be\nsomething DMS vendors will want to do, even though the server can't give\nthem a reliable conflict report. As described above, CHECKOUT-NEW on an\nimmutable revision would be the same as checking out an immutable revision\nin a different activity creating the potential for a merge. This seems very\ndifferent than checkout and create a new revision for mutable revisions.\n</jra>\n\nFrom a protocol perspective, this provides a way to unify the worlds\nof mutable and immtable-revisions.  In each world, there is CHECKOUT,\nCHECKOUT-NEW, and CHECKIN, where CHECKOUT modifies an existing\nmodifiable entitity, while CHECKOUT-NEW creates a new modifiable\nentity that can be modified in parallel with the original entity.\nCHECKIN is used in either case to return the resource to a readonly state.\n\n<jra>\nInteresting, but it doesn't feel like it unifies it all that much. Here's\nthe semantics you described:\n\nMutable revisions:\n  checkout: make it writeable\n  checkout-new: create a writeable copy and set the ancestor/descendent\n        was-derived-from relationship\n  checkin: make it temporarily read-only\n  no support for activities, single line-of-descent\n  no configurations\n\nImmutable revisions:\n  checkout: create a writeable copy and set the predecessor/successor\n         is-derived-from relationship\n  checkout-new: create a branch, a new line-of-descent to support\n         parallel development, and do a checkout on that branch\n  checkin: make it read-only\n  can support multiple activities, multiple lines-of-descent, and merging\n  can support configurations\n\nWhen you list it this way, it doesn't seem so uniform. I think the\nuniformity comes from a consept that is too abstract and won't be of\nsufficient interest to users. Another more significant problem is that\nthere is no way to mix mutable and immutable revision semantics on the same\nresource which I think will inhibit DMS style clients from gradually\nmigrating to CM semantics.\n</jra>\n\nThe alternative is to provide THAW/FREEZE operations that can only be\napplied to mutable-revisions, resulting in inoperability between\nservers that support mutable-revisions and servers that support\nimmutable-revisions.\n\n<jra>\nHere's another alternative whose semantics come from merging our two views:\n\nMutable revisions:\n  checkout: make it writeable\n  checkout-new: create a writeable copy and set the ancestor/descendent\n        was-derived-from relationship. Always done in the context of an\n        activity, even if the server only supports one.\n  checkin: make it temporarily read-only\n  checkin-immutable: make the new revision immutable\n  can support multiple activities, multiple lines-of-descent, but merge\n  conflict report would be advisory only\n\nImmutable revisions:\n  checkout: always fails\n  checkout-new: create a writeable copy and set the predecessor/successor\n        is-derived-from relationship. Always done in the context of an\n        activity, even if the server only supports one.\n  checkin: make it temporarily read-only\n  checkin-immutable: make the new revision immutable\n  can support multiple activities, multiple lines-of-descent, and merge\n  conflict report is reliable\n  configurations can be supported for immutable revisions\n\nThis may not be as uniform in the abstract sense as what you describe\nabove, but it seems more uniform in the concrete. The only difference\nbetween mutable and immutable revisions is the expected errors on checkout\nthat enforce the mutability of the resource. Parallel development is a\ncompletely orthogonal concept in this case. If your server supports\nmultiple activities, you have parallel development. If not, the server\neffectively supports only one activity, and there is no parallel\ndevelopment support.\n\nUsers can decide on mutability on a revision by revision basis. For\nexample, it would be great if during the early stages of development on a\nprogram one could make the revisions mutable. This would eliminate a lot of\nuseless history during the initial development and discovery stages. Not\nonly does this save space, but it simplifies the revision history of the\nresource. Then when the user decides something is stable, he can checkin\nimmutable to permanently save the revision.\n\nI would recommend implementing the protocol with two methods CHECKOUT and\nCHECKIN. CHECKOUT would have a boolean header MakeNewRevision and CHECKIN\nwould have a boolean header MakeMutable. DMS clients would set the\nMakeNewRevision header to false, and the MakeMutable header to true by\ndefault. CM clients would do the opposite. Servers supporting both\nsemantics wouldn't care, but would probably provide the CM default in order\nto support their richer semantics. Servers supporting only DMS or CM\nsemantics, but not both would give Bad Request responses for the methods\nthey can't support.\n\nNext, let's look at client/server interoperability. Of all the possible\ncombinations, the ones in question are DMS client on CM server and CM\nclient on DMS server. In this case, I'm assuming a DMS server does not\nsupport checkin(immutable), and a CM server does not support\ncheckin(mutable). The second case is simple and can be immediately\ndismissed. A CM client cannot expect to get semantics from a server that\ndoesn't support it. This is a up-level compatibility we wouldn't expect.\n\nSo the only interesting case is a DMS client on a CM only server. Given the\nsemantics above, checkout (no new revision), and checkin(mutable) would\nfail so that the DMS client defaults would not work. This may be OK, but it\nisn't ideal. Another alternative would be for CM-only servers to realize\nthey may be getting these requests, and to simulate them with mutiple\nrevisions that the client doesn't see. This can easily be done because the\nserver can distinguish between is-derived-from and was-derived-from\nrelationships, even if the participating revisions are never mutable. So\nthe \"mutable\" revision history can be tracked even though there may be many\nimmutable revisions that are not shown. I think this is the same\nimplementation you described in your solution, except the same resource\ncannot have both a mutable and immutable revision history.\n\nI think this approach provides the flexibility DMS systems want for\nmutability, but retains as much of the richer semantics of CM systems as\ncan be reliably supported. At the same time, the semantics of the methods\nare exactly the same in both cases other than expected error conditions for\nchanging immutable revisions. Finally, DMS clients are free to\nincrementally exploit the richer CM semantics without changing their\ncurrent semantics.\n</jra>\n\nSpecifying CHECKOUT/CHECKOUT-NEW Policy\n\nFor versioning individual documents, it is sufficient to just let the\nuser select CHECKOUT or CHECKOUT-NEW, as they see fit.  For\nversioning sets of related resources that are being modified in\nparallel by multiple users over the course of multiple sessions, it is\nessential that the server provide a mechanism for the client to store\nits versioning policy in a form that can be queried (and updated) by\nmultiple clients over multiple sessions.  This is especially true when\nthe CHECKOUT choice for a particular resource is dependent on the\ncurrent state of the revision graph for that resource.  I propose that\nthe \"workspace\" resource that stores the version-selection-rules is\nthe appropriate place to store this information, since the modification\nand creation of new revisions must be synchronized with the\nversion-selection-rules, or else newly created revisions might\ndisappear from view as soon as they are checked in.\n\nBottom line: A CHECKOUT, CHECKOUT-NEW, and CHECKIN command, with no\nspecial CHECKOUT/IN headers (which should make Larry happy :-).\n\nNote for Dave: The CHECKIN-NEW would be used to produce the \"anonymous\nnew change-set\" you wanted.\n\nNote for Brad: A workspace property would be used to achieve the\n-force_branch_on_new_version functionality that you wanted.\n\nNote for All: This doesn't discuss UNCHECKOUT.\n\nCheers,\nGeoff\n     \n   \n\n", "id": "lists-005-10360757"}, {"subject": "Re: CHECKIN/CHECKOUT - Mutable resources and a call for consensus", "content": "Sorry for not replying sooner, got bit by the flu bug...\n\nI'm a little worried about the combinatorics of what you proposed.\n\n1. We talked about a list of pred/succ revisions\n2. We realized that clients have more semantic information, so\n   we needed a second list\n3. Geoff pointed out that having a single merged list is valuable\n4. We decided we needed a \"primary\" pred/succ in there are multiple\n5. We need to differentiate these lists by mutable or non-mutable\n\nI realize that (5) is not what everyone is saying exactly, but that\nis the next logical step.\n\nI guess what I don't understand is why this is such an issue.  The\nquestion is, can I trust the pred/succ?  If there is a property that\nindicates if a revision has been mutated :-), why isn't this enough?\nClients know that they can't trust the data.  Why do we need separate\nlists?\n\nAlso, I still think there are two types of configurations: those for\nreproducing exact \"configurations\" (sorry for the recursion), and those\nfor managing parallel development.  The first is what we usually call\na label.  The second is what I was calling a workspace.  A collection\nof \"threads\" (to use the term from the last meeting) for multiple resources.\n\nThis should make for an interesting conversation in Utah :-)\n\nCheers,\nChris\n     \n   \n\n", "id": "lists-005-10376370"}, {"subject": "Re: CHECKIN/CHECKOUT - Mutable resources and a call for consensus", "content": "Chris, I think we are saying similar things, just with slightly different\nlanguage. The reason for two lists is that there are two relationships,\nis-derived-from, and was-derived-from having different semantics. The\nancestor/descendents for these two relationships may be different. It's not\nenough to know that a revision has been mutated, we also need to know where\nit came from. This is required for useful merge conflict lists. Otherwise\nyou can't know what needs to be merged, and when you're done. The\nprecdecessor/successor roles model the stronger is-derived-from\nrelationship.\n\nFor configurations/parallel development, I think we're even closer. Think\nof a revision as a particular instance of a versioned resource. A\nconfiguration is a particular instance of a select set of revisions. For\nparallel development, we introduce the notion of activity which represents\na set of changes to revisions that are likely taken together. So an\nactivity is like a configuration, except it gives what you have changed or\nare changing in the activity. A configuration is a persistent set of\nrevisions while an activity can change anytime. A revision can be checked\nout in many activities if the server supports parallel development.\n\nA workspace is a resource used to resolve resource URLs. A workspace\ncontains a version selection rule and a current activity. Access to a\nversioned resource is always done in the context of some workspace.\nActivities can be merged, and the differences between configurations can be\ngiven as a list of activities, each activity containing a list of resources\nthat are different.\n\n\n\n\n\n\nChris Kaler <ckaler@microsoft.com> on 01/25/99 04:24:38 PM\n\nTo:   Jim Amsden/Raleigh/IBM\ncc:   ietf-dav-versioning@w3.org\nSubject:  RE: CHECKIN/CHECKOUT - Mutable resources and a call for consensus\n\n\n\n\n\nSorry for not replying sooner, got bit by the flu bug...\n\nI'm a little worried about the combinatorics of what you proposed.\n\n1. We talked about a list of pred/succ revisions\n2. We realized that clients have more semantic information, so\n   we needed a second list\n3. Geoff pointed out that having a single merged list is valuable\n4. We decided we needed a \"primary\" pred/succ in there are multiple\n5. We need to differentiate these lists by mutable or non-mutable\n\nI realize that (5) is not what everyone is saying exactly, but that\nis the next logical step.\n\nI guess what I don't understand is why this is such an issue.  The\nquestion is, can I trust the pred/succ?  If there is a property that\nindicates if a revision has been mutated :-), why isn't this enough?\nClients know that they can't trust the data.  Why do we need separate\nlists?\n\nAlso, I still think there are two types of configurations: those for\nreproducing exact \"configurations\" (sorry for the recursion), and those\nfor managing parallel development.  The first is what we usually call\na label.  The second is what I was calling a workspace.  A collection\nof \"threads\" (to use the term from the last meeting) for multiple\nresources.\n\nThis should make for an interesting conversation in Utah :-)\n\nCheers,\nChris\n     \n   \n\n", "id": "lists-005-10380360"}, {"subject": "Re: testing, and Versioning Model", "content": "Geoff,\n\nThis mail got kicked back, so I'm sending it through ietf-dav-versioning to\nmake sure you get it. For the rest on the group, this is a text sketch of\nthe versioning/parallel development/CM model Geoff and I have been working\non. It is a working document intended for our use that may not be\ncomprehensible without the conversations we've been having to go along with\nit. The plan is to have some details added by our next meeting.\n\n---------------------- Forwarded by Jim Amsden/Raleigh/IBM on 01/26/99\n07:50 AM ---------------------------\n\n\nJim Amsden\n01/25/99 07:31 PM\n\nTo:   \"Geoffrey M. Clemm\" <gclemm@tantalum.atria.com>\ncc:\nSubject:  Re: testing, and Versioning Model  (Document link not converted)\n\nIt made it. Here's my model so far.\n\nWebDAV Versioning Model\n\nThis model is based on the scenarios in the Versioning Goals document. Only\ntypical methods of Resource and Resource collection are include to set the\ncontext. There are many other possible methods. All the methods having\nanything to do with versioning, parallel development, and configuration\nmanagement are included. Method names were chosen to reflect their\nsemantics, not a particular implementation or protocol method.  Arrays\nbelow are ment to indicate collections of the indicated object are\nreturned, not necessarily that arrays are the implementation. Pre-defined\ntypes are consistent with Java just so I don't have to define them in the\nmodel.\n\nObjects:\n\nResource\n     byte[] getContents()\n     setContents(byte[] newContents)\n     MultiStatus getProperties()\n     setProperty(String name, Element value)\n     lock()\n     unlock()\n     boolean isCollection()\n     checkIn(boolean isMutable)\n     -----------------------------------\n     URL\n     contents\n     contentType\n     properties\n\n\nResourceCollection isA Resource\n     ResourceCollection create()\n     Resource[] getMembers()\n\nReference isA Resource\n     Resource getTarget()\n     -----------------------------------\n     target\n\nVersionedResource isA Resource\n     RevisionHistory getRevisionHistory((mutable | immutable | both))\n     Revision getRoot()\n     -----------------------------------\n     rootRevision\n\nRevision isA WorkingResource\n     String getRevisionId()\n     Revision[] getDescendents()\n     String[] getLabels()\n     boolean hasLabel(String label)\n     label(String label)\n     boolean isMutable()\n     checkout(boolean makeNewRevision, Activity activity)\n     Activity[] getActivities()\n     boolean hasActivity(String url)\n\nWorkingResource isA Resource\n     Resource[] getAncestors()\n     Activity getActivity()\n\nRevisionHistory isA Element\n\nLineOfDescent\n\nDerivation\n     boolean isMutable()\n\n<!ELEMENT ConflictReport (ConflictEntry*)>\n<!ELEMENT ConflictEntry EMPTY>\n<!ATTLIST ConflictEntry\n     source CDATA #REQUIRED\n     target CDATA #REQUIRED\n\n\nConfiguration isA Activity -- a persistent Activity?\n     Revision[] getMembers()\n     addMember(Revision member)\n     removeMember(Revision member)\n     containsMember(Revision revision)\n     Activity[] differencesWith(Configuration configuration)\n\nWorkspace isA Resource\n     VersionSelectionRule getRevisionSelectionRule()\n     setRevisionSelectionRule(VersionSelectionRule selectionRule)\n     Activity getCurrentActivity()\n     setCurrentActivity(Activity value)\n     Activity createActivity(url)\n     Resource getResource(url)\n     VersionedResource getVersionedResource(url)\n     mergeActivity(Activity activity)\n     ConflictReport getMergeConflicts(Activity activity)\n\n<!ELEMENT VersionSelectionRule ((configuration | activity | label |\nlatest)*)>\n<!ELEMENT configuration (#PCDATA)>\n<!ELEMENT activity (label | latest)>\n<!ELEMENT label (#PCDATA)>\n<!ELEMENT latest EMPTY>\n\nActivity isA Resource\n     Resoruce[] getMembers()\n     boolean containsMember(Resource resource)\n\nWho lists activities in the repository?\nWho lists workspaces in the repository?\n\nRelationships:\n\n1 ResourceCollection (parent) may contain many Resources (child)\n\n1 Reference (link) refers to 1 Resource (target)\n\nMany Revisions (descendent) was-derived-from many Revisions (ancestor)\nthrough a Derivation\n\n1 VersionedResource has 1 Revision (root)\n\nMany Workspaces resolve Many Resources\n\n1 Workspace contains 1  CurrentActivity\n\n1 Workspace contains 1 VersionSelectionRule\n\n1 Activity contains Many WorkingRevisions\n\nMany Activities contain Many Revisions\n\n1 WorkingRevision is-checkedout-in 1 Activity\n\n\n\n\nSemantics:\n\n\nResource\n--------------\nbyte[] getContents()\n\nGet the contents of a resource.\n\n\nsetContents(byte[] newContents)\n\nSet the contents of a resource to a new value.\n\n\nMultiStatus getProperties()\n\nGet the properties of a resource.\n\n\nsetProperty(String name, Element value)\n\nSet the property of a resource.\n\nlock()\n\nunlock()\n\nboolean isCollection()\n\ncheckIn(boolean isMutable)\n\nCheckin a working resource, or a resource that is not currently a versioned\nresource. Set its mutability as indicated. Sets the is-derived-from\n(isMutable false) or was-derived-from (isMutable true) relationship.\n\n\nResourceCollection isA Resource\n--------------------------------------------------\n\nResourceCollection create()\n\nResource[] getMembers()\n\n\nReference isA Resource\n-------------------------------------\nResource getTarget()\n\n\nVersionedResource isA Resource\n---------------------------------------------------\n\nRevisionHistory getRevisionHistory((mutable | immutable | both))\n\nRevision getRoot()\n\n\nRevision isA WorkingResource\n-----------------------------------------------\nString getRevisionId()\n\nRevision[] getDescendents()\n\nString[] getLabels()\n\nboolean hasLabel(String label)\n\nlabel(String label)\n\nboolean isMutable()\n\ncheckout(boolean makeNewRevision, Activity activity)\n\nCheckout a revision in the given activity. The checkout fails if the\nresource is already checked out in that activity by some other user. If\nmakeNewRevision is true, create a new revision that is a copy of the\nancestor. Otherwise, just checkout in place.  Checkout in place will fail\nif the resource is immutable.\n\nActivity[] getActivities()\n\nGet the activities this revision has been or is checked out in. Each\nactivity represents a parallel development stream.\n\nboolean hasActivity(String url)\n\n\nWorkingResource isA Resource\n------------------------------------------------\n\nResource[] getAncestors()\nActivity getActivity()\nRevisionHistory isA Element\n\nLineOfDescent\n\nConfiguration isA Activity -- a persistent Activity?\nRevision[] getMembers()\naddMember(Revision member)\nremoveMember(Revision member)\ncontainsMember(Revision revision)\nActivity[] differencesWith(Configuration configuration)\n\nReturns a collection of Activities containing revisions that are different\nin the source and  target configurations.\n\n\nWorkspace isA Resource\n--------------------------------------\nVersionSelectionRule getRevisionSelectionRule()\nsetRevisionSelectionRule(VersionSelectionRule selectionRule)\nActivity getCurrentActivity()\nsetCurrentActivity(Activity value)\nActivity createActivity(url)\n\nResource getResource(url)\n\nResolve a resource URL in the context of this workspace and return the\nresource. It may be an unversioned resource, a working revision, or a\nmutable or immutable revision.\n\nVersionedResource getVersionedResource(url)\n\nmergeActivity(Activity activity)\n\nMay want to leave this out as it will require interaction with a user and\nis therefore not applicable to a server.\n\nConflictReport getMergeConflicts(Activity activity)\n\nActivity isA Resource\n-------------------------------\nResoruce[] getMembers()\nboolean containsMember(Resource resource)\n\nWho lists activities in the repository?\nWho lists workspaces in the repository? (are there well-known collections\nthat contain these in the server?)\nWhere and what is the default activity (\"mainline\"?)\nWhere and what is the default workspace (has version selection rule is\n\"latest\", default activity is activity of ancestor or \"mainline\" if there\nis no ancestor?)\n     \n   \n\n", "id": "lists-005-10386112"}, {"subject": "A Two-Level Versioning Protocol Proposal", "content": "This draft is rather terse, but it lays out the terminology and much\nof the details of a comprehensive two level versioning protocol proposal.\n\nIn this document, I have tried to bring back some key elements of Jim\nWhitehead's original proposal (in particular, the vportal concept),\nand unify Chris Kaler's series of protocol proposals with the\ndocument-versioning requirements expressed by Bruce Cagan and my\nown experience with the design and implementation of a variety of\n\"high-end\" CM systems.\n\nJim Amsden and I will work this week to resolve any conflicts between\nthis proposal and his versioning model and goals documents.\n\nCheers,\nGeoff Clemm\n\n---------------------------------------------------------------------\n\n\nWebDAV Working Group                                            G. Clemm\nINTERNET-DRAFT                                         Rational Software\ndraft-clemm-webdav-versioning-00\n\nExpires July 26, 1999                                   January 26, 1999\n\n\n                    Versioning Extensions to WebDAV\n\n\nStatus of this Memo\n\n   This document is an Internet-Draft. Internet-Drafts are working\n   documents of the Internet Engineering Task Force (IETF), its areas,\n   and its working groups. Note that other groups may also distribute\n   working documents as Internet-Drafts.\n\n   Internet-Drafts are draft documents valid for a maximum of six months\n   and may be updated, replaced, or made obsolete by other documents at\n   any time. It is inappropriate to use Internet-Drafts as reference\n   material or to cite them other than as \"work in progress\".\n\n   To learn the current status of any Internet-Draft, please check the\n   \"1id-abstracts.txt\" listing contained in the Internet-Drafts Shadow\n   Directories on ftp.is.co.za (Africa), nic.nordu.net (Europe),\n   munnari.oz.au (Pacific Rim), ftp.ietf.org (US East Coast), or\n   ftp.isi.edu (US West Coast).\n\n   Distribution of this document is unlimited. Please send comments to\n   the Distributed Authoring and Versioning (WEBDAV) working group at\n   <w3c-dist-auth@w3.org>, which may be joined by sending a message with\n   subject \"subscribe\" to <w3c-dist-auth-request@w3.org>.\n\n   Discussions of the WEBDAV working group are archived at\n   <URL:http://www.w3.org/pub/WWW/Archives/Public/w3c-dist-auth>.\n\nAbstract\n\n   This document specifies a set of methods, headers, and content-types\n   composing the DAV Versioning extensions, an application of the\n   HTTP/1.1 protocol to version DAV resources.\n\n\n\n\n\n\n\n\n\n\ndraft-clemm-webdav-versioning-00                                [Page 1]\n\nINTERNET-DRAFT      Versioning Extensions to WebDAV     January 26, 1999\n\n\n1.  Introduction\n\n   In this proposal, WebDAV is extended with two classes of versioning\n   support: document-management and configuration-management.  To\n   maximize interoperability and maximize use of existing protocol\n   functionality, document-management is defined as a proper superset of\n   the WebDAV advanced-collection protocol, and configuration-management\n   is defined as a proper superset of the document-management protocol.\n\n1.1.  Versioning and Locking\n\n   These versioning protocols are designed so that WebDAV locking (class\n   2) support is completely optional.  A lock will have it's usual\n   semantics, but nothing in either of the versioning protocols depends\n   on the presence of locking support.\n\n2.  Document-Management Protocol\n\n   Document-management is the simpler versioning protocol designed to\n   support versioning of largely independent resources.  It allows you\n   to concurrently access and modify distinct mutable-revisions of a\n   resource.\n\n2.1.  Document-Management Resource Types\n\n   Document-management introduces the following additional resource\n   types:\n\n2.1.1.  Versionable-Resource\n\n   A versionable-resource is just a standard resource not yet put under\n   version control.  A null-resource is a versionable resource.\n\n2.1.2.  Versioned-Resource\n\n   A versioned-resource is a resource that collects and controls all the\n   revisions for a resource that has been put under version control.\n\n2.1.3.  Mutable-Revision\n\n   A mutable-revision is a resource that is associated with a\n   versioned-resource, and that can be in either a checked-out\n   (writeable) or checked-in (readonly) state.\n\n2.1.4.  VPortal\n\n   A vportal is a special kind of reference whose DAV:reftarget property\n   is the URL of a versioned-resource.  Reading and writing the body of\n\n\n\ndraft-clemm-webdav-versioning-00                                [Page 2]\n\nINTERNET-DRAFT      Versioning Extensions to WebDAV     January 26, 1999\n\n\n   a mutable-revision can only be done through a vportal.\n\n   When a PUT is successfully applied to a vportal, a server MAY make\n   that change visible at other vportals that select that same mutable-\n   revision.  When a CHECKIN is successfully applied to a vportal, the\n   state of the mutable-revision at that vportal MUST be made visible at\n   all other vportals that select that same mutable-revision.\n\n   This allows the server to cache the PUT information at the vportal,\n   and only force the update when the CHECKIN is performed.  A vportal\n   otherwise has all the properties and behavior of a normal reference.\n\n   [GMC: I would prefer to simplify the spec by requiring that the\n   change is NEVER visible at another vportal until the CHECKIN is\n   applied, but I was concerned that some would not find this\n   acceptable].\n\n2.2.  Document Management Properties\n\n   Document-management introduces the following additional properties:\n\n2.2.1.  Versioned-Resource Properties\n\n   Document-management introduces the following additional properties\n   for a versioned-resource:\n\n2.2.1.1.  DAV:mutable-revisions (readonly collection)\n\n   The DAV:mutable-revisions collection of a versioned-resource contains\n   all mutable-revisions of that versioned-resource, where the name of a\n   mutable-revision in the DAV:mutable-revisions collection is its\n   DAV:mutable-revision-id.  PROPFIND can then be used to gather\n   arbitrary information about the mutable-revisions.\n\n2.2.1.2.  DAV:mutable-revision-labels (writeable collection)\n\n   The DAV:mutable-revision-labels collection of a versioned-resource\n   contains references to members of the DAV:mutable-revisions\n   collection of that versioned-resource.  The client can add and delete\n   members of the DAV:mutable-revision-labels collection.  No member of\n   this collection can have the same name as a member of the\n   DAV:mutable-revisions collection.\n\n2.2.2.  Mutable-Revision Properties\n\n   Document-management introduces the following additional properties\n   for a mutable-revision:\n\n\n\n\ndraft-clemm-webdav-versioning-00                                [Page 3]\n\nINTERNET-DRAFT      Versioning Extensions to WebDAV     January 26, 1999\n\n\n2.2.2.1.  DAV:mutable-revision-id (readonly, immutable)\n\n   The DAV:mutable-revision-id is an identifier assigned to a mutable-\n   revision by the server.  At most one mutable-revision of a given\n   versioned-resource will have a particular identifier.\n\n2.2.2.2.  DAV:reservation (readonly, immutable)\n\n   When the DAV:reservation property of a mutable-revision is set, the\n   mutable-revision is in a checked-out writeable state.  If the\n   DAV:reservation is not set, the mutable-revision is in a checked-in\n   readonly state.\n\n2.2.2.3.  DAV:predecessor (readonly, immutable)\n\n   The DAV:predecessor property of a mutable-revision indicates the\n   mutable-revision that was selected by the vportal immediately prior\n   to the CHECKOUT-NEW request that created this mutable-revision.  The\n   DAV:predecessor property is null for the initial mutable-revision\n   created by a CONTROL request.\n\n2.2.2.4.  DAV:successors (readonly collection, mutable)\n\n   The DAV:successors collection of a mutable-revision contains\n   references to each mutable-revisions whose DAV:predecessor property\n   specifies this mutable-revision.\n\n2.2.2.5.  DAV:auto-check-in-out (writeable, immutable)\n\n   When the DAV:auto-check-in-out property of a mutable-revision is set,\n   an HTTP-1.1 PUT request to a vportal selecting this mutable-revision\n   is automatically preceded by an automatic CHECKOUT and followed by an\n   automatic CHECKIN.  This allows a downlevel client to modify a\n   version-controlled resource if it is not currently checked-out.\n\n2.2.3.  VPortal Properties\n\n   Document-management introduces the following additional properties\n   for a vportal:\n\n2.2.3.1.  DAV:mutable-revision-name (writeable)\n\n   The DAV:mutable-revision-name property of a vportal contains the name\n   of a member of either the DAV:mutable-revisions or DAV:mutable-\n   revision-labels collections of the versioned-resource referenced by\n   that vportal.  This is the mutable-revision that this vportal will\n   select unless an explicit Mutable-Revision-Name header is specified.\n\n\n\n\ndraft-clemm-webdav-versioning-00                                [Page 4]\n\nINTERNET-DRAFT      Versioning Extensions to WebDAV     January 26, 1999\n\n\n2.3.  Document-Management Methods\n\n   Document-management introduces the following additional methods:\n\n2.3.1.  CONTROL\n\n   A CONTROL request can be applied to a versionable-resource.  When a\n   CONTROL request is applied to a versionable-resource, a new\n   versioned-resource is created (at a server-assigned URL), an initial\n   checked-out mutable-revision for that versioned-resource is created\n   (again, at a server-assigned URL), the versionable resource is copied\n   to the new mutable-revision, and then the versionable-resource is\n   replaced with a vportal that refers to the new versioned-resource and\n   whose DAV:mutable-revision-name property is set to be the name of the\n   initial mutable-revision.  When the versionable-resource is a null-\n   resource, the body of the initial-revision is empty.\n\n   A CONTROL request replaces the original versionable-resource with a\n   vportal to ensure that the entire versioned-resource is not deleted\n   when a DELETE or MOVE is applied to the original URL of the\n   versionable-resource.  This ensures that other vportals to that\n   versioned-resource (for example, ones that select different mutable-\n   revisions) continue to be valid, and that even when all vportals to\n   that versioned-resource have been deleted, the versioned-resource and\n   its revisions are retained for historical access.  If the client\n   really wants to delete that versioned-resource and all its mutable-\n   revisions, DELETE can be applied to the URL of the versioned-resource\n   itself.\n\n2.3.2.  MKVPORTAL\n\n   A MKVPORTAL request is used by the client to create a new vportal to\n   an existing versioned-resource.  A client can modify the\n   DAV:mutable-revision-name property of the vportal to cause it to\n   select a different mutable-revision of that versioned-resource.\n   [GMC: MKVPORTAL could just be an optional header to CONTROL, if we\n   wanted to minimize the number of new methods.]\n\n2.3.3.  CHECKIN\n\n   When a CHECKIN request is applied to a vportal, the mutable-revision\n   selected by that vportal is made readonly if it is currently\n   checked-out.  A CHECKIN request will fail if the mutable-revision is\n   already checked-in.\n\n2.3.4.  CHECKOUT\n\n   When a CHECKOUT request is applied to a vportal, the mutable-revision\n\n\n\ndraft-clemm-webdav-versioning-00                                [Page 5]\n\nINTERNET-DRAFT      Versioning Extensions to WebDAV     January 26, 1999\n\n\n   selected by that vportal is made writeable if it is currently\n   checked-in.  A CHECKOUT request will fail if the mutable-revision is\n   already checked-out.\n\n2.3.5.  CHECKOUT-NEW\n\n   When a CHECKOUT-NEW request is applied to a vportal, rather than\n   checking out the mutable-revision selected by that vportal, a new\n   mutable-revision for that versioned-resource is created, and the\n   DAV:mutable-revision-name property of the vportal is modified to\n   contain the name of the new mutable-revision.  The new mutable-\n   revision is created in a checked-out state and is therefore writeable\n   until it is subsequently checked-in.\n\n   The creation of a new mutable-revision of a versioned-resource has no\n   effect on vportals that select other mutable-revisions of that\n   versioned-resource.  Similarly, the checked-in or checked-out state\n   of one mutable-revision is independent of the checked-in or checked-\n   out state of any other mutable-revision.\n\n2.4.  Document-Management Headers\n\n   Document management introduces the following additional headers:\n\n2.4.1.  Mutable-Revision-Name\n\n   The Mutable-Revision-Name header is used to override the name\n   specified in the DAV:mutable-revision-name property of a vportal.\n\n3.  Configuration-Management Protocol\n\n   Configuration management is a more comprehensive versioning protocol,\n   designed to support consistent versioning of sets of related\n   resources being modified in parallel by many authors at different\n   sites.  The set of resources will commonly be a subtree of the URL\n   space at a web site, an entire web site, or a set of subtrees at\n   several web sites.  The resources are related by the use of both\n   relative and absolute URL references.  To provide a stable\n   environment for authoring and change control, controlled sharing\n   between distinct workspaces is supported, in addition to the\n   branching and merging support required for reliable parallel\n   authoring.  In order to maintain the validity of inter-resource\n   references, versioning the URL namespace (via versioned collections)\n   is as important as versioning the individual documents.\n\n3.1.  Configuration-Management Resource Types\n\n   Configuration-management introduces the following additional resource\n\n\n\ndraft-clemm-webdav-versioning-00                                [Page 6]\n\nINTERNET-DRAFT      Versioning Extensions to WebDAV     January 26, 1999\n\n\n   types:\n\n3.1.1.  Working-Resource\n\n   A working-resource of a versioned-resource is a writeable resource\n   that is created by CHECKOUT or CONTROL.  On a configuration-\n   management server, a checked-out mutable-revision of a versioned-\n   resource is just a reference to a working-resource of that\n   versioned-resource.\n\n3.1.2.  Immutable-Revision\n\n   An immutable-revision of a versioned-resource is a resource created\n   by applying a CHECKIN request to a working-resource.  The body and\n   immutable properties of an immutable-revision cannot be modified.  On\n   a configuration-management server, a checked-in mutable-revision of a\n   versioned-resource will always be a reference to an immutable-\n   revision of that versioned-resource, and the \"CHECKIN history\" of a\n   mutable-revision is captured by a sequence of immutable-revisions.\n\n3.1.3.  Versioned-Collection\n\n   A versioned-collection is a collection that has been placed under\n   version-control.  Versioned-collections are an essential component of\n   configuration-management, because they provide the mechanism for\n   controlling the URL namespace of a set of related resources.  A\n   collection can be placed under version control only if every member\n   of that collections is also under version control, therefore every\n   member of a revision of a versioned-collection is either a vportal or\n   a reference to a vportal.\n\n3.1.4.  Configuration\n\n   A configuration of a versioned-collection provides an immutable\n   snapshot of a URL tree of resources rooted at that versioned-\n   collection.  To be precise, a configuration of a versioned-collection\n   selects an immutable-revision of that versioned-collection, and\n   selects an immutable-revision of every immediate member of any\n   versioned-collection revision in the configuration.  Therefore, a\n   configuration of the root collection of a web site specifies a\n   specific state of the web-site as a whole.\n\n3.1.5.  Activity\n\n   An activity is a resource that represents a single logical change\n   that may involve modifications to several versioned-resources.  The\n   activity collects all immutable-revisions that are created in the\n   process of performing that logical change.  An activity is like a\n\n\n\ndraft-clemm-webdav-versioning-00                                [Page 7]\n\nINTERNET-DRAFT      Versioning Extensions to WebDAV     January 26, 1999\n\n\n   mutable-revision label, in that it allows you to give a meaningful\n   name to a particular line of descent, but instead of naming a line of\n   descent in just a single versioned-resource, an activity names\n   related lines of descent in a set of versioned-resources.\n\n3.1.6.  Workspace\n\n   Finally, a workspace is a resource that describes how version\n   selection is to be done across an entire web site.  When a\n   versioned-resource is checked out, it is always checked out into a\n   specific workspace.  Thus a workspace serves the same purpose for a\n   web site as a whole, as a single working-resource does for a single\n   versioned-resource.  The root collection of a web site has a property\n   indicating the default workspace for that web site.  A Workspace\n   header can be used to select a non-default workspace for a request.\n   In addition, a workspace can be specified as the DAV:workspace\n   property of a vportal to make that the default workspace of the\n   vportal.\n\n3.2.  Configuration-Management Properties\n\n   Configuration-management introduces the following additional\n   properties:\n\n3.2.1.  Root-Collection Properties\n\n   Configuration-management introduces the following additional\n   properties for the root collection of a Web site:\n\n3.2.1.1.  DAV:default-workspace (readonly)\n\n   The DAV:default-workspace property specifies which workspace will be\n   used for a request that does contain an explicit Version-Control\n   header.  If a vportal has no explicit DAV:workspace property, the\n   default workspace of the web site will be used.\n\n3.2.1.2.  DAV:activities (writeable collection)\n\n   The DAV:activities collection of the root collection of a Web site\n   contains the activities created at that Web site.\n\n3.2.1.3.  DAV:workspaces (writeable collection)\n\n   The DAV:workspaces collection of the root collection of a Web site\n   contains the workspaces created at that Web site.\n\n\n\n\n\n\ndraft-clemm-webdav-versioning-00                                [Page 8]\n\nINTERNET-DRAFT      Versioning Extensions to WebDAV     January 26, 1999\n\n\n3.2.2.  Versioned-Resource Properties\n\n   Configuration-management introduces the following additional\n   properties for a versioned-resource:\n\n3.2.2.1.  DAV:immutable-revisions (readonly collection)\n\n   The DAV:immutable-revisions collection of a versioned-resource\n   contains all the immutable-revisions of that versioned-resource.  The\n   name of an immutable-revision in this collection is assigned by the\n   server.\n\n3.2.2.2.  DAV:working-resources (readonly collection)\n\n   The DAV:working-resources collection of a versioned-resource contains\n   all working-resources of that versioned-resource.\n\n3.2.3.  Immutable-Revision Properties\n\n   Configuration-management introduces the following additional\n   properties for an immutable-revision:\n\n3.2.3.1.  DAV:immutable-revision-id (readonly, immutable)\n\n   The DAV:immutable-revision-id is an identifier assigned to an\n   immutable-revision by the server.  At most one immutable-revision of\n   a given versioned-resource will have a particular immutable-revision\n   identifier.\n\n3.2.3.2.  DAV:immutable-predecessor (readonly, immutable)\n\n   The DAV:immutable-predecessor is the immutable-revision that was\n   checked-out to produce a working resource that was checked-in to\n   produce this immutable-revision.\n\n3.2.3.3.  DAV:immutable-successors (readonly collection, mutable)\n\n   The DAV:immutable-successors collection of an immutable-revision\n   contains a reference to each immutable-revision whose DAV:predecessor\n   is that immutable-revision.\n\n3.2.3.4.  DAV:merge-predecessors (writeable collection, mutable)\n\n   The DAV:merge-predecessors collection of an immutable-revision\n   contains references to the other immutable-revisions whose contents\n   were explicitly merged by the client into that immutable-revision.\n   The client is free to add or delete members to this collection in\n   order to more accurately reflect the contents of that immutable-\n\n\n\ndraft-clemm-webdav-versioning-00                                [Page 9]\n\nINTERNET-DRAFT      Versioning Extensions to WebDAV     January 26, 1999\n\n\n   revision.\n\n3.2.3.5.  DAV:merge-successors (writeable collection, mutable)\n\n   The DAV:merge-successors collection of an immutable-revision contains\n   a reference to each immutable-revision whose DAV:merge-predecessors\n   collection contains a reference to that immutable-revision.\n\n3.2.3.6.  DAV:reservation (readonly, mutable)\n\n   The DAV:reservation property of an immutable-revision contains the\n   URL of a working-resource.  When an immutable-revision is checked-\n   out, the DAV:reservation property is set to be the working-resource\n   resulting from the checkout.  When a working-resource is checked-in,\n   the DAV:reservation of the DAV:immutable-predecessor of the working-\n   resource is removed.\n\n3.2.4.  Working-Resource Properties\n\n   Configuration-management introduces the following additional\n   properties for a working-resource:\n\n3.2.4.1.  DAV:immutable-predecessor (readonly)\n\n   The DAV:immutable-predecessor of a working-resource is the\n   immutable-revision that was checked-out to produce that working-\n   resource.\n\n3.2.4.2.  DAV:merge-predecessors (writeable collection)\n\n   The DAV:merge-predecessors collection of a working-resource contains\n   references to the immutable-revisions whose contents were explicitly\n   merged by the client into that working-resource.  The client is free\n   to add or delete members to this collection in order to more\n   accurately reflect the contents of that working-resource.\n\n3.2.4.3.  DAV:workspace (readonly)\n\n   The DAV:workspace property of a working-resource contains the URL of\n   the current workspace when the working-resource was created by a\n   checkout request.\n\n3.2.4.4.  DAV:activity (readonly)\n\n   The DAV:activity property contains the DAV:activity value of the\n   workspace into which the working-resource was checked out.\n\n\n\n\n\ndraft-clemm-webdav-versioning-00                               [Page 10]\n\nINTERNET-DRAFT      Versioning Extensions to WebDAV     January 26, 1999\n\n\n3.2.5.  Workspace Properties\n\n   Configuration-management introduces the following additional\n   properties for a workspace:\n\n3.2.5.1.  DAV:revision-selection-rule (writeable)\n\n   The DAV:revision-selection-rule of a workspace contains an XML\n   document that describes how immutable-revision selection will be\n   performed in that workspace.  There will be standard elements for\n   specifying common selection mechanisms such as by activity or by\n   label, but additional revision-selection-rule elements may be\n   supported by a WebDAV server.\n\n3.2.5.2.  DAV:merge-selection-rule (writeable)\n\n   The DAV:merge-selection-rule of a workspace contains an XML document\n   that describes what immutable-revisions should be merged into that\n   workspace.  The affect of the merge can be determined by a GET-\n   CONFLICTS request to the workspace, and the merge itself can be\n   performed by an UPDATE request.  There will be standard elements for\n   specifying common merge selection mechanisms such as by activity or\n   by configuration, but additional merge-selection-rule elements may be\n   supported by a WebDAV server.\n\n3.2.5.3.  DAV:auto-descendent-merge (writeable)\n\n   When the DAV:auto-descendent-merge property of a workspace is set,\n   and the merge-from immutable-revision (selected by the merge-\n   selection-rule) is a descendent of the merge-to immutable-revision\n   (selected by the revision-selection rule), the server performs the\n   merge automatically when the workspace receives an UPDATE request.\n   In particular, it checks out the merge-to immutable-revision, copies\n   the merge-from immutable-revision to the new working-resource, adds\n   the merge-from immutable-revision to the DAV:merge-predecessors of\n   the working-resource, and checks in the working-resource.\n\n3.2.5.4.  DAV:activity (writeable)\n\n   The DAV:activity property of a workspace contains the activity that\n   captures the work currently being peformed in that workspace.  The\n   immutable-revisions selected by that activity take priority over the\n   immutable-revisions selected by the revision-selection-rule.  The\n   working-resources checked-out into a workspace take priority over\n   immutable-revisions selected by either the revision-selection-rule or\n   by the workspace activity.  Thus the version selection algorithm for\n   a workspace is \"checked-out to that workspace\" else \"a product of the\n   workpace activity\" else \"selected by the workspace revision-selection\n\n\n\ndraft-clemm-webdav-versioning-00                               [Page 11]\n\nINTERNET-DRAFT      Versioning Extensions to WebDAV     January 26, 1999\n\n\n   rule\".\n\n3.2.5.5.  DAV:dynamic (writeable)\n\n   The DAV:dynamic property indicates whether version selection for a\n   workspace is computed dynamically, or whether it is computed only\n   following an explicit UPDATE request on that workspace.\n\n3.2.5.6.  DAV:client-workspace (writeable)\n\n   The DAV:client-workspace property indicates whether the working-\n   resources for the workspace should be stored on the server or on the\n   client.  If it is on the client, the DAV:client-workspace property\n   contains a string that indicates \"where\" on the client the root-\n   collection of the workspace can be found.  This string MAY take the\n   form of a URL.\n\n3.2.5.7.  DAV:client-updates (readonly)\n\n   The DAV:client-updates property contains an XML document that lists\n   the immutable-revisions that were selected by the workspace when the\n   most recent UPDATE on that workspace was performed, but that were not\n   selected by the workspace when the UPDATE immediately preceding that\n   UPDATE had been performed.  This list can be used by the client to\n   efficiently maintain a client snapshot of that workspace.  The\n   DAV:client-updates property exists only when the DAV:client-workspace\n   property is set.\n\n3.2.6.  Activity Properties\n\n   Configuration-management introduces the following additional\n   properties for an activity:\n\n3.2.6.1.  DAV:immutable-revisions (readonly collection)\n\n   The DAV:immutable-revisions collection of an activity contains\n   references to all immutable-revisions (in any versioned-resource)\n   whose DAV:activity property contains this activity.\n\n3.2.6.2.  DAV:branch-policy (writeable):\n\n   The DAV:branch-policy contains an XML document that is used by\n   branch-based configuration-management servers to guide the placement\n   of immutable-revisions on branches.  Some of the pre-defined values\n   XML elements that can appear in this document are:  DAV:branch-on-\n   first-checkout, DAV:merge-on-checkin, and DAV:allow-branch-on-\n   checkin.\n\n\n\n\ndraft-clemm-webdav-versioning-00                               [Page 12]\n\nINTERNET-DRAFT      Versioning Extensions to WebDAV     January 26, 1999\n\n\n3.2.6.3.  DAV:workspace (writeable)\n\n   The DAV:workspace property of an activity indicates the workspace\n   which is currently working on that activity (and therefore has the\n   right to extend the DAV:immutable-revisions collection of that\n   activity).  If any working-resource has its DAV:activity set to a\n   given activity, the DAV:workspace of that activity can only be set to\n   be the value of the DAV:workspace property of that working-resource.\n\n3.2.7.  Versioned-Collection Properties\n\n   Configuration-management introduces the following additional\n   properties for a versioned-collection:\n\n3.2.7.1.  DAV:configurations (readonly)\n\n   The DAV:configurations of a versioned-collection is a versioned-\n   resource, each of whose immutable-revisions is a configuration.  New\n   immutable-revisions of a DAV:configurations versioned-resource are\n   created by a MAKE-CONFIGURATION request (not by CHECKOUT/CHECKIN).\n\n3.2.8.  Collection Properties\n\n   Configuration-management introduces the following additional\n   properties for a collection immutable-revision or a collection\n   working-resource:\n\n3.2.8.1.  DAV:is-sub-configuration (writeable, immutable)\n\n   In order to increase the efficiency of the creation of a new\n   configuration for a versioned-collection, a new configuration can be\n   composed from sub-configurations, i.e. configurations of versioned-\n   collections that are members of that versioned-collection.  The\n   DAV:is-sub-configuration property tells the server whether to select\n   (or create, if necessary) a sub-configuration for this versioned-\n   collection.\n\n3.3.  Configuration-Management Headers\n\n   Configuration-management introduces the following additional headers:\n\n3.3.1.  Workspace\n\n   The Workspace header specifies the workspace whose version selection\n   rules should be used when dereferencing a reference to a versioned-\n   resource.  If no Workspace header is specified, the workspace\n   specified by the DAV:default-workspace property of the root\n   collection is used.\n\n\n\ndraft-clemm-webdav-versioning-00                               [Page 13]\n\nINTERNET-DRAFT      Versioning Extensions to WebDAV     January 26, 1999\n\n\n3.4.  Configuration-Management Effect on Existing Methods\n\n   When invoked on a configuration-management server, the following\n   methods will display additional behavior.\n\n3.4.1.  CONTROL\n\n   A CONTROL request creates a new immutable-revision with an empty\n   body, and creates a new working-resource which is a copy of the\n   versionable-resource being put under version-control.  The initial\n   mutable-revision is a reference to this working-resource.\n\n3.4.2.  CHECKIN\n\n   When a CHECKIN request is applied to a vportal that selects a\n   working-resource, it creates a new immutable-revision that is a copy\n   of the working-resource (including its properties), updates the\n   DAV:immutable-successors collection of the predecessor to contain\n   this new immutable-revision, removes the DAV:reservation property of\n   the predecessor, and deletes the working-resource.  The mutable-\n   revision reference is changed to refer to this immutable-revision.  A\n   CHECKIN request fails if it is applied to a vportal that selects an\n   immutable-revision, or if a new immutable-revision cannot be created\n   as a descendent of the DAV:immutable-predecessor of the working-\n   resource.\n\n3.4.3.  CHECKOUT\n\n   When a CHECKOUT request is applied to a vportal that selects an\n   immutable-revision, it creates a new working-resource that is a copy\n   of the immutable-revision.  The DAV:workspace property of the\n   working-resource is set to be the current workspace, and the\n   DAV:activity property of the working-resource is set to be the\n   DAV:activity of the current workspace.  The CHECKOUT request fails if\n   the workspace DAV:activity is not set.\n\n3.4.4.  CHECKOUT-NEW\n\n   A CHECKOUT-NEW request acts like a CHECKOUT request, except that it\n   first creates a new activity, and sets the DAV:activity of the\n   current workspace to be that activity.  A server may reject a\n   CHECKOUT-NEW request if the workspace DAV:activity property is\n   already set.\n\n3.5.  Configuration-Management Methods\n\n\n\n\n\n\ndraft-clemm-webdav-versioning-00                               [Page 14]\n\nINTERNET-DRAFT      Versioning Extensions to WebDAV     January 26, 1999\n\n\n3.5.1.  Activity and Workspace Creation Methods\n\n   Activity and workspace resources can only be created as members of\n   the DAV:activities and DAV:workspaces collections.  [GMC: We could\n   have a special MKACTIVITY and MKWORKSPACE methods, or we could just\n   allow PUT to create them, with the body of the PUT being an XML\n   document describing how the resource is to be initialized.  I\n   personally find the PUT method cleaner and more extensible because\n   you don't need to add a new method to the protocol to handle a new\n   resource type.  There does seems to be some preference in the mailing\n   group for separate object creation methods, and the use of headers to\n   provide initial values.  I'll defer these details for now.]\n\n3.5.2.  UNCHECKOUT\n\n   When applied to a vportal that selects a working-resource, an\n   UNCHECKOUT request deletes the working-resource and the\n   DAV:reservation property of the predecessor of the working-resource.\n   The mutable-revision is changed to refer to the predecessor of the\n   working-resource.\n\n3.5.3.  GET-CONFLICTS\n\n   When a GET-CONFLICTS request is invoked on a workspace, the body of\n   the GET-CONFLICTS response contains an XML document that describes\n   what versioned-resources are in conflict (commonly, a merge\n   conflict), as well as information about how to resolve the conflict\n   (such as the merge contributors and the merge base).  Merge conflicts\n   are determined by the server by comparing the revisions selected by\n   the workspace DAV:merge-selection-rule against the revisions selected\n   by the DAV:revision-selection-rule at the time of the last UPDATE\n   request (or the current time, if DAV:dynamic-selection is set).\n\n3.5.4.  MAKE-CONFIGURATION\n\n   When a MAKE-CONFIGURATION request is invoked on a versioned-\n   collection, a new configuration is created that contains the\n   revisions currently selected by the workspace for that versioned-\n   collection and all its members.\n\n3.5.5.  Security Considerations\n\n   TBD\n\n3.5.6.  Internationalization Considerations\n\n   TBD\n\n\n\n\ndraft-clemm-webdav-versioning-00                               [Page 15]\n\nINTERNET-DRAFT      Versioning Extensions to WebDAV     January 26, 1999\n\n\n3.5.7.  IANA Considerations\n\n   TBD\n\n3.5.8.  XML Element Definitions\n\n   TBD\n\n3.5.9.  References\n\n   TBD\n\nAuthor's Note:\n\n   A separate document will contain the goals and requirements for these\n   protocols.  A separate document will contain use cases and examples\n   of these protocols.\n\nAuthor's  Address:\n\n   Geoffrey M. Clemm\n   Rational Software\n   Lexington, MA\n   geoffrey.clemm@rational.com\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ndraft-clemm-webdav-versioning-00                               [Page 16]\n     \n   \n\n", "id": "lists-005-10396527"}, {"subject": "Re: A Two-Level Versioning Protocol Proposal", "content": "> This draft is rather terse, but it lays out the terminology and much\n> of the details of a comprehensive two level versioning protocol proposal.\n\nI've placed this document on the WebDAV Web site at:\n\nhttp://www.ics.uci.edu/pub/ietf/webdav/versioning/draft-clemm-webdav-version\ning-00.txt\n\n- Jim\n     \n   \n\n", "id": "lists-005-10433445"}, {"subject": "Discussion Topic: Simple Version Selection and Checkout", "content": "If you are a \"document management system\" vendor or user,\nyour participation in this discussion would be especially appreciated.\n\nJim Amsden and I worked today on resolving the differences between the\nversioning models that he and I have proposed.  We were able to work\nthrough most of the issues in the full \"configuration management\"\nversioning models, but we got stuck on one key aspect of the simpler\n\"document management\" subset of the versioning model.\n\nIn particular, Jim proposed a model that was more consistent with the\nconfiguration management model, while I proposed a model that I felt\nwas closer to current document management systems.  Since Jim's\nproposal produces a simpler and more consistent protocol, I'd prefer\nto use his model, but I need to confirm that it is one that is\nacceptable to document management system vendors and users.\n\nThe key questions are:\n- How does a user request that a specific revision of a versioned-resource\n  appear at a specific URL?\n- What revisions can be \"checked-out\" for modification?\n\nThe answers in our configuration management versioning model are simple:\n- The user can associate versioned-resources with URL's in a \"workspace\",\n  and then specifies a \"revision-selection-rule\" for that workspace\n  (i.e. pick all revisions labeled \"LATEST\")\n- The user can check-out any revision that appears in a workspace.\n\nJim's proposal is that we answer these questions the same way in the\ndocument management versioning model.\n\nThis has three key effects on the document-management versioning model:\n\n(1) The concept of a \"workspace\" is introduced at the document-management\nversioning level.\n\n(2) The version-selection rule is a property of the workspace, so if that\nrule says to do something special for URL-1 (e.g. \"for URL-1, pick the\nrevision with id R1.3.5\"), and you MOVE URL-1 to URL-2, you need to\nupdate the version-selection-rule to do this special thing to URL-2\ninstead of URL-1.  In configuration management, this is not a problem\nbecause version selection is almost always done with a floating label\nor \"branch/LATEST\", rather than a bunch of special cases for individual\nresources.  Is it a problem for document-management?\n\n(3) Although you can access an arbitrary revision (since every revision\nhas a URL), only a revision exposed in a workspace can be modified.\nThis seems like a pretty reasonable constraint to me, but I wanted to\nmake sure that wasn't just my configuration management background\ncoming through.\n\nIf these effects are acceptable, then I'm totally in favor of Jim's\nproposal in this area.  So document mangement folks, what say you?\nYea or Nay?\n\nCheers,\nGeoff\n     \n   \n\n", "id": "lists-005-10436692"}, {"subject": "Re: Discussion Topic: Simple Version Selection and Checkout", "content": "---------------------- Forwarded by Jim Amsden/Raleigh/IBM on 01/29/99\n10:35 AM ---------------------------\n\n\nJim Amsden\n01/29/99 10:13 AM\n\nTo:   \"Geoffrey M. Clemm\" <gclemm@tantalum.atria.com>\ncc:\nSubject:  Re: Discussion Topic: Simple Version Selection and Checkout\n      (Document link not converted)\n\nSome brief clarifications. Here's Geoff's results of using CM style URL\nresolution for DMS systems:\n\n(1) The concept of a \"workspace\" is introduced at the document-management\nversioning level.\n\n(2) The version-selection rule is a property of the workspace, so if that\nrule says to do something special for URL-1 (e.g. \"for URL-1, pick the\nrevision with id R1.3.5\"), and you MOVE URL-1 to URL-2, you need to\nupdate the version-selection-rule to do this special thing to URL-2\ninstead of URL-1.  In configuration management, this is not a problem\nbecause version selection is almost always done with a floating label\nor \"branch/LATEST\", rather than a bunch of special cases for individual\nresources.  Is it a problem for document-management?\n\n(3) Although you can access an arbitrary revision (since every revision\nhas a URL), only a revision exposed in a workspace can be modified.\nThis seems like a pretty reasonable constraint to me, but I wanted to\nmake sure that wasn't just my configuration management background\ncoming through.\n\nFirst, once multiple versions are introduced, there must be some way for\nusers to refer to a particular revision of a resource. We introduced labels\nto provide human meaningful names for particular revisions, and\nconfigurations for refering to sets of particular revisions. But, we need\nsome way of using these labels and configurations to access the revision\nthey name. We also need a deterministic, controlled way of resolving\nreferences to versioned resources that don't specify a particular label.\nWe've explored a number of approaches, none of which were without issues.\n\n1. Munge the URL and include the label for the revision. For example,\nhttp://host:8080/myprojects/index.html;r1.0.9. This was not considered\nacceptable because it is not permissible to munge URLs, and labels would\nhave to be provided for each collection in the path, not just the leaf\nresource.  Another problem is relative URLs would also have to contain\nrevision labels to get the right revision.\n\nNote that HTTP/1.1 does allow ; in a URL, and the text following could be\nused as a version label without violating any HTTP/1.1 rules. So this may\nnot be URL munging at all. Note also that index.html;r1.0.9 referes to a\nspecific revision of versioned resource index.html, no matter what versions\nof collection myprojects it may be in. So unless index.html has been\nremoved from some version of myprojects, it's not really necessary to\nspecify a version of the collection in order to reference a version of one\nof its members.\n\n2. Require users to use an redirect URL generated by the server when the\nrevision is created. This allows standard URLs to be used to access\nrevisions of versioned resources, but the URLs would likely have little\nresemblence to the URL of the versioned resource, and would probably not be\nmeaningful to human users.\n\n4. Put the revision label in as a header for each resource, and provide\nsome default if the revision is not specified. The default could be some\nfunctor like \"latest\". This works well for a single resource, but it\ndoesn't scale for collections, or a large number of resources as the client\nhas to keep too much revision information. You would need to use a revision\npath in the header, not just a revision in order to provide revisions for\nparent collections. The header would have to include labels, activities,\nconfigurations, and various functors to provide flexible URL mapping. This\nwould be a complicated header that would have to be retained by the\nclients, and set for each request. The server would be unaware of any\nversioning context it might be able to cache between requests.\n\n5. Use the primary rule of patterns: factor out the thing that changes into\na separate object and delegate. This is the workspace approach. We leave\nresource URL's alone, they are the same for all revisions. The URL of a\nversioned resource and all its revisions is the same as the URL of the\nresource before it was versioned. This requires no changes to existing\nWebDAV clients, and supports back-level clients on versioning servers.\nInstead of worrying about the particular revision of each resource\nrequested, the client creates a workspace which contains a revision\nselection rule that is reused for each request in the context of that\nworkspace. The semantics of the revision selection rule are well defined,\nsupport parallel development and configurations, and are supported by the\nserver. The client just sends a workspace URL in a header with each\nrequest, and it is used to resolve URLs to specific revisions. There would\nbe a default workspace whose revision selection rule contained only\n\"latest\" that is used if the header is not specified. Workspaces are\nresources that clients can develop editors to examine and set.\n\nThis works for back-level clients, DMS clients, and CM clients in a uniform\nway, is consistent with relative URLs, and is reasonably simple. It allows\nchecked out revisions, revisions in the current activity, revisions with\nspecific labels, in a specific activity, being merged in the current\nactivity, belonging to a configuration, latest, etc. to be accessed using a\nsingle mechanism. The downside is that DMS client applications will have to\nset the workspace. This shouldn't be too bad though because DMS systems\nwon't likely have multiple activities for parallel development and don't\nsupport configurations. It is likely the default workspace with checked out\nand latest in its revision selection rule will be adequate for most uses.\n\nFor Geoff's item 2), I don't think moving URL-1 to URL-2 would require any\nchanges to the revision selection rule in the workspace. Assume the\nrevision selection rule contains label R1.3.5, and URL-1 has a revision\nwith that label. When URL-1 is copied or moved to URL-2, the labels go with\nthe revisions. So a reference to URL-2 in the workspace would resolve to\nthe corret revision.\n\nItem 3) should also not be a problem. The workspace revision selection rule\ncan include functor \"latest\" which applies to all resources. So the\nworkspace would resolve all URLs to some revision, one that could be\nchecked out and modified. On checkin, the new revision would be visible to\nanyone using this workspace. In general, putting \"latest\" in a revision\nselection rule should be avoided, and if it is included, it must be the\nlast entry. This is because the user has not been specific about what\nrevisions his workspace should expose, and latest is a \"floating label\"\nthat moves with each new revision. This makes the workspace potentially\nunstable and may expose incompatible revisions. WebDAV must support latest\nthough, and it is the only acceptable default.\n\nWell, I guess it wasn't so brief after all. This is hard stuff, but I think\nwe're getting there. I'm keen to be sure that DMS systems are as consistent\nwith CM systems as possible while providing the additional flexibility for\nmutable revisions. This will allow these systems to co-exist, and for DMS\nclient applications to incrementally include CM capabilities over time\nwithout changing existing semantics.\n     \n   \n\n", "id": "lists-005-10442175"}, {"subject": "Re: Discussion Topic: Simple Version Selection and Checkout", "content": ">because version selection is almost always done with a floating label\n>or \"branch/LATEST\", rather than a bunch of special cases for individual\n>resources.  Is it a problem for document-management?\n\n\nI cannot speak for document management systems, but for collaboration\noriented systems, the assumption that selection is done only with labels (am\nI right in understanding what you are saying?) seems too heavy weight.\n\nJust to clarify, I don't have a problem with the notion of a workspace.\nHowever, I have a problem with selection based on labels only. Why can't a\nuser access and include an arbitrary revision in a workspace?\n\nAm I missing something?\n\nSankar\n     \n   \n\n", "id": "lists-005-10453082"}, {"subject": "Re: Discussion Topic: Simple Version Selection and Checkout", "content": "Note: I continue to favor Jim's proposal to specify DM versioning via\na simplified workspace mechanism, but I would modify some of the details\nhe introduces below.\n\n   From: jamsden@us.ibm.com\n\n      From: gclemm@rational.com\n\n      (1) The concept of a \"workspace\" is introduced at the document-management\n      versioning level.\n\n      (2) The version-selection rule is a property of the workspace, so if that\n      rule says to do something special for URL-1 (e.g. \"for URL-1, pick the\n      revision with id R1.3.5\"), and you MOVE URL-1 to URL-2, you need to\n      update the version-selection-rule to do this special thing to URL-2\n      instead of URL-1. ...\n\n      (3) Although you can access an arbitrary revision (since every revision\n      has a URL), only a revision exposed in a workspace can be modified. ...\n\n   ... once multiple versions are introduced, there must be some way for\n   users to refer to a particular revision of a resource. ...\n\n   1. Munge the URL and include the label for the revision. ...\n\nAlso, whether it is URL munging or not, it makes all inter-resource references\ntotally brittle (i.e. all documents containing references would have to\nbe modified whenever you created a new revision of a document they refer\nto) so we can discard this approach out-of-hand.\n\n   2. Require users to use an redirect URL generated by the server when the\n   revision is created. This allows standard URLs to be used to access\n   revisions of versioned resources, but the URLs would likely have little\n   resemblence to the URL of the versioned resource, and would probably not be\n   meaningful to human users.\n\nAlso same problem as choice 1.\n\n(Jim: You seem to have skipped choice 3. :-)\n\n   4. Put the revision label in as a header for each resource, and provide\n   some default if the revision is not specified. The default could be some\n   functor like \"latest\". This works well for a single resource, but it\n   doesn't scale for collections, or a large number of resources as the client\n   has to keep too much revision information. You would need to use a revision\n   path in the header, not just a revision in order to provide revisions for\n   parent collections. The header would have to include labels, activities,\n   configurations, and various functors to provide flexible URL mapping. This\n   would be a complicated header that would have to be retained by the\n   clients, and set for each request. The server would be unaware of any\n   versioning context it might be able to cache between requests.\n\nAlso, since clients would need to save these revision mappings for\nuse in a future session, and share these version maps with other clients,\nnot defining a standard way to store and share this revision selection\ninformation would pretty much eliminate any significant interoperability.\n\n   5. Use the primary rule of patterns: factor out the thing that changes into\n   a separate object and delegate. This is the workspace approach.\n\nYes.\n\n   We leave\n   resource URL's alone, they are the same for all revisions. The URL of a\n   versioned resource and all its revisions is the same as the URL of the\n   resource before it was versioned.\n\nHere I must partially disagree.\n\nI agree that the original URL (of the resource before it was put under\nversion control) should be usable to select any of the revisions of\nthat resource (based on the workspace revision-selection-rule).\nI also agree that this is the URL that you must use to modify the\nbody of a revision.\n\nBut I strongly disagree that the versioned-resource and all the\nrevisions should (or even could!) have the same URL (as each other, or\nas the original URL).  The versioned resource must have its own\n(server allocated) URL, because when you make it visible in several\nplaces in the URL space (which is a common requirement of document\nmanagement systems), you don't want the versioned resource to disappear\neverywhere just because you have applied a \"delete\" to the original\nURL.  You could play some games about the \"real\" versioned-resource\nmoving around to one of the other URL's, and then automatically\nupdating all the other URL's that refer to it, but that's just a good\nway to tie yourself into knots (and step smack in the middle of the\n\"strong references\" minefield).\n\nIn addition, given the desire for maintaining \"history\", you want a\na URL that can get you to the versioned resource, even after all current\nreferences to it have been deleted, and having the server generate\na URL for the versioned-resource that is separate from the original\ngives you that ability.\n\nNow as for the revisions having their own URL's, clearly they can't just\nhave the URL of the original resource (for similar reasons for why the\nversioned-resource can't have the URL of the original resource).  Since\nthey each will be given a unique id (wrt to versioned resource), clearly\nit would be easy for the server to give them each their own URL, and then\nwe wouldn't have to pass in a \"revision-id\" header every time we wanted\nto look at some revision that is not currently visible in our workspace\n(for example, when merging).\n\n   This requires no changes to existing\n   WebDAV clients, and supports back-level clients on versioning servers.\n   Instead of worrying about the particular revision of each resource\n   requested, the client creates a workspace which contains a revision\n   selection rule that is reused for each request in the context of that\n   workspace. The semantics of the revision selection rule are well defined,\n   support parallel development and configurations, and are supported by the\n   server. The client just sends a workspace URL in a header with each\n   request, and it is used to resolve URLs to specific revisions. There would\n   be a default workspace whose revision selection rule contained only\n   \"latest\" that is used if the header is not specified. Workspaces are\n   resources that clients can develop editors to examine and set.\n\nI agree with everything here.  One comment: although there will be a\ndefault revision-selection-rule for the default workspace, a client would\nbe able to modify the revision-selection-rule of the default workspace.\n\n   For Geoff's item 2), I don't think moving URL-1 to URL-2 would require any\n   changes to the revision selection rule in the workspace. Assume the\n   revision selection rule contains label R1.3.5, and URL-1 has a revision\n   with that label. When URL-1 is copied or moved to URL-2, the labels go with\n   the revisions. So a reference to URL-2 in the workspace would resolve to\n   the corret revision.\n\nIf you want to expose different revisions of the same versioned resource\nat different URL's in the same workspace, you would need to say which URL\nshould pick the one revision, and which should pick the other.  But if\nyou don't need/want to do this, I agree that there is no need for URL\nspecific clauses in the revision-selection-rule.  But for folks that do\nwant to do this, it's important that they know how it would interract\nwith workspace-based revision selection.\n\n   Item 3) should also not be a problem. The workspace revision selection rule\n   can include functor \"latest\" which applies to all resources. So the\n   workspace would resolve all URLs to some revision, one that could be\n   checked out and modified. On checkin, the new revision would be visible to\n   anyone using this workspace. In general, putting \"latest\" in a revision\n   selection rule should be avoided, and if it is included, it must be the\n   last entry. This is because the user has not been specific about what\n   revisions his workspace should expose, and latest is a \"floating label\"\n   that moves with each new revision. This makes the workspace potentially\n   unstable and may expose incompatible revisions. WebDAV must support latest\n   though, and it is the only acceptable default.\n\nActually, the issue I was raising wasn't that \"there would be a\nrevision you couldn't put in a workspace\" (with an appropriate\nrevision-selection-rule you can make any revision appear a workspace),\nbut rather that you can only apply CHECKOUT (and then PUT) to a\nrevision using it's original URL (what the protocol calls a\n\"vportal\"), and *not* using the URL of the revision.\n\nIn your description, this is trivially true, because you weren't going\nto allocate a separate URL for the versioned-resource or any of the revisions.\nAnd I agree that this would be an advantage of not allocating those\nURL's, but unfortunately I really care about the baby swimming in that\nbathwater (:-).\n\nCheers,\nGeoff\n     \n   \n\n", "id": "lists-005-10457053"}, {"subject": "Re: Discussion Topic: Simple Version Selection and Checkout", "content": "   From: \"Sankar Virdhagriswaran\" <sv@crystaliz.com>\n\n   >because version selection is almost always done with a floating label\n   >or \"branch/LATEST\", rather than a bunch of special cases for individual\n   >resources.  Is it a problem for document-management?\n\n   I cannot speak for document management systems, but for collaboration\n   oriented systems, the assumption that selection is done only with labels (am\n   I right in understanding what you are saying?) seems too heavy weight.\n\nNo, Jim wasn't saying that it can only be done with labels, but rather\nthat labels and branch/LATEST suffice for many/most situations (he was\ntrying to be more concrete that just talking about a\n\"revision-selection-rule\").\n\n   Just to clarify, I don't have a problem with the notion of a workspace.\n   However, I have a problem with selection based on labels only. Why can't a\n   user access and include an arbitrary revision in a workspace?\n\n   Am I missing something?\n\nIf you only have a versioned-resource appearing in only one URL in a\nworkspace, then putting a label on the revision you want to see in\nthat workspace is a very light-weight, flexible, and interoperable way\nof saying so.  Or is there something about labels that concerns you?\n\nThe problem arises when you want two different revisions of the same\nversioned resource appearing at two different URL's in the same workspace.\nIn this case, a simple label rule does not suffice (since that would\njust pick the same revision at both locations).\n\nSo the two choices are: either don't have the same resource appearing\nat two different URL's in the *same* workspace (i.e. you have to specify\na different Workspace header to see the other revision), or have some\nURL-specific clauses in your revision-selection-rule, that in say:\n\"At this-URL select revision-X;  At that-URL select revision-Y\".\n\nIn the first case, life (and yor revision-selection-rule) is simple.\nIn the second case, life may be no harder, but your revision-selection-rule\ngets more complicated).\n\nSo bottom line: Does anyone object to saying that you need to pass in\ndifferent \"Workspace\" headers if you want to update different revisions\nof a single versioned resource?\n\nCheers,\nGeoff\n     \n   \n\n", "id": "lists-005-10468966"}, {"subject": "New versioning spec. available", "content": "I asked Chris Kaler to revise draft-ietf-webdav-versioning-00 based on the\nfeedback he received at the last design team meeting, and submit it as an\nInternet Draft.  Since Geoff submitted another draft recently, some work\nneeds to be done to reconcile the two drafts -- good thing we have a design\nteam meeting on the 10th and 11th!\n\nThis versioning specification is available on the Web at:\n\nhttp://www.ics.uci.edu/pub/ietf/webdav/versioning/draft-ietf-webdav-versioni\nng-01.txt\n\nA Word version is also available, at:\n\nhttp://www.ics.uci.edu/pub/ietf/webdav/versioning/draft-ietf-webdav-versioni\nng-01.doc\n\n- Jim\n     \n   \n\n", "id": "lists-005-10474503"}, {"subject": "Re: Discussion Topic: Simple Version Selection and Checkout", "content": ">If you only have a versioned-resource appearing in only one URL in a\n>workspace, then putting a label on the revision you want to see in\n>that workspace is a very light-weight, flexible, and interoperable way\n>of saying so.  Or is there something about labels that concerns you?\n\n\nWhile labels are considered to be light-weight mechanisms in software\ndevelopment community, it is not considered to be so with many web site\ndevelopment groups I have talked to. This is because consistent naming of\nlables require some administrative overhead (an administrator for instance)\nthat many of these groups don't have.\n\nI was only saying that the protocol should not prevent an implementation\nwherein revision selection may be done manually without automatic version\nselection rules.\n\n\n>So bottom line: Does anyone object to saying that you need to pass in\n>different \"Workspace\" headers if you want to update different revisions\n>of a single versioned resource?\n\n\n\nAs I have said earlier, I don't have a problem with this. Workspaces provide\ncontexts for update operations and hence need to be passed in the headers in\norder for the contexts to be identified.\n\nSankar\n     \n   \n\n", "id": "lists-005-10477827"}, {"subject": "Re: Discussion Topic: Simple Version Selection and Checkout", "content": "   From: \"Sankar Virdhagriswaran\" <sv@crystaliz.com>\n\n   While labels are considered to be light-weight mechanisms in software\n   development community, it is not considered to be so with many web site\n   development groups I have talked to. This is because consistent naming of\n   lables require some administrative overhead (an administrator for instance)\n   that many of these groups don't have.\n\n   I was only saying that the protocol should not prevent an implementation\n   wherein revision selection may be done manually without automatic version\n   selection rules.\n\nThere are two issues here.  There's the GUI issue, which is how does the\nuser say \"I want to see this revision\", and then there is the protocol\nquestion which is \"how does the client tell the server that the user wants\nto see this revision\".\n\nFor example, from a GUI perspective, the client could look up the\nuser's last workspace, or ask the user at the beginning of a session\nwhich workspace they want to use, and then the client would remember\nthis.  Then the user can just point at some GUI representation of the\nrevision they want selected.\n\nOnce the client has gathered this information in a user-friendly way,\nthe protocol question is: Is it an acceptable protocol for the client\nto relay this information to the server in the form:\n- set the version-selection-rule of the workspace to be \"label=FOO\"\n- place the label FOO on the revisions selected by the user\n\nNote: this is *not* an attempt to convert anyone (at least, not yet :-),\nbut rather a solicitation for information.  If the concept of a workspace\nor a label is too divergent from what a document management server or\nclient can do, then we need to find out exactly why that is so that we\ncan design an alternative.\n\nCheers,\nGeoff\n     \n   \n\n", "id": "lists-005-10482251"}, {"subject": "Fw: Discussion Topic: Simple Version Selection and Checkout", "content": "this mail bounced because of wrong Cc: address...\n\n-----Original Message-----\nFrom: Sankar Virdhagriswaran <sv@crystaliz.com>\nTo: jamsden@us.ibm.com <jamsden@us.ibm.com>\nCc: ietf-dav-versioning@w3c.org <ietf-dav-versioning@w3c.org>\nDate: Saturday, January 30, 1999 8:26 PM\nSubject: Re: Discussion Topic: Simple Version Selection and Checkout\n\n\n>Jim, Geoff\n\n>Let me take this note to answer a couple of points and to make a broader\n>point.\n\n>>What other \"manual\" selection are you suggesting that would not involve\n>>something like labels. A URI is a name of a resource. A label is just a\n>>name of a particular revision of that resource.\n>>\n\n>It appears that you and Geoff are actually in disagreement about the above\n>statement (correct me if I am wrong). Anyhow, I have a specific use case\n>point and a broader architecture point.\n\n>1) Architecture point\n\n>Let me start with the architecture point. Configurations, IMHO, define an\n>alternate namespace. The objects associated with the names could be 'bound'\n>using a one to one mapping between names and objects and using a selection\n>rule based on attributes of the object. The labeling scheme I thought was\n>the second kind and the explicit naming as seen in traditional version\n>control system I thought was the first kind. I would like to see the\n>architecture of the configuration namespace mechanism to be similar to\nother\n>namespace mechanisms inside DAV and outside so that one could leverage\n>implementations and implementation experience. In particular, if you look\nat\n>the ADSI spec. from Microsoft or JNDI spec. from Javasoft, they provide two\n>ways of resolving names to objects - explicit naming and selection by\n>attribute. The collection mechanism in DAV (should) also provides similar\n>mechanisms. If our scheme is similar in nature, we could use leverage\n>implementations and expertise across different types of namespaces, but\n>using the same type of framework.\n\n>The above is not a protocol point, but I thought I should make it so that\n>server implementations are made easier. While one has to implement\ndifferent\n>namespace service providers for collections, configurations, documents,\n>etc., using a consistent scheme helps reduce the work involved and\ncertainly\n>the training involved.\n\n>2) Use case point\n\n>>Setting labels should not be an administrative activity. The should be set\n>>by the editor of the resource to say something about the meaning of the\n>>revision.\n\n>In either case, there is an administrative overhead that many of the web\n>site authors (particularly from the 'media' side of the world) are not used\n>to doing.\n\n>More importantly, in authoring documents, it makes it much easier if\n>explicit names are used to do link checking and deployment. I have sense\n>that you folks think of a configuration or workspace in the software\n>development sense of the word. One could think of an HTML document itself\nas\n>a configuration. In this case, an author will not typically be referring to\n>(i.e., linking to) multiple versions of the same document. The author would\n>like to refer to a linked document with an explicit URL reference.  In this\n>kind of authoring mode, selecting a URL of a linked document using labels\nis\n>foreign to the author and more importantly to the authoring tool.\n\n>I am making several points here:\n\n>a) That document authors would prefer to use direct and explicit references\n>( use case style point), and\n\n>b) Tools such as link checkers and deployers can deal with explicit\n>references much more easily than resolved names based on attributes (i.e.,\n>labels)\n\n>c) If one were to consider an HTML (or XML + XML Link) document itself as a\n>configuration, then label based selection involves cooperation by authoring\n>clients. I believe that this would be harder to achieve as compared to\n>browsers/DAV clients providing the same functionality.\n\n>Does this all make sense to you folks?\n\n>Bottom line: I am arguing for providing explicit names and attribute based\n>selection. I am also arguing that the specification of this part of the\n>protocol should be similar to DAV collections and other namespace/directory\n>mechanisms out there.\n\n\n\n\n\n\n\n\n\n\n\n\n     \n   \n\n", "id": "lists-005-10487130"}, {"subject": "Re: Fw: Discussion Topic: Simple Version Selection and Checkout", "content": "I think that Sankar, Jim, and I all agree on the key point, namely that\nusers (and tools) want to deal with normal understandable URL's, not URL's\nthat have been munged and mangled with labels or server-defined\ntransformations.\n\nSo both Jim and I have proposed that all mapping be done by headers and\nresource properties, not by URL-munging.  I had proposed that Document\nManagement have one property and header (namely, a Mutable-Revision-Name)\nand Configuration Management have another (a Workspace).  Jim proposed\nthat we simplify the protocol and just use a Workspace in both cases.\n(And I like Jim's proposal better than mine.)\n\nSo these \"labels\" that Jim and I talk about are just something that\nthe client uses to tell the server what the user wants to see in a\ngiven workspace, *not* something the user needs to explicitly manage.\n\nTo confirm we're all on the same page (or at least, in the same book :-),\nI'll go over Sankar's note in detail.\n\n\n   From: \"Sankar Virdhagriswaran\" <sv@crystaliz.com>\n\n   >What other \"manual\" selection are you suggesting that would not involve\n   >something like labels. A URI is a name of a resource. A label is just a\n   >name of a particular revision of that resource.\n\n   It appears that you and Geoff are actually in disagreement about the above\n   statement (correct me if I am wrong).\n\nIn preceding protocol proposals, a label has always been a name, while\nin my recent proposal, I have suggested we make it a URL.  This change\nhas the very limited purpose of making label updating more reliable.\nIn my proposal, you cannot use a label URL to see the body of a resource,\n(you would have to use a vportal in a workspace to do that), so Jim and\nI agree on the functionality that a label should (and should not) provide.\n\n   Anyhow, I have a specific use case\n   point and a broader architecture point.\n\n   1) Architecture point\n\n   Let me start with the architecture point. Configurations, IMHO, define an\n   alternate namespace. The objects associated with the names could be 'bound'\n   using a one to one mapping between names and objects and using a selection\n   rule based on attributes of the object.\n\nIn my proposal, I was using the term \"configuration\" to refer to an immutable\nresource that does the first kind of mapping (i.e. 1-1 mapping between names\nand immutable-revisions), and the term \"workspace\" to refer to a resource\nthat defines a mutable mapping via a revision selection rule.\n\n   The labeling scheme I thought was the second kind\n\nYes.\n\n   and the explicit naming as seen in traditional version\n   control system I thought was the first kind.\n\nYou find both concepts in most traditional version control systems.\nIn particular, you find some persistent mapping of names to immutable\nrevisions (e.g. a file containing an \"S-List\" in traditional SCCS systems),\nand a workspace or \"sandbox\" where a mutable mapping is located.\n\n   I would like to see the\n   architecture of the configuration namespace mechanism to be similar to\n   other\n   namespace mechanisms inside DAV and outside so that one could leverage\n   implementations and implementation experience. In particular, if you look\n   at\n   the ADSI spec. from Microsoft or JNDI spec. from Javasoft, they provide two\n   ways of resolving names to objects - explicit naming and selection by\n   attribute. The collection mechanism in DAV (should) also provides similar\n   mechanisms. If our scheme is similar in nature, we could use leverage\n   implementations and expertise across different types of namespaces, but\n   using the same type of framework.\n\nWe need to be a little careful about where we look for analogues.  The\nproblems faced by parallel development, with branching and merging,\nintroduces complexities that are often ignored by general namespace mapping\nmechanisms.  In particular, the notion of a set of changes that need to\nbe applied together is a key notion underlying effective version management,\nwhich makes it more akin to database transactions, than to namespace\nmanagement.  But we *also* want to manage the namespace, which is what\nmakes the problem so \"interesting\" (:-).\n\n   2) Use case point\n\n   ..., in authoring documents, it makes it much easier if\n   explicit names are used to do link checking and deployment.\n\nYes, I (and I'm sure, Jim) completely agree, as long as the explicit names\nare not to specific revisions, but rather to \"what your workspace is currently\nselecting at this URL\".\n\nIf instead you try to store explicit revision URL's in your documents,\n(not that you were suggesting this, but just to emphasize the point)\nany update to a document requires finding and updating all other\ndocuments that pointed explicitly to the previous revision of that\ndocument.  Since all those other documents are under version control,\nthey need to be checked out and a new revision created for them as well,\nwhich means all references to *them* must then be checked out and\nrevised, which means ... any change pretty soon requires a modification\nmost documents in your web site (not to mention all documents outside\nyour web site that stored explicit revision references).\n\nIt's this scenario that makes us pretty devoted to the \"everything goes\nthrough a workspace\" approach.\n\n   I have sense\n   that you folks think of a configuration or workspace in the software\n   development sense of the word. One could think of an HTML document itself\n   as\n   a configuration. In this case, an author will not typically be referring to\n   (i.e., linking to) multiple versions of the same document. The author would\n   like to refer to a linked document with an explicit URL reference.  In this\n   kind of authoring mode, selecting a URL of a linked document using labels\n   is\n   foreign to the author and more importantly to the authoring tool.\n\nWe need to carefully separate what the user sees and does (which is defined\nby his GUI) from what protocol the client uses to communicate this to the\nserver.  The user can say \"I want a new revision of this URL\".  The client\nthen can ask the server to create a new revision (CHECKOUT-NEW), and then\nask the server to place a label on this revision so that it will appear in\nthe user's current workspace.  The user gets to see the desired new revision,\nand never has to know anything about labels.\n\n   I am making several points here:\n\n   a) That document authors would prefer to use direct and explicit references\n   ( use case style point), and\n\nAgreed, with the caveat above that these are direct and explicit\nreferences to workspace URL's (what the protocol calls \"vportals\"),\nnot to specific revisions.\n\n   b) Tools such as link checkers and deployers can deal with explicit\n   references much more easily than resolved names based on attributes (i.e.,\n   labels)\n\nYes.  (The server does all the workspace name-mapping for those tools).\n\n   c) If one were to consider an HTML (or XML + XML Link) document itself as a\n   configuration, then label based selection involves cooperation by authoring\n   clients. I believe that this would be harder to achieve as compared to\n   browsers/DAV clients providing the same functionality.\n\nI didn't follow the point being made in c).\n\n   Does this all make sense to you folks?\n   Bottom line: I am arguing for providing explicit names and attribute based\n   selection. I am also arguing that the specification of this part of the\n   protocol should be similar to DAV collections and other namespace/directory\n   mechanisms out there.\n\nExplicit names: Yes, but not to specific revisions.\nAttribute based selection: Yes, in a workspace revision-selection-rule.\nSimilar to DAV collections: Yes, in that it is based on DAV collections\n  (i.e. a DAV collection provides a single segment in the URL path).\nSimiilar to other namespace/directory mechanisms out there: Well, depends\n  on which other mechanisms, and what you mean by \"similar\".\n\nCheers,\nGeoff\n     \n   \n\n", "id": "lists-005-10494547"}, {"subject": "Re: Fw: Discussion Topic: Simple Version Selection and Checkout", "content": ">I think that Sankar, Jim, and I all agree on the key point, namely that\n>users (and tools) want to deal with normal understandable URL's, not URL's\n>that have been munged and mangled with labels or server-defined\n>transformations.\n\n\nYes. Very much so.\n\n\n>and Configuration Management have another (a Workspace).  Jim proposed\n>that we simplify the protocol and just use a Workspace in both cases.\n>(And I like Jim's proposal better than mine.)\n\n\n\nWith this summary, I understand a little better what the proposal is (should\nbe reading these documents full time which I don't - apologies).\n\n>management.  But we *also* want to manage the namespace, which is what\n>makes the problem so \"interesting\" (:-).\n\nI completely understand this. In our system, we have actually done both. It\nhelped us enormously on the implementation side (and hopefully on the client\nside as well) to do what I proposed w.r.to namespaces. My suggestion is\nbased on implementation experience.\n\n>Yes, I (and I'm sure, Jim) completely agree, as long as the explicit names\n>are not to specific revisions, but rather to \"what your workspace is\ncurrently\n>selecting at this URL\".\n\nWe all agree.\n     \n   \n\n", "id": "lists-005-10505603"}, {"subject": "Re: Fw: Discussion Topic: Simple Version Selection and Checkout", "content": "   From: \"Sankar Virdhagriswaran\" <sv@crystaliz.com>\n\n   >I think that Sankar, Jim, and I all agree on the key point, namely that\n   >users (and tools) want to deal with normal understandable URL's, not URL's\n   >that have been munged and mangled with labels or server-defined\n   >transformations.\n\n\n   Yes. Very much so.\n\nGreat!\n\n   With this summary, I understand a little better what the proposal is (should\n   be reading these documents full time which I don't - apologies).\n\nNo apologies neccessary!  The documents are long and in a state of flux.\nSince most people on the mailing list don't have time to read all of them,\nthis kind of email discussion not only gives us a chance to benefit from\nyour experience, but probably gives a more manageable overview of what's\ngoing on to the list as a whole.\n\nCheers,\nGeoff\n     \n   \n\n", "id": "lists-005-10509871"}, {"subject": "WeDAV Versioning Summary", "content": "After following the versioning and CM discussions the last couple of weeks,\ntwo things have become apparent. One is that our ideas and proposals have\nbeen complicated by listing lots of options, motivations, and issues making\nit difficult to understand, and two, perhaps we haven't been as clear as we\ncould have been in describing the versioning semantics. In any case, I\nthought it might be a good idea to just summarize where I think we are so\nfar as simply and completely as possible. Hopefully this will answer some\nquestions, provide a clear starting point for next week's versioning\nmeeting.\n\nI will attempt to summarize the semantics and rules that Geoff and I have\nbeen working on, and that have been discussed the last few weeks on\nxml-dav-versioning. I won't in this document present a lot of alternatives,\nmotivation for why we picked one semantic over another, or raise any\nissues. These will come later. I will however try to present versioning,\nparallel development, configuration management, DMS, and CM semantics as\nsimply and completely as possible so we can see the big picture. Assuming\nwe can nail down these semantics, the protocol should be pretty straight\nforward to design.\n\nCreating Versioned Resources\n\nA resource can be put under version control by checking it in. Checking in\na resource creates a versioned resource and sets its initial revision to\nthe resource. A checked in revision cannot be modified by anyone at any\ntime.\n\nNaming Revisions: revision ids and labels\n\nA revision of a versioned resource is given a system assigned revision id\nwhen it is checked in. This revision id acts as an immutable identifier\ndistinguishing this revision from all others of the same versioned\nresource. A revision id can be assigned to only one revision of a versioned\nresource, and can never be reused on that versioned resource.\n\nA user may assign other revision names called revision labels to a revision\nin order to distinguish it from other revisions using more meaningful\nnames. These revision labels must be unique for any given versioned\nresource, but may be reassigned to any revision of the versioned resource\nat any time. Revisions of different versioned resources may have the same\nlabel. There is a distinguished, floating label called \"latest\" which\nalways refers to the latest revision in a given activity.\n\nModifying a Versioned Resource\n\nA versioned resource may be modified by checking out a revision to create a\nworking resource. A working resource can be updated (PUT, PROPPATCH, etc.)\nany number of times. When updates are complete, the working resource is\nchecked back in. Users can use checkout/checkin to register intent to\nmodify a versioned resource similar to the way lock and unlock are used in\nDAV level 2. The sense is reversed though. A checked in revision cannot be\nchanged without checking it out first.\n\nA revision may be checked in as mutable or immutable. If the revision is\nmutable, a subsequent checkout makes the revision a working resource, and\nallows the revision to be updated in place without creating a new revision.\nAny previous contents of the revision are lost. A mutable revision can also\nbe checked out creating a new revision if the user wants to retain the\nprevious revision. If the revision is immutable, a checkout must create a\nnew revision. Servers may choose to not allow revisions to be checked in as\nmutable, or they may not allow a revision to be checked out without\ncreating a new revision. These constraints are typical of current\nconfiguration management systems. Document management systems typically\nallow revisions to be mutable and don't have these restrictions.\n\nParallel Development with Activities\n\nResources are checked out in the context of an activity. An activity\nabstracts a set of related changes a user is making to versioned resources.\nEach activity represents a parallel thread of development. Servers that\ndon't support parallel development only support one activity. A revision\nthat is already checked out in an activity cannot be checked out again in\nthe same activity. If parallel development is desired, a user can checkout\nthe revision in another activity and merge them later.\n\nSelecting Revision through the Workspace\n\nResources, working resources, and revisions of versioned resources are all\naccessed using a URL. Specific revisions of a versioned resource can be\naccessed by specifying the resource URL and a version label. However,\nversioned resources are usually accessed using a simple URL. The revision\nselected when a specific revision name is not specified is resolved through\na workspace. A workspace provides a mapping between URLs for versioned\nresources, and specific revisions. This allows versioned resources and\nunversioned resources to be accessed the same way supporting relative ULRs\nand DAV level-2 clients that are not versioning aware.\n\nA workspace contains a current activity, a merge activity, and a revision\nselection rule. Revisions are selected using the following rules in order:\n1) if there is a checked out revision, then it is selected. else 2) if\nthere is a revision that is checked in under the current activity, then it\nis selected, else 3) if the resource is a member of any activity in the\nprocess of being merged into this workspace, then it is selected, else 4)\nfinally, the workspace revision selection rule is applied to select the\nrevision. If there is no matching revision, then a resource not found\nstatus is returned. This rule is applied to collections to select the\nrevision that determines their member versioned resources, and to other\nresource to determine the revision containing their contents.\n\nA workspace revision selection rule can specify any number of revision\nlabels, activities, configurations, or the functor \"latest\" to specify what\nrevision to select. The rules are applied in order until the first matching\nis found. Any subsequent potential matches are ignored. The first three\nrules above are just implied components of the workspace revision selection\nrule. They are called out separately as they are fixed by the server.\n\nIf a request is made and no workspace is specified, a default workspace\ncontaining activity named \"mainline\", and \"latest\" in the version selection\nrule is used.\n\nConfiguration Management\n\nA workspace represents a volatile set of revisions. Any new checkouts,\nchanges to the current activity, merging operations, or changes to the\nrevision selection rule may result in the selection of different revisions.\nA configuration is a resource that represents an immutable set of\nrevisions. A configuration contains a specific revision of each member\nversioned resource. A configuration cannot contain a mutable revision\nbecause the semantics of configurations cannot be guaranteed. A workspace\nwhose version selection rule contains a configuration will always return\nthe same revisions as long as there are no revisions checked out and\nnothing in the current activity.\n\nVersioned Collections\n\nA collection contains a set of members. For versioned collections, the\nmembers are versioned resources, not particular revisions. To add or remove\nmembers from a revision of a versioned collection, it must be checked out\njust like any other resource. Creating a new revision of a member, or\nmodifying a member has no effect on the collection. Deleting a versioned\nresource that is an internal member from a collection does not delete the\nversioned resource, it only deletes the member from that version of the\ncollection. The resource may still be a member of a previous or subsequent\nrevision of the collection. The URL for a collection without a particular\nrevision name is resolved to a particular revision using the workspace the\nsame as any other resource. If the collection is part of a URL for some\nother resource, then its members are determined from the selected revision.\n\nRevision History\n\nEach revision has a predecessor relationship with the revision it was\nchecked out or merged from, and a successor relationship with revisions\nthat were checked out from it. Mutable revisions are related to their\npredecessor through a was-derived-from relationship. Immutable revisions\nare related to their predecessor through an is-derived-from relationship.\nThe revision history of a versioned resource can include either or both of\nthese relationships.\n\nMerging\n\nEach activity represents a separate parallel thread of development. Users\nmake their changes in the context of an activity. Changes to the same\nrevision must be done in separate activities. At some point, a user may\nwant to merge changes made to the same revision together to create a new\nrevision containing the combined updates. In order to do a merge, it is\nfirst necessary to determine what must be merged. A merge conflict report\nlists the resources that have been modified in parallel in different\nactivities. The merge conflict report is generated using the following\nrules: 1) if the merge source specifies a predecessor of the revision\nselected by the workspace, then the workspace revision is selected, else 2)\nif the merge source specifies a successor of the revision selected by the\nworkspace, then the merge source revision is selected, else 3) the merge\nsource and the current workspace specify revisions that are on different\nlines-of-descent, and a potential merge conflict exists and is included in\nthe merge conflict report.\n\nA user can request the differences between two revisions of a resource\n(servers may provide a differences report, but they must at least indicate\nif they are the same or not). A user can request conflicts between an\nactivity and the current workspace to generate a merge conflict report. A\nuser can also request the differences between a configuration and the\ncurrent workspace which lists at least the activities that are contained in\nthe configuration but not in the workspace and vice versa. So differences\nare detected at different levels: content differences for resources,\nrevision differences for activities, and activity differences for\nconfigurations.\n\nOnce the merge conflicts are known, a user resolves the conflicts by\nmerging the source activity with the workspace. This enters the merge\nsource into the workspace, and sets the current conflicts that must be\nresolved. The conflicts are resolved by merging the revisions from the\nmerge source into the revision selected by the workspace to create a new\nworking resource. Servers may perform some default auto merging, but at a\nminimum, the merge is done by checking out the revision in the current\nactivity and noting the merge from the merge source. This creates an\nadditional successor/predecessor relationship between the merge source and\nworkspace revisions called merged-from. The conflict is now removed because\nthe working resource is now a successor of both the source and target\nrevisions. It is the user's responsibility to apply the differences in the\ntwo revisions in an appropriate manner. The merge is complete when all the\nconflicts are resolved, all differences have been merged, and the resources\nare all checked back in. The merge source can now be removed from the\nworkspace as all of its changes are now included in the current activity.\nOnly one activity can be merged at a time.\n\nWhen merging mutable revisions, the merge conflict report may be inaccurate\nas the source revision may change without the system being aware. Users are\nresponsible for applying any changes to ancestor revisions to their\ndescendants as appropriate. The system cannot determine if there are any\nchanges that need to be applied other than by looking a the last-modified\ndates of the revisions.\n\nLocking Versioned Resources\n\nLocking a versioned resource prevents any revision from being checked out\nin any activity. Locking a revision of a versioned resource prevents just\nthat revision from being checked out in any activity.\n     \n   \n\n", "id": "lists-005-10513771"}, {"subject": "WebDAV Versioning Model", "content": "--0__=Y2POLT1gC2CXyjE0VwtryzPozZrYVOq0u8mliYFYfcesdwLvImk0KcCn\nContent-type: text/plain; charset=us-ascii\nContent-Disposition: inline\n\n\n\nAttached is the latest WebDAV versioning model. This model does not\ndistinguish between Document Management Systems (DMS) and Configuration\nManagement Systems (CM), but rather attempts to integrate the semantics of\nboth while remaining as simple as possible. It attempts to provide the\nflexibility and ease of use of DMS systems while retaining the rich\nsemantics available in modern CM systems and lets the user choose which\nsemantics to use on a revision by revision basis. The model was driven by\nthe scenarios in the Versioning Goals document, so you may want to review\nthat document in parallel with the model.\n\nI would like to thank Geoff Clemm for his tireless help in producing this\nmodel, especially in the areas of activities for parallel development, and\nthe semantics of configurations. I think this work has resulted in both\nflexibility in client applications and server implementations while being\nsimple enough to be usable by a broad range of document authors. We realize\nthe importance of versioning to the web, and welcome all feedback so that\nwe specify the best protocol we can.\n\n(See attached file: vermod.gif)(See attached file: versioning.htm)\n\n--0__=Y2POLT1gC2CXyjE0VwtryzPozZrYVOq0u8mliYFYfcesdwLvImk0KcCn\nContent-type: image/gif;\n        name=\"vermod.gif\"\nContent-Disposition: attachment; filename=\"vermod.gif\"\nContent-transfer-encoding: base64\nContent-Description: Compuserve GIF\n\nR0lGODlhVwM8A/cAAAAAAAAAhIQAAIQAhP8A////AP///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5BAAAAAAALAAAAABXAzwD\nAAj+AA0IHEiwoMGDCBMqXMiwocOHECNKnEixosWLGDNq3Mixo8ePIEOKHEmypMmTKFOqXMmypcuX\nMGPKnEmzps2bOHPq3Mmzp8+fQIMKHUq0qNGjSJMqXcq0qdOnUKNKnUq1qtWrWLNq3cq1q9evYMOK\nHUu2rNmzaNOqXcu2rdu3cOPKnUu3rt27ePPq3cu3r9+/gAMLHky4sOHDiBMrXsy4sePHkCNLnky5\nsuXLmDNr3sy5s+fPoEOLHk26tOnTqFOrXs26tevXsGPLnk27tu3buHPr3s27t+/fwIMLH068uPHj\nyJMrX868ufPn0KNLn069uvXr2LNr3869u/fv4MP+ix9Pvrz58+jTq1/Pvr379/Djy59Pv779+/jz\n69/PH6KA/wAGKOCABBZo4IEIJqjgggw2eGB/ECongEAFDFQhhRZmiOGGBlzYoYYfcujhiCCSKGKJ\nKJ6oYogsmtgiihOS5uCMNNZoo4MRxhajYzuK1qNaP+a4mgAVFvmhkUgeqWSSTC7pZJNQPilllFRO\naWWVRgb52YRYXulll2B+KSaWWgqJWpmIocmZmmSxaeZoMSaJoZFzvkink3WSeKecePbJ559K5pnh\nnoH6qaSbme0IKKGM2umono8OGqmglBpaAKJvgoapYJta1qlXn2a6GZFjlhpmAQCkCoCprJ7aqpj+\noU7G5atMAlCkrR3iWqurvNLaYayiYgbsR6sKVKxVw0KWLELFrtpsQsfqtGywsq7o4rUpvihisahi\nmOqFqhqQqoXPiussruZmi6216sJYmqLtsmusuPSuWuG3xo5b77jhUqgquMfqu662BF84LbWRHayR\nqtE+G/C8EDs8b7kyKbyYxQQ5W2/EE288EMUcexwtRxgjzBipvab8JK725houqhqjeuu9ucr8IcMq\n5+xkyWn62qTGMbNc87/m0mwzzELf+rLPS/JscmJOU/QwxAXpO7XEHtcUdWFOA03v1xI3DHbIWIe0\n9dNcV7ropJa2qCu35p5rr743W30vukRDqrf+pHurfei7fAfu963+GomvzM0SvTTOLn88bt9t63k2\n2oNN3pblgWEuNU2aU+4XykzrLHropHfZ+eelp97y6Dmf7vlerp8VO+xuzf76XXHGW7DuA/fO++/y\n7h48ibbnBe/wwAuvvO/IN1/87XTdKP301Fdf/bvWZ6+99dBrynrq34cPvgHP4z6++OibWn73cK0P\nlvvR186+Z7k3Cvna9xeKv+CR87//4JGC31zgZT//6e+ABQRg/hJoKQHOD0jKAtzlHrim9FnwfBg0\nHeAuyMEMNo2Co9qeCEdIQhpJkC0OBKFZcte85SWPeS5sIQxn6C4ZlfCGOByQChMVQRnJb4f+lwFd\nB4fowfSlsH1FTOIQjwjEsDAxK0+coBSbSJn6se1//VOgARmIxS4iMIAn9CIXv7jAK5Jxi3aKIhW5\nokZknXAtbVwjFIlIRyWmLo5pmVUd9xg6PMrRjcwyjB9l98M/9pBEACDA8WLISBrK8IWQRN4gV4ii\nlj3yko2MZAwnacioaCmRBCBAAAjDyTYxS5FjKWUnnSLEXIUylKub0tsOdyVdWSmWd+Pj91QpFj3e\n7JUBsKUu7UglXq5yKZ8EZShHyRCKjQxaDnkmyIJizPcdRJmobEjA6GaQZ16TagthGDSZ5c2BVPOY\nSLFihQYQgGWy7HHpitvXlCQwxT2Obi/++5c4C2fGMfqznx86J6gklapXipJtcwMXn2IpKFzyr2XH\nQhLcDFezNKKzMWgCgAAIUK6OhixjZAvp2LImtqEItCtlYqc787VNls4zY1OLZ77k2VKXUs2j87Qa\nSA9y0ouaNEoBCGZF55ZPox0paUi9G74SSi+YNbWiw1RZT7fiS8MBIJhGS+pTFzfUrtosaFkNa9ze\nJtaE2tKhl/LpxRayI5x+7KYidatIZ/pWk76Rp3VNnE6rxtKO9qukOA1sXiMWrpIaZKpq/QkLd9cv\neToVaR6qJ2Ft2iyl8otcmHRkJk+EWCjqrrJPjZhCQwu2EUmsW6VtqjONlVWqodaoG+r+bGJ5sqlp\nvsS2ir1rOPFpNb3C1Jm8nWlNRxrTvzpOY3U97GzTFCZaRpWewiQm02R7lapKianPFR92P7hcQfYQ\nThDhJlPEWxDqdvcm6kRjGder3vZq8b1Z3FkYzwhfMQKUvfX91XnTFkj+gre/vdwvKX+GyuxKd5jm\nrYp1UaVIAztYvwLm1DWBWU7a+bCbFHZihCXsNoPOSkV4E5i64LaiiDous5rULPHmaywPswuidEOk\n8kD74n6ZCF1us6S2ErxhmCTToMwcZ0zDGc1ugtOuF64aNoPc3yHvlMjhTS5fv/lSvPb4L61cZztF\naSt7KvWpVlXaO4laN6J2eWlHO/D+dDe4JJVy2bH3/FZ0H7vVs565y0or8832/FWo3pOiUOLxlVuS\n0asiN65GJi6ixzbkCvfEgY6W8uYSbRHymg1ahn6pWxsrWEV32q/4RLRhrTxovqSXQiiLs91I22dx\ntXasZRVuiKKb33/it1A1ifSRaaJrkvFvVr1d6pL0itS/UtTVqp1Xn4/2rK/qM7IIFHSpVfKpQ3/0\n0x+dq0yrvJa/hlqeLi2seBn2beQaF9xjVbJvT1LtKq/W3UfGGrZzumhwOlra00ZJlp20uDi7zM4z\nU62ZyyrO1c1Zza5iSeIG+7B5d4xjgj20XK+WkgUP+3Beduy/jdrvXM6Sz0mrM3b+n83nJ+E73yYx\nJm6lIs2IENvcBX8y2LxtXGtvmric3vVITi5ktqKE3BfpNcr1jeKibzaeKk6xJrk9krJlm9HZtq3X\noE7vaTac2ko3etIzC08V/Ujolc4I2IdeEp7jpGELr3q4T2zT41LW7XQN9pMbO1Kawl3qeyX6FO0N\ndLbHk9MjC3xv2y53ssdk32l+sOJD1/eIP3zRY0fizxBO+WIed6/z7rTOM69zw6+kTIk0u8J3uk9z\nx73efQF9NjUs88CeG9SjBrfr8+55l6hTmUK9tX11T9/47h6Nmo533UWmbVMTlMK2dq/ve//7OX2d\n9E/XfOshP+Xa237CrzyYpcv+ss3iyt7vK8fLJ12sTbiLXeZT9ubKt08+hWw674AfdenN723r275W\nS85ZyBf/3DPxe8leMnKjA1FgdlRYMmf7dyQYE34PwYD2R2gI4WZCJVO8BVzoRy0ptWUTCHhrl37C\nlXayp1NoZ3dXt0/b5k0lw34uF3kPmHIglmmoFTSitTGWhGNbd3Q3mINDUkmZllpzM4Pekisz+IM+\nKIRGWFkdFYOsRYOzZiKi14IYwSZtBX2eFnxl8YTI5HNk83qJNnufNn+DRXxQF3sCgYVQWBGIN2w0\nw1RsuDEBx3+V134+1CVtCGhkpVqxZoditWx4hoda5TVvqIBn+BadElxtN3z+LEgVZpgUhViBccdN\nXPh2Mxd4j0hvk4WIpDaIcFRrLMJQd+hQnMh7yReKgbOI6YRGoDWKy6eKi4I3sCWImohCC1N9dEVJ\nSaZNiXh2SpYQphiLDpGGcBiMa5ZDxFiMxoggcSiMTDIhx6ggvsg540RKuiVpX3FEvdhEi3Uvq6eD\nWpd1OOiNFXKNRbFIDEYq3XiO3+g8NiGOOzR+K8Vh/1U1GWZNWvOMM5Fl2GRxveJcyRiH7GhXSZKP\nVQJjaMUqBgclCbiH0GV59WiPh3dNADiLTMdG01hQwARlTlYRV0dlUOaBvLiODvmQTiKBd7Y06WIz\nyCZsAUeKLLmK91WK81X+JCQJZwNnS8r2To8FTzS3hkclNyS1LxgXUTYJi9AYki9RaBtIfR5FhhR5\ni0omVID1dIo2lZq3lBAXUjb3kQ1plIRWTAFXh0JjZjEDVf34XP8oFPrYfrkEa3hIT141Zn/4byr5\nlnzIkwdpciDJlRBYZFT5cPIXYE7ZTPBmiQ5Xb1ZJdVbJlGWYl3r5ecOThLX4WnY3WujIjenoQhNC\nd791GJrpduSoITaWcY0FWcm2caVpkjMnaxzXOEroL163W+XUmRdxlhTkOg6IFQKQkZ33F7r5NWZI\ncVoJYLHpEbT5QMA4PvyojEmUm9SYNYOhmxqTlsqpMrGUnETJkeo3kWj+2JgsUZzU1puIAZ6LuXeU\nlosT4Z3sc2q05pKi+JIt2Xz9w5y7yZnNSRAEVHKsyHz6mZ/+pCbi2RHo2T2qF6Ak85+F8Z8Dmkru\nV58fQaC3g48ZNp1l+SqZWW6LkXPPZF24d3ASGj5sknPaGYXc6ZgYln20eIG7qYKAFI8ZQ36TBmBd\nSGWxaZ4IYY0jinU5BmTQti0nomOj5aPgGKSVKYfxGFkAqFkmFoRJaoTrYoNLCKSXZKM3qncGMZPo\n9m1/N3hW2JQsShBWqqWQyC9a+njpUlhqZ4KQuBFSOqUph5AwGJd12ZZjmXgTSkQOKi3XZWhhpVVf\nSZd0mVRxOaccqj7+jMmmJCGFYQiGimqmDKpg02ifUkZsd9dXfQUyh5mYKEoRa2qoO6dAzWaDQhOE\nklmD8Fmq++me8pVka4OENCOqn2pahOOHN6mEfTaWyMafm8qpl9aAjphTYHpZjaqIj0pONxVsaceo\nebVw3vd39qamhaqrIHGcFpSQdbqcbNahstSnrJOr0EqcLqGijhqYQyF4APqs3Vqul2mZ6iqk6Zoh\nd5oTnzmk8tqur7mV5+qtMAqPPhKNrFeU90qcBCad1YqtSfKuOLFgoUewRcSt/5oR7vhm+hoaDzuB\n1WiuDSuiw+Zi9wOXprpsXyRi/Imq+2Ow6HV82cdAYsme7gVP7Sn+ORZ7sRbxYxcpmJaIEWB3m/dY\nkRGJkcG6ETirqS8Ls5raJCT5ZWtppllFZkbLmmM1lkHJsoO6eCQLkkwyk6SZk3L2hjrpbwS3ljkJ\naODDsEILtOSUlH2ZbtR3toe5pTsxtfb6lJyHtlSXtvLGtr72tmO7nQUTJ7B3hKD5aqClqEk7eKTK\nruvqtv7qIlOYkq/HcfVXhK2JYzgDN1CajmKbtxFRW9G3a3GbqJunmEG7Jg24uYT5TXGblT1Ltv6K\nuWjYXFtLZrj0cUtLmrCrZ0hLlsqJuDkLJnnjZXcIWb1rcHP5tGlWkK0TuqzbEJoboi7nET8rkl26\noMy7Es8rEZf+m7zKq0X8yIkmFrIgK7Knyl66WzHqxbLgG7IAE75bdL3Yq4U8MqxXiLzty4sIqbD2\n+zdzyG8DW3nsO781ekrjm7mPGnoKirf+yxDZuKH0usDrOq/YEsA+BiIKzMCGW8FEmrMH7B/YF0qY\nIqkS2U00Sr7imo/Eklymx23giq6rm8EIjH86WkurKToIaFT3G47XWjdABj5hSZbb5bFLJL8sbE4R\nqIHrlqUSV4mHWIEcmLrw+qgzSW4j+IjD5TUOI6aWym5AHMRyKCepknuvKqe9G2sp6be1Glrr2bHn\nC0aqCl1YBblf3IZjDIiBaoDKJ0b9q8UXTGp9O3x0G4lTN5/+tAW/ROqFcVVzYri20+usBozH5cW7\nCunDflqHIGeXdFzDeawpYgKWEpWHeybHsXaXP7zIjCzEvNp9slZ9vSqJmJepPgHBRzm6dXduV4ql\nV2N6oIuvKzzK5fWYrqVJS9qkP0rBDuyuLNauRMiNITfMlxzBuvy/vMoRkUeuR+HK1xcSKSwR16zI\nudzMZWjJ3pyq4PXNdHTHWpxR3iWugOxZoqzL6UXA6FvH6vue8RyfMelKrSTP74zPFrXOozyxISyL\nIzyz9LjN3AyhJkolHMt4PxO1+9sk1AyBAWlQDP3IE31L5ovQkEzDdbOMWRzEMrtMPJvOfOmR06yz\nOUyzhqj+kUzMgC3HbeTs0SdStKJ5WUnLtKP5ukQjU5KpzBT80N1ZIlab03JniHS2VERNYjY91I4L\nvDcdWx3NwkiJunustkppt0gWvR+zUafLhFQ9lVS41UcsaS8N1V7JmuKU0XCa0G0oqOK8zPQzJUH1\nh4ozNIhjWXl41tGlyXLKw40DyhBG0M3cbpSIwmnruahrFD5NosEpV2PIx9JXul2NyGkKqfzMyKcG\nXQSpmuSSZ1/mLyp5T8rGpPOMxuJbz3oTvIkTp7SrZ0t70wTYaiFn1LcrmWlV2XhsOywInCWNzjLa\nEdULErY11hksrchZKtVZ0RKa2FjHu8b7KtbJR8kp3Af+rNyqu6/kCb3cTNk31sDC3N3cvWJrzNPf\nbcHS7b8JKo28Hb+2Xc61EqEN/d5hQt1E19ahDNjsvMHZpGvSDEE21Iz+TT1PPdx5YpHLRNsvUrhA\nms8qq8+lbZTyvR8ZuFLDVaa1mMgoVR60+eD6gXhdrNe169f0fUcYrt7ZTdmLPVfIauFcKh4ZXuK7\nvDyQ+eFNaMHeTeM2TB4t7uKkXH4VDqyTjRYaTuKAqePkM60aHeK7NOKmRORuvTD/LKw4LuQuftmk\nDc8KXuWkGORLXsBEbs7+xeJSXuL75s7wXeYaFOVbruP+XDnQIZvoZuJDrubborEp4qQ92omflSH4\nIt7+FazlTdGb5ZTjXQ6RJ52v0svEVvjkzNwc0Ml0gq7mREvEWLtxXEtTOnlxPSlwlWzmUuLn44Xo\n48nlcl62W+2cjO16pn6KzmGgLy7qU642qdZXBGfUYgxyoT3bE5XGLdtenr4UrA7n/TrqPD7YuHXC\nxD5Zhz2ObW6hCvHoU+7IpjlycvbZlqW0fc20dHq/vT7Qcf7qQvHbB6vkri7mfN6Ne17jw7ztFZvm\n3v6+aD7u2U3cSL6/6j5Q7E7uhg4Y9X7h9x7vDVVgum7lAc/gAn/j4+Hs+C6P75g54t7tYt7eBw3D\nt7SQnH5B+77iwd7uMFXoh86v4N4UF09VYe7vLyL+04TFLShfg0FTuOWO7pjZ8Bmf8CBstqV+WbcM\n5Qc/8gVd1nHq4ba76fN+5jnf7wUNyzX/xyr+FCGvFQhP8vtTVG1JZ05l7bc68At+9SML89yu8Snx\n8Uyx9OoM7ztPec9d8Wv27g5P8u4+9GIf2CA23i0P998I9rjJ5IQ0Yb1O99Vl9ysE8W8W9NWq9yvK\n92lPwsMOyxA5+OHBS4oeZYLp9Q55e/nnP6HaNt1LxlaP5Sor+OHaFjcr0iMa4RC7xCne47ZMd43f\nxGgPFEX8gfTHqKgv1ScvN6lvfxz+pnet0WAJiGCG3GZfsFrvExMnhqlJ4cV3LmrHx5yKqFu4yl/+\nfXfJDhWcj/OsP3c2f3l/TPteOHXG/q/ZWCKQ6ZrzBLiardNILffoT8yrL/xR95MgxdiOjfx+Cfp6\n2YimXKalN4KSevOMGPw8cf8AYcAAgIEFBQ4EQNBgQoUIGzo8KFDhQ4IJF0bEmFHjRo4dPX4EGVLk\nSJIlTZ5EmVLlSpYtDQgoYCDmTJk1ZwKISZDmTps9ef60ibMgUKI+jRZFelRpUpoCXD6FGlXqVKom\nnVbF6vJhVq5dvX4FG1bsWJJXQ1rkipasV7Nr3b6Fm7Vt3K8M6d7Fm1fvXr4Rr/IUCNho4J6EaRqu\niTim4oOCHRceHPnxYcmQec7tm1mzW8ybPX/+Bh1a9GiWnSWSFm0a9WrWHlW3Pvka9mzatVHDNAqA\ngFOmS333Bv5beHDivmXbRv75ePKOy5k/hx69a2fdBAgE2Co9rHPt3cdy7w7e+3jy5TX+bVzdOu/G\nQ9sTJqxT4uLEMi3Sx/++fn74+/Xz968/AAf87yXzDlxLPOkURLBBB22jTr3rMsqOI4o2mqg8Bh/k\nsKwOD9rwQxFH5As3ngYIwDrschLKrpvkK8AinXBq8T6hchoux+J21NGoEEkEEsQRfwyySCO/Ui0h\n7E4rKMOLFqqIyQwvHI/IIz+0EsIrt+QyLvQoK8BEhXCMUSKGyIRoIDIroqmhyfwD0zI546T+E047\n82uqSz0zyrK2PvcENFCOuJtSSowmivLJRJn07k9BwxvyUUknVclE4RJa88UbZbQvxkxvdI9HUXsc\n9TJKt3QUtlRPZbXIVU9ysspWjXx1tVpnxfVB9AQskFdfA9zvvl6BJfDXYokd9tj8bs3V1kibhfZU\nZrmcNtrQqr3WWm0FtXQnUEslNVxwxxXXwG11ffZcda80TTds0V0XwXeVi7feIL+0z7rr5GOs38rq\nxPPO9gAeWGB/3ww4YXPtJW9ezxxmOOK+qNN3N40qxPBQuzI2MzqIJeYsXZBHbvinhCoOgCcYfYMR\n1JVvyrRccmf2kWTtPs4MZ5t3Fss0FFX+RNRMioa+iMopN2YUOZ15nk5kpp/201clZzyN6oXWTFQo\nKddU8yA3kwXb2LCRFZuwpaGu6my91Ea7bZdkM8tooWPdWO6iI8JYVbejFpHtvf+ODbgWhxq8Tfui\n9LSmGT81nGbHZV4YcGf7lrzyh0dCi261OIVSrTSRNig5vy1HaXS6TCc9dYzwVfjgOQ2ObPGCW/8X\ndoRnx50x1FUXafe3fOeddODxznu24YMf1GnklwerW8gfh/556U1lnvfjq287SXWvx/7e7r+Xi1d3\nx1aWfPPLJjv98tFfFnzLuXffZoqB1hZ+1Yvv0P74QXY+xorZQwqNvNWblx3lW0thSAH+Y0YcYY1K\nf6TDH4ceuD+GRQhlIKEbWahEIZTEqnQUXEsC5ya0Bk0QhPFinQF+ti8WySdznHMPWmJUEU6xKDBn\nmk+aDle4TkFkhmw6nNeElcDGvU5hJpScBxUlrxM2MTYWAsCSljjFKS6qioa6Yuiy6CQuhm6DT3Ri\nXRglwqSZB4lhtFb/bCImrNkIZptyUY1iJjs69rCOMCPcHO1oRwEqDnJn3FsXqWhGNBbyI4TCotcU\n2ZCtXEiQj8SiByG5ReLhrVKGTIuUkAY6DWHSk3xinw7j6ML6xPFzQrzh1gh3Q0yNsIWo1Nrm5nOm\nMbknlGb7JMkAmUtpiUSJcfmlJVv+EkwP8VJiuzSmpNQIlFZGr1QNzM30ggguZCZzctYsZDX1hk2s\naBMq3uQmtfp1QNcRrJy2M2Luake7250zJuD8GzxbIs9w0gpDFtsWPbOnvHrur3/qWZIzpSlQgkau\nn0/R5yUPesL5raeMirSQSoh5qIc28iwSRSUoF/pNfm60e7s6HMoGBEQB1fKW9gml1fAzJpOq73wo\nvVp7Egq1mX7Qo/7cyAqXhKhCGapujEzg0Gi4qM1lrmqLhChCYAnDohJNiFbcSk2ZJlWr3NSfRJla\np1zmx8TdsXA81GNXg6JH2YlVrC0L61cZx9WaUHVnbi2mVcEHN4i+sG6RxKsXjfr+pKfilZF63Wtg\n80rGnpYRrrrsqFyRl0LF1JKoexRr16zmVRxJNqaTjWFm45OYPk6Ea6HKo9ZAe9iRkTYkplXsgnwJ\nEYt+LmiD/aleR8jX1va1SXtVaiI3CUMtGjS1JUHtIX/70YIWF4HGTUpZ2zpcm2KJudWTagTrUqHg\nVjCxz60cSNfn0pNu17sv/W53fYtd4VKOvMHT3rmqa6/1Ju+81mOmxZA7UPoWtL0ovO573dZQKUbr\nvuv6r0b1K7zG/s92g9ssnkRruAQPTITtrIxK56QWCFNvwK7J74WfZkF9BQCDHQMxBy9G0RE/FFar\n7W1VNdycDK/4rUDRaY1cKGP+hLxoj6OkMZqauSkW9XiHbYIjLW3cwq060MXude6R4wlFKU6yUFlL\n5GAjuUkpU/JuSZMui5Us4PxteW/abcxfuGjKJpW5TDE9pWV/6Nn2YFbNhP0sEWvsWO76J8DqbbGX\nI4ZIvvq0zFaeZFLrWuVB9zmjJh7JnfOZZz2zNzgu8mENeThKh+Q4hm7syYw1BWQ69vGHny5yuRRd\nP0Y3Gr8XTbFmsow5RCfa1AIZNaxfvWF31jidtcb1Oh3MzlsH5WvmrNmrYz3eWR8TscIudbHrh9X5\nNru+f5z1sIetbLK0C5+kpnaXs13aknaYX3UOL7jBO27xim3a0d42tylk4N7+1tYjq+ZYbq+ZbibS\ne88mk1DKoommgt7x2cY9d7PgHcyJaibg9g6fRmLcOS8eWkZMBapTSfjF1NQT3iQZ+IdJc3CEp22c\nUaTaVk9j1j6OXK2XhSnicgjsCve65XkKZyMfScMQ/1TmQGVtw4f618t1vF501SRSZ/taJw/9qIKu\nODaD6mdAR1mYPYU603vucwALrnGe/tZWKZvHsZq5h84mF8fL80Un37VoEccy07t48ZBRHcCrBd3N\nq4ZbWQK2rxTPVsyfbuVCt3btapf6ZsTudoSWW9yG5w8PEU/uwy/Xo03VrWDlXemMMrWuBV8b4be3\nGs9tXPMdzPvn0wj2f5f+3r6iLwnbf4f6NEYUz6yHzuBhD0aVyRedLHd57nG/+9v3/p3oNu/sccVf\n1etJ9pSStvBz9U8DM0XGB2SmT6C/b64XkYDTj97xJ5V85c+KwyrSOM+pIn4Ro7r4KjY197vPKjDH\n+JUgtov46U44TLF0xvLPYVDlSMJp5nDx5ga+JFu/XsIQkKsynuK5qLObmburBfQzvJsK7VOmZBtA\nV0EKNqI/TCurB+usaTo5f+u0tMIRlUuc00O24KvACTS/MsqgduszKMuiF6QkqGqaExTAFHwUxsqN\nIbKRx3olHYs0VuIqBAutVjJCHss/zno53yO286IuCsRBRsO80UhAtnD+sc6TNRSMQkBZph0kPYFa\nmWYyPce7MCsSEi3cQuM7thV7QjRMQ3EKkAVjvHCjwzm0w1CSwC1pwxt8wy6xtjwEIzY8DyjsQwdh\nPhX5wjFMRAvTsD3UtkL0w4upmCxDQFQTpo+oLSzcC0AMFPWDRFRprHxjJyJcmVx7k6/BLN7jNVXE\nHU7kQkL8REJSuBTZF/7LrfhLqvnjKdmyRbSDQLxwxT3xxFikFawSAALYuk7bsbUiwQ+ErMFBK0WE\nNht8RGK0J44IgCbTJMmLuKi7xQMMvPOzQmqUIGtkF2MRM1VKpYbrmlRSPBpRJTeDxvT4v8Yrn2BU\nQzc0R30sQLRTKvn+q7vb0py+u7tLLJEArMZ9JJEuHCDQWkQD4jdp5BF8jER+VEh4OQtxnK6pyyYB\n8MiPBMmQFMmRJMmSNMmTRMmRzJmL9B5dM0XdY8KXZEWZFBiKHA1LoclVjEmXDLaDZMmFXMNsUq2J\n+cmFZDaJRMqHBAqbTA2lHEPuYcoK/MPXMyS3gsqifJaV8jZ7vEOurMc6BEBMArOv7Mo6vEqs5EOJ\nYDfXKzS2jDdNNB5PcpS8IbhWS4mzREsJwjeRUoow/DqIPK7qS0ppjErQYEgd8bRMu5Rnw8u8NMSc\nosUmgzz+yw6bq6Sjs8vbkEut0KKHi5K/2jmkC8RNdMxyHIysoo/+ZFy5UnrGykrMAspJdVpCnfw9\nsZxJxTS5Ebyx1pRDVmzM0jwQoKNMQrOtMTOqX2SNwqQXlli6zgS8K1uJ3wRODbE6rts6PLpOrbK+\nwRQo5XwYciGls9pNkivBafTJ6QxOX9otf1w6wvKcBjRI2vBOwWNOEnshdoSSzHQ1okTP9PTK/yQQ\nCSPLARW3B1q1jMNE4oFLd1s9AC1LW+LK+ezPedoMuNwm20DQdxO0CtHIbtKLDvWLCUWbw3TKEmXM\nz9hFBR26yTwanFMiKIu72foOE80+EaUpt2w9zxCkKwLNBxQ68vuzF3W65hnKruAkG83KTLM92pRN\nmGTS2IRSXdP+H6OJ0c7hLZprzzHSmCmTvGpLyS8F0zAVU5OMT6gAUiRNy4HYyhxdicp8ih29MiG9\nrT9rS0dyOjjtmSLtzOasuRSVNw6twlvEOTSFEJNpvjFUILaKPh+jUaWgjrzwx8obo6LiUtta0fsk\nyARp1Me5iuYsOr6jsqabQkI1zIvJt6zAn1Qd0vM0SEzt0ZzrUxDlFj11QMqroiP9VEk6UlLVTP9w\nvx5UnKBKzRYMyMWwTGPtUWMFSwcNy6fixqOjwRj8OQJd1mqVqVbNq0zNRHCETl6NywLUxqaL01UV\n1TIlzfKzUmiFP+I8tdhzPc2BV0uNO6GaVEv1Vlu5QOzEIdX+9JTni8hPs859DRXs407jKLE7lcFP\ndbSCna8/GdV7TciOkNOik1NtZUHnpE8N7cVFortAZa8xBdmQFVmV1ApZhdibcSf7c0YzsT6b80xL\n+6GjUlYnbdLbZEQ0wkmenM2a3cmbPdm3q42HhQsJXUmPKdqfLVSGLT0x3NSeINqJaVqakU6kbY2n\n7Z3NNFr+pFr5lBprpdYH/Vo8xFqvZVYHndqt7dV1s9ozrErVGtm3/VK0lU9DpZ+oVVqpfQm41du9\n5du+9du9tduwk9vNWzd9cQ7MU1UKMVlgxNp4m7fB9a9Q5MuDIULBKEXc7DrY1FmajVKfdaKcvQl8\n2tnOpdn+tYVcYls4UdrFyrSry0xX0azaxj2UNfW80x09AzJA8rROwFTN8PzLwM0R080LNZIQEhXM\n8nS+HYGm2rRdaBFO48TTNKvE/ETOtBVKU72gBP3Ti2O7XxLewR3LYFHHlGsz8lWzpJohJQTbsv2u\n772LsUzdjUlfUNO0WJVfHAKx9JUzRmHe5l0+zGHRnQtNHTolXITd5JRdxQ1Xig1SboUk8osq/3Xe\n6kxUZwKru6Uv9z2dpGAPZVQrAfLX3SW5OOqxUOtfCW4V8LBQrFjhxw0jFUbYMoNBizU0iestDd5a\nHRzdzbVZzuXhnnVaudy9+z3CyAqy3MzAYQ25+kvNIMb+OBQ+kvRaNFvUmMXFlV1NExhONbfwXoyz\nYihO2toDIAwGXiPDTxJDmzNlFOMdMjKWvgKC4S8GY64t3FrMUTU2Q57BY4OwytSb45bUSsOFqSb+\nla/pD0NmTd/NGjQRQrJ1ZHNR47+J5BAFFkR+5LAlQxT7Y346mQ5z3IP9ZA7yxhiW47fR0tSZZLZV\n29h94k0eEhiLzM6qIV+D2SEKVk7Tzg6MP0z7VzeuzVRuG2B+ifgCmjJ2VD92ZX7MKjrd4lwFx8+U\nsuptO1HST5sJ1eywNkFGZnSFIgpNZhV0DDFh2dDRFCSWs0o8s8VhEwT7qq6prB9+UikVYv/oZPAb\n4nj+jix4bsJvBkVLZGa+I+WjgsG/O+ChTeCIiN9Bda0U9VMyqmYM42dusbp9FaFzbiCB/UEfyiys\nCa3tNFEcHtqimBpmbM3MHc+BpaaIntXnENo8FcvywthAM7sxw9i7VOlOxORLBjdhyelxA+kGLZ+Q\ni7MkTGeiDrEzM8ubfkV1a1sAdrigIyyfutLoVGphPEpjxuqezKZNveCJrOp8XOUpbmpIldWf/lnW\nAahv2+G19mG27mGYq8q3BmK5PqKvrsjZ1WbtdWiNNVdTFUeMEdoW3gizThA9tetifGO+DCAgBMPf\nlZ4K3jeCXcp5zuriIGyI9ZlY7sXVzcUM4uxYzUX+h3PVrGldhTa7h1ZlnDXswwbk90BNLooz/G3n\neVxHNnMzlHOTQinqN4tHlBItSy6Qy/6OvyVuuGVtHU0JcXzebZRp+MxPcX1d3BLXB+5rJDvuqpZm\nvrYKCv7dSetus9JOET455A1vxHFG3VVnjzZYLr5utPRFSlVdAo4rDApg/AxVgazXSlXR3dLvf3xq\nZr44BlncUm5vwvPUS2Rgm0KYDKFrnsXnXrtcCJOdWhNwBZ1XZ53MPi3wPqTSQK1E5Xbq5OhQwR5E\nAJ5pB+bWDU9DO2VHOFXuyvblDDaJWo3qLTptFS9E/evs924ubo7cbZZW6EZtHOfwIT8t8bk2nVb+\n8vVdcivZ0RNnuOIkcveWY+LDtinH8qg4RIda7EojIOm7PsjucpVxbKwS82PO8jQ3ZcXN3nct6GEy\nco1DseITbjX3shT61SLOOR3zbp5KHKXKaEWOpSNk2RyLPxsjIaSG0NupcztXsiQxQBq/ZnWlcd0K\nR3WdbszcYoh29E4Hrnz1QBKuPg4c4ZIGwR2aEeXi1/N+zXBpdE+HkOKW9VmndZKFO/tsS0zHdIXl\n0HHNdABHP1jXMLMOXyUO1qARdPyrG2Stq/c79vi+LEod9Gans/YVdhcj9gfRyJYO0Vr39pC99uG7\ntxgnvTMPIHPX6oYJd+/bs6BU93Vnv3Y/Tbf+nut6f/AG1516g3fkk/ewvvJO2nd+ryC6rUUYz+r2\nevXDzvY6vjaN3WvtHj8Ct2n/DHgVZK+SEsVkaUGykUMCZbOeFluKr/iVvvhZpB9oN+Dnfk/41vCJ\nw1QClvhgf/eRJ/lJCXAzDyhWJzLsNHXe1E1++2D1TkSEp/kcPBUSp2Qkg94hnd6l39PR9qvq/g76\nBmykf9+ir3lByWOIXnAkvqF35nkGU7zQaqyvD3pFwnd9Po5IjvkIxHqcPvr5xsT6dtPNjlTI22XT\nrmkv0d5U2/qjffu7tvmy4G4YVy6nXPs3T7rAF3xJCfAQp8K2l/mDlfxxZHw4pJTHZ18m53z+kEeW\nxI9zrb38c7SuUHZeqs/1xR/9KB53MSb318dbkV990bNyNgX42Uc9tD5Uyt20tuZcaCLdBid63M99\n7PVkvVb8quB2l5ZF4td27vUvWC5mjT5CEoQsW5tf7KclPddfHOrlj9Z352+Q7v1xU13gbJ30cS0s\nB4RgwJ958Y8OHWetpprXoWJ3YknHdFX03lZ0fuHAVAcIAwUAGDBA0GABgwAGFkxIMGHDggIlQpwY\n8aLFjBU3UuwYUYDEkCJHkixp8iTKlCpFglzp8iXMmDJn0qxp8ybOnDp38uzp82dMggcNFhQq8SDS\noiGNKgXq9OnMliqTEl3atCrVpFpJDmX+SrXo0KpQaUoda9Zl2bNq17Jt6/Yt3LhyXyIFYFfrXaZN\n814NO/dv1ISCJw4efHfi4YEP7xq2i3ihQMcOHR9OrFDwQsaQHRLuXNgz6M+iQ5NOmBbw2NOoV7Nu\n7fo17Ngiv+6dXftoX9m6C6ouSfv179a9d9scTvw48uTKl6/u6ljsYejPwYL1y/xvy88RG2sHvV1j\n5+8cB4vvSF4yePLe13dvHx608esq48uvb/8+/vz695ekz3+1f/8F+B+BBRp4IIIJBhbaZqU5OBqE\nD0oYIYUTWljhZwPup6GCHXr4IYgh7tYbAARwKGJxIp6IIostunjfii+mqFGJBBAQwEP+HoGHEUc8\n6tjjjkECOeSPRfp4pJAdxWjfkjI6+SSUgDUZJVpc2WhjgL9ZBxNfK23p1HQxTXndmFSaeSaaO5WZ\nJkkCiGbXlTdiCJldmOWIIWg53llag3j6mWdkfw62pnKEsnkooomypKhOvQ0QgI04VndUXUI5Rymm\nCl2am0LUUbqpp51OGt10lEV31UuGIqcqo6266iSrh2YXnl2SMkTUQJzlSpRRiym162KcIaTpQcAW\npWtSxuZKJ65iGYvQZsU2W155sY74KrbZamttmvFJlRWpSvVaXVZ7hWsbsbd1Gda6dalLHbsycSvb\nvNrae69+9Zrp5oTM7ooZZ+P+Gyj+rv4i5pnByOp68LJvAuxvg3UyfKEB+r5mMb4Za7zqxitpeCqp\nXvX1nHMlozqyyZOGWpmpoFqql1ipqtgxzTV/iDGUsyJ561BE7tyRr0n+PLTQRXMUtM/g4cza0jY7\n/fRaTcv48Zc2hZnc1TKHKDXUXXvdE9cu8isoxWSbXTbaZ+MZ9lxsf/023GLGXfHcIbkd19116703\n3XHPep576gWeHuHjFW7e4dSy997ghjveN4h58z3525JH7puJUFve1uaUe25z5x2OTViNN+6pdtqp\no7462qGr5frnseMLO4KqlZ75VFb5dvJtI2UtH+2pyT488WTNrXNktweQ9K0MQYb+Uc9F5hgR0kYa\nbT3z2GsfPFTcF/89m94T6Cikpqssarjsvswrbi+DGjPwM4M/P/2L+g1hrcEWrHCz+htlrP8ClRnD\nqK6ArMuQ/OqnQPCJT0Ao+Za5SEYu2pSrXOyLF4wSuMANyq6B/Plb4ZL1PIJ1hYT7Y5+yBiit6S1O\ncIx7oQtjmDj4aJCDNpycBzdEl1KR7Gru6lQJzdU7+JGphjc84vGO56eEGVBCeiLYAZvIuhyCDYlW\nrBsV80O1tfjld0Xc2hXDWLkkXo9o2TOj9tCoxjKykSNZVJMY46g5MnKla29slBzzWLM7Mmk0JQJJ\nFAMpxUFGkY84MaQeE+kaRH7+cTZXkhTojKjISbaKkcwB4UDiBEhp2Slaj9vOCNsTLcscLTLUQs8n\nWzjDxkHuZpR85assuRzbKW93Q0RJ1XSHQd/x7pZ4kyQsg3kmWRZqNI+K1AA11axOcucxKbwTY5YJ\nMcUkMzERI2QBiSkvYXIzfHT0HQAgCTPrWBBcWHlXzMr5rl3KRZty6yY8qeTO4yBvI9n5YfSGtRhS\nQSRkEgtaz7KCrL00b1ptTOP15qm1eDJ0at/EpVWCaEHcAPFkEz0nRiuou7YBs6Ee9ZBCR7REajLT\nhJPRUzWTN8qVQvOfKW3YxAR5tpB67KM27ajTaGrLXLJFpynx6U2D2iYyslL+cUVVZSqPqh1UIi6p\nMFxlZ4B6EqkKtaqt/BpVY5PVoVq1qw68H4Nkik2xktVCWx3JWb3a0LRKCXNs5RxO1SpXjvmNR6Wz\nFULPeNA16rWved1eXOcqWHo9tCia9EkQ2YfRpfCUnoEdLGSFo0SEKU+swUoYE/VX1s3SEIyR/ey1\n6kqSY5ovL2Hi4flKdUFxtQxVjdXNW3kD2tlqlai0CidATcosfZpyf0J5FsSGJSykNrW4Rn2qUwf1\nWNoyt6eFtV9GyYXOda02uortZXJie9Xmchcu2sXbSE+4pwAOrGEvneY1OaveiWj3u921onvfMqCJ\nnkuZqaUoVkTGzksu973+/vVJfN1Sz78eyWB81RFS/HrgBSe0v/99cE4CDFegeNFqrw3t5SCs4e5N\ndr0eHiuIR9PeDZMYKBJ2ri2fduISs/gmK35def6IXOMS97gyTC5Ub0xjpUa1xT7O1ovPYrtHXjiW\nPz5yJTtMusOWd5lOBhigCOjHPoW4yhFq4Gt5WmQiVhjJEA6yWWgZpwD45n0bRRd+0bVl4mhzzRBF\ns5dbDGbhgYe0OOKZqRoiGbxUalIL+6dFQkngvRI6e1g+H7xSe671JfpTxEJtl+M81zlzuMziTGd1\nL2pdjaY5g7Khb+/UqReRqRk64iKipCFL6aeMTjRjoxOzBDZNlfJvn5T+Id2Hc71d1mCQuo9ebK/4\nAq5xmZrYqZ7tqp0y34hmerrOTrObCRubi2r6K8a+JaivfezIJtvENjZlNBPcvz2776QTq0ygeazj\nb+O43btujqMZmzIKxtu+FJ33dbfN7efyGrvx0zfAW9Ttn7TaygWUmK4/PPCAl3jhVdybwxmu4YjD\nsdCDVrDFGYxxv45Y4tumOB4h7mCPf1nJCTf4yVHXcZJLGuQRFgDMYy7zmdO85ja/Oc5zrvOd87zn\nPr/5yFnuX5eLjegcFXqcjc4imB9R6UhPlNPByHQbRv3p3mQuSKbOwapbHU1cF51EtL7Ar3ddnlgP\nO9mFXPYfp712aKf++tp93HYDpUXs9Zt73MVG27rjXdl5Z3HfP9imwAP47w1H9uA3SHjDuxK0qrH7\n/BbPeLB/djiQ/57kJ5+gzDPJJJcvHuc1T/fKPzD0MxL90Cu/cwWaHvWCb+7n6dd61+eLu7GPPO3f\nO3sm7f6Que9u74EX/NP/fu+2H35NkF/8Qh2/6cs/O+yVH5XnGz/6zqe+45t/Q+ljH7bah3v39239\n7Ydf/Fjn/jvLL1j005P9C1W/XN0/IvnXFP6T/v7W7X//8YNf/16lP70A4E/5n1oJIGzcHgMR4P/h\nn+IpYFcZ4MVAoOc5oFVJoHBYIFdRYFBhIIBwIHRpoE15oJSIYNj+geAGMuDYmeBNkWDbsOC7qSA3\nedDPzSAN1qAN3iAO6tz1weBaYZjnuKAL8qCL+SDlAKEQ9qD3xY4RHmE8yWAH7SATxiAR4hAURmEw\nOaESVqEVvhIWfs4SbuEVTiHffCEYcqEYihz5lSEsdeEPaqEa6hEbFqEbvqEcxSEVpiEdKpIdjuEc\n5mEY7SEa9p8f5hEg6g0ZDmIcFSIW9SEiMiJquN8hNuIVKSK/yZ4k1uEZGqIjXmIKJqEXbiIn3l0m\nLiIehiISUaJoCaIpluIBPiErrmL+eWIbviIsdqK0fSIt1qIoyqIc5qIu4h4v3qEq/uIu3uIsDiMx\nAqMx9iIyJiP+5o1iJSqjM1piMPKhL06jKxZHDm5jDjJKJGIj8ZQJIKGclYHcN4JjNiZffZgjKKJj\nIKrjxl2cPB4JO16jOwqjOv4b1LXjPUZjlaQcIdVjM/YjPhpPSnRJikVN1HAjQzakQz7kzAUdQdqR\n76XSE4kHJ+WYRo5H02DSjs0Yu33kutUYSarbRr7ggQQhLIpj7oyMyqCWqNhbTEZaCcLYO4LURA4P\nS1ZIXkAZec3aTwYMFJVGRwKkUZIj2axcTh5jPr5ZyQwbVKKTdA2gTWqiZy0lUxpP0kjURnzFQKVb\nwZzaGXWkxs1jxp1lPJblR0gkVu6R7x0kftWXXEqQdNTbVCn+ZE4g5FicCi+hWl9Gm0FmWFsW5PQd\n5QEVpRR5Ejk+kcM8WZQhJXux5WBuDEvqY5jpRGLx0A9l1GaqFjjdW6bAy62tDE3ChFJOJimmiLuF\nJGuWpECQpWsKDkJeFvX0VlCi0G7hmngdS1ji5q/M2mp2lmCiZmo2JX9V5U1YW8g8GwXVF2hyJl0y\np79t01USpz96DERmJ85FTSAp5ungZq2Z0HgxDFAOJQDpFv8UkmRap71UZiNdZl7GZWuFin25jGYy\n1nPaWw/VpS8ZJ06y53XOB1qaZVrCZloOqFoiqIISyWkCqNe453Gq3U1SnoOO0RAapgEhJoZuKGQi\nUHVWKEX+DqFl0plVDieIzpGLaaeK0txCrqiLvqiLugZgvt+Jqhg3riNelihNzOhJ8Gj91SjrdWiI\naaiQciiHjon6JKmn3KdMFh6QBumIVpqOBoWvdZF0+mXFPaklHiiXzqOBEiiYJmiXiilgWY0uxVul\nqBOraWkxRih8TqlM9NqzPaePCiib4p6Rpk1Hwiif9mlD8gTIzGU51ekD3ak0zlKOFidOEOqbGmo4\nhlBrmmRwCsaXjqSkiuRJRipIxuZJqgqjkqij6qRJyFhtIWeAflWoiuqbPFKeuhp3FimstmqPoZXb\npaqoWsmVXFia+qiZyZappiJvZB1QqSQs8qW8FWqPwMn+Iw3NCOXTQeXWRXwpmU7rgobpgEqF3SHg\ne9qqvSQWnPWHSdhZny2pZ6LpuKIPX/oFbGpi7Gkr83Ervnhr+yArgwgAAdymZjkmvoqnblLqq8oq\nwFaZu/opn8JrvHYajY5EAFxafkUn/CxaBG1Fp61rX6pYxVgesRosmCDsPxrXq6Unbw4XcH3leELT\ndlQqYmSOpW7qpWrqyr5spgpntmasxm7sdBbqDs2bt/qafvbQflHsURBZTrGEsNZsZIHMzdrNhTAR\n6uRrY54OkWIGkz1IZlHMd/IklQWsh36g0R4Zh5TmDk3FlgAtWIxZS8KkS7hZcFRj17ZctVKrz0jr\nRIj+q7mRq6XoGUr1k2k5mt5iCl/005i+rdK0bcBZEtlSCsOq6bgo7pWO2plBI+HKXawG5L+GxscW\njDUJ5f/8bXkCS7gljzRpLWnQbOTS1bZKKVwuVm0Qm5VumkXhJ8eWaummGsFmJ16ykmVYk1f82Z7V\nGiqlz61BmcvG7KWS7uxO0rJh6Vus7TKm7fEKnU8VXIQg3OROmeheWZx+6vOm3vhYI10o7/a6bffu\niKDBrbUGLvqWaVCEr8dFr1uh6PqyL8NF76oiU/Xer8LNhPbKL/Sh6lIcVkvqp/OmbrrslLGexe/E\nyP7yL+KNb2Eoa6QkVW7qj40JmmyKbIPUZvNkMKf+4pi4KRcDa95pHDCiteJolY84wSS6zcZpqQ9n\nHiumndMK82d9ShS5hqZeqmsIizCafckCmxj+4BZ67uYDh6fnppARD7GtMWYyGXF5XhaULYxp7PDk\npYW8nhrb1iR0atoWo8xUUtuVFjBdMu6nuMvPUjHjWXHsOpbRCBRFWBtvVo8+ZcZVkOwbE1Rv8gyC\n9aa45RYLTUZFRI/xovH4xiWOpi2T+mx+Bip01lsO72dmzmdM1icOt9YZE3LeqXHS0kt4XS3+fvL0\nmidKYjLJjbBn/vCaIvKrJDApx537djCmTirLzjLMyrKODXIra1GBIB8u57KnCcj1grLB9bIvH7L+\ngNQuMifz6hUzMxNfMz9zrUKzNO/yKE9zscohMVuzomgvKitKS2SzNiNKkqbrUzIpaVqsr4azCe6t\n67YzGQ9tOqvzOp9pw5Jxmm4ykCmtPKugnKquO78uPMfzPsMgfY1xBMFwNzuUPg80Q5vwQjc0RAMI\nrUY0RWMHuFb0FgJgb4AzRnsz6F10RzMh/RkHR4f01XVQzpn0EVpgSas0orC0S1shTMe0SLcpTcPg\nTN80D+a0TqsgT/c0CP40UFOgUA+1Aha1UfsfUie1/S01U6ufUz91+EW1VGMfVVf18101VhefVm91\n7nW1V7seWIe16I01WVexTZ819Zm1Wv8dW7f+tSunNVz/3lvPddfVtV0/HV7nNfTKNV+XtV//NVpT\no2DT3l4X9vwGNmJnsmIv9todtmN/XGNHttVBNmWL76FedlwTtmYzdvgoM2hHZGevn6yYr2m/bUuP\ndmB6nd6pdvzJSjB7WGq7dvqxtsDRdgHCNvHS8m7XskjONm5XyUmjCHAHt512C9mQEtU2maAwbYYa\ndwWW9vfiM6N2c3FD911e3RmV732SVLF8Lp6NymiKCkkR2HVjN0jb9gDTsz1LZePi80Ojt0ctnPTy\nyWfsKxITsTLlN3ldyHnLN9fuC5fQ6Xv/s4G72X8DuBZ7HcySkmrld3lT02/qrnRgxq/kWIL+K3g1\nv4jUMO+EaThD0XfKMZVhZriC03drg3gTSnf6nnaLmziA03dozziMy7eIC7NR1jh6o/htq/iKh49v\nD68t93Z66Dh28/jS+fiPIzeOx6qRQ7eM0zhoKzk88XiLC+6LU3k3ITlxa7kUAnmTp9yTGzeXr6eX\n2yKDE/mQr3ksm8eYB3eZf+iZ6+GHkHCTVkxso9yb43ZaXXEvDUdCS/Scm2GH+DnM+OrR4A6Wn6+X\nDjqhK4ifT6DvCO3oOTryekik90f9YomDjCcgh7ln7Dlt9/kaZyBjme2olhr4Hp2lJxJbIa3yjk5E\n0G3PotT/hKyat7mNibprxznitq6oPS7+07Q6nYM5hIxO5u4mNF0vr6u2r++Us+3XsBM7HLI49swm\neqAb4DL6tDb7aD/7osK3fFF7tRs7iFGv1np7Z4M7hZK7GAUZ5Mk6LAu5rs87Yai7Zq/Y1IkdoCsI\nvl+2hMX7N/uRyoK6TP07ZcfX7cUcrppPpbv7u0u5MttpV06ti6OHi3sEwkP8/Hne5UHwjUCFh/sd\nx0813/GGMaFwZuzTY/SkM/UP6A6MJ2/Wxpc8mxXtgrNw4hY4qY0Titl8+Z2GvBfGPZ1UcBFxNWlG\nIPO2Ldc80LupU6p6sMewuEfY0x91eJV3f1NvSzWxY6qX0199dv3FyHub2OvfgGW8Xf3+MbfvSNif\nPZulONwHPf7k+WHOPfyRiKI/PN5339Df1XfSu+Dbu7/2/VQ3/N6v97eW2a8aPle/SWVZbeo4bTk6\nvt+XhLie80sqcsOWsbATnOVbdYEJsR5Dq4FhxUA9T7O2fY+8fehPu6THsJpS8gtLO+i//vLV99Mi\nvRODLNcjpevjflup8soIUZWyls+DqvCLdZAT/ntQsPPHUPAvfzu1BthaPfUbtt1XfvaLdapvXvd7\nP3iQ6qKrvdBMf/h/+P/aL9+nv+FJ7+2MY3o6t0wpJkxRPrq/pvvzMDihOkAHOkAYMABAIEGCAwUW\nVJgQYUOGAhhGlDiRYkWLFzFm1Lj+kWNHjx9BhhQ5kmRJkydRplS5kmVLly9hxpQZUkABAzYF2hwQ\ngACBAABsAhBasIBQowSLIh0IdClOozaDMk2a0ChCgwiLLgVaFevNg1AhzhQ7lmxZs2fRplW7lm1b\nt2/hXgw7UejPhQfx3tXbMC9fhXkP/rW6FzDDwALnxlW8mHFjx48hR5Y8mfLJmjcxQ715uWhQr547\na2WK9OhnrFJFR/V8lTTo0V1Dg608m3Zt27dx59a9e2zii32BL6QqnLBgiawH+/V7+LAB37yhR5c+\nnXp169dFhsWJOWfCqHhd53zaletr1QWHcs3qVTz6gau9f0WMnX59+/fx59cv9vn+9L4P9wtQwAEJ\nLNBA3jjLTEHNGFzQwQYhfFDCCCl0UCgI+ztQww057NDDD2kaMEMQSSzRxBNRvC7B7jRjkTsHXdyu\nwRi9U5DGG2HMUbYUeezRxx+BVGzE+oYM0sgjkUxSSbkEaNLJJ6GMUsopqazSyiuxlHLJLbns0ssv\nwQxTzDHJLNPMM9FMU8012WzTzTfhjFPOOems08478cxTzz357NPPPwENVNBBCS3U0EMRTVTRRRlt\n1NFHIY1U0kkprdTSSzHNVNNNOe3U009BDVXUUUkt1dRTUU1V1VVZbdXVV2GNVdZZaa3V1ltxzVXX\nXXnt1ddfgQ1W2GGJLdbYY5FETVbZZZlt1tlnoY1W2mmprdbaa7HNVtttue3W22/BDVfccckt19xz\n0U1X3XXZbdfdd+GNV9556a3X3nvxzVffffnFLSAAOw==\n\n--0__=Y2POLT1gC2CXyjE0VwtryzPozZrYVOq0u8mliYFYfcesdwLvImk0KcCn\nContent-type: text/html;\n        name=\"versioning.htm\"\nContent-Disposition: attachment; filename=\"versioning.htm\"\nContent-transfer-encoding: base64\nContent-Description: Internet HTML\n\nPGh0bWw+DQoNCjxoZWFkPg0KPHRpdGxlPldlYkRBViBWZXJzaW9uaW5nPC90aXRsZT4NCjxtZXRh\nIG5hbWU9Ik1pY3Jvc29mdCBCb3JkZXIiIGNvbnRlbnQ9Im5vbmUsIGRlZmF1bHQiPg0KPC9oZWFk\nPg0KDQo8Ym9keT4NCg0KPHRhYmxlIEJPUkRFUj0iMCIgV0lEVEg9IjEwMCUiPg0KICA8dHI+DQog\nICAgPHRkPldlYkRBViBXb3JraW5nIEdyb3VwPC90ZD4NCiAgICA8dGQgQUxJR049IlJJR0hUIj5K\naW0gQW1zZGVuLCBHZW9mZiBDbGVtbTwvdGQ+DQogIDwvdHI+DQogIDx0cj4NCiAgICA8dGQ+SU5U\nRVJORVQgRFJBRlQ8L3RkPg0KICAgIDx0ZCBBTElHTj0iUklHSFQiPklCTSwgUmF0aW9uYWw8L3Rk\nPg0KICA8L3RyPg0KICA8dHI+DQogICAgPHRkPiZsdDtkcmFmdC1pZXRmLXdlYmRhdi12ZXJzaW9u\nbW9kZWwtMDAuaHRtbCZndDs8L3RkPg0KICAgIDx0ZCBBTElHTj0iUklHSFQiPkZlYnJ1YXJ5IDEs\nIDE5OTk8L3RkPg0KICA8L3RyPg0KICA8dHI+DQogICAgPHRkPkV4cGlyZXMgQXVndXN0LCAxOTk5\nPC90ZD4NCiAgPC90cj4NCjwvdGFibGU+DQoNCjxoMT5XZWIgVmVyc2lvbmluZyBNb2RlbDwvaDE+\nDQoNCjxoMj48YSBOQU1FPSJTdGF0dXMiPjwvYT5TdGF0dXMgb2YgdGhpcyBNZW1vPC9oMj4NCg0K\nPHA+VGhpcyBkb2N1bWVudCBpcyBhbiBJbnRlcm5ldC1EcmFmdC4gSW50ZXJuZXQtRHJhZnRzIGFy\nZSB3b3JraW5nIGRvY3VtZW50cyBvZiB0aGUNCkludGVybmV0IEVuZ2luZWVyaW5nIFRhc2sgRm9y\nY2UgKElFVEYpLCBpdHMgYXJlYXMsIGFuZCBpdHMgd29ya2luZyBncm91cHMuIE5vdGUgdGhhdCBv\ndGhlcg0KZ3JvdXBzIG1heSBhbHNvIGRpc3RyaWJ1dGUgd29ya2luZyBkb2N1bWVudHMgYXMgSW50\nZXJuZXQtRHJhZnRzLiA8L3A+DQoNCjxwPkludGVybmV0LURyYWZ0cyBhcmUgZHJhZnQgZG9jdW1l\nbnRzIHZhbGlkIGZvciBhIG1heGltdW0gb2Ygc2l4IG1vbnRocyBhbmQgbWF5IGJlDQp1cGRhdGVk\nLCByZXBsYWNlZCwgb3IgbWFkZSBvYnNvbGV0ZSBieSBvdGhlciBkb2N1bWVudHMgYXQgYW55IHRp\nbWUuIEl0IGlzIGluYXBwcm9wcmlhdGUgdG8NCnVzZSBJbnRlcm5ldC0gRHJhZnRzIGFzIHJlZmVy\nZW5jZSBtYXRlcmlhbCBvciB0byBjaXRlIHRoZW0gb3RoZXIgdGhhbiBhcyAmcXVvdDt3b3JrIGlu\nDQpwcm9ncmVzcy4mcXVvdDsgPC9wPg0KPGZvbnQgRkFDRT0iQ291cmllciIgU0laRT0iMSIgQ09M\nT1I9IiMwMDAwMDAiPg0KDQo8cD48L2ZvbnQ+PGZvbnQgY29sb3I9IiMwMDAwMDAiPlRvIHZpZXcg\ndGhlIGxpc3QgSW50ZXJuZXQtRHJhZnQgU2hhZG93IERpcmVjdG9yaWVzLCBzZWUNCmh0dHA6Ly93\nd3cuaWV0Zi5vcmcvc2hhZG93Lmh0bWwuPC9mb250Pjxmb250IEZBQ0U9IkNvdXJpZXIiIFNJWkU9\nIjEiIENPTE9SPSIjMDAwMDAwIj48L3A+DQo8L2ZvbnQ+DQoNCjxwPkRpc3RyaWJ1dGlvbiBvZiB0\naGlzIGRvY3VtZW50IGlzIHVubGltaXRlZC4gUGxlYXNlIHNlbmQgY29tbWVudHMgdG8gdGhlIERp\nc3RyaWJ1dGVkDQpBdXRob3JpbmcgYW5kIFZlcnNpb25pbmcgKFdlYkRBVikgd29ya2luZyBncm91\ncCBhdCA8YSBIUkVGPSJtYWlsdG86dzNjLWRpc3QtYXV0aEB3My5vcmciPmlldGYtZGF2LXZlcnNp\nb25pbmdAdzMub3JnPC9hPiwNCndoaWNoIG1heSBiZSBqb2luZWQgYnkgc2VuZGluZyBhIG1lc3Nh\nZ2Ugd2l0aCBzdWJqZWN0ICZxdW90O3N1YnNjcmliZSZxdW90OyB0byA8YQ0KSFJFRj0ibWFpbHRv\nOnczYy1kaXN0LWF1dGhAdzMub3JnIj5pZXRmLWRhdi12ZXJzaW9uaW5nLXJlcXVlc3RAdzMub3Jn\nPC9hPi4gVGhlIG1haW4gV2ViREFWDQptYWlsaW5nIGxpc3QgYXQgPGEgaHJlZj0ibWFpbHRvOncz\nYy1kaXN0LWF1dGhAdzMub3JnIj53M2MtZGlzdC1hdXRoQHczLm9yZzwvYT4gbWF5IGFsc28gYmUN\nCnVzZWQgZm9yIGNvbW1lbnRzLiBJdCBtYXkgYmUgam9pbmVkIGJ5IHNlbmRpbmcgYSBtZXNzYWdl\nIHdpdGggc3ViamVjdA0KJnF1b3Q7c3Vic2NyaWJlJnF1b3Q7IHRvIDxhIGhyZWY9Im1haWx0bzp3\nM2MtZGlzdC1hdXRoQHczYy5vcmciPnczYy1kaXN0LWF1dGgtcmVxdWVzdEB3M2Mub3JnPC9hPi48\nL3A+DQoNCjxwPkRpc2N1c3Npb25zIG9mIHRoZSBXZWJEQVYgdmVyc2lvbmluZyB3b3JraW5nIGdy\nb3VwIGFyZSBhcmNoaXZlZCBhdCA8YQ0KSFJFRj0iaHR0cDovL3d3dy53My5vcmcvcHViL1dXVy9B\ncmNoaXZlcy9QdWJsaWMvdzNjLWRpc3QtYXV0aCI+aHR0cDovL2xpc3RzLnczLm9yZy9BcmNoaXZl\ncy9QdWJsaWMvaWV0Zi1kYXYtdmVyc2lvbmluZzwvYT4vLg0KRGlzY3Vzc2lvbnMgb2YgdGhlIFdl\nYkRBViB3b3JraW5nIGdyb3VwIGFyZSBhcmNoaXZlZCBhdCA8YQ0KSFJFRj0iaHR0cDovL3d3dy53\nMy5vcmcvcHViL1dXVy9BcmNoaXZlcy9QdWJsaWMvdzNjLWRpc3QtYXV0aCI+aHR0cDovL3d3dy53\nMy5vcmcvcHViL1dXVy9BcmNoaXZlcy9QdWJsaWMvdzNjLWRpc3QtYXV0aDwvYT4uDQo8L3A+DQoN\nCjxoMj48YSBOQU1FPSJBYnN0cmFjdCI+PC9hPkFic3RyYWN0PC9oMj4NCg0KPHA+RGlzdHJpYnV0\nZWQgYXV0aG9yaW5nIGZvciB0aGUgd2ViIHJlcXVpcmVzIHN1cHBvcnQgZm9yIHZlcnNpb25pbmcg\ncmVzb3VyY2VzLCBwYXJhbGxlbA0KZGV2ZWxvcG1lbnQsIGFuZCBtYW5hZ2VtZW50IG9mIGNvbmZ1\nZ3VyYXRpb25zIG9mIHJlbGF0ZWQgcmVzb3VyY2VzLiBUaGlzIGRvY3VtZW50IHByZXNlbnRzDQph\nIGhpZ2gtbGV2ZWwgbW9kZWwgb2YgV2ViREFWIHZlcnNpb25pbmcgdGhhdCByZWFsaXplcyB0aGUg\ncmVxdWlyZW1lbnRzIGFuZCB1c2UgY2FzZXMNCnByZXNlbnRlZCBpbiB0aGUgJnF1b3Q7R29hbHMg\nZm9yIFdlYiBWZXJzaW9uaW5nJnF1b3Q7IGF2YWlsYWJsZSBhdA0KaHR0cDovL3d3dy5pZXRmLm9y\nZy9pbnRlcm5ldC1kcmFmdHMvZHJhZnQtaWV0Zi13ZWJkYXYtdmVyc2lvbnJlcXMtMDAuaHRtbC48\nL3A+DQoNCjxoMj5Db250ZW50czwvaDI+DQoNCjx0YWJsZSBCT1JERVI9IjAiIFdJRFRIPSIxMDAl\nIj4NCiAgPHRyPg0KICAgIDx0ZD48YSBIUkVGPSIjU3RhdHVzIj5TdGF0dXMgb2YgdGhpcyBNZW1v\nPC9hPjwvdGQ+DQogICAgPHRkIEFMSUdOPSJSSUdIVCI+MTwvdGQ+DQogIDwvdHI+DQogIDx0cj4N\nCiAgICA8dGQ+PGEgSFJFRj0iI0Fic3RyYWN0Ij5BYnN0cmFjdDwvYT48L3RkPg0KICA8L3RyPg0K\nICA8dHI+DQogICAgPHRkPjxhIEhSRUY9IiNDb250ZW50cyI+Q29udGVudHM8L2E+PC90ZD4NCiAg\nPC90cj4NCiAgPHRyPg0KICAgIDx0ZD48YSBIUkVGPSIjSW50cm9kdWN0aW9uIj5JbnRyb2R1Y3Rp\nb248L2E+PC90ZD4NCiAgPC90cj4NCiAgPHRyPg0KICAgIDx0ZD48YSBIUkVGPSIjTm9uZ29hbHMi\nPlJhdGlvbmFsZTwvYT48L3RkPg0KICAgIDx0ZD48L3RkPg0KICA8L3RyPg0KICA8dHI+DQogICAg\nPHRkPjxhIEhSRUY9IiNTZWN1cml0eSI+U2VjdXJpdHkgQ29uc2lkZXJhdGlvbnM8L2E+PC90ZD4N\nCiAgPC90cj4NCiAgPHRyPg0KICAgIDx0ZD48YSBIUkVGPSIjUmVmZXJlbmNlcyI+UmVmZXJlbmNl\nczwvYT48L3RkPg0KICA8L3RyPg0KPC90YWJsZT4NCg0KPGgyPjxhIE5BTUU9IkludHJvZHVjdGlv\nbiI+PC9hPkludHJvZHVjdGlvbjwvaDI+DQoNCjxwIGFsaWduPSJsZWZ0Ij5UaGlzIGRvY3VtZW50\nIHByb3ZpZGVzIGEgbW9kZWwgb2YgdGhlIHZlcnNpb25pbmcgZXh0ZW5zaW9ucyB0byBXZWJEQVYN\nCmluY2x1ZGluZyBwYXJhbGxlbCBkZXZlbG9wbWVudCBhbmQgY29uZmlndXJhdGlvbiBtYW5hZ2Vt\nZW50LiBUaGlzIG1vZGVsIHdpbGwgaG9wZWZ1bGx5DQpwcm92aWRlIGEgZnJhbWV3b3JrIGluIHdo\naWNoIHRoZSBXZWJEQVYgdmVyc2lvbmluZyBXb3JraW5nIEdyb3VwIGNhbiBzcGVjaWZ5IGFuZCBl\ndmFsdWF0ZQ0KdGhlIHNlbWFudGljcyBvZiB2YXJpb3VzIGFsdGVybmF0aXZlcyBhcyB0aGV5IGFy\nZSBiZWluZyBleHBsb3JlZC4gVGhlIG1vZGVsIHByb3ZpZGVzIGENCm1vcmUgZm9ybWFsIGRlZmlu\naXRpb24gb2YgdGhlIGVsZW1lbnRzIG1hbmlwdWxhdGVkIGJ5IFdlYkRBViwgYW5kIHRoZSBiZWhh\ndmlvcnMgdGhhdCBhcmUNCnN1cHBvcnRlZC4gQnkgdXNpbmcgdGhpcyBtb2RlbCwgdGhlIHdvcmtp\nbmcgZ3JvdXAgY2FuIGNvbmNlbnRyYXRlIG9uIHRoZSBzZW1hbnRpY3Mgb2YgdGhlDQp2ZXJzaW9u\naW5nIGFuZCBjb25maWd1cmF0aW9uIG1hbmFnZW1lbnQgb3BlcmF0aW9ucyB3aXRob3V0IGdldHRp\nbmcgYm9nZ2VkIGRvd24gaW4gdGhlDQpkZXRhaWxzIG9mIGhvdyBpdCBtaWdodCBiZSByZXByZXNl\nbnRlZCBpbiBhIHBhcnRpY3VsYXIgcHJvdG9jb2wgb3Igc3BlY2lmaWMNCmltcGxlbWVudGF0aW9u\ncy4gT25jZSB0aGUgb2JqZWN0cyBhbmQgbWV0aG9kcyBoYXZlIGJlZW4gaWRlbnRpZmllZCwgdGhl\nIHByb3RvY29sIGNhbiBiZQ0Kc3BlY2lmaWVkIHNvIHRoYXQgdGhlc2UgbWV0aG9kcyBjYW4gYmUg\nZXhlY3V0ZWQgcmVtb3RlbHkgYnkgYSBXZWJEQVYgY29tcGxpYW50IHNlcnZlci48L3A+DQoNCjxw\nIGFsaWduPSJsZWZ0Ij5WYXJpb3VzIHVzZSBjYXNlcyB3ZXJlIGNhcHR1cmVkIGluIHRoZSBnb2Fs\ncyBkb2N1bWVudCwgYW5kIGV4cGxvcmVkIGJ5DQpkZXZlbG9waW5nIGNvbGxhYm9yYXRpb24gb3Ig\nb2JqZWN0IGludGVyYWN0aW9uIGRpYWdyYW1zIHRoYXQgZGVzY3JpYmUgdGhlIHNlcXVlbmNlIG9m\nDQpldmVudHMgYW5kIGhvdyBlYWNoIHBhcnRpY2lwYW50IHJlc291cmNlIHJlc3BvbmRzLiBUaGlz\nIGNhbiBiZSB1c2VkIHRvIGNvbXBsZXRlbHkNCmZvcm1hbGl6ZSB0aGUgYWNjZXB0ZWQgdmVyc2lv\nbmluZyBzZW1hbnRpY3Mgb2YgV2ViREFWIGFuZCBjYW4gYmUgdXNlZCBhcyBhbiBhZGp1bmN0IHRv\nIHRoZQ0KcHVibGlzaGVkIHNwZWNpZmljYXRpb24uIFN1Y2ggYSBtb2RlbCB3aWxsIGJlIHZhcnkg\ndXNlZnVsIGZvciBmbGVzaGluZyBvdXQgdGhlIGV4YWN0DQpzZW1hbnRpY3MgYW5kIGZvciBkb2N1\nbWVudGluZyB0aG9zZSBzZW1hbnRpY3MgaW4gYSBmb3JtIHRoYXQgaXMgdmVyeSB1c2VmdWwgdG8g\nc2VydmVyDQppbXBsZW1lbnRvcnMuPC9wPg0KDQo8cCBhbGlnbj0ibGVmdCI+RmluYWxseSwgdGhp\ncyBtb2RlbCBwcm92aWRlcyBhIHRlbnRhdGl2ZSBzcGVjaWZpY2F0aW9uIGZvciBhIGhpZ2gtbGV2\nZWwNCkFQSSB0aGF0IGNvdWxkIGJlIHVzZWQgdG8gc2ltcGxpZnkgY2xpZW50IGFjY2VzcyB0byB0\naGUgV2ViREFWIHZlcnNpb25pbmcgcHJvdG9jb2wuPC9wPg0KDQo8cCBhbGlnbj0ibGVmdCI+SW4g\nZGVmaW5pbmcgdGhlIHNlbWFudGljcyBmb3IgV2ViREFWIHZlcnNpb25pbmcsIGl0IGlzIGhlbHBm\ndWwgdG8gYWRoZWFyDQp0byBzb21lIGd1aWRlbGluZXMuIFRoZSBwdXJwb3NlIG9mIHRoZXNlIGd1\naWRlbGluZXMgaXMgdG8gaGVscCBzZWxlY3QgZnJvbSB2YXJpb3VzDQphbHRlcm5hdGl2ZXMsIGFu\nZCB0byBlbnN1cmUgdGhlIHJlc3VsdCBwcm92aWRlcyB0aGUgcmVxdWlyZWQgZnVuY3Rpb25zIGJ1\ndCBpcyBhcyBzaW1wbGUgYXMNCnBvc3NpYmxlIHNvIHRoYXQgc2VydmVycyBjYW4gZWFzaWx5IGlt\ncGxlbWVudCB0aGUgcHJvdG9jb2wgb24gYSB2YXJpZXRhcnkgb2YgcmVwb3NpdG9yeQ0KYW5kIGNv\nbmZpZ3VyYXRpb24gbWFuYWdlbWVudCBzeXN0ZW1zLCBhbmQgY2xpZW50cyBjYW4gZWFzaWx5IGJl\nIHdyaXR0ZW4gYW5kIHVzZWQgYnkgd2ViDQphcHBsaWNhdGlvbiBhdXRob3JzLjwvcD4NCg0KPHVs\nPg0KICA8bGk+PHAgYWxpZ249ImxlZnQiPlN0YXJ0IGZyb20gd2hlcmUgd2UgYXJlIGluIFdlYkRB\nViBMZXZlbCAyIGFuZCBhZGQgc3VwcG9ydCBmb3INCiAgICB2ZXJzaW9uaW5nLCBwYXJhbGxlbCBk\nZXZlbG9wbWVudCwgYW5kIGNvbmZpZ3VyYXRpb24gbWFuYWdlbWVudC48L3A+DQogIDwvbGk+DQog\nIDxsaT48cCBhbGlnbj0ibGVmdCI+QWRkIHRoZSBuZXcgZnVuY3Rpb25zIHdoaWxlIG1pbmltaXpp\nbmcgdGhlIG51bWJlciBvZiBuZXcgY29uY2VwdHMsDQogICAgbWV0aG9kcywgZXRjLiByZXF1aXJl\nZCB0byBzdXBwb3J0IHRoZW0uIFRoaXMgd2lsbCBob3BlZnVsbHkga2VlcCB0aGUgcHJvdG9jb2wg\nc2ltcGxlDQogICAgbWFraW5nIGl0IG1vcmUgYWNjZXNzaWJsZSB0byB0aGUgYnJvYWRlciBhdXRo\nb3JpbmcgY29tbXVuaXR5IHR5cGljYWwgb2YgV2ViIGFwcGxpY2F0aW9ucy48L3A+DQogIDwvbGk+\nDQogIDxsaT48cCBhbGlnbj0ibGVmdCI+RGVmaW5lIG5ldyBzZW1hbnRpY3Mgd2hlbmV2ZXIgcG9z\nc2libGUgYnkgdXNpbmcgc2VtYW50aWNzIGFscmVhZHkNCiAgICBkZWZpbmVkIGJ5IFdlYkRBVi4g\nVGhpcyBlbmZvcmNlcyBleGlzdGluZyBzZW1hbnRpY3MsIGZhY2lsaXRhdGVzIHN1cHBvcnQgZm9y\nIGJhY2stbGV2ZWwNCiAgICBjbGllbnRzLCBtYWtlcyBpdCBlYXNpZXIgdG8gbGF5ZXIgbmV3IG9w\ndGlvbmFsIGZ1bmN0aW9uYWxpdHksIGFuZCBwcm92aWRlcyBmb3Igc2ltcGxlciwNCiAgICBtb3Jl\nIHJlZ3VsYXIgc2VtYW50aWNzLjwvcD4NCiAgPC9saT4NCiAgPGxpPjxwIGFsaWduPSJsZWZ0Ij5T\ncGVjaWZ5IHRoZSBzZW1hbnRpY3Mgb2YgdmVyc2lvbmluZyBhbmQgY29uZmlndXJhdGlvbiBtYW5h\nZ2VtZW50IGluIGFuDQogICAgaW1wbGVtZW50YXRpb24gaW5kZXBlbmRlbnQgd2F5LiBUaGlzIHdp\nbGwgZW5zdXJlIG1heGltdW0gcG9zc2libGUgZmxleGliaWxpdHkgZm9yDQogICAgaW1wbGVtZW50\naW5nIHNlcnZlcnMgYW5kIGludGVncmF0aW5nIGV4aXN0aW5nIHZlcnNpb24gbWFuYWdlbWVudCBz\nY2hlbWVzLjwvcD4NCiAgPC9saT4NCiAgPGxpPjxwIGFsaWduPSJsZWZ0Ij5UcnkgdG8gYXZvaWQg\nY2hvaWNlcyB0aGF0IHJlcXVpcmUgb3IgaW1wbHkgYSBzcGVjaWZpYyBpbXBsZW1lbnRhdGlvbiwN\nCiAgICB0aGF0IHJlcXVpcmUgY2xpZW50cyBvciBzZXJ2ZXJzIHRvIHJldGFpbiBhbmQgY29tbXVu\naWNhdGUgYW5jZWxsYXJ5IHN0YXRlIGluIG9yZGVyIGZvcg0KICAgIG1ldGhvZHMgdG8gd29yaywg\nb3IgdGhhdCBsaW1pdCBmbGV4aWJpbGl0eSBmb3IgZnV0dXJlIGV4cGFuc2lvbi48L3A+DQogIDwv\nbGk+DQogIDxsaT48cCBhbGlnbj0ibGVmdCI+SW4gdGhlIHJ1bGVzIGJlbG93LCB0aGUgd29yZCAm\ncXVvdDtlZmZlY3RpdmVseSZxdW90OyBpcyB1c2VkIHRvIGZvcm1hbGx5DQogICAgYW5kIGNvbXBs\nZXRlbHkgZGVzY3JpYmUgdGhlIGVmZmVjdGl2ZSBzZW1hbnRpYyByZXN1bHRzIG9mIGFuIG9wZXJh\ndGlvbiB3aXRob3V0IHNwZWNpZnlpbmcNCiAgICBhbnkgcGFydGljdWxhciBpbXBsZW1lbnRhdGlv\nbi4gU2VydmVycyBhcmUgZnJlZSB0byBzdXBwbHkgYW55IGltcGxlbWVudGF0aW9uIGRlc2lyZWQg\nYXMNCiAgICBsb25nIGFzIGl0IGhhcyBoYXMgdGhlIHNhbWUgZWZmZWN0aXZlIHNlbWFudGljcy4g\nPC9wPg0KICA8L2xpPg0KICA8bGk+PHAgYWxpZ249ImxlZnQiPlRoZSBwcm90b2NvbCBzaG91bGQg\nYmUgc3VmZmljaWVudGx5IGhpZ2ggbGV2ZWwgdG8gbm90IGNvbnN0cmFpbiBzZXJ2ZXINCiAgICBp\nbXBsZW1lbnRhdGlvbnMgYnV0IGF0IGEgc3VmZmljaWVudGx5IGxvdyBsZXZlbCB0aGF0IGl0IGRv\nZXMgbm90IGNvbnN0cmFpbiBzdXBwb3J0YWJsZQ0KICAgIHBvbGljaWVzLjwvcD4NCiAgPC9saT4N\nCjwvdWw+DQoNCjxoMj5XZWJEQVYgVmVyc2lvbmluZyBTZW1hbnRpY3MgT3ZlcnZpZXc8L2gyPg0K\nDQo8cD5UaGlzIHNlY3Rpb24gcHJvdmlkZXMgYW4gb3ZlcnZpZXcgb2YgdGhlIFdlYkRBViB2ZXJz\naW9uaW5nIHNlbWFudGljcy4gU3Vic2VxdWVudA0Kc2VjdGlvbnMgcHJvdmlkZSBkZXRhaWxlZCBt\nZXRob2RzIGFuZCBzZW1hbnRpYyBydWxlcy48L3A+DQoNCjxoMz5DcmVhdGluZyBWZXJzaW9uZWQg\nUmVzb3VyY2VzPC9oMz4NCg0KPHA+QSA8c3Ryb25nPnJlc291cmNlPC9zdHJvbmc+IGlzIGFueSBw\nb3RlbnRpYWxseSBzdGF0ZWZ1bCBlbnRpdHkgdGhhdCBjYW4gYmUgYWNjZXNzZWQgb24NCnRoZSB3\nZWIgdGhyb3VnaCBhIFVSTC4gVGhlIG1vZGVsIGFib3ZlIGRlZmluZXMgYW4gaW50ZXJmYWNlLCBS\nZXNvdXJjZSB0aGF0IGFic3RyYWN0cyBhIHdlYg0KcmVzb3VyY2UgYW5kIGl0cyBiZWhhdmlvci4g\nSXQgYWxzbyBkZWZpbmVzIGEgc3BlY2lhbGl6YXRpb24gb2YgUmVzb3VyY2UgY2FsbGVkDQpSZXNv\ndXJjZUNvbGxlY3Rpb24gdGhhdCBhZGRzIGNvbnRhaW5tZW50IG9yIGdyb3VwaW5nIGJlaGF2aW9y\nIGZvciBSZXNvdXJjZXMgYW5kIG90aGVyDQpSZXNvdXJjZUNvbGxlY3Rpb25zIHVzaW5nIHRoZSBD\nb21wb3NpdGUgcGF0dGVybi48L3A+DQoNCjxwPkEgcmVzb3VyY2UgbWF5IG9yIG1heSBub3QgYmUg\ndmVyc2lvbmVkLiBXaGVuIGEgcmVzb3VyY2UgaXMgZmlyc3QgY3JlYXRlZCBieSB1c2luZyBhDQpX\nZWJEQVYgUFVUIG9yIE1LQ09MIG1ldGhvZCwgb3IgUmVzb3VyY2Uuc2V0Q29udGVudHMoKSwgaXQg\naXMgY3JlYXRlZCBhcyBhbiB1bnZlcnNpb25lZA0KcmVzb3VyY2UuIEEgcmVzb3VyY2UgbWF5IGJl\nIGNoZWNrZWQgaW4gdG8gbWFrZSBpdCBhIDxzdHJvbmc+dmVyc2lvbmVkIHJlc291cmNlPC9zdHJv\nbmc+LA0KYW5kIHRvIGNyZWF0ZSB0aGUgaW5pdGlhbCBvciBmaXJzdCByZXZpc2lvbi48YmlnPiA8\nL2JpZz48Zm9udCBjb2xvcj0iIzAwMDAwMCI+QSBjaGVja2VkIGluDQpyZXZpc2lvbiBjYW5ub3Qg\nYmUgbW9kaWZpZWQgYnkgYW55b25lIGF0IGFueSB0aW1lLjwvZm9udD48L3A+DQo8Zm9udCBGQUNF\nPSJIZWx2IiBTSVpFPSIyIiBDT0xPUj0iIzAwMDAwMCI+DQoNCjxoMz48L2ZvbnQ+PGZvbnQgY29s\nb3I9IiMwMDAwMDAiPk5hbWluZyBSZXZpc2lvbnM6IFJldmlzaW9uIElkcyBhbmQgTGFiZWxzPC9m\nb250PjwvaDM+DQoNCjxwPjxmb250IGNvbG9yPSIjMDAwMDAwIj5BIHJldmlzaW9uIG9mIGEgdmVy\nc2lvbmVkIHJlc291cmNlIGlzIGdpdmVuIGEgc3lzdGVtIGFzc2lnbmVkDQpyZXZpc2lvbiBpZCB3\naGVuIGl0IGlzIGNoZWNrZWQgaW4uIFRoaXMgcmV2aXNpb24gaWQgYWN0cyBhcyBhbiBpbW11dGFi\nbGUgaWRlbnRpZmllcg0KZGlzdGluZ3Vpc2hpbmcgdGhpcyByZXZpc2lvbiBmcm9tIGFsbCBvdGhl\ncnMgb2YgdGhlIHNhbWUgdmVyc2lvbmVkIHJlc291cmNlLiBBIHJldmlzaW9uIGlkDQpjYW4gYmUg\nYXNzaWduZWQgdG8gb25seSBvbmUgcmV2aXNpb24gb2YgYSB2ZXJzaW9uZWQgcmVzb3VyY2UsIGFu\nZCBjYW4gbmV2ZXIgYmUgcmV1c2VkIG9uDQp0aGF0IHZlcnNpb25lZCByZXNvdXJjZS48L2ZvbnQ+\nPC9wPg0KDQo8cD48Zm9udCBjb2xvcj0iIzAwMDAwMCI+QSB1c2VyIG1heSBhc3NpZ24gb3RoZXIg\ncmV2aXNpb24gbmFtZXMgY2FsbGVkIHJldmlzaW9uIGxhYmVscyB0bw0KYSByZXZpc2lvbiBpbiBv\ncmRlciB0byBkaXN0aW5ndWlzaCBpdCBmcm9tIG90aGVyIHJldmlzaW9ucyB1c2luZyBtb3JlIG1l\nYW5pbmdmdWwgbmFtZXMuDQpUaGVzZSByZXZpc2lvbiBsYWJlbHMgbXVzdCBiZSB1bmlxdWUgZm9y\nIGFueSBnaXZlbiB2ZXJzaW9uZWQgcmVzb3VyY2UsIGJ1dCBtYXkgYmUNCnJlYXNzaWduZWQgdG8g\nYW55IHJldmlzaW9uIG9mIHRoZSB2ZXJzaW9uZWQgcmVzb3VyY2UgYXQgYW55IHRpbWUuIFJldmlz\naW9ucyBvZiBkaWZmZXJlbnQNCnZlcnNpb25lZCByZXNvdXJjZXMgbWF5IGhhdmUgdGhlIHNhbWUg\nbGFiZWwuIFRoZXJlIGlzIGEgZGlzdGluZ3Vpc2hlZCwgZmxvYXRpbmcgbGFiZWwNCmNhbGxlZCAm\ncXVvdDtsYXRlc3QmcXVvdDsgd2hpY2ggYWx3YXlzIHJlZmVycyB0byB0aGUgbGF0ZXN0IHJldmlz\naW9uIGluIGEgZ2l2ZW4gYWN0aXZpdHkuPC9mb250Pjxmb250DQpGQUNFPSJIZWx2IiBTSVpFPSIy\nIiBDT0xPUj0iIzAwMDAwMCI+PC9wPg0KDQo8aDM+PC9mb250Pjxmb250IGNvbG9yPSIjMDAwMDAw\nIj5Nb2RpZnlpbmcgYSBWZXJzaW9uZWQgUmVzb3VyY2U8L2ZvbnQ+PC9oMz4NCg0KPHA+U3Vic2Vx\ndWVudGx5LCBhIGNsaWVudCBtYXkgY2hlY2tPdXQgdGhlIHJlc291cmNlIHdoaWNoIGNyZWF0ZXMg\nYSA8c3Ryb25nPndvcmtpbmcNCnJlc291cmNlPC9zdHJvbmc+LiBBIHdvcmtpbmcgcmVzb3VyY2Ug\naXMgaWRlbnRpY2FsIHRvIGFuIHVudmVyc2lvbmVkIHJlc291cmNlIGluIGFsbA0KcmVzcGVjdHMg\nb3RoZXIgdGhhbiB0aGF0IGl0IGhhcyBvbmUgb3IgbW9yZSBzdWNjZXNzb3JzLiBJdCBtYXkgYmUg\nZWRpdGVkIGJ5IHNldHRpbmcgaXRzDQpwcm9wZXJ0aWVzIG9yIGNvbnRlbnRzIGFueSBudW1iZXIg\nb2YgdGltZXMuIFdoZW4gdGhlIGNsaWVudCBpcyBzYXRpc2ZpZWQgdGhhdCB0aGUgd29ya2luZw0K\ncmVzb3VyY2UgaXMgaW4gYSBzdGF0ZSB0aGF0IHNob3VsZCBiZSByZXRhaW5lZCBpbiB0aGUgdmVy\nc2lvbiBoaXN0b3J5LCB0aGUgY2xpZW50IGRvZXMgYQ0KUmVzb3VyY2UuY2hlY2tJbigpIHRvIGNy\nZWF0ZSBhIG5ldyA8c3Ryb25nPnJldmlzaW9uIDwvc3Ryb25nPm9mIHRoZSByZXNvdXJjZS4gPC9w\nPg0KPGZvbnQgRkFDRT0iSGVsdiIgU0laRT0iMiIgQ09MT1I9IiMwMDAwMDAiPg0KDQo8cD48L2Zv\nbnQ+PGZvbnQgY29sb3I9IiMwMDAwMDAiPlVzZXJzIGNhbiB1c2UgY2hlY2tvdXQvY2hlY2tpbiB0\nbyByZWdpc3RlciBpbnRlbnQgdG8NCm1vZGlmeSBhIHZlcnNpb25lZCByZXNvdXJjZSBzaW1pbGFy\nIHRvIHRoZSB3YXkgbG9jayBhbmQgdW5sb2NrIGFyZSB1c2VkIGluIERBViBsZXZlbCAyLg0KVGhl\nIHNlbnNlIGlzIHJldmVyc2VkIHRob3VnaC4gQSBjaGVja2VkIGluIHJldmlzaW9uIGNhbm5vdCBi\nZSBjaGFuZ2VkIHdpdGhvdXQgY2hlY2tpbmcgaXQNCm91dCBmaXJzdC48L2ZvbnQ+PC9wPg0KDQo8\ncD5UaGUgcmVzb3VyY2UgbWF5IGJlIGNoZWNrZWQgaW4gYXMgZWl0aGVyIDxzdHJvbmc+bXV0YWJs\nZTwvc3Ryb25nPiBvciA8c3Ryb25nPmltbXV0YWJsZTwvc3Ryb25nPi4NCkFuIGltbXV0YWJsZSBy\nZXZpc2lvbiBjYW5ub3QgYmUgY2hhbmdlZCBhbmQgcHJvdmlkZXMgYSBzdGFibGUgZW52aXJvbm1l\nbnQgZm9yIGhpc3RvcnkNCm1hbmFnZW1lbnQsIGNoYW5nZSByZWNvdmVyeSwgbWVyZ2luZywgYW5k\nIGNvbmZpZ3VyYXRpb24gbWFuYWdlbWVudC4gQSBtdXRhYmxlIHJldmlzaW9uIGlzDQptb3JlIHN1\naXRhYmxlIGZvciBzaXR1YXRpb25zIHdoZXJlIHZlcnNpb25pbmcgaXMgdHJlYXRlZCBtb3JlIGlu\nZm9ybWFsbHksIGFuZCBpdCBpcyBub3QNCm5lY2Vzc2FyeSBvciBkZXNpcmFibGUgdG8gbWFpbnRh\naW4gc3RyaWN0IHZlcnNpb24gaGlzdG9yaWVzLCBvciB0byBiZSBndWFyYW50ZWQgdGhhdCBpdCBp\ncw0KYWx3YXlzIHBvc3NpYmxlIHRvIGJhY2t0cmFjayB0byBhIHByZXZpb3VzIHBvaW50IGluIHRp\nbWUgYW5kIHJlY292ZXIuIFRoaXMgZm9ybSBvZg0KdmVyc2lvbmluZyBpcyB0eXBpY2FsIG9mIG1v\nZGVybiBkb2N1bWVudCBtYW5hZ2VtZW50IHN5c3RlbXMuIDxmb250IGNvbG9yPSIjMDAwMDAwIj5J\nZiB0aGUNCnJldmlzaW9uIGlzIG11dGFibGUsIGEgc3Vic2VxdWVudCBjaGVja291dCBtYWtlcyB0\naGUgcmV2aXNpb24gYSB3b3JraW5nIHJlc291cmNlLCBhbmQNCmFsbG93cyB0aGUgcmV2aXNpb24g\ndG8gYmUgdXBkYXRlZCBpbiBwbGFjZSB3aXRob3V0IGNyZWF0aW5nIGEgbmV3IHJldmlzaW9uLiBB\nbnkgcHJldmlvdXMNCmNvbnRlbnRzIG9mIHRoZSByZXZpc2lvbiBhcmUgbG9zdC4gQSBtdXRhYmxl\nIHJldmlzaW9uIGNhbiBhbHNvIGJlIGNoZWNrZWQgb3V0IGNyZWF0aW5nIGENCm5ldyByZXZpc2lv\nbiBpZiB0aGUgdXNlciB3YW50cyB0byByZXRhaW4gdGhlIHByZXZpb3VzIHJldmlzaW9uLiBJZiB0\naGUgcmV2aXNpb24gaXMNCmltbXV0YWJsZSwgYSBjaGVja291dCBtdXN0IGNyZWF0ZSBhIG5ldyBy\nZXZpc2lvbi4gU2VydmVycyBtYXkgY2hvb3NlIHRvIG5vdCBhbGxvdw0KcmV2aXNpb25zIHRvIGJl\nIGNoZWNrZWQgaW4gYXMgbXV0YWJsZSwgb3IgdGhleSBtYXkgbm90IGFsbG93IGEgcmV2aXNpb24g\ndG8gYmUgY2hlY2tlZCBvdXQNCndpdGhvdXQgY3JlYXRpbmcgYSBuZXcgcmV2aXNpb24uPC9mb250\nPjwvcD4NCjxmb250IEZBQ0U9IkhlbHYiIFNJWkU9IjIiIENPTE9SPSIjMDAwMDAwIj4NCg0KPGgz\nPjwvZm9udD48Zm9udCBmYWNlPSJIZWx2IiBjb2xvcj0iIzAwMDAwMCI+UGFyYWxsZWwgRGV2ZWxv\ncG1lbnQgd2l0aCBBY3Rpdml0aWVzPC9mb250PjwvaDM+DQoNCjxwPjxmb250IGZhY2U9IkhlbHYi\nIGNvbG9yPSIjMDAwMDAwIj5SZXNvdXJjZXMgYXJlIGNoZWNrZWQgb3V0IGluIHRoZSBjb250ZXh0\nIG9mIGFuDQphY3Rpdml0eS4gQW4gYWN0aXZpdHkgYWJzdHJhY3RzIGEgc2V0IG9mIHJlbGF0ZWQg\nY2hhbmdlcyBhIHVzZXIgaXMgbWFraW5nIHRvIHZlcnNpb25lZA0KcmVzb3VyY2VzLiBFYWNoIGFj\ndGl2aXR5IHJlcHJlc2VudHMgYSBwYXJhbGxlbCB0aHJlYWQgb2YgZGV2ZWxvcG1lbnQuIFNlcnZl\ncnMgdGhhdCBkb24ndA0Kc3VwcG9ydCBwYXJhbGxlbCBkZXZlbG9wbWVudCBvbmx5IHN1cHBvcnQg\nb25lIGFjdGl2aXR5LiBBIHJldmlzaW9uIHRoYXQgaXMgYWxyZWFkeSBjaGVja2VkDQpvdXQgaW4g\nYW4gYWN0aXZpdHkgY2Fubm90IGJlIGNoZWNrZWQgb3V0IGFnYWluIGluIHRoZSBzYW1lIGFjdGl2\naXR5LiBJZiBwYXJhbGxlbA0KZGV2ZWxvcG1lbnQgaXMgZGVzaXJlZCwgYSB1c2VyIGNhbiBjaGVj\na291dCB0aGUgcmV2aXNpb24gaW4gYW5vdGhlciBhY3Rpdml0eSBhbmQgbWVyZ2UNCnRoZW0gbGF0\nZXIuPC9mb250PjwvcD4NCg0KPGgzPjxmb250IGZhY2U9IkhlbHYiIGNvbG9yPSIjMDAwMDAwIj5T\nZWxlY3RpbmcgUmV2aXNpb24gdGhyb3VnaCB0aGUgV29ya3NwYWNlPC9mb250PjwvaDM+DQoNCjxw\nPjxmb250IGZhY2U9IkhlbHYiIGNvbG9yPSIjMDAwMDAwIj5SZXNvdXJjZXMsIHdvcmtpbmcgcmVz\nb3VyY2VzLCBhbmQgcmV2aXNpb25zIG9mDQp2ZXJzaW9uZWQgcmVzb3VyY2VzIGFyZSBhbGwgYWNj\nZXNzZWQgdXNpbmcgYSBVUkwuIFNwZWNpZmljIHJldmlzaW9ucyBvZiBhIHZlcnNpb25lZA0KcmVz\nb3VyY2UgY2FuIGJlIGFjY2Vzc2VkIGJ5IHNwZWNpZnlpbmcgdGhlIHJlc291cmNlIFVSTCBhbmQg\nYSB2ZXJzaW9uIGxhYmVsLiBIb3dldmVyLA0KdmVyc2lvbmVkIHJlc291cmNlcyBhcmUgdXN1YWxs\neSBhY2Nlc3NlZCB1c2luZyBhIHNpbXBsZSBVUkwuIFRoZSByZXZpc2lvbiBzZWxlY3RlZCB3aGVu\nIGENCnNwZWNpZmljIHJldmlzaW9uIG5hbWUgaXMgbm90IHNwZWNpZmllZCBpcyByZXNvbHZlZCB0\naHJvdWdoIGEgd29ya3NwYWNlLiBBIHdvcmtzcGFjZQ0KcHJvdmlkZXMgYSBtYXBwaW5nIGJldHdl\nZW4gVVJMcyBmb3IgdmVyc2lvbmVkIHJlc291cmNlcywgYW5kIHNwZWNpZmljIHJldmlzaW9ucy4g\nVGhpcw0KYWxsb3dzIHZlcnNpb25lZCByZXNvdXJjZXMgYW5kIHVudmVyc2lvbmVkIHJlc291cmNl\ncyB0byBiZSBhY2Nlc3NlZCB0aGUgc2FtZSB3YXkNCnN1cHBvcnRpbmcgcmVsYXRpdmUgVUxScyBh\nbmQgREFWIGxldmVsLTIgY2xpZW50cyB0aGF0IGFyZSBub3QgdmVyc2lvbmluZyBhd2FyZS48L2Zv\nbnQ+PC9wPg0KDQo8cD48Zm9udCBmYWNlPSJIZWx2IiBjb2xvcj0iIzAwMDAwMCI+QSB3b3Jrc3Bh\nY2UgY29udGFpbnMgYSBjdXJyZW50IGFjdGl2aXR5LCBhIG1lcmdlDQphY3Rpdml0eSwgYW5kIGEg\ncmV2aXNpb24gc2VsZWN0aW9uIHJ1bGUuIFJldmlzaW9ucyBhcmUgc2VsZWN0ZWQgdXNpbmcgdGhl\nIGZvbGxvd2luZyBydWxlcw0KaW4gb3JkZXI6IDEpIGlmIHRoZXJlIGlzIGEgY2hlY2tlZCBvdXQg\ncmV2aXNpb24sIHRoZW4gaXQgaXMgc2VsZWN0ZWQuIGVsc2UgMikgaWYgdGhlcmUgaXMNCmEgcmV2\naXNpb24gdGhhdCBpcyBjaGVja2VkIGluIHVuZGVyIHRoZSBjdXJyZW50IGFjdGl2aXR5LCB0aGVu\nIGl0IGlzIHNlbGVjdGVkLCBlbHNlIDMpIGlmDQp0aGUgcmVzb3VyY2UgaXMgYSBtZW1iZXIgb2Yg\nYW55IGFjdGl2aXR5IGluIHRoZSBwcm9jZXNzIG9mIGJlaW5nIG1lcmdlZCBpbnRvIHRoaXMNCndv\ncmtzcGFjZSwgdGhlbiBpdCBpcyBzZWxlY3RlZCwgZWxzZSA0KSBmaW5hbGx5LCB0aGUgd29ya3Nw\nYWNlIHJldmlzaW9uIHNlbGVjdGlvbiBydWxlIGlzDQphcHBsaWVkIHRvIHNlbGVjdCB0aGUgcmV2\naXNpb24uIElmIHRoZXJlIGlzIG5vIG1hdGNoaW5nIHJldmlzaW9uLCB0aGVuIGEgcmVzb3VyY2Ug\nbm90DQpmb3VuZCBzdGF0dXMgaXMgcmV0dXJuZWQuIFRoaXMgcnVsZSBpcyBhcHBsaWVkIHRvIGNv\nbGxlY3Rpb25zIHRvIHNlbGVjdCB0aGUgcmV2aXNpb24gdGhhdA0KZGV0ZXJtaW5lcyB0aGVpciBt\nZW1iZXIgdmVyc2lvbmVkIHJlc291cmNlcywgYW5kIHRvIG90aGVyIHJlc291cmNlIHRvIGRldGVy\nbWluZSB0aGUNCnJldmlzaW9uIGNvbnRhaW5pbmcgdGhlaXIgY29udGVudHMuPC9mb250PjwvcD4N\nCg0KPHA+PGZvbnQgZmFjZT0iSGVsdiIgY29sb3I9IiMwMDAwMDAiPkEgd29ya3NwYWNlIHJldmlz\naW9uIHNlbGVjdGlvbiBydWxlIGNhbiBzcGVjaWZ5IGFueQ0KbnVtYmVyIG9mIHJldmlzaW9uIGxh\nYmVscywgYWN0aXZpdGllcywgY29uZmlndXJhdGlvbnMsIG9yIHRoZSBmdW5jdG9yICZxdW90O2xh\ndGVzdCZxdW90Ow0KdG8gc3BlY2lmeSB3aGF0IHJldmlzaW9uIHRvIHNlbGVjdC4gVGhlIHJ1bGVz\nIGFyZSBhcHBsaWVkIGluIG9yZGVyIHVudGlsIHRoZSBmaXJzdA0KbWF0Y2hpbmcgaXMgZm91bmQu\nIEFueSBzdWJzZXF1ZW50IHBvdGVudGlhbCBtYXRjaGVzIGFyZSBpZ25vcmVkLiBUaGUgZmlyc3Qg\ndGhyZWUgcnVsZXMNCmFib3ZlIGFyZSBqdXN0IGltcGxpZWQgY29tcG9uZW50cyBvZiB0aGUgd29y\na3NwYWNlIHJldmlzaW9uIHNlbGVjdGlvbiBydWxlLiBUaGV5IGFyZQ0KY2FsbGVkIG91dCBzZXBh\ncmF0ZWx5IGFzIHRoZXkgYXJlIGZpeGVkIGJ5IHRoZSBzZXJ2ZXIuPC9mb250PjwvcD4NCg0KPHA+\nPGZvbnQgZmFjZT0iSGVsdiIgY29sb3I9IiMwMDAwMDAiPklmIGEgcmVxdWVzdCBpcyBtYWRlIGFu\nZCBubyB3b3Jrc3BhY2UgaXMgc3BlY2lmaWVkLCBhDQpkZWZhdWx0IHdvcmtzcGFjZSBjb250YWlu\naW5nIGFjdGl2aXR5IG5hbWVkICZxdW90O21haW5saW5lJnF1b3Q7LCBhbmQgJnF1b3Q7bGF0ZXN0\nJnF1b3Q7DQppbiB0aGUgdmVyc2lvbiBzZWxlY3Rpb24gcnVsZSBpcyB1c2VkLjwvZm9udD48L3A+\nDQoNCjxoMz48Zm9udCBmYWNlPSJIZWx2IiBjb2xvcj0iIzAwMDAwMCI+Q29uZmlndXJhdGlvbiBN\nYW5hZ2VtZW50PC9mb250PjwvaDM+DQoNCjxwPjxmb250IGZhY2U9IkhlbHYiIGNvbG9yPSIjMDAw\nMDAwIj5BIHdvcmtzcGFjZSByZXByZXNlbnRzIGEgdm9sYXRpbGUgc2V0IG9mIHJldmlzaW9ucy4N\nCkFueSBuZXcgY2hlY2tvdXRzLCBjaGFuZ2VzIHRvIHRoZSBjdXJyZW50IGFjdGl2aXR5LCBtZXJn\naW5nIG9wZXJhdGlvbnMsIG9yIGNoYW5nZXMgdG8gdGhlDQpyZXZpc2lvbiBzZWxlY3Rpb24gcnVs\nZSBtYXkgcmVzdWx0IGluIHRoZSBzZWxlY3Rpb24gb2YgZGlmZmVyZW50IHJldmlzaW9ucy4gQQ0K\nY29uZmlndXJhdGlvbiBpcyBhIHJlc291cmNlIHRoYXQgcmVwcmVzZW50cyBhbiBpbW11dGFibGUg\nc2V0IG9mIHJldmlzaW9ucy4gQSBjb25maWd1cmF0aW9uDQpjb250YWlucyBhIHNwZWNpZmljIHJl\ndmlzaW9uIG9mIGVhY2ggbWVtYmVyIHZlcnNpb25lZCByZXNvdXJjZS4gQSBjb25maWd1cmF0aW9u\nIGNhbm5vdA0KY29udGFpbiBhIG11dGFibGUgcmV2aXNpb24gYmVjYXVzZSB0aGUgc2VtYW50aWNz\nIG9mIGNvbmZpZ3VyYXRpb25zIGNhbm5vdCBiZSBndWFyYW50ZWVkLiBBDQp3b3Jrc3BhY2Ugd2hv\nc2UgdmVyc2lvbiBzZWxlY3Rpb24gcnVsZSBjb250YWlucyBhIGNvbmZpZ3VyYXRpb24gd2lsbCBh\nbHdheXMgcmV0dXJuIHRoZQ0Kc2FtZSByZXZpc2lvbnMgYXMgbG9uZyBhcyB0aGVyZSBhcmUgbm8g\ncmV2aXNpb25zIGNoZWNrZWQgb3V0IGFuZCBub3RoaW5nIGluIHRoZSBjdXJyZW50DQphY3Rpdml0\neS48L2ZvbnQ+PC9wPg0KDQo8cD5Db25maWd1cmF0aW9ucyBhcmUgY29udmluZW50IGZvciBkZWZp\nbmluZyBhIHNldCBvZiByZXZpc2lvbnMgdGhhdCByZWxhdGUgdG8gZWFjaCBvdGhlcg0KaW4gc29t\nZSBzcGVjaWZpYyB3YXkgb3ZlciB0aGVpciBsaWZldGltZXMuIFRoaXMgY2FuIGJlIHVzZWZ1bCBm\nb3IgcHVibGlzaGluZyBjb25zaXN0ZW50DQp2ZXJzaW9ucyBvZiByZXNvdXJjZXMgdG8gcHVibGlz\naCBvciBkZXBsb3kgYW4gYXBwbGljYXRpb24sIG9yIGZvciByZWNvdmVyaW5nIHRvIGEgc3BlY2lm\naWMNCnZlcnNpb24gc3RhdGUgZm9yIGxlZ2FsIG9yIG1haW50ZW5hbmNlIHJlYXNvbnMuPC9wPg0K\nDQo8aDM+PGZvbnQgZmFjZT0iSGVsdiIgY29sb3I9IiMwMDAwMDAiPlZlcnNpb25lZCBDb2xsZWN0\naW9uczwvZm9udD48L2gzPg0KDQo8cD48Zm9udCBmYWNlPSJIZWx2IiBjb2xvcj0iIzAwMDAwMCI+\nQSBjb2xsZWN0aW9uIGNvbnRhaW5zIGEgc2V0IG9mIG1lbWJlcnMuIEZvciB2ZXJzaW9uZWQNCmNv\nbGxlY3Rpb25zLCB0aGUgbWVtYmVycyBhcmUgdmVyc2lvbmVkIHJlc291cmNlcywgbm90IHBhcnRp\nY3VsYXIgcmV2aXNpb25zLiBUbyBhZGQgb3INCnJlbW92ZSBtZW1iZXJzIGZyb20gYSByZXZpc2lv\nbiBvZiBhIHZlcnNpb25lZCBjb2xsZWN0aW9uLCBpdCBtdXN0IGJlIGNoZWNrZWQgb3V0IGp1c3Qg\nbGlrZQ0KYW55IG90aGVyIHJlc291cmNlLiBDcmVhdGluZyBhIG5ldyByZXZpc2lvbiBvZiBhIG1l\nbWJlciwgb3IgbW9kaWZ5aW5nIGEgbWVtYmVyIGhhcyBubw0KZWZmZWN0IG9uIHRoZSBjb2xsZWN0\naW9uLiBEZWxldGluZyBhIHZlcnNpb25lZCByZXNvdXJjZSB0aGF0IGlzIGFuIGludGVybmFsIG1l\nbWJlciBmcm9tIGENCmNvbGxlY3Rpb24gZG9lcyBub3QgZGVsZXRlIHRoZSB2ZXJzaW9uZWQgcmVz\nb3VyY2UsIGl0IG9ubHkgZGVsZXRlcyB0aGUgbWVtYmVyIGZyb20gdGhhdA0KdmVyc2lvbiBvZiB0\naGUgY29sbGVjdGlvbi4gVGhlIHJlc291cmNlIG1heSBzdGlsbCBiZSBhIG1lbWJlciBvZiBhIHBy\nZXZpb3VzIG9yIHN1YnNlcXVlbnQNCnJldmlzaW9uIG9mIHRoZSBjb2xsZWN0aW9uLiBUaGUgVVJM\nIGZvciBhIGNvbGxlY3Rpb24gd2l0aG91dCBhIHBhcnRpY3VsYXIgcmV2aXNpb24gbmFtZSBpcw0K\ncmVzb2x2ZWQgdG8gYSBwYXJ0aWN1bGFyIHJldmlzaW9uIHVzaW5nIHRoZSB3b3Jrc3BhY2UgdGhl\nIHNhbWUgYXMgYW55IG90aGVyIHJlc291cmNlLiBJZg0KdGhlIGNvbGxlY3Rpb24gaXMgcGFydCBv\nZiBhIFVSTCBmb3Igc29tZSBvdGhlciByZXNvdXJjZSwgdGhlbiBpdHMgbWVtYmVycyBhcmUgZGV0\nZXJtaW5lZA0KZnJvbSB0aGUgc2VsZWN0ZWQgcmV2aXNpb24uPC9mb250PjwvcD4NCg0KPGgzPjxm\nb250IGZhY2U9IkhlbHYiIGNvbG9yPSIjMDAwMDAwIj5SZXZpc2lvbiBIaXN0b3J5PC9mb250Pjwv\naDM+DQoNCjxwPkEgcmV2aXNpb24gbWF5IGhhdmUgbW9yZSB0aGFuIG9uZSBwcmVkZWNlc3NvciBh\nbmQgbW9yZSB0aGFuIG9uZSBzdWNjZXNzb3IuIEEgPHN0cm9uZz5wcmVkZWNlc3Nvcjwvc3Ryb25n\nPg0Kb2YgYSByZXZpc2lvbiBpcyBhIHJldmlzaW9uIHRoYXQgdGhpcyByZXZpc2lvbiB3YXMgZGVy\naXZlZCBmcm9tLiBBIDxzdHJvbmc+c3VjY2Vzc29yPC9zdHJvbmc+DQpvZiBhIHJldmlzaW9uIGlz\nIGEgcmV2aXNpb24gZGVyaXZlZCBmcm9tIHRoaXMgcmV2aXNpb24uIEVhY2ggcmV2aXNpb24gaGFz\nIGEgPHN0cm9uZz5saW5lLW9mLWRlc2NlbnQ8L3N0cm9uZz4NCnRoYXQgY29uc2lzdHMgb2YgYSBw\nYXRoIGZyb20gdGhlIGluaXRpYWwgcmV2aXNpb24gb2YgdGhlIHJlc291cmNlIHRvIHRoZSBzZWxl\nY3RlZCByZXZpc2lvbg0KYWxsb25nIHRoZSBzdWNjZXNzb3IvcHJlZGVjZXNzb3IgcmVsYXRpb25z\naGlwcy4gQSBsaW5lLW9mLWRlc2NlbnQgc3BlY2lmaWVzIGEgcG9ydGlvbiBvZg0KdGhlIG92ZXJh\nbGwgaGlzdG9yeSBvZiB0aGUgdmVyc2lvbmVkIHJlc291cmNlLjwvcD4NCg0KPHA+PGZvbnQgZmFj\nZT0iSGVsdiIgY29sb3I9IiMwMDAwMDAiPkVhY2ggcmV2aXNpb24gaGFzIGEgcHJlZGVjZXNzb3Ig\ncmVsYXRpb25zaGlwIHdpdGggdGhlDQpyZXZpc2lvbiBpdCB3YXMgY2hlY2tlZCBvdXQgb3IgbWVy\nZ2VkIGZyb20sIGFuZCBhIHN1Y2Nlc3NvciByZWxhdGlvbnNoaXAgd2l0aCByZXZpc2lvbnMNCnRo\nYXQgd2VyZSBjaGVja2VkIG91dCBmcm9tIGl0LiBNdXRhYmxlIHJldmlzaW9ucyBhcmUgcmVsYXRl\nZCB0byB0aGVpciBwcmVkZWNlc3NvciB0aHJvdWdoDQphIHdhcy1kZXJpdmVkLWZyb20gcmVsYXRp\nb25zaGlwLiBJbW11dGFibGUgcmV2aXNpb25zIGFyZSByZWxhdGVkIHRvIHRoZWlyIHByZWRlY2Vz\nc29yDQp0aHJvdWdoIGFuIGlzLWRlcml2ZWQtZnJvbSByZWxhdGlvbnNoaXAuIFRoZSByZXZpc2lv\nbiBoaXN0b3J5IG9mIGEgdmVyc2lvbmVkIHJlc291cmNlIGNhbg0KaW5jbHVkZSBlaXRoZXIgb3Ig\nYm90aCBvZiB0aGVzZSByZWxhdGlvbnNoaXBzLjwvZm9udD48L3A+DQoNCjxoMz48Zm9udCBmYWNl\nPSJIZWx2IiBjb2xvcj0iIzAwMDAwMCI+TWVyZ2luZzwvZm9udD48L2gzPg0KDQo8cD48Zm9udCBm\nYWNlPSJIZWx2IiBjb2xvcj0iIzAwMDAwMCI+RWFjaCBhY3Rpdml0eSByZXByZXNlbnRzIGEgc2Vw\nYXJhdGUgcGFyYWxsZWwgdGhyZWFkDQpvZiBkZXZlbG9wbWVudC4gVXNlcnMgbWFrZSB0aGVpciBj\naGFuZ2VzIGluIHRoZSBjb250ZXh0IG9mIGFuIGFjdGl2aXR5LiBDaGFuZ2VzIHRvIHRoZQ0Kc2Ft\nZSByZXZpc2lvbiBtdXN0IGJlIGRvbmUgaW4gc2VwYXJhdGUgYWN0aXZpdGllcy4gQXQgc29tZSBw\nb2ludCwgYSB1c2VyIG1heSB3YW50IHRvIG1lcmdlDQpjaGFuZ2VzIG1hZGUgdG8gdGhlIHNhbWUg\ncmV2aXNpb24gdG9nZXRoZXIgdG8gY3JlYXRlIGEgbmV3IHJldmlzaW9uIGNvbnRhaW5pbmcgdGhl\nDQpjb21iaW5lZCB1cGRhdGVzLiBJbiBvcmRlciB0byBkbyBhIG1lcmdlLCBpdCBpcyBmaXJzdCBu\nZWNlc3NhcnkgdG8gZGV0ZXJtaW5lIHdoYXQgbXVzdCBiZQ0KbWVyZ2VkLiBBIG1lcmdlIGNvbmZs\naWN0IHJlcG9ydCBsaXN0cyB0aGUgcmVzb3VyY2VzIHRoYXQgaGF2ZSBiZWVuIG1vZGlmaWVkIGlu\nIHBhcmFsbGVsIGluDQpkaWZmZXJlbnQgYWN0aXZpdGllcy4gVGhlIG1lcmdlIGNvbmZsaWN0IHJl\ncG9ydCBpcyBnZW5lcmF0ZWQgdXNpbmcgdGhlIGZvbGxvd2luZyBydWxlczogMSkNCmlmIHRoZSBt\nZXJnZSBzb3VyY2Ugc3BlY2lmaWVzIGEgcHJlZGVjZXNzb3Igb2YgdGhlIHJldmlzaW9uIHNlbGVj\ndGVkIGJ5IHRoZSB3b3Jrc3BhY2UsDQp0aGVuIHRoZSB3b3Jrc3BhY2UgcmV2aXNpb24gaXMgc2Vs\nZWN0ZWQsIGVsc2UgMikgaWYgdGhlIG1lcmdlIHNvdXJjZSBzcGVjaWZpZXMgYSBzdWNjZXNzb3IN\nCm9mIHRoZSByZXZpc2lvbiBzZWxlY3RlZCBieSB0aGUgd29ya3NwYWNlLCB0aGVuIHRoZSBtZXJn\nZSBzb3VyY2UgcmV2aXNpb24gaXMgc2VsZWN0ZWQsDQplbHNlIDMpIHRoZSBtZXJnZSBzb3VyY2Ug\nYW5kIHRoZSBjdXJyZW50IHdvcmtzcGFjZSBzcGVjaWZ5IHJldmlzaW9ucyB0aGF0IGFyZSBvbiBk\naWZmZXJlbnQNCmxpbmVzLW9mLWRlc2NlbnQsIGFuZCBhIHBvdGVudGlhbCBtZXJnZSBjb25mbGlj\ndCBleGlzdHMgYW5kIGlzIGluY2x1ZGVkIGluIHRoZSBtZXJnZQ0KY29uZmxpY3QgcmVwb3J0Ljwv\nZm9udD48L3A+DQoNCjxwPjxmb250IGZhY2U9IkhlbHYiIGNvbG9yPSIjMDAwMDAwIj5BIHVzZXIg\nY2FuIHJlcXVlc3QgdGhlIGRpZmZlcmVuY2VzIGJldHdlZW4gdHdvDQpyZXZpc2lvbnMgb2YgYSBy\nZXNvdXJjZSAoc2VydmVycyBtYXkgcHJvdmlkZSBhIGRpZmZlcmVuY2VzIHJlcG9ydCwgYnV0IHRo\nZXkgbXVzdCBhdCBsZWFzdA0KaW5kaWNhdGUgaWYgdGhleSBhcmUgdGhlIHNhbWUgb3Igbm90KS4g\nQSB1c2VyIGNhbiByZXF1ZXN0IGNvbmZsaWN0cyBiZXR3ZWVuIGFuIGFjdGl2aXR5DQphbmQgdGhl\nIGN1cnJlbnQgd29ya3NwYWNlIHRvIGdlbmVyYXRlIGEgbWVyZ2UgY29uZmxpY3QgcmVwb3J0LiBB\nIHVzZXIgY2FuIGFsc28gcmVxdWVzdCB0aGUNCmRpZmZlcmVuY2VzIGJldHdlZW4gYSBjb25maWd1\ncmF0aW9uIGFuZCB0aGUgY3VycmVudCB3b3Jrc3BhY2Ugd2hpY2ggbGlzdHMgYXQgbGVhc3QgdGhl\nDQphY3Rpdml0aWVzIHRoYXQgYXJlIGNvbnRhaW5lZCBpbiB0aGUgY29uZmlndXJhdGlvbiBidXQg\nbm90IGluIHRoZSB3b3Jrc3BhY2UgYW5kIHZpY2UNCnZlcnNhLiBTbyBkaWZmZXJlbmNlcyBhcmUg\nZGV0ZWN0ZWQgYXQgZGlmZmVyZW50IGxldmVsczogY29udGVudCBkaWZmZXJlbmNlcyBmb3IgcmVz\nb3VyY2VzLA0KcmV2aXNpb24gZGlmZmVyZW5jZXMgZm9yIGFjdGl2aXRpZXMsIGFuZCBhY3Rpdml0\neSBkaWZmZXJlbmNlcyBmb3IgY29uZmlndXJhdGlvbnMuPC9mb250PjwvcD4NCg0KPHA+PGZvbnQg\nZmFjZT0iSGVsdiIgY29sb3I9IiMwMDAwMDAiPk9uY2UgdGhlIG1lcmdlIGNvbmZsaWN0cyBhcmUg\na25vd24sIGEgdXNlciByZXNvbHZlcw0KdGhlIGNvbmZsaWN0cyBieSBtZXJnaW5nIHRoZSBzb3Vy\nY2UgYWN0aXZpdHkgd2l0aCB0aGUgd29ya3NwYWNlLiBUaGlzIGVudGVycyB0aGUgbWVyZ2UNCnNv\ndXJjZSBpbnRvIHRoZSB3b3Jrc3BhY2UsIGFuZCBzZXRzIHRoZSBjdXJyZW50IGNvbmZsaWN0cyB0\naGF0IG11c3QgYmUgcmVzb2x2ZWQuIFRoZQ0KY29uZmxpY3RzIGFyZSByZXNvbHZlZCBieSBtZXJn\naW5nIHRoZSByZXZpc2lvbnMgZnJvbSB0aGUgbWVyZ2Ugc291cmNlIGludG8gdGhlIHJldmlzaW9u\nDQpzZWxlY3RlZCBieSB0aGUgd29ya3NwYWNlIHRvIGNyZWF0ZSBhIG5ldyB3b3JraW5nIHJlc291\ncmNlLiBTZXJ2ZXJzIG1heSBwZXJmb3JtIHNvbWUNCmRlZmF1bHQgYXV0byBtZXJnaW5nLCBidXQg\nYXQgYSBtaW5pbXVtLCB0aGUgbWVyZ2UgaXMgZG9uZSBieSBjaGVja2luZyBvdXQgdGhlIHJldmlz\naW9uIGluDQp0aGUgY3VycmVudCBhY3Rpdml0eSBhbmQgbm90aW5nIHRoZSBtZXJnZSBmcm9tIHRo\nZSBtZXJnZSBzb3VyY2UuIFRoaXMgY3JlYXRlcyBhbg0KYWRkaXRpb25hbCBzdWNjZXNzb3IvcHJl\nZGVjZXNzb3IgcmVsYXRpb25zaGlwIGJldHdlZW4gdGhlIG1lcmdlIHNvdXJjZSBhbmQgd29ya3Nw\nYWNlDQpyZXZpc2lvbnMgY2FsbGVkIG1lcmdlZC1mcm9tLiBUaGUgY29uZmxpY3QgaXMgbm93IHJl\nbW92ZWQgYmVjYXVzZSB0aGUgd29ya2luZyByZXNvdXJjZSBpcw0Kbm93IGEgc3VjY2Vzc29yIG9m\nIGJvdGggdGhlIHNvdXJjZSBhbmQgdGFyZ2V0IHJldmlzaW9ucy4gSXQgaXMgdGhlIHVzZXIncyBy\nZXNwb25zaWJpbGl0eQ0KdG8gYXBwbHkgdGhlIGRpZmZlcmVuY2VzIGluIHRoZSB0d28gcmV2aXNp\nb25zIGluIGFuIGFwcHJvcHJpYXRlIG1hbm5lci4gVGhlIG1lcmdlIGlzDQpjb21wbGV0ZSB3aGVu\nIGFsbCB0aGUgY29uZmxpY3RzIGFyZSByZXNvbHZlZCwgYWxsIGRpZmZlcmVuY2VzIGhhdmUgYmVl\nbiBtZXJnZWQsIGFuZCB0aGUNCnJlc291cmNlcyBhcmUgYWxsIGNoZWNrZWQgYmFjayBpbi4gVGhl\nIG1lcmdlIHNvdXJjZSBjYW4gbm93IGJlIHJlbW92ZWQgZnJvbSB0aGUgd29ya3NwYWNlDQphcyBh\nbGwgb2YgaXRzIGNoYW5nZXMgYXJlIG5vdyBpbmNsdWRlZCBpbiB0aGUgY3VycmVudCBhY3Rpdml0\neS4gT25seSBvbmUgYWN0aXZpdHkgY2FuIGJlDQptZXJnZWQgYXQgYSB0aW1lLjwvZm9udD48L3A+\nDQoNCjxwPjxmb250IGZhY2U9IkhlbHYiIGNvbG9yPSIjMDAwMDAwIj5XaGVuIG1lcmdpbmcgbXV0\nYWJsZSByZXZpc2lvbnMsIHRoZSBtZXJnZSBjb25mbGljdA0KcmVwb3J0IG1heSBiZSBpbmFjY3Vy\nYXRlIGFzIHRoZSBzb3VyY2UgcmV2aXNpb24gbWF5IGNoYW5nZSB3aXRob3V0IHRoZSBzeXN0ZW0g\nYmVpbmcgYXdhcmUuDQpVc2VycyBhcmUgcmVzcG9uc2libGUgZm9yIGFwcGx5aW5nIGFueSBjaGFu\nZ2VzIHRvIGFuY2VzdG9yIHJldmlzaW9ucyB0byB0aGVpciBkZXNjZW5kYW50cw0KYXMgYXBwcm9w\ncmlhdGUuIFRoZSBzeXN0ZW0gY2Fubm90IGRldGVybWluZSBpZiB0aGVyZSBhcmUgYW55IGNoYW5n\nZXMgdGhhdCBuZWVkIHRvIGJlDQphcHBsaWVkIG90aGVyIHRoYW4gYnkgbG9va2luZyBhIHRoZSBs\nYXN0LW1vZGlmaWVkIGRhdGVzIG9mIHRoZSByZXZpc2lvbnMuPC9mb250PjwvcD4NCg0KPGgzPjxm\nb250IGZhY2U9IkhlbHYiIGNvbG9yPSIjMDAwMDAwIj5Mb2NraW5nIFZlcnNpb25lZCBSZXNvdXJj\nZXM8L2ZvbnQ+PC9oMz4NCg0KPHA+PGZvbnQgZmFjZT0iSGVsdiIgY29sb3I9IiMwMDAwMDAiPkxv\nY2tpbmcgYSB2ZXJzaW9uZWQgcmVzb3VyY2UgcHJldmVudHMgYW55IHJldmlzaW9uDQpmcm9tIGJl\naW5nIGNoZWNrZWQgb3V0IGluIGFueSBhY3Rpdml0eS4gTG9ja2luZyBhIHJldmlzaW9uIG9mIGEg\ndmVyc2lvbmVkIHJlc291cmNlDQpwcmV2ZW50cyBqdXN0IHRoYXQgcmV2aXNpb24gZnJvbSBiZWlu\nZyBjaGVja2VkIG91dCBpbiBhbnkgYWN0aXZpdHkuPC9mb250PjwvcD4NCg0KPHA+UmV2aXNpb25z\nIG9mIHZlcnNpb25lZCByZXNvdXJjZXMgY2FuIGJlIGdyb3VwZWQgaW50byA8c3Ryb25nPmNvbmZp\nZ3VyYXRpb25zPC9zdHJvbmc+LiBBDQpjb25maWd1cmF0aW9uIGNvbnRhaW5zIG9uZSBhbmQgb25s\neSBvbmUgcmV2aXNpb24gb2YgaW1tdXRhYmxlIHJldmlzaW9ucyBvZiB2ZXJzaW9uZWQNCnJlc291\ncmNlcy4gQ29uZmlndXJhdGlvbnMgYXJlIGNvbnZpbmVudCBmb3IgZGVmaW5pbmcgY29sbGVjdGlv\nbnMgb2YgcmV2aXNpb25zIHRoYXQgcmVsYXRlDQp0byBlYWNoIG90aGVyIGluIHNvbWUgc3BlY2lm\naWMgd2F5IG92ZXIgdGhlaXIgbGlmZXRpbWVzLiBUaGlzIGNhbiBiZSB1c2VmdWwgZm9yIHB1Ymxp\nc2hpbmcNCmNvbnNpc3RlbnQgdmVyc2lvbnMgb2YgcmVzb3VyY2VzIHRvIGRlcGxveSBhbiBhcHBs\naWNhdGlvbiwgb3IgZm9yIHJlY292ZXJpbmcgdG8gYSBzcGVjaWZpYw0KdmVyc2lvbiBzdGF0ZSBm\nb3IgbGVnYWwgb3IgbWFpbnRlbmFuY2UgcmVhc29ucy48L3A+DQoNCjxwPlRoZSBmb2xsb3dpbmcg\nc2VjdGlvbnMgZGVmaW5lIHRoZSBtb2RlbCBpbiBtb3JlIGRldGFpbCwgYW5kIHByb3ZpZGUgdGhl\nIHNlbWFudGljIHJ1bGVzDQpmb3IgdmVyc2lvbmluZywgYnJhbmNoaW5nLCBhbmQgY29uZmlndXJh\ndGlvbiBtYW5hZ2VtZW50LjwvcD4NCg0KPGgyIGFsaWduPSJsZWZ0Ij5WZXJzaW9uaW5nIE1vZGVs\nPC9oMj4NCg0KPGgyIGFsaWduPSJsZWZ0Ij48aW1nIHNyYz0idmVybW9kLmdpZiIgd2lkdGg9Ijg1\nNSIgaGVpZ2h0PSI4MjgiDQphbHQ9IndwZTEuZ2lmICgxNzcwMSBieXRlcykiPlJlc291cmNlPC9o\nMj4NCg0KPHA+SW50ZXJmYWNlIFJlc291cmNlIHJlcHJlc2VudHMgYW55dGhpbmcgb24gdGhlIFdl\nYiB0aGF0IGlzIGFjY2Vzc2libGUgdGhyb3VnaCBhIFVSTCwNCmkuZS4sIGEgV2ViREFWIHJlc291\ncmNlLiBSZXNvdXJjZSBwcm92aWRlcyBhIG51bWJlciBvZiBtZXRob2RzIHRoYXQgYWJzdHJhY3Qg\ncmVzb3VyY2UNCmJlaGF2aW9yIGFzIHNwZWNpZmllZCBieSBXZWJEQVYgaW5jbHVkaW5nOiANCg0K\nPHVsPg0KICA8bGk+bWV0aG9kcyBmb3IgZ2V0dGluZyBhbmQgc2V0dGluZyByZXNvdXJjZSBjb250\nZW50cyBvciBnZXR0aW5nIGlucHV0IGFuZC9vciBvdXRwdXQgc3RyZWFtcw0KICAgIG9uIHRoZSBy\nZXNvdXJjZSBjb250ZW50cyw8L2xpPg0KICA8bGk+bW92aW5nLCBjb3B5aW5nLCBhbmQgZGVsZXRp\nbmcgYSByZXNvdXJjZSw8L2xpPg0KICA8bGk+Z2V0dGluZyBhbmQgc2V0dGluZyBwcm9wZXJ0aWVz\nIG9mIHRoZSByZXNvdXJjZTwvbGk+DQogIDxsaT5sb2NraW5nIGFuZCB1bmxvY2tpbmcgYSByZXNv\ndXJjZTwvbGk+DQogIDxsaT5jaGVja2luZyBhIHJlc291cmNlIGluIGFuZCBvdXQgaW4gc29tZSBh\nY3Rpdml0eTwvbGk+DQogIDxsaT5nZXR0aW5nIHRoZSByZXZpc2lvbiBoaXN0b3J5IG9mIGEgcmVz\nb3VyY2U8L2xpPg0KPC91bD4NCg0KPHA+VGhlIGZvbGxvd2luZyB0YWJsZSBnaXZlcyB0aGUgbWV0\naG9kcyBvZiBSZXNvdXJjZSBjb25jZXJuaW5nIHZlcnNpb25pbmcgYW5kDQpjb252aWd1cmF0aW9u\nIG1hbmFnZW1lbnQsIGFuZCBhIGJyaWVmIGRlc2NyaXB0aW9uIG9mIHRoZWlyIHNlbWFudGljcy4g\nTm90IGFsbCBvZiB0aGVzZQ0KbWV0aG9kcyB3aWxsIGNvcnJlc3BvbmQgZGlyZWN0bHkgdG8gV2Vi\nREFWIHByb3RvY29sLiBNYW55IG9mIHRoZW0gYXJlIGNsaWVudCBjb252ZW5pZW5jZQ0KbWV0aG9k\ncyB0byBtYWtlIHRoZSBzZW1hbnRpY3MgY2xlYXJlciBhbmQgZWFzaWVyIHRvIHVzZS4gVGhlc2Ug\nbWV0aG9kcyBzaG91bGQgYmUNCmNvbnNpZGVyZWQgdG8gYmUgaW1wbGVtZW50ZWQgaW4gdGVybXMg\nb2Ygb3RoZXIgbW9yZSBwcmltaXRpdmUgbWV0aG9kcyB0aGF0IGRvIGNvcnJlc3BvbmQNCmRpcmVj\ndGx5IHRvIG1ldGhvZHMgb2YgdGhlIHByb3RvY29sLjwvcD4NCg0KPHA+Tm90ZSB0aGF0IGluIHRo\nZSBtb2RlbCBhYm92ZSwgYWxsIHRoZSB0eXBlcyBhcmUgaW50ZXJmYWNlcyBldmVuIHRob3VnaCBh\nc3NvY2lhdGlvbnMgYXJlDQpzaG93bi4gVGhpcyBpcyBqdXN0IHRvIHNpbXBsaWZ5IHRoZSBtb2Rl\nbCBmb3IgZXhwbG9yYXRvcnkgcHVycG9zZXMuIFRoZSBtb2RlbCBhbHNvIGRvZXMNCm5vdCBpbXBs\neSBhbnkgcGFydGljdWxhciBpbXBsZW1lbnRhdGlvbiBvZiB0aGVzZSBpbnRlcmZhY2VzLiBUaGUg\nbW9kZWwgc2hvdWxkIGluY2x1ZGUNCmltcGxlbWVudGF0aW9uIGNsYXNzZXMgdGhhdCB1c2UgdGhl\nIFN0YXRlIHBhdHRlcm4gdG8gZmFjdG9yIG91dCB0aGUgZGlmZmVyZW5jZXMgaW4NCmJlaGF2aW9y\nIHRoYXQgYXJyaXNlIGFzIGEgcmVzb3VyY2UgZ29lcyB0aHJvdWdoIGl0cyBsaWZldGltZS4gQSBS\nZXNvdXJjZSBpbXBsZW1lbnRhdGlvbg0KZGVsZWdhdGVzIHN0YXRlLWRlcGVuZGVudCBtZXRob2Rz\nIHRvIGl0cyBjdXJyZW50IHN0YXRlIG9iamVjdCB3aGVyZSB0aGV5IGNhbiBiZQ0KaW1wbGVtZW50\nZWQgaW4gYSBzdGF0ZS1zcGVjaWZpYyB3YXkuIFJlc291cmNlU3RhdGUgaXMgYW4gYWJzdHJhY3Qg\nc3VwZXJjbGFzcyBvZiBhbGwNClJlc291cmNlIHN0YXRlcy4gSXRzIG1ldGhvZHMgaW5jbHVkZSBh\nbGwgdGhlIG1ldGhvZHMgb2YgUmVzb3VyY2UgdGhhdCBhcmUgc3RhdGUgZGVwZW5kZW50Lg0KRm9y\nIGV4YW1wbGUsIHNldENvbnRlbnRzKCkgaXMgYSBzdGF0ZS1kZXBlbmRlbnQgbWV0aG9kLiBJdCdz\nIGJlaGF2aW9yIGNoYW5nZXMgZGVwZW5kaW5nIG9uDQp0aGUgbG9jayBzdGF0ZSBvZiB0aGUgcmVz\nb3VyY2UuIFNpbWlsYXJseSwgbWFueSBvZiB0aGUgbWV0aG9kcyB0aGF0IHVwZGF0ZSBhIHJlc291\ncmNlIG9yDQppdHMgcHJvcGVydGllcyBkZXBlbmQgb24gdGhlIHZlcnNpb25pbmcgYW5kIG11dGFi\naWxpdHkgc3RhdGVzIG9mIHRoZSByZXNvdXJjZS4gTGlrZWx5DQpjYW5kaWRhdGVzIGZvciBSZXNv\ndXJjZSBzdGF0ZXMgKHN1YmNsYXNzZXMgb2YgUmVzb3VyY2VTdGF0ZSkgYXJlOjwvcD4NCg0KPGJs\nb2NrcXVvdGU+DQogIDx1bD4NCiAgICA8bGk+PGZvbnQgRkFDRT0iSGVsdiIgU0laRT0iMiIgQ09M\nT1I9IiMwMDAwMDAiPjwvZm9udD48Zm9udCBjb2xvcj0iIzAwMDAwMCI+VW52ZXJzaW9uZWRMb2Nr\nZWQ8L2ZvbnQ+PC9saT4NCiAgICA8bGk+PGZvbnQgY29sb3I9IiMwMDAwMDAiPlVudmVyc2lvbmVk\nVW5sb2NrZWQ8L2ZvbnQ+PC9saT4NCiAgICA8bGk+PGZvbnQgY29sb3I9IiMwMDAwMDAiPlZlcnNp\nb25lZExvY2tlZDwvZm9udD48L2xpPg0KICAgIDxsaT48Zm9udCBjb2xvcj0iIzAwMDAwMCI+VmVy\nc2lvbmVkVW5sb2NrZWQ8L2ZvbnQ+PC9saT4NCiAgICA8bGk+PGZvbnQgY29sb3I9IiMwMDAwMDAi\nPkNoZWNrZWRPdXQ8L2ZvbnQ+PC9saT4NCiAgICA8bGk+PGZvbnQgY29sb3I9IiMwMDAwMDAiPk11\ndGFibGVVbmxvY2tlZDwvZm9udD48L2xpPg0KICAgIDxsaT48Zm9udCBjb2xvcj0iIzAwMDAwMCI+\nQ2hlY2tlZE91dEluUGxhY2U8L2ZvbnQ+PC9saT4NCiAgPC91bD4NCjwvYmxvY2txdW90ZT4NCg0K\nPHA+PGZvbnQgY29sb3I9IiMwMDAwMDAiPlRoaXMgYXBwcm9hY2ggcHJvdmlkZXMgYSBzaW1wbGUg\nd2F5IG9mIG1vZGVsaW5nIHN0YXRlLXNwZWNpZmljDQpiZWhhdmlvciB3aXRob3V0IGNvbXBsaWNh\ndGluZyB0aGUgbW9kZWwgd2l0aCBtYW55IG1vcmUgaW50ZXJmYWNlcywgY2xhc3NlcywNCm11bHRp\ncGxlLWluaGVyaXRhbmNlLCBldGMuIEFsc28sIG1hbnkgdmVyc2lvbmluZyBtZXRob2RzIGNhbiBi\nZSBlcXVhbGx5IHdlbGwgaW1wbGVtZW50ZWQNCm9uIHVudmVyc2lvbmVkIHJlc291cmNlcy4gRm9y\nIGV4YW1wbGUsIGdldFByZWRlY2Vzc29yKCkgY2hvdWxkIGp1c3QgcmV0dXJuIE5VTEwgZm9yIGFu\nDQp1bnZlcnNpb25lZCByZXNvdXJjZSBhcyBpdCBkb2Vzbid0IGhhdmUgYSBwcmVkZWNlc3Nvci4g\nTmVpdGhlciBkb2VzIHRoZSByb290IHJldmlzaW9uLg0KVGFraW5nIHRoaXMgYXBwcm9hY2ggc2lt\ncGxpZmllcyBib3RoIHRoZSBtb2RlbCBhbmQgdGhlIHZlcnNpb25pbmcgc2VtYW50aWNzLjwvZm9u\ndD48L3A+DQo8ZGl2IGFsaWduPSJjZW50ZXIiPjxjZW50ZXI+DQoNCjx0YWJsZSBib3JkZXI9IjEi\nIHdpZHRoPSIxMDAlIiBoZWlnaHQ9IjEyNTAiPg0KICA8dHI+DQogICAgPHRkIHdpZHRoPSI1MCUi\nIGhlaWdodD0iMTcxIj5jaGVja0luKGlzTXV0YWJsZSA6IGJvb2xlYW4gPSBmYWxzZSk8L3RkPg0K\nICAgIDx0ZCB3aWR0aD0iNTAlIiBoZWlnaHQ9IjE3MSI+Q2hlY2tpbiBhIHJlc291cmNlIGNyZWF0\naW5nIGEgbmV3IHJldmlzaW9uIGFuZCByZWxlYXNpbmcgdGhlDQogICAgcmVzb3VyY2UgaW4gdGhl\nIGN1cnJlbnQgYWN0aXZpdHkgc28gb3RoZXJzIG1heSBjaGVjayBpdCBvdXQuPGJyPg0KICAgIDxi\ncj4NCiAgICBJZiBpc011dGFibGUgaXMgdHJ1ZSwgdGhlIHJldmlzaW9uIGlzIG1hcmtlZCBhcyBh\nIG11dGFibGUgcmV2aXNpb24gYW5kIGNhbiBiZSBjaGVja2VkIG91dA0KICAgIGluLXBsYWNlIGF0\nIHNvbWUgZnV0dXJlIHRpbWUuPGJyPg0KICAgIDxicj4NCiAgICBJZiBpc011dGFibGUgaXMgZmFs\nc2UgYW5kIHRoZSBwcmVkZWNlc3NvciBpcyBtdXRhYmxlLCB0aGUgcHJlZGVjZXNzb3IgaXMgc2V0\nIHRvIHRoZQ0KICAgIGNsb3Nlc3QgaW1tdXRhYmxlIGFuY2VzdG9yLiBUaGlzIGlzIHJlcXVpcmVk\nIHRvIGVuc3VyZSBhY2N1cmF0ZSBtZXJnZSBjb25mbGljdCByZXBvcnRzLjwvdGQ+DQogIDwvdHI+\nDQogIDx0cj4NCiAgICA8dGQgd2lkdGg9IjUwJSIgaGVpZ2h0PSIxNTIiPmNoZWNrT3V0KGluUGxh\nY2UgOiBib29sZWFuID0gZmFsc2UpIDogUmVzb3VyY2U8L3RkPg0KICAgIDx0ZCB3aWR0aD0iNTAl\nIiBoZWlnaHQ9IjE1MiI+Q2hlY2sgb3V0IGEgcmVzb3VyY2UgaW4gb3JkZXIgdG8gY3JlYXRlIGEg\nbmV3IHdvcmtpbmcNCiAgICByZXNvdXJjZS4gQSByZXNvdXJjZSBpcyBjaGVja2VkIG91dCBpbiB0\naGUgY29udGV4dCBvZiB0aGUgd29ya3NwYWNlIGN1cnJlbnQgYWN0aXZpdHksIGFuZA0KICAgIGNh\nbiBvbmx5IGJlIGNoZWNrZWQgb3V0IG9uY2UgaW4gYSBnaXZlbiBhY3Rpdml0eS48YnI+DQogICAg\nPGJyPg0KICAgIElmIGluUGxhY2UgaXMgdHJ1ZSwgYW5kIHRoZSByZXZpc2lvbiBpcyBtdXRhYmxl\nLCB0aGVuIHRoZSByZXZpc2lvbiBiZWNvbWVzIGEgd29ya2luZw0KICAgIHJlc291cmNlIGFuZCBh\nbGwgdXBkYXRlcyBhcmUgaW4gcGxhY2UsIGRlc3Ryb3lpbmcgYW55IHByZXZpb3VzIGNvbnRlbnRz\nLjxwPkNoZWNrT3V0IGZhaWxzDQogICAgaXMgdGhlIHJlc291cmNlIGlzIG5vdCBhIHZlcnNpb25l\nZCByZXNvdXJjZSwgaXMgYWxyZWFkeSBjaGVja2VkIG91dCBpbiB0aGUgY3VycmVudA0KICAgIGFj\ndGl2aXR5LCBvciBpcyBsb2NrZWQuPC90ZD4NCiAgPC90cj4NCiAgPHRyPg0KICAgIDx0ZCB3aWR0\naD0iNTAlIiBoZWlnaHQ9IjU3Ij5jYW5jZWxDaGVja091dCgpPC90ZD4NCiAgICA8dGQgd2lkdGg9\nIjUwJSIgaGVpZ2h0PSI1NyI+Q2FuY2VsIHRoZSBjaGVja291dCBvZiB0aGlzIHdvcmtpbmcgcmVz\nb3VyY2UgYW5kIGRlbGV0ZSB0aGUNCiAgICB3b3JraW5nIHJlc291cmNlLiBBbiBleGNlcHRpb24g\naXMgcmFpc2VkIGlmIHRoZSByZXNvdXJjZSBpcyBub3QgY3VycmVudGx5IGNoZWNrZWQgb3V0Ljwv\ndGQ+DQogIDwvdHI+DQogIDx0cj4NCiAgICA8dGQgd2lkdGg9IjUwJSIgaGVpZ2h0PSIxMTQiPmdl\ndFZlcnNpb25pbmdPcHRpb25zKCkgOiBFbGVtZW50PC90ZD4NCiAgICA8dGQgd2lkdGg9IjUwJSIg\naGVpZ2h0PSIxMTQiPkdldCB0aGUgdmVyc2lvbmluZyBvcHRpb25zIGZvciB0aGlzIHJlc291cmNl\nLiBWZXJzaW9uaW5nDQogICAgb3B0aW9ucyBpbmNsdWRlLjx1bD4NCiAgICAgIDxsaT5tdXRhYmxl\nL2ltbXV0YWJsZSByZXZpc2lvbnM8L2xpPg0KICAgICAgPGxpPm11bHRpcGxlIGFjdGl2aXRpZXM8\nL2xpPg0KICAgICAgPGxpPmNhbiBiZSBhIG1lbWJlciBvZiBhIGNvbmZpZ3VyYXRpb248L2xpPg0K\nICAgIDwvdWw+DQogICAgPC90ZD4NCiAgPC90cj4NCiAgPHRyPg0KICAgIDx0ZCB3aWR0aD0iNTAl\nIiBoZWlnaHQ9Ijc2Ij5pc0F1dG9tYXRpY2FsbHlWZXJzaW9uZWQoKSA6IGJvb2xlYW48L3RkPg0K\nICAgIDx0ZCB3aWR0aD0iNTAlIiBoZWlnaHQ9Ijc2Ij5SZXR1cm4gdHJ1ZSBpZiB0aGlzIHJlc291\ncmNlIGlzIGF1dG9tYXRpY2FsbHkgdmVyc2lvbmVkIG9uDQogICAgZWFjaCBtZXRob2QgdGhhdCB1\ncGRhdGVzIGl0cyBzdGF0ZSAoY29udGVudCBvciBwcm9wZXJ0aWVzKS4gQXV0b21hdGljIHZlcnNp\nb25pbmcgaXMgdXNlZA0KICAgIHRvIHN1cHBvcnQgdXBkYXRlcyBieSBub24tdmVyc2lvbmluZyBh\nd2FyZSBjbGllbnRzLjwvdGQ+DQogIDwvdHI+DQogIDx0cj4NCiAgICA8dGQgd2lkdGg9IjUwJSIg\naGVpZ2h0PSI1NyI+Z2V0TXV0YWJsZVByb3BlcnRpZXMoKSA6IFN0cmluZ1tdPC90ZD4NCiAgICA8\ndGQgd2lkdGg9IjUwJSIgaGVpZ2h0PSI1NyI+UmV0dXJuIGEgbGlzdCBvZiB0aGUgbmFtZXMgb2Yg\nbXV0YWJsZSBwcm9wZXJ0aWVzIGZvciB0aGlzDQogICAgcmVzb3VyY2UuIFRoZXNlIGFyZSBwcm9w\nZXJ0aWVzIHRoYXQgbWF5IGNoYW5nZSBldmVuIHdoZW4gdGhlIHJlc291cmNlIGlzIGNoZWNrZWQg\naW4uPC90ZD4NCiAgPC90cj4NCiAgPHRyPg0KICAgIDx0ZCB3aWR0aD0iNTAlIiBoZWlnaHQ9IjU4\nIj5pc1ZlcnNpb25lZCgpIDogYm9vbGVhbjwvdGQ+DQogICAgPHRkIHdpZHRoPSI1MCUiIGhlaWdo\ndD0iNTgiPlJldHVybiB0cnVlIGlmIHRoaXMgcmVzb3VyY2UgaXMgYSB2ZXJzaW9uZWQgcmVzb3Vy\nY2UuIEENCiAgICB2ZXJzaW9uZWQgcmVzb3VyY2UgaGFzIG11bHRpcGxlIHJldmlzaW9ucyBhbmQg\nYSByZXZpc2lvbiBoaXN0b3J5LjwvdGQ+DQogIDwvdHI+DQogIDx0cj4NCiAgICA8dGQgd2lkdGg9\nIjUwJSI+Z2V0VmVyc2lvbkhpc3RvcnkoKSA6IERvY3VtZW50PC90ZD4NCiAgICA8dGQgd2lkdGg9\nIjUwJSI+R2V0IHRoZSByZXZpc2lvbiBoaXN0b3J5IGZvciBhIHZlcnNpb25lZCByZXNvdXJjZS4g\nVGhlIHJldmlzaW9uIGhpc3RvcnkNCiAgICBsaXN0IHRoZSByZXZpc2lvbnMgb2YgYSByZXNvdXJj\nZSBhbmQgdGhlaXIgcHJlZGVjZXNzb3JzIGFuZCBzdWNjZXNzb3JzLiBUaGUgZm9ybWF0IG9mIHRo\nZQ0KICAgIGRvY3VtZW50IGlzIGdpdmVuIGluIHNlY3Rpb24gPGEgaHJlZj0idmVyc2lvbkhpc3Rv\ncnkiPlZlcnNpb24gSGlzdG9yeTwvYT4uIFRoZSBkb2N1bWVudA0KICAgIHdpbGwgbm90IGNvbnRh\naW4gYW55IHJldmlzaW9ucyBpZiB0aGUgcmVzb3VyY2UgaXMgbm90IHZlcnNpb25lZC48L3RkPg0K\nICA8L3RyPg0KICA8dHI+DQogICAgPHRkIHdpZHRoPSI1MCUiIGhlaWdodD0iNzYiPmdldFJldmlz\naW9uSWQoKSA6IFN0cmluZzwvdGQ+DQogICAgPHRkIHdpZHRoPSI1MCUiIGhlaWdodD0iNzYiPkdl\ndCB0aGUgc3lzdGVtLWFzc2lnbmVkIHJldmlzaW9uIGlkIGZvciB0aGlzIHJldmlzaW9uLiBUaGlz\nDQogICAgcmV2aXNpb24gbmFtZSBjYW5ub3QgYmUgY2hhbmdlZCwgYW5kIGNhbm5vdCBiZSByZXVz\nZWQgaWYgdGhpcyByZXZpc2lvbiBpcyBkZWxldGVkLiBSZXR1cm5zDQogICAgTlVMTCBpZiB0aGUg\ncmVzb3VyY2UgaXMgbm90IHZlcnNpb25lZC48YnI+DQogICAgPGJyPg0KICAgIFRoZSByZXZpc2lv\nbiBpZCBtdXN0IGJlIHVuaXF1ZSBmb3IgdGhlIHJldmlzaW9uIGFjcm9zcyBhbGwgdGltZS4gU2Vy\ndmVycyBtYXkgY2hvb3NlIHRvIHVzZQ0KICAgIGFuIG9wYXF1ZSBpZGVudGlmaWVyIGNvbnNpc3Rp\nbmcgb2YgYSB0aW1lIHN0YW1wIHNpbWlsYXIgdG8gVVVJRHMgZm9yIGxvY2sgdG9rZW5zLjwvdGQ+\nDQogIDwvdHI+DQogIDx0cj4NCiAgICA8dGQgd2lkdGg9IjUwJSIgaGVpZ2h0PSI3NiI+YWRkTGFi\nZWwobGFiZWwgOiBTdHJpbmcpPC90ZD4NCiAgICA8dGQgd2lkdGg9IjUwJSIgaGVpZ2h0PSI3NiI+\nQWRkIGEgbGFiZWwgdG8gdGhpcyByZXZpc2lvbiBvZiBhIHZlcnNpb25lZCByZXNvdXJjZS4gVGhl\nDQogICAgcmV2aXNpb24gbXVzdCBub3QgYWxyZWFkeSBoYXZlIHRoZSBsYWJlbCwgYW5kIHRoZSBs\nYWJlbCBjYW5ub3QgYmUgdGhlIHNhbWUgYXMgdGhlIHJldmlzaW9uDQogICAgaWQuIFRoZSBvcGVy\nYXRpb24gd2lsbCBmYWlsIGlmIHRoZSByZXNvdXJjZSBpcyBub3QgYSB2ZXJzaW9uZWQgcmVzb3Vy\nY2UuPGJyPg0KICAgIDxicj4NCiAgICBMYWJlbHMgYXJlIHVzZWQgdG8gcHJvdmlkZSBtZWFuaW5n\nZnVsIG5hbWVzIHRoYXQgZGlzdGluZ3Vpc2ggcmV2aXNpb25zIG9mIGEgdmVyc2lvbmVkDQogICAg\ncmVzb3VyY2UuIFRoZXkgY2FuIGJlIHVzZWQgaW4gdGhlIHJldmlzaW9uIHNlbGVjdGlvbiBydWxl\nIG9mIHRoZSB3b3Jrc3BhY2UgdG8gc3BlY2lmeSB3aGF0DQogICAgcmV2aXNpb24gc2hvdWxkIGJl\nIHVzZWQgaW4gdGhhdCB3b3Jrc3BhY2UuIFJldmlzaW9ucyBtYXkgYWxzbyBiZSBhY2Nlc3NlZCBi\neSBhIHNwZWNpZmljDQogICAgbGFiZWwgb3ZlcnJpZGRpbmcgdGhlIHdvcmtzcGFjZS48L3RkPg0K\nICA8L3RyPg0KICA8dHI+DQogICAgPHRkIHdpZHRoPSI1MCUiIGhlaWdodD0iNTciPnJlbW92ZUxh\nYmVsKGxhYmVsIDogU3RyaW5nKTwvdGQ+DQogICAgPHRkIHdpZHRoPSI1MCUiIGhlaWdodD0iNTci\nPlJlbW92ZSBhIGxhYmVsIGZyb20gYSByZXZpc2lvbi4gQW4gZXhjZXB0aW9uIGlzIHJhaXNlZCBp\nZiB0aGUNCiAgICByZXZpc2lvbiBkb2VzIG5vdCBoYXZlIHRoaXMgbGFiZWwuPC90ZD4NCiAgPC90\ncj4NCiAgPHRyPg0KICAgIDx0ZCB3aWR0aD0iNTAlIiBoZWlnaHQ9IjU3Ij5nZXRMYWJlbHMoKSA6\nIFN0cmluZ1tdPC90ZD4NCiAgICA8dGQgd2lkdGg9IjUwJSIgaGVpZ2h0PSI1NyI+UmV0dXJuIGFs\nbCB0aGUgbGFiZWxzIG9uIHRoaXMgcmV2aXNpb24sIG5vdCBpbmNsdWRpbmcgaXRzDQogICAgcmV2\naXNpb24gaWQuPC90ZD4NCiAgPC90cj4NCiAgPHRyPg0KICAgIDx0ZCB3aWR0aD0iNTAlIiBoZWln\naHQ9IjE5Ij5pc0xhYmVsZWRXaXRoKGxhYmVsIDogU3RyaW5nKTwvdGQ+DQogICAgPHRkIHdpZHRo\nPSI1MCUiIGhlaWdodD0iMTkiPlJldHVybiB0cnVlIGlmIHRoaXMgcmV2aXNpb24gaXMgbGFiZWxl\nZCB3aXRoIHRoZSBnaXZlbiBsYWJlbC48L3RkPg0KICA8L3RyPg0KICA8dHI+DQogICAgPHRkIHdp\nZHRoPSI1MCUiIGhlaWdodD0iNTciPmdldFJldmlzaW9uRGVzY3JpcHRpb24oKSA6IEVsZW1lbnQ8\nL3RkPg0KICAgIDx0ZCB3aWR0aD0iNTAlIiBoZWlnaHQ9IjU3Ij5HZXQgdGhlIGRlc2NyaXB0aW9u\nIG9mIHRoaXMgcmV2aXNpb24uIFRoZSBkZXNjcmlwdGlvbiBpcyBhbg0KICAgIFhNTCBlbGVtZW50\nIGluIG9yZGVyIHRvIHN1cHBvcnQgZXh0ZW5zaWJsZSBkZXNjcmlwdGlvbiBmb3JtYXRzLiBUaGlz\nIG9wZXJhdGlvbiBpcyB2YWxpZA0KICAgIGZvciB1bnZlcnNpb25lZCByZXNvdXJjZXMuPC90ZD4N\nCiAgPC90cj4NCiAgPHRyPg0KICAgIDx0ZCB3aWR0aD0iNTAlIiBoZWlnaHQ9IjU3Ij5zZXRSZXZp\nc2lvbkRlc2NyaXB0aW9uKGRlc2NyaXB0aW9uIDogRWxlbWVudCk8L3RkPg0KICAgIDx0ZCB3aWR0\naD0iNTAlIiBoZWlnaHQ9IjU3Ij5Qcm92aWRlIGEgZGVzY3JpcHRpb24gb2YgdGhpcyByZXZpc2lv\nbi4gVGhlIGRlc2NyaXB0aW9uIGlzIGFuDQogICAgWE1MIGVsZW1lbnQgaW4gb3JkZXIgdG8gc3Vw\ncG9ydCBleHRlbnNpYmxlIGRlc2NyaXB0aW9uIGZvcm1hdHMuIFRoaXMgb3BlcmF0aW9uIGlzIHZh\nbGlkDQogICAgZm9yIHVudmVyc2lvbmVkIHJlc291cmNlcy48L3RkPg0KICA8L3RyPg0KICA8dHI+\nDQogICAgPHRkIHdpZHRoPSI1MCUiIGhlaWdodD0iNzYiPmdldFByZWRlY2Vzc29yKCkgOiBSZXNv\ndXJjZTwvdGQ+DQogICAgPHRkIHdpZHRoPSI1MCUiIGhlaWdodD0iNzYiPkdldCB0aGUgcHJlZGVj\nZXNzb3Igb2YgdGhpcyByZXZpc2lvbiwgdGhhdCBpcywgdGhlIHJldmlzaW9uDQogICAgZnJvbSB3\naGljaCB0aGlzIHJldmlzaW9uIHdhcyBjaGVja2VkIG91dC4gUmV0dXJucyBOVUxMIGlmIHRoZSBS\nZXNvdXJjZSBoYXMgbm8gcHJlZGVjZXNzb3IuPC90ZD4NCiAgPC90cj4NCiAgPHRyPg0KICAgIDx0\nZCB3aWR0aD0iNTAlIiBoZWlnaHQ9Ijc2Ij5nZXRNZXJnZVByZWRlY2Vzc29ycygpIDogUmVzb3Vy\nY2VbXTwvdGQ+DQogICAgPHRkIHdpZHRoPSI1MCUiIGhlaWdodD0iNzYiPkdldCB0aGUgcHJlZGVj\nZXNzb3JzIG9mIHRoaXMgcmV2aXNpb24gdGhhdCB3ZXJlIGVzdGFibGlzaGVkIGJ5DQogICAgbWVy\nZ2luZyBjaGFuZ2VzIGZyb20gYW5vdGhlciBhY3Rpdml0eS4gVGhlIGxpc3QgbWF5IGJlIGVtcHR5\nLjwvdGQ+DQogIDwvdHI+DQogIDx0cj4NCiAgICA8dGQgd2lkdGg9IjUwJSIgaGVpZ2h0PSI1NyI+\nZ2V0U3VjY2Vzc29ycygpIDogUmVzb3VyY2VbXTwvdGQ+DQogICAgPHRkIHdpZHRoPSI1MCUiIGhl\naWdodD0iNTciPkdldCB0aGUgaW1tZWRpYXRlIHN1Y2Nlc3NvcnMgb2YgdGhpcyByZXZpc2lvbiwg\ndGhhdCBpcywNCiAgICByZXZpc2lvbnMgdGhhdCB3ZXJlIGNyZWF0ZWQgYnkgY2hlY2tpbmcgb3V0\nIHRoaXMgcmV2aXNpb24gaW4gc29tZSBhY3Rpdml0eS4gVGhlIGxpc3QgbWF5DQogICAgYmUgZW1w\ndHkuPC90ZD4NCiAgPC90cj4NCiAgPHRyPg0KICAgIDx0ZCB3aWR0aD0iNTAlIiBoZWlnaHQ9IjU3\nIj5nZXRBY3Rpdml0eSgpIDogQWN0aXZpdHk8L3RkPg0KICAgIDx0ZCB3aWR0aD0iNTAlIiBoZWln\naHQ9IjU3Ij5HZXQgdGhlIGFjdGl2aXR5IHRoaXMgcmV2aXNpb24gd2FzIGNyZWF0ZWQgaW4uIFJl\ndHVybnMgTlVMTA0KICAgIGZvciB1bnZlcnNpb25lZCByZXNvdXJjZXMuPC90ZD4NCiAgPC90cj4N\nCiAgPHRyPg0KICAgIDx0ZCB3aWR0aD0iNTAlIiBoZWlnaHQ9IjU3Ij5pc0NoZWNrZWRPdXRJbihh\nY3Rpdml0eSA6IEFjdGl2aXR5KSA6IGJvb2xlYW48L3RkPg0KICAgIDx0ZCB3aWR0aD0iNTAlIiBo\nZWlnaHQ9IjU3Ij5SZXR1cm4gdHJ1ZSBpZiB0aGlzIHJldmlzaW9uIGlzIGNoZWNrZWQgb3V0IGlu\nIHRoZSBnaXZlbg0KICAgIGFjdGl2aXR5LjwvdGQ+DQogIDwvdHI+DQogIDx0cj4NCiAgICA8dGQg\nd2lkdGg9IjUwJSIgaGVpZ2h0PSI1NyI+bWVyZ2VXaXRoKG1lcmdlU291cmNlIDogUmVzb3VyY2Up\nIDogUmVzb3VyY2U8L3RkPg0KICAgIDx0ZCB3aWR0aD0iNTAlIiBoZWlnaHQ9IjU3Ij5NZXJnZSB0\naGUgZ2l2ZW4gaW1tdXRhYmxlIHJldmlzaW9uIHdpdGggdGhlIHJldmlzaW9uIGluIHRoaXMNCiAg\nICB3b3Jrc3BhY2UgYnkgY3JlYXRpbmcgYSBuZXcgcmV2aXNpb24gaW4gdGhlIGN1cnJlbnQgYWN0\naXZpdHksIGFuZCBhZGRpbmcgYSBtZXJnZQ0KICAgIHByZWRlY2Vzc29yIHJlbGF0aW9uc2hpcCB3\naXRoIHRoZSBnaXZlbiByZXZpc2lvbi4gVGhlIHJlc3VsdCBpcyBhIGNoZWNrZWQgb3V0IHdvcmtp\nbmcNCiAgICByZXNvdXJjZSB0aGF0IHRoZSB1c2VyIGFnZW50IG11c3QgdXBkYXRlIHRvIGFjdHVh\nbGx5IG1lcmdlIHRoZSBjaGFuZ2VzLiA8cD5UaGUgbWVyZ2UNCiAgICBzb3VyY2UgY2FuIGJlIGEg\nbXV0YWJsZSByZXZpc2lvbiwgYnV0IG9uY2UgdGhlIG1lcmdlIGhhcyBiZWVuIGRvbmUsIGFueSBp\nbi1wbGFjZSBjaGFuZ2VzDQogICAgdG8gdGhlIG1lcmdlIHNvdXJjZSB3aWxsIG5vdCByZXN1bHQg\naW4gYSBuZXcgbWVyZ2UgY29uZmxpY3QuPC90ZD4NCiAgPC90cj4NCiAgPHRyPg0KICAgIDx0ZCB3\naWR0aD0iNTAlIiBoZWlnaHQ9IjU3Ij5pc011dGFibGUoKSA6IGJvb2xlYW48L3RkPg0KICAgIDx0\nZCB3aWR0aD0iNTAlIiBoZWlnaHQ9IjU3Ij5SZXR1cm4gdHJ1ZSBpZiB0aGlzIHJldmlzaW9uIGlz\nIG11dGFibGUsIHRoYXQgaXMsIGl0IHdhcw0KICAgIGNoZWNrZWQgaW4gYXMgYSBtdXRhYmxlIHJl\ndmlzaW9uLiBNdXRhYmxlIHJldmlzaW9ucyBtYXkgYmUgY2hlY2tlZCBvdXQgaW4gcGxhY2UgaW4g\nb3JkZXINCiAgICB0byBtYWtlIHVwZGF0ZXMgdGhhdCBkbyBub3QgcmVxdWlyZSBhIG5ldyByZXZp\nc2lvbi4gPHA+QW4gaW1tdXRhYmxlIHJldmlzaW9uIGNhbiBuZXZlcg0KICAgICZuYnNwOyBiZSBt\nYWRlIG11dGFibGUsIGJ1dCBhIG5ldyByZXZpc2lvbiBjYW4gYmUuIEEgbXV0YWJsZSByZXZpc2lv\nbiBjYW4gYmUgbWFkZQ0KICAgIGltbXV0YWJsZSBieSBjaGVja2luZyBpdCBvdXQgaW4gcGxhY2Ug\nYW5kIGNoZWNraW5nIGl0IGJhY2sgaXMgYXMgaW1tdXRhYmxlLjwvdGQ+DQogIDwvdHI+DQo8L3Rh\nYmxlPg0KPC9jZW50ZXI+PC9kaXY+DQoNCjxoND5TZW1hbnRpYyBSdWxlczwvaDQ+DQoNCjxvbD4N\nCiAgPGxpPldoZW4gYSByZXNvdXJjZSBpcyBpbml0aWFsbHkgY3JlYXRlZCB3aXRoIHNldENvbnRl\nbnRzKCkgKG9yIGFueSBvdGhlciBjcmVhdGlvbiBtZXRob2QpLA0KICAgIGl0IGlzIGNyZWF0ZWQg\nYXMgYW4gdW52ZXJzaW9uZWQgcmVzb3VyY2UuPC9saT4NCiAgPGxpPkFuIHVudmVyc2lvbmVkIHJl\nc291cmNlIGJlY29tZXMgYSB2ZXJzaW9uZWQgcmVzb3VyY2Ugd2hlbiBpdCBpcyBjaGVja2VkIGlu\nLiBDaGVja2luZyBpbg0KICAgIGFuIHVudmVyc2lvbmVkIHJlc291cmNlIGVmZmVjdGl2ZWx5IGNy\nZWF0ZXMgdGhlIGluaXRpYWwgb3Igcm9vdCByZXZpc2lvbiBvZiB0aGUgcmVzb3VyY2UuDQogICAg\nVGhpcyByZXZpc2lvbiBoYXMgbm8gcHJlZGVjZXNzb3JzLjwvbGk+DQogIDxsaT5BIG5ldyBzdWNj\nZXNzb3Igb2YgYSByZXZpc2lvbiwgY2FsbGVkIGEgd29ya2luZyByZXNvdXJjZSwgY2FuIGJlIGNy\nZWF0ZWQgYnkgY2hlY2tpbmcgb3V0DQogICAgdGhlIHJldmlzaW9uLiBUaGUgd29ya2luZyByZXNv\ndXJjZSBpcyBpZGVudGljYWwgdG8gYW4gdW52ZXJzaW9uZWQgcmVzb3VyY2UgaW4gYWxsIHdheXMN\nCiAgICBleGNlcHQgdGhhdCBpdCBoYXMgYSBwcmVkZWNlc3Nvci48L2xpPg0KICA8bGk+QSBjaGVj\na291dCBvcGVyYXRpb24gb24gYSBtdXRhYmxlIHJldmlzaW9uIGNhbiBiZSBlaXRoZXIgaW4gcGxh\nY2UsIG9yIGNyZWF0ZSBhIG5ldw0KICAgIHJldmlzaW9uLiBBIGNoZWNrIG91dCBpbiBwbGFjZSBl\nc3RhYmxpc2hlcyB0aGUgYWJpbGl0eSB0byBtb2RpZnkgdGhlIHJlc291cmNlLCBhbmQNCiAgICBl\nZmZlY3RpdmVseSBtYWtlcyB0aGUgcmV2aXNpb24gaW50byBhIHdvcmtpbmcgcmVzb3VyY2Ugc28g\ndGhhdCBpdCBjYW4gYmUgbW9kaWZpZWQgd2l0aG91dA0KICAgIG1ha2luZyBhIG5ldyByZXZpc2lv\nbi48L2xpPg0KICA8bGk+QSBjaGVjayBvdXQgb3BlcmF0aW9uIG9uIGFuIGltbXV0YWJsZSByZXZp\nc2lvbiwgb3IgYSBjaGVja291dCB0aGF0IGlzIG5vdCBpbiBwbGFjZSBvbiBhDQogICAgbXV0YWJs\nZSByZXZpc2lvbiBlZmZlY3RpdmVseSBjb3BpZXMgdGhlIHJlc291cmNlIHRvIHRoZSB3b3JraW5n\nIHJlc291cmNlIGVzdGFibGlzaGluZyBhDQogICAgcHJlZGVjZXNzb3Ivc3VjY2Vzc29yIHJlbGF0\naW9uc2hpcCBhbmQgaW5pdGlhbCBzdGF0ZS48L2xpPg0KICA8bGk+UmV2aXNpb25zIGFyZSBjaGVj\na2VkIG91dCBpbiB0aGUgY29udGV4dCBvZiB0aGUgY3VycmVudCBhY3Rpdml0eSBvZiB0aGUgd29y\na3NwYWNlLiBBbg0KICAgIGFjdGl2aXR5IGVuY2Fwc3VsYXRlcyBhIHNldCBvZiByZWxhdGVkIGNo\nYW5nZXMgb24gbXVsdGlwbGUgcmVzb3VyY2VzLjwvbGk+DQogIDxsaT5BIHdvcmtpbmcgcmVzb3Vy\nY2UgY2FuIGJlIHVwZGF0ZWQgYW55IG51bWJlciBvZiB0aW1lcyB3aXRob3V0IGNyZWF0aW5nIGEg\nbmV3IHJldmlzaW9uLjwvbGk+DQogIDxsaT5BIHJldmlzaW9uIHRoYXQgaXMgYWxyZWFkeSBjaGVj\na2VkIG91dCAoZWZmZWN0aXZlbHkgaGFzIGEgc3VjY2Vzc29yIHdvcmtpbmcgcmVzb3VyY2UpDQog\nICAgY2Fubm90IGJlIGNoZWNrZWQgb3V0IGFnYWluIGluIHRoZSBzYW1lIGFjdGl2aXR5IHdpdGhv\ndXQgZmlyc3QgY2hlY2tpbmcgaW4gdGhlIHdvcmtpbmcNCiAgICByZXNvdXJjZSwgb3IgY2hlY2tp\nbmcgaXQgb3V0IGluIGEgZGlmZmVyZW50IGFjdGl2aXR5LjwvbGk+DQogIDxsaT5EZWxldGluZyBh\nIHdvcmtpbmcgcmVzb3VyY2UgaXMgaWRlbnRpY2FsIHRvIGRlbGV0aW5nIGFuIHVudmVyc2lvbmVk\nIHJlc291cmNlLiBJdA0KICAgIGVmZmVjdGl2ZWx5IGNhbmNlbHMgdGhlIGNoZWNrIG91dC48L2xp\nPg0KICA8bGk+QSB3b3JraW5nIHJlc291cmNlIGlzIHJlbGVhc2VkIGFuZCBhdmFpbGFibGUgZm9y\nIG90aGVyIGNoYW5nZXMgd2hlbiBpdCBpcyBjaGVja2VkIGJhY2sNCiAgICBpbi4gQSB3b3JraW5n\nIHJlc291cmNlIG1heSBiZSBjaGVja2VkIGluIGFzIG11dGFibGUgb3IgaW1tdXRhYmxlLjwvbGk+\nDQogIDxsaT5BbiBpbW11dGFibGUgcmV2aXNpb24gaXMgY3JlYXRlZCBieSBkb2luZyBjaGVja0lu\nIHdpdGggaXNNdXRhYmxlIHNldCB0byBmYWxzZS4gQW4NCiAgICBpbW11dGFibGUgcmV2aXNpb24g\naXMgZnJvemVuIGZvciBhbGwgdGltZSBhbmQgY2Fubm90IGJlIGNoYW5nZWQuIFRoaXMgaXMgdGhl\nIGRlZmF1bHQNCiAgICBiZWhhdmlvciBmb3IgY2hlY2sgaW4uPC9saT4NCiAgPGxpPlNvbWUgbGl2\nZSBwcm9wZXJ0aWVzIG9mIGFuIGltbXV0YWJsZSByZXNvdXJjZSBtYXkgY2hhbmdlIG92ZXIgdGlt\nZSBkdWUgdG8gcmVsYXRpb25zaGlwcw0KICAgIHVuZGVyIHRoZSBjb250cm9sIG9mIHRoZSBzZXJ2\nZXIgYW5kIG91dCBvZiB0aGUgc2NvcGUgb2YgV2ViREFWIHNlbWFudGljcy48L2xpPg0KICA8bGk+\nQSBtdXRhYmxlIHJldmlzaW9uIG1heSBiZSBjcmVhdGVkIGJ5IGRvaW5nIGNoZWNrSW4gd2l0aCBp\nc011dGFibGUgc2V0IHRvIHRydWUuIFRoZQ0KICAgIGNvbnRlbnRzIG9mIGEgbXV0YWJsZSByZXZp\nc2lvbiBtYXkgYmUgY2hhbmdlZCBhdCBhbnkgdGltZSBieSBjaGVja2luZyB0aGUgbXV0YWJsZSBy\nZXZpc2lvbg0KICAgIG91dCB3aXRob3V0IGNyZWF0aW5nIGEgbmV3IHJldmlzaW9uLiBUaGlzIGlz\nIGFsc28ga25vd24gYXMgY2hlY2sgb3V0IGluIHBsYWNlLjwvbGk+DQogIDxsaT5BIG11dGFibGUg\ncmVzb3VyY2UgY2Fubm90IGJlIGEgbWVtYmVyIG9mIGEgY29uZmlndXJhdGlvbiBiZWNhdXNlIHRo\nZSBzdGF0ZSBvZiB0aGUNCiAgICBjb25maWd1cmF0aW9uIHdvdWxkIG5vdCBiZSBzdGFibGUgb3Ig\ncmVwcm9kdWNlYWJsZS48L2xpPg0KICA8bGk+RG9pbmcgYW4gaW1tdXRhYmxlIGNoZWNrIGluIG9m\nIGEgd29ya2luZyByZXNvdXJjZSB3aGVuIHRoZSBwcmVkZWNlc3NvciBpcyBtdXRhYmxlDQogICAg\nY2hhbmdlcyB0aGUgcHJlZGVjZXNzb3IgdG8gdGhlIGNsb3Nlc3QgaW1tdXRhYmxlIHByZWRlY2Vz\nc29yLiBUaGlzIGlzIHJlcXVpcmVkIHRvIHRvDQogICAgc3VwcG9ydCByZWxpYWJsZSBtZXJnZSBj\nb25mbGljdCByZXBvcnRzLjwvbGk+DQo8L29sPg0KDQo8aDM+UmVzb3VyY2VDb2xsZWN0aW9uPC9o\nMz4NCg0KPHA+UmVzb3VyY2VDb2xsZWN0aW9uIGlzIGEgc3BlY2lhbGl6YXRpb24gb2YgUmVzb3Vy\nY2UgdGhhdCBhZ2dyZWdhdGVzIFJlc291cmNlcyBhbmQNClJlc291cmNlQ29sbGVjdGlvbnMgdXNp\nbmcgdGhlIENvbXBvc2l0ZSBwYXR0ZXJuLiBJdCBwcm92aWRlcyBtZXRob2RzIGZvciBjcmVhdGlu\nZw0KY29sbGVjdGlvbnMgYW5kIGFjY2Vzc2luZyB0aGVpciBtZW1iZXJzLCBhcyB3ZWxsIGFzIG1l\ndGhvZHMgdGhhdCBhZGQgYSBkZXB0aCBwYXJhbWV0ZXIgZm9yDQpjb250cm9sbGluZyB0aGUgYmVo\nYXZpb3Igb2YgUmVzb3VyY2UgbWV0aG9kcyB3aGVuIHRoZXkgb3BlcmF0ZSBvbiBjb2xsZWN0aW9u\ncy4gRGVwdGgNCnNwZWNpZmllcyBpZiB0aGUgbWV0aG9kIGFwcGxpZXMgdG8gdGhlIGNvbGxlY3Rp\nb24sIHRoZSBjb2xsZWN0aW9uIGFuZCBpdHMgaW1tZWRpYXRlDQptZW1iZXJzLCBvciB0aGUgY29s\nbGVjdGlvbiBhbmQgcmVjdXJzaXZlbHkgYWxsIGl0cyBtZW1iZXJzLjwvcD4NCg0KPHA+VGhlIG1v\nc3Qgc2lnbmlmaWNhbnQgbmV3IGJlaGF2aW9yIGlzIHRoZSBhYmlsaXR5IHRvIGFkZCwgcmVtb3Zl\nLCBhbmQgZ2V0IG1lbWJlcnMgb2YgdGhlDQpjb2xsZWN0aW9uLiBPdGhlciBSZXNvdXJjZSBtZXRo\nb2RzIGFyZSBvdmVycmlkZGVuIG9yIHNwZWNpYWxpemVkIHRvIHN1cHBvcnQgc3BlY2lmaWMNCmNv\nbGxlY3Rpb24gc2VtYW50aWNzIG9yIHRoZSBkZXB0aCBwYXJhbWV0ZXIuIFRoZXJlIGlzIG9uZSBu\nZXcgbWV0aG9kcyBmb3IgdmVyc2lvbmluZzo8L3A+DQoNCjx0YWJsZSBib3JkZXI9IjEiIHdpZHRo\nPSIxMDAlIj4NCiAgPHRyPg0KICAgIDx0ZCB3aWR0aD0iNTAlIj5nZXRDaGVja2VkT3V0TWVtYmVy\ncygpIDogUmVzb3VyY2VbXTwvdGQ+DQogICAgPHRkIHdpZHRoPSI1MCUiPlJldHVybnMgYSBsaXN0\nIG9mIHRoZSBtZW1iZXJzIG9mIHRoaXMgY29sbGVjdGlvbiB0aGF0IGFyZSBjaGVja2VkIG91dCBp\nbg0KICAgIHRoZSBjdXJyZW50IGFjdGl2aXR5LjwvdGQ+DQogIDwvdHI+DQo8L3RhYmxlPg0KDQo8\naDQ+U2VtYW50aWMgUnVsZXM8L2g0Pg0KDQo8b2w+DQogIDxsaT5BbGwgdGhlIHNlbWFudGljIHJ1\nbGVzIGZvciBSZXNvdXJjZSBhcHBseSB0byBSZXNvdXJjZUNvbGxlY3Rpb24gYXMgaXQgaXMgYWxz\nbyBhDQogICAgUmVzb3VyY2UuPC9saT4NCiAgPGxpPkEgY29sbGVjdGlvbiBpcyBjb25zaWRlcmVk\nIGNoYW5nZWQgaWYgbWVtYmVycyBhcmUgYWRkZWQgb3IgcmVtb3ZlZC4gSW4gcGFydGljdWxhciwg\nYQ0KICAgIGNvbGxlY3Rpb24gaXMgbm90IGNvbnNpZGVyZWQgdG8gY2hhbmdlIGlmIHRoZSBjb250\nZW50cyBvZiBvbmUgb2YgaXRzIG1lbWJlcnMgY2hhbmdlcy48L2xpPg0KICA8bGk+QSB2ZXJzaW9u\nZWQgY29sbGVjdGlvbiBjYW4gY29udGFpbiB2ZXJzaW9uZWQgb3IgdW52ZXJzaW9uZWQgbWVtYmVy\ncy4gQSB2ZXJzaW9uIG9mIGENCiAgICBjb2xsZWN0aW9ucyBzcGVjaWZpZXMgdGhlIFVSTHMgb2Yg\ndGhlIG1lbWJlcnMgb2YgdGhlIGNvbGxlY3Rpb24uPC9saT4NCiAgPGxpPkEgdW52ZXJzb25lZCBj\nb2xsZWN0aW9uIGNhbiBjb250YWluIHZlcnNpb25lZCBvciB1bnZlcnNvbmVkIG1lbWJlcnMuPC9s\naT4NCiAgPGxpPkFuIGNoZWNrZWQgaW4gcmV2aXNpb24gb2YgYSB2ZXJzaW9uZWQgY29sbGVjdGlv\nbiBjYW5ub3QgaGF2ZSBpdHMgaW1tdXRhYmxlIHByb3BlcnRpZXMNCiAgICB1cGRhdGVkLCBvciBt\nZW1iZXJzIGFkZGVkIG9yIHJlbW92ZWQuIEEgY29sbGVjdGlvbiBkb2VzIG5vdCBzcGVjaWZ5IHdo\naWNoIHJldmlzaW9uIG9mIGENCiAgICB2ZXJzaW9uZWQgcmVzb3VyY2UgaXQgY29udGFpbnMsIG9u\nbHkgd2hhdCB2ZXJzaW9uZWQgYW5kIHVudmVyc2lvbmVkIHJlc291cmNlcyBtYWtlIHVwIGl0cw0K\nICAgIG1lbWJlcnMuIFJldmlzaW9ucyBvZiBpdHMgbWVtYmVycyBhcmUgc2VsZWN0ZWQgdXNpbmcg\ndGhlIHdvcmtzcGFjZSB2ZXJzaW9uIHNlbGVjdGlvbg0KICAgIHJ1bGVzLjwvbGk+DQogIDxsaT5B\nZGRpbmcgYSBtZW1iZXIgdG8gYSB3b3JraW5nIHJlc291cmNlIG9mIGEgY29sbGVjdGlvbiBhZGRz\nIHRoZSBtZW1iZXIgYXMgYW4gaW50ZXJuYWwNCiAgICBtZW1iZXIgb2YgdGhlIHdvcmtpbmcgcmVz\nb3VyY2UuPC9saT4NCiAgPGxpPkRlbGV0aW5nIGEgbWVtYmVyIG9mIGEgd29ya2luZyByZXNvdXJj\nZSB0aGF0IGlzIGNvbnRhaW5lZCBpbiBpdHMgcHJlZGVjZXNzb3IgZWZmZWN0aXZlbHkNCiAgICBk\nZWxldGVzIHRoZSBkaXJlY3QgbGluayB0byB0aGUgcHJlZGVjZXNzb3IgbWVtYmVyLjwvbGk+DQog\nIDxsaT5DaGVja2luZyBvdXQgYSBtZW1iZXIgb2YgYSBjb2xsZWN0aW9uIGhhcyBubyBlZmZlY3Qg\nb24gdGhlIGNvbGxlY3Rpb24uPC9saT4NCjwvb2w+DQoNCjxoMz5BY3Rpdml0eTwvaDM+DQoNCjxw\nPkFuIGFjdGl2aXR5IHJlcHJlc2VudHMgYSBuYW1lZCBzZXQgb2YgcmV2aXNpb25zIHRvIHZlcnNp\nb25lZCByZXNvdXJjZXMuIEEgcmV2aXNpb24gb2YgYQ0KcmVzb3VyY2UgaXMgY2hlY2tlZCBvdXQg\naW4gdGhlIGNvbnRleHQgb2YgdGhlIGN1cnJlbnQgYWN0aXZpdHkgb2YgdGhlIHdvcmtzcGFjZS4g\nRWRpdHMgYXJlDQptYWRlIGluIHRoZSBjb250ZXh0IG9mIHRoYXQgYWN0aXZpdHksIGFuZCB0aGUg\nYXNzb2NpYXRpb24gaXMgbWFpbnRhaW5lZCB3aGVuIHRoZSByZXNvdXJjZQ0KaXMgY2hlY2tlZCBi\nYWNrIGluLiBUaGUgc2FtZSByZXNvdXJjZSBjYW4gYmUgY2hlY2tlZCBvdXQgaW4gbWFueSBkaWZm\nZXJlbnQgYWN0aXZpdGllcyBhdA0KdGhlIHNhbWUgdGltZSBpZiB0aGUgc2VydmVyIHN1cHBvcnRz\nIHBhcmFsbGVsIGRldmVsb3BtZW50LiBUaGVzZSBhY3Rpdml0aWVzIG1heSBiZSBtZXJnZWQNCmlu\ndG8gb3RoZXIgd29ya3NwYWNlcyBhdCBzb21lIGxhdGVyIHRpbWUgdG8gY29tYmluZSB0aGUgY2hh\nbmdlcy4gQWN0aXZpdGllcyBtYXkgYmUgdXNlZCB0bw0KbWFuYWdlIHVuaXRzIG9mIHdvcmsgcmVx\ndWlyZWQgdG8gdXBkYXRlIGEgc2V0IG9mIHJlc291cmNlcyBpbiBzb21lIHJlbGF0ZWQgd2F5LiA8\nL3A+DQoNCjx0YWJsZSBib3JkZXI9IjEiIHdpZHRoPSIxMDAlIj4NCiAgPHRyPg0KICAgIDx0ZCB3\naWR0aD0iNTAlIj5nZXRNZW1iZXJzKCkgOiBSZXNvdXJjZVtdPC90ZD4NCiAgICA8dGQgd2lkdGg9\nIjUwJSI+UmV0dXJucyBhIGxpc3Qgb2YgcmV2aXNpb25zIHRoYXQgd2VyZSBtYWRlIGluIHRoaXMg\nYWN0aXZpdHkuPC90ZD4NCiAgPC90cj4NCiAgPHRyPg0KICAgIDx0ZCB3aWR0aD0iNTAlIj5jb250\nYWlucyhyZXNvdXJjZSA6IFJlc291cmNlKSA6IGJvb2xlYW48L3RkPg0KICAgIDx0ZCB3aWR0aD0i\nNTAlIj5SZXR1cm5zIHRydWUgaWYgdGhlIHJlc291cmNlIGlzLCBvciB3YXMgbW9kaWZpZWQgKGku\nZS4sIGNoZWNrZWQgb3V0KSBpbg0KICAgIHRoaXMgYWN0aXZpdHkuPC90ZD4NCiAgPC90cj4NCjwv\ndGFibGU+DQoNCjxoND5TZW1hbnRpYyBSdWxlczwvaDQ+DQoNCjxvbD4NCiAgPGxpPlRoZSBkZWZh\ndWx0Jm5ic3A7IGFjdGl2aXR5IGlzIGNhbGxlZCAmcXVvdDttYWlubGluZSZxdW90Oy48L2xpPg0K\nICA8bGk+VGhlIHdvcmtzcGFjZSByZXZpc2lvbiBzZWxlY3Rpb24gcnVsZSBjb250YWlucyB0aGUg\nY3VycmVudCBhY3Rpdml0eS48L2xpPg0KICA8bGk+UmVzb3VyY2VzIGFyZSBjaGVja2VkIG91dCBp\nbiB0aGUgY29udGV4dCBvZiB0aGUgY3VycmVudCBhY3Rpdml0eS48L2xpPg0KICA8bGk+QSByZXZp\nc2lvbiBjYW5ub3QgYmUgY2hlY2tlZCBvdXQgbW9yZSB0aGFuIG9uY2UgYXQgYSB0aW1lIGluIHRo\nZSBzYW1lIGFjdGl2aXR5LjwvbGk+DQogIDxsaT5UaGUgc2VydmVyIHByb3ZpZGVzIGEgY29sbGVj\ndGlvbiB0aGF0IGNvbnRhaW5zIHJlZmVyZW5jZXMgdG8gYWxsIGFjdGl2aXRpZXMgd2hpY2ggaXMN\nCiAgICByZXR1cm5lZCBieSB0aGUgT1BUSU9OUyBtZXRob2QuPC9saT4NCjwvb2w+DQoNCjxoMz5D\nb25maWd1cmF0aW9uPC9oMz4NCg0KPHA+QSBDb25maWd1cmF0aW9uIHJlcHJlc2VudHMgYSBwZXJz\naXN0ZW50LCBuYW1lZCBzZXQgb2Ygc3BlY2lmaWMgcmV2aXNpb25zIG9mIHJlc291cmNlcy4NCkEg\nY29uZmlndXJhdGlvbiBjYW4gYmUgdXNlZCB0byBjb2xsZWN0IHRvZ2V0aGVyIGNvbnNpc3RlbnQg\ndmVyc2lvbnMgb2YgcmVzb3VyY2VzIHRoYXQNCmNvcnJlc3BvbmQgdG8gc29tZSByZWxlYXNlIG9y\nIG90aGVyIHVuaXQgb2Ygd29yay4gQ29uZmlndXJhdGlvbiBzcGVjaWFsaXplcw0KUmVzb3VyY2VD\nb2xsZWN0aW9uIGluIG9yZGVyIHRvIGFkZCBpdHMgbmV3IHNlbWFudGljcy4gV2hlbiBhIGNvbGxl\nY3Rpb24gaXMgYWRkZWQgdG8gYQ0KY29uZmlndXJhdGlvbiwgaXRzIG1lbWJlcnMgYXJlIGFsc28g\ncmVjdXJzaXZlbHkgYWRkZWQgdG8gdGhlIGNvbmZpZ3VyYXRpb24uIEVhY2ggbWVtYmVyIG9mDQph\nIGNvbmZpZ3VyYXRpb24gbXVzdCBzcGVjaWZ5IGEgcGFydGljdWxhciB2ZXJzaW9uIGxhYmVsLiBJ\nZiB0aGUgcmV2aXNpb24gbm8gbG9uZ2VyIGhhcw0KdGhhdCBsYWJlbCwgdGhlbiBhbiBlcnJvciBp\ncyByZXR1cm5lZCB3aGVuIHRoZSByZXNvdXJjZSBpcyBhY2Nlc3NlZCB0aHJvdWdoIHRoaXMNCmNv\nbmZpZ3VyYXRpb24uPC9wPg0KDQo8dGFibGUgYm9yZGVyPSIxIiB3aWR0aD0iMTAwJSI+DQogIDx0\ncj4NCiAgICA8dGQgd2lkdGg9IjUwJSI+YWRkKHJldmlzaW9uIDogUmV2aXNpb24pPC90ZD4NCiAg\nICA8dGQgd2lkdGg9IjUwJSI+QWRkIGEgcmV2aXNpb24gb2YgYSByZXNvdXJjZSB0byBhIGNvbmZp\nZ3VyYXRpb24uIFRoZSByZXZpc2lvbiBtdXN0IGJlDQogICAgaW1tdXRhYmxlLiBBbiBleGNlcHRp\nb24gaXMgcmFpc2VkIGlmIHRoZSBjb25maWd1cmF0aW9uIGFscmVhZHkgY29udGFpbnMgYSByZXZp\nc2lvbiBvZiB0aGUNCiAgICByZXNvdXJjZS4gVGhpcyBpcyBlcXVpdmFsZW50IHRvIGNvcHlpbmcg\nYSBsaW5rIHRvIGEgcmV2aXNpb24gaW50byB0aGUgY29uZmlndXJhdGlvbg0KICAgIGNvbGxlY3Rp\nb24gd2l0aCB0aGUgYWJvdmUgYWRkaXRpb25hbCBzZW1hbnRpY3MuPC90ZD4NCiAgPC90cj4NCiAg\nPHRyPg0KICAgIDx0ZCB3aWR0aD0iNTAlIj5yZW1vdmUocmV2aXNpb24gOiBSZXZpc2lvbik8L3Rk\nPg0KICAgIDx0ZCB3aWR0aD0iNTAlIj5SZW1vdmUgYSBtZW1iZXIgcmV2aXNpb24gZnJvbSBhIGNv\nbmZpZ3VyYXRpb24uIEFuIGV4Y2VwdGlvbiBpcyByYWlzZWQgaWYNCiAgICB0aGUgY29uZmlndXJh\ndGlvbiBkb2VzIG5vdCBjb250YWluIHRoZSByZXZpc2lvbi4gVGhpcyBvcGVyYXRpb24gaXMgZXF1\naXZhbGVudCB0byBkZWxldGluZw0KICAgIGEgcmVzb3VyY2UgZnJvbSB0aGUgY29uZmlndXJhdGlv\nbiBjb2xsZWN0aW9uLjwvdGQ+DQogIDwvdHI+DQogIDx0cj4NCiAgICA8dGQgd2lkdGg9IjUwJSI+\nY29udGFpbnMocmV2aXNpb24gOiBSZXZpc2lvbikgOiBib29sZWFuPC90ZD4NCiAgICA8dGQgd2lk\ndGg9IjUwJSI+UmV0dXJuIHRydWUgaWYgdGhpcyBjb25maWd1cmF0aW9uIGNvbnRhaW5zIHRoZSBn\naXZlbiByZXNvdXJjZS48L3RkPg0KICA8L3RyPg0KICA8dHI+DQogICAgPHRkIHdpZHRoPSI1MCUi\nPmRpZmZlcmVuY2VzV2l0aChjb25maWd1cmF0aW9uIDogQ29uZmlndXJhdGlvbikgOiBBY3Rpdml0\neVtdPC90ZD4NCiAgICA8dGQgd2lkdGg9IjUwJSI+UmV0dXJuIGEgbGlzdCBvZiBkaWZmZXJlbmNl\ncyBpbiBhY3Rpdml0aWVzIGJldHdlZW4gdGhpcyBjb25maWd1cmF0aW9uIGFuZA0KICAgIHRoZSBn\naXZlbiBjb25maWd1cmF0aW9uLiBUaGUgZGlmZmVyZW5jZXMgaW4gYWN0aXZpdGllcyBiZXR3ZWVu\nIGNvbmZpZ3VyYXRpb25zIGdpdmVzIGEgaGlnaA0KICAgIGxldmVsIHZpZXcgb2YgdGhlIGRpZmZl\ncmVuY2VzIGJldHdlZW4gdGhlIGNvbmZpZ3VyYXRpb25zLjwvdGQ+DQogIDwvdHI+DQo8L3RhYmxl\nPg0KDQo8aDQ+U2VtYW50aWMgUnVsZXM8L2g0Pg0KDQo8b2w+DQogIDxsaT5BIGNvbmZpZ3VyYXRp\nb24gY2FuIG9ubHkgY29udGFpbiByZWZlcmVuY2VzIHRvIGltbXV0YWJsZSByZXZpc2lvbnMuIFRo\naXMgaXMgcmVxdWlyZWQgdG8NCiAgICBlbnN1cmUgdGhlIGNvbmZpZ3VyYXRpb24gaXMgcmVwcm9k\ndWNhYmxlLjwvbGk+DQogIDxsaT5BZGRpbmcgYSByZXZpc2lvbiBvZiBhIGNvbGxlY3Rpb24gdG8g\nYSBjb25maWd1cmF0aW9uIHJlY3Vyc2l2ZWx5IGFkZHMgdGhlIHJldmlzaW9uIG9mDQogICAgaXRz\nIG1lbWJlcnMgc2VsZWN0ZWQgYnkgdGhlIGN1cnJlbnQgd29ya3NwYWNlLiA8L2xpPg0KICA8bGk+\nQW4gaW1tdXRhYmxlIHJldmlzaW9uIG9mIGEgY29sbGVjdGlvbiBjYW5ub3QgYmUgY29udGFpbmVk\nIGluIGEgY29uZmlndXJhdGlvbiBpZiwNCiAgICByZWN1cnNpdmVseSwgdGhlIHJldmlzaW9uIG9m\nIGFueSBvZiBpdHMgbWVtYmVycyBzZWxlY3RlZCBieSB0aGUgY3VycmVudCB3b3Jrc3BhY2UgYXJl\nDQogICAgd29ya2luZyByZXNvdXJjZXMsIHVudmVyc2lvbmVkIHJlc291cmNlcywgb3IgbXV0YWJs\nZSByZXZpc2lvbnMuIFRoaXMgaXMgYmVjYXVzZSB0aGUNCiAgICBjb25maWd1cmF0aW9uIGNhbm5v\ndCBoYXZlIG11dGFibGUgY29udGVudHMuPC9saT4NCjwvb2w+DQoNCjxoMz5Xb3Jrc3BhY2U8L2gz\nPg0KDQo8cD5BIHdvcmtzcGFjZSBpcyBhIHJlc291cmNlIHRoYXQgcHJvdmlkZXMgYSBtZWFucyB0\nbyBtYXAgVVJMcyBvZiB2ZXJzaW9uZWQgcmVzb3VyY2VzIHRvDQpwYXJ0aWN1bGFyIHJldmlzaW9u\ncy4gQSB3b3Jrc3BhY2UgY29udGFpbnMgYSBjdXJyZW50IGFjdGl2aXR5IHdoaWNoIGVuY2Fwc3Vs\nYXRlcyBjaGFuZ2VzDQptYWRlIHRvIHJlc291cmNlcyBpbiB0aGF0IHdvcmtzcGFjZS4gQSB3b3Jr\nc3BhY2UgYWxzbyBjb250YWlucyBhIHJldmlzaW9uIHNlbGVjdGlvbiBydWxlDQp0aGF0IGlzIHVz\nZWQgdG8gc2VsZWN0IGEgcmV2aXNpb24gb2YgYSB2ZXJzaW9uZWQgcmVzb3VyY2UuIFRoZSByZXZp\nc2lvbiBzZWxlY3Rpb24gcnVsZQ0KY29udGFpbnMgYSBudW1iZXIgb2YgZW50cmllcyB0aGF0IHNw\nZWNpZnkgaW1wbGljaXRseSBvciBleHBsaWNpdHkgYSByZXZpc2lvbi4gRWFjaCBlbnRyeQ0KaXMg\nZXhhbWluZWQgaW4gb3JkZXIgdW50aWwgdGhlIGZpcnN0IG1hdGNoaW5nIGVudHJ5IGlzIGZvdW5k\nLiBBIG1hdGNoaW5nIGVudHJ5IGlzIG9uZSB0aGF0DQpyZWZlcnMgdG8gYW4gZXhpc3RpbmcgcmV2\naXNpb24gb2YgYSB2ZXJzaW9uZWQgcmVzb3VyY2UuPC9wPg0KDQo8cD5XaGVuIGFuIGFjdGl2aXR5\nIGlzIG1lcmdlZCBpbnRvIHRoZSB3b3Jrc3BhY2UsIHJldmlzaW9ucyBvZiB0aGUgc2FtZSByZXNv\ndXJjZSB0aGF0IHdlcmUNCm1vZGlmaWVkIGluIGRpZmZlcmVudCBhY3Rpdml0aWVzIHdpbGwgY29u\nZmxpY3QuIFRoZSBjb25mbGljdCByZXBvcnQgaXMgZGVmaW5lZCBieTo8L3A+DQo8Zm9udCBGQUNF\nPSJIZWx2IiBTSVpFPSIyIiBDT0xPUj0iIzAwMDAwMCI+DQoNCjxwcmU+PC9mb250PjxzbWFsbD48\nZm9udCBjb2xvcj0iIzAwMDAwMCI+Jmx0OyFFTEVNRU5UIENvbmZsaWN0UmVwb3J0IChDb25mbGlj\ndEVudHJ5KikmZ3Q7DQombHQ7IUVMRU1FTlQgQ29uZmxpY3RFbnRyeSBFTVBUWSZndDsNCiZsdDsh\nQVRUTElTVCBDb25mbGljdEVudHJ5IA0KCXNvdXJjZSBDREFUQSAjUkVRVUlSRUQNCgl0YXJnZXQg\nQ0RBVEEgI1JFUVVJUkVEDQomZ3Q7PC9mb250Pjwvc21hbGw+PGZvbnQNCkZBQ0U9IkhlbHYiIFNJ\nWkU9IjIiIENPTE9SPSIjMDAwMDAwIj48L3ByZT4NCjwvZm9udD4NCg0KPHA+PGZvbnQgY29sb3I9\nIiMwMDAwMDAiPlRoZSByZXZpc2lvbiBzZWxlY3Rpb24gcnVsZSBmb3IgYSB3b3Jrc3BhY2UgaXMg\nZGVmaW5lZCBieTo8L2ZvbnQ+PC9wPg0KPGZvbnQgRkFDRT0iSGVsdiIgU0laRT0iMiIgQ09MT1I9\nIiMwMDAwMDAiPg0KDQo8cHJlPjwvZm9udD48c21hbGw+PGZvbnQgY29sb3I9IiMwMDAwMDAiPiZs\ndDshRUxFTUVOVCBzZWxlY3Rpb25ydWxlIChjaGVja2Vkb3V0IGFjdGl2aXR5IGFjdGl2aXR5Pyhj\nb25maWd1cmF0aW9uIHwgYWN0aXZpdHkgfCBsYWJlbCB8IGxhdGVzdCkqKSZndDsNCiZsdDshRUxF\nTUVOVCBjb25maWd1cmF0aW9uICgjUENEQVRBKSZndDsNCiZsdDshRUxFTUVOVCBhY3Rpdml0eSAo\nbGFiZWwgfCBsYXRlc3QpJmd0Ow0KJmx0OyFFTEVNRU5UIGxhYmVsICgjUENEQVRBKSZndDsNCiZs\ndDshRUxFTUVOVCBsYXRlc3QgRU1QVFkmZ3Q7PC9mb250Pjwvc21hbGw+PGZvbnQNCkZBQ0U9Ikhl\nbHYiIFNJWkU9IjIiIENPTE9SPSIjMDAwMDAwIj48L3ByZT4NCjwvZm9udD4NCg0KPHRhYmxlIGJv\ncmRlcj0iMSIgd2lkdGg9IjEwMCUiPg0KICA8dHI+DQogICAgPHRkIHdpZHRoPSI1MCUiPmdldFNl\nbGVjdGlvblJ1bGUoKSA6IEVsZW1lbnQ8L3RkPg0KICAgIDx0ZCB3aWR0aD0iNTAlIj5HZXQgdGhl\nIGN1cnJlbnQgcmV2aXNpb24gc2VsZWN0aW9uIHJ1bGUuIFRoZSBydWxlIGlzIGFuIFhNTCBlbGVt\nZW50IHdob3NlDQogICAgY29udGVudCBjb250YWlucyB0aGUgc2VsZWN0aW9uIGVudHJpZXMuPC90\nZD4NCiAgPC90cj4NCiAgPHRyPg0KICAgIDx0ZCB3aWR0aD0iNTAlIj5zZXRTZWxlY3Rpb25SdWxl\nKGVsZW1lbnQgOiBFbGVtZW50KTwvdGQ+DQogICAgPHRkIHdpZHRoPSI1MCUiPlNldCB0aGUgY3Vy\ncmVudCByZXZpc2lvbiBzZWxlY3Rpb24gcnVsZS4gVGhlIGVsZW1lbnQgbXVzdCBiZSBhDQogICAg\nREFWOnNlbGVjdGlvbnJ1bGUgZWxlbWVudC48L3RkPg0KICA8L3RyPg0KICA8dHI+DQogICAgPHRk\nIHdpZHRoPSI1MCUiPmdldEN1cnJlbnRBY3Rpdml0eSgpIDogQWN0aXZpdHk8L3RkPg0KICAgIDx0\nZCB3aWR0aD0iNTAlIj5HZXQgdGhlIGN1cnJlbnQgYWN0aXZpdHkgZm9yIHRoaXMgd29ya3NwYWNl\nLiBBbGwgY2hlY2tvdXRzIGFyZSBkb25lIGluIHRoZQ0KICAgIGNvbnRleHQgb2YgdGhlIGN1cnJl\nbnQgYWN0aXZpdHkuIFRoZSB3b3Jrc3BhY2UgY2FuIG9ubHkgaGF2ZSBvbmUgYWN0aXZpdHkgYXQg\nYSB0aW1lLjwvdGQ+DQogIDwvdHI+DQogIDx0cj4NCiAgICA8dGQgd2lkdGg9IjUwJSI+c2V0Q3Vy\ncmVudEFjdGl2aXR5KGN1cnJlbnRBY3Rpdml0eSA6IEFjdGl2aXR5KTwvdGQ+DQogICAgPHRkIHdp\nZHRoPSI1MCUiPlNldCB0aGUgY3VycmVudCBhY3Rpdml0eSBmb3IgdGhpcyB3b3Jrc3BhY2UuPC90\nZD4NCiAgPC90cj4NCiAgPHRyPg0KICAgIDx0ZCB3aWR0aD0iNTAlIj5jcmVhdGVBY3Rpdml0eSh1\ncmwgOiBTdHJpbmcpIDogQWN0aXZpdHk8L3RkPg0KICAgIDx0ZCB3aWR0aD0iNTAlIj5DcmVhdGUg\nYW4gYWN0aXZpdHkgdGhhdCByZXByZXNlbnRzIGEgc2V0IG9mIHJlbGF0ZWQgY2hhbmdlcyB0byBy\nZXNvdXJjZXMuPC90ZD4NCiAgPC90cj4NCiAgPHRyPg0KICAgIDx0ZCB3aWR0aD0iNTAlIj5SZXNv\ndXJjZSBnZXRSZXNvdXJjZSh1cmwgOiBTdHJpbmcpPC90ZD4NCiAgICA8dGQgd2lkdGg9IjUwJSI+\nUmVzb2x2ZSBhIHJlc291cmNlIFVSTCBpbiB0aGUgY29udGV4dCBvZiB0aGlzIHdvcmtzcGFjZS48\nL3RkPg0KICA8L3RyPg0KICA8dHI+DQogICAgPHRkIHdpZHRoPSI1MCUiPm1lcmdlV2l0aChtZXJn\nZVNvdXJjZSA6IEFjdGl2aXR5KTwvdGQ+DQogICAgPHRkIHdpZHRoPSI1MCUiPk1lcmdlIHRoZSBt\nZXJnZVNvdXJjZSBhY3Rpdml0eSB3aXRoIHRoZSBjdXJyZW50IHdvcmtzcGFjZS4gVGhpcyByZXN1\nbHRzIGluDQogICAgcG90ZW50aWFsbHkgc2VsZWN0aW5nIGRpZmZlcmVudCByZXZpc2lvbnMsIGFu\nZCB0aGUgY3JlYXRpb24gb2YgbWVyZ2UgY29uZmxpY3RzIHRoYXQgbXVzdA0KICAgIGJlIHJlc29s\ndmVkLiBVbnRpbCB0aGUgY29uZmxpY3RzIGFyZSByZXNvbHZlZCwgdGhlIHJldmlzaW9uIHJldHVy\nbmVkIGlzIHRoZSByZXZpc2lvbiB0aGF0DQogICAgd291bGQgaGF2ZSBiZWVuIHJldHVybmVkIGJl\nZm9yZSB0aGUgbWVyZ2UuPHA+VGhpcyBtZXRob2QgcmV0dXJucyBhIHdhcm5pbmcgaWYgdGhlDQog\nICAgbWVyZ2VTb3VyY2UgaW5jbHVkZXMgbXV0YWJsZSByZXZpc2lvbnMuIFRoaXMgaXMgYmVjYXVz\nZSB0aGUgbWVyZ2UgY29uZmxpY3RzIGFyZSBub3QNCiAgICByZWxpYWJsZS4gPC90ZD4NCiAgPC90\ncj4NCiAgPHRyPg0KICAgIDx0ZCB3aWR0aD0iNTAlIj5nZXRNZXJnZUNvbmZsaWN0cygpIDogRG9j\ndW1lbnQ8L3RkPg0KICAgIDx0ZCB3aWR0aD0iNTAlIj5SZXR1cm4gYW4gWE1MIGRvY3VtZW50IGNv\nbnRhaW5pbmcgdGhlIGN1cnJlbnQgbWVyZ2UgY29uZmxpY3RzIGluIHRoZQ0KICAgIHdvcmtzcGFj\nZS4gSWYgdGhlcmUgYXJlIG5vIG1lcmdlIGNvbmZsaWN0cywgdGhlIG1lcmdlIGFjdGl2aXR5IGlz\nIHJlbW92ZWQgZnJvbSB0aGUNCiAgICB3b3Jrc3BhY2UuPC90ZD4NCiAgPC90cj4NCjwvdGFibGU+\nDQoNCjxoND5TZW1hbnRpYyBSdWxlczwvaDQ+DQoNCjxvbD4NCiAgPGxpPlRoZSBuYW1lIG9mIGFu\nIHVudmVyc2lvbmVkIHJlc291cmNlIGlzIGl0cyBVUkwuPC9saT4NCiAgPGxpPlRoZSBuYW1lIG9m\nIGEgcmV2aXNpb24gb2YgYSB2ZXJzaW9uZWQgcmVzb3VyY2UgaXMgYSBjb21wb3NpdGUgbmFtZSBj\nb25zaXN0aW5nIG9mIGl0cyBVUkwNCiAgICBhbmQgYSByZXZpc2lvbiBuYW1lIG9yIHdvcmtzcGFj\nZSBuYW1lLjxmb250IGNvbG9yPSIjRkYwMDAwIj4gSXQgaXMgbm90IHlldCBrbm93biBob3cgdGhp\ncw0KICAgIGNvbXBvc2l0ZSBuYW1lIHdpbGwgYmUgcmVwcmVzZW50ZWQgYXMgYSBVUkwuIEl0IG1h\neSBiZSB0aGF0IHRoZSB2ZXJzaW9uIHNlbGVjdGlvbg0KICAgIGluZm9ybWF0aW9uIHdpbGwgYmUg\nZ2l2ZW4gaW4gYSBzZWxlY3Rpb24gcGF0aCBoZWFkZXIgYW5kIHRoZSBzZXJ2ZXIgd2lsbCBhbHNv\nIGVmZmVjdGl2ZWx5DQogICAgcHJvdmlkZSBhIGRpcmVjdCBsaW5rcyB0byByZXZpc2lvbnMgdGhh\ndCBiYWNrLWxldmVsIGNsaWVudHMgY2FuIHVzZSB0byBhY2Nlc3MgcGFydGljdWxhcg0KICAgIHJl\ndmlzaW9ucy4gQ2xpZW50IGFwcGxpY2F0aW9ucyBhcmUgZnJlZSB0byBwcm92aWRlIG90aGVyIG5h\nbWluZyBzeW50YXggY29udmVudGlvbnMgdGhhdA0KICAgIHRoZXkgbWFwIHRvIHRoZSBwcm90b2Nv\nbCBjb252ZW50aW9uLiBIVFRQLzEuMSBkb2VzIGFsbG93IDsgaW4gVVJMcyB0aGF0IGNvdWxkIGJl\nIHVzZWQgdG8NCiAgICBzZXBhcmF0ZSB0aGUgVVJMIGZyb20gYSByZXZpc2lvbiBsYWJlbC48L2Zv\nbnQ+PC9saT4NCiAgPGxpPkEgd29ya3NwYWNlIGNvbnRhaW5zIGEgcmV2aXNpb24gc2VsZWN0aW9u\nIHJ1bGUgdGhhdCByZXNvbHZlcyBhIFVSTCByZWZlcmVuY2UgdG8NCiAgICB2ZXJzaW9uZWQgcmVz\nb3VyY2UgdG8gYSBwYXJ0aWN1bGFyIHJldmlzaW9uLjwvbGk+DQogIDxsaT5BIHJldmlzaW9uIHNl\nbGVjdGlvbiBydWxlIGNvbnNpc3RzIG9mIGEgbnVtYmVyIG9mIGVudHJpZXMgdGhhdCBhcmUgc2Vx\ndWVudGlhbGx5IGFwcGxpZWQNCiAgICB1bnRpbCBhIHJldmlzaW9uIGlzIGZvdW5kIG1hdGNoaW5n\nIHRoZSBlbnRyeS4gVGhlcmUgYXJlIHR3byBzcGVjaWFsIGVudHJpZXMsDQogICAgJnF1b3Q7Y2hl\nY2tlZG91dCZxdW90OywgYW5kICZxdW90O2xhdGVzdCZxdW90Oy4gVGhlc2UgYXJlIGVmZmVjdGl2\nZWx5IGZsb2F0aW5nIGxhYmVscw0KICAgIG1hbmFnZWQgYnkgdGhlIHNlcnZlciByZWZlcmluZyB0\nbyBhIGNoZWNrZWQgb3V0IHdvcmtpbmcgcmV2aXNpb24sIG9yIHRoZSBsYXRlc3QgcmV2aXNpb24N\nCiAgICBpbiB0aGUgY3VycmVudCBhY3Rpdml0eSByZXNwZWN0aXZlbHkuIDwvbGk+DQogIDxsaT5F\nYWNoIGVudHJ5IGluIHRoZSByZXZpc2lvbiBzZWxlY3Rpb24gcnVsZSBpcyBlaXRoZXIgYSBsYWJl\nbCBuYW1lLCBhY3Rpdml0eSBuYW1lLA0KICAgIGNvbmZpZ3VyYXRpb24gbmFtZSwgb3Igb25lIG9m\nIHRoZSBmdW5jdG9ycyBjaGVja2Vkb3V0IG9yIGxhdGVzdC48dWw+DQogICAgICA8bGk+Y2hlY2tl\nZG91dCBtYXRjaGVzIGFueSB3b3JraW5nIHJlc291cmNlIGNoZWNrZWQgb3V0IGluIHRoZSBjdXJy\nZW50IGFjdGl2aXR5PC9saT4NCiAgICAgIDxsaT5hIGxhYmVsIG1hdGNoZXMgYSByZXZpc2lvbiBo\nYXZpbmcgdGhhdCBsYWJlbDwvbGk+DQogICAgICA8bGk+YW4gYWN0aXZpdHkgbWF0Y2hlcyB0aGUg\nbGF0ZXN0IHJldmlzaW9uIG9uIHRoYXQgYWN0aXZpdHk8L2xpPg0KICAgICAgPGxpPmEgY29uZmln\ndXJhdGlvbiBtYXRjaGVzIHRoZSByZXZpc2lvbiB0aGF0IGlzIGEgbWVtYmVyIG9mIHRoZSBjb25m\naWd1cmF0aW9uPC9saT4NCiAgICA8L3VsPg0KICA8L2xpPg0KICA8bGk+VGhlIGZpcnN0IHRocmVl\nIGVudHJpZXMgaW4gZWFjaCByZXZpc2lvbiBzZWxlY3Rpb24gcnVsZSBhcmUgZml4ZWQgYnkgdGhl\nIHNlcnZlci4gVGhlc2UNCiAgICBlbnRyaWVzLCBpbiBvcmRlciBhcmU6IGNoZWNrZWRvdXQsIGN1\ncnJlbnQgYWN0aXZpdHksIGFuZCBtZXJnZWQgYWN0aXZpdHkuIFRoaXMgcnVsZQ0KICAgIGVuc3Vy\nZXMgdGhhdCBjaGVja2VkIG91dCByZXZpc2lvbnMsIHJldmlzaW9ucyBpbiB0aGUgY3VycmVudCBh\nY3Rpdml0eSwgb3IgcmV2aXNpb25zIGluIHRoZQ0KICAgIGFjdGl2aXR5IGN1cnJlbnRseSBiZWlu\nZyBtZXJnZWQgaW50byB0aGUgd29ya3NwYWNlIGFyZSBzZWxlY3RlZCBiZWZvcmUgYW55IG90aGVy\nIHJldmlzaW9uLjwvbGk+DQogIDxsaT5UaGUgaWYgbm8gbGFiZWwgb3Igd29ya3NwYWNlIGlzIGdp\ndmVuLCB0aGUgZGVmYXVsdCB3b3Jrc3BhY2UgaXMgdXNlZC4gVGhlIGRlZmF1bHQNCiAgICB3b3Jr\nc3BhY2UgaGFzIGEgcmV2aXNpb24gc2VsZWN0aW9uIHJ1bGUgdGhhdCBzcGVjaWZpZXMgJnF1b3Q7\nY2hlY2tlZG91dCZxdW90OywgYWN0aXZpdHkNCiAgICAmcXVvdDttYWlubGluZSZxdW90OywgYW5k\nICZxdW90O2xhdGVzdCZxdW90Oy48L2xpPg0KICA8bGk+VGhlIG5hbWluZyBydWxlcyBhcHBseSBy\nZWN1cnNpdmVseSBmcm9tIHRoZSByb290IG9mIGEgY29sbGVjdGlvbiBoaWVyYXJjaHkgdG8gYQ0K\nICAgIHBhcnRpY3VsYXIgcmV2aXNpb24gY29udGFpbmVkIGluIHRoZSBoaWVyYXJjaHkuPC9saT4N\nCiAgPGxpPkVycm9yIDQwNCwgcmVzb3VyY2Ugbm90IGZvdW5kIGlzIHJldHVybmVkIGlmIGEgbGFi\nZWwgaXMgc3BlY2lmaWVkLCBhbmQgdGhlIHZlcnNpb25lZA0KICAgIHJlc291cmNlIGRvZXMgbm90\nIGhhdmUgdGhlIGdpdmVuIGxhYmVsLCBvciBpZiB0aGUgY3VycmVudCB3b3Jrc3BhY2UgZG9lcyBu\nb3Qgc3BlY2lmeSBhDQogICAgcmV2aXNpb24gZm9yIHRoZSBnaXZlbiByZXNvdXJjZS48L2xpPg0K\nICA8bGk+V2hlbiBhbiBhY3Rpdml0eSBpcyBtZXJnZWQgaW50byB0aGUgd29ya3NwYWNlLCB0aGUg\ncmV2aXNpb25zIHNlbGVjdGVkIGJ5IHRoZSB3b3Jrc3BhY2UNCiAgICBtYXkgY2hhbmdlLiBUaGVy\nZSBhcmUgdGhyZWUgY2FzZXM6PHVsPg0KICAgICAgPGxpPlRoZSBtZXJnZVNvdXJjZSBzZWxlY3Rz\nIGEgcmV2aXNpb24gdGhhdCBpcyBhIHByZWRlY2Vzc29yIG9mIHRoZSByZXZpc2lvbiBjdXJyZW50\nbHkNCiAgICAgICAgc2VsZWN0ZWQgYnkgdGhlIHdvcmtzcGFjZSByZXZpc2lvbiBzZWxlY3Rpb24g\ncnVsZS4gSW4gdGhpcyBjYXNlLCB0aGUgbWVyZ2VTb3VyY2UgaXMNCiAgICAgICAgaWdub3JlZCwg\nYW5kIHRoZSBvcmlnaW5hbCByZXZpc2lvbiBpcyBzZWxlY3RlZC48L2xpPg0KICAgICAgPGxpPlRo\nZSBtZXJnZVNvdXJjZSBzZWxlY3RzIGEgcmV2aXNpb24gdGhhdCBpcyBhIHN1Y2Nlc3NvciBvZiB0\naGUgcmV2aXNpb24gY3VycmVudGx5DQogICAgICAgIHNlbGVjdGVkIGJ5IHRoZSB3b3Jrc3BhY2Ug\ncmV2aXNpb25zIHNlbGVjdGlvbiBydWxlLiBJbiB0aGlzIGNhc2UsIHRoZSByZXZpc2lvbiBpbiB0\naGUNCiAgICAgICAgbWVyZ2VTb3VyY2UgYWN0aXZpdHkgaXMgc2VsZWN0ZWQuPC9saT4NCiAgICAg\nIDxsaT5UaGUgbWVyZ2VTb3VyY2UgYW5kIHRoZSB3b3Jrc3BhY2Ugc3BlY2lmeSBkaWZmZXJlbnQg\ncmV2aXNpb25zIG9mIGEgcmVzb3VyY2UgaW4gZGlmZmVyZW50DQogICAgICAgIGFjdGl2aXRpZXMu\nIFRoZSByZXZpc2lvbiBpbiB0aGUgY3VycmVudCB3b3Jrc3BhY2UgaXMgc2VsZWN0ZWQsIGFuZCB0\naGlzIHJlc291cmNlIHdpbGwNCiAgICAgICAgYXBwZWFyIGluIHRoZSBtZXJnZSBjb25mbGljdCBy\nZXBvcnQuIEEgc3Vic2VxdWVudCBtZXJnZSBvZiB0aGUgbWVyZ2VTb3VyY2UgcmVzb3VyY2Ugd2l0\naA0KICAgICAgICB0aGUgcmVzb3VyY2UgaW4gdGhlIHdvcmtzcGFjZSB3aWxsIHJlc3VsdCBpbiBh\nIG5ldyBwcmVkZWNlc3NvciBmb3IgdGhlIG1lcmdlZCByZXZpc2lvbg0KICAgICAgICB3aGljaCB3\naWxsIGVsaW1pbmF0ZSB0aGUgbWVyZ2UgY29uZmxpY3QuIDwvbGk+DQogICAgPC91bD4NCiAgPC9s\naT4NCiAgPGxpPlRoZSBzZXJ2ZXIgcHJvdmlkZXMgYSBjb2xsZWN0aW9uIHRoYXQgY29udGFpbnMg\ncmVmZXJlbmNlcyB0byBhbGwgd29ya3NwYWNlcyB3aGljaCBpcw0KICAgIHJldHVybmVkIGJ5IHRo\nZSBPUFRJT05TIG1ldGhvZC48L2xpPg0KPC9vbD4NCg0KPGgzPlZlcnNpb24gSGlzdG9yeTwvaDM+\nDQoNCjxwPk1ldGhvZCBSZXNvdXJjZS5nZXRWZXJzaW9uSGlzdG9yeSgpIHJldHVybnMgYW4gWE1M\nIERvY3VtZW50IGRlc2NyaWJpbmcgdGhlIGNvbXBsZXRlDQp2ZXJzaW9uIGhpc3Rvcnkgb2YgYSB2\nZXJzaW9uZWQgcmVzb3VyY2UgaW5jbHVkaW5nIGFsbCBsaW5lcyBvZiBkZXNjZW50LCBhbmQgYWxs\nIHJldmlzaW9uDQppZHMgYW5kIGxhYmVscy4gREFTTCBvciBvdGhlciBzZWFyY2hpbmcgdGVjaG5p\ncXVlcyBtYXkgYmUgdXNlZCB0byBxdWVyeSB0aGUgaGlzdG9yeSBmb3INCnNwZWNpZmljIGluZm9y\nbWF0aW9uLCBvciBET00gbWF5IGJlIHVzZWQgYnkgYXBwbGljYXRpb25zIHRvIGFjY2VzcyBoaXN0\nb3J5IGRldGFpbHMuPC9wPg0KDQo8cD5Gb3IgZXhhbXBsZSwgY29uc2lkZXIgYSByZXNvdWNlIG5h\nbWVkIDxhDQpocmVmPSJodHRwOi8vaG9zdG5hbWUvd2ViZGF2aG9tZS92ZXJzaW9uaW5nLmh0bSI+\naHR0cDovL2hvc3RuYW1lL3dlYmRhdi92ZXJzaW9uaW5nLmh0bTwvYT4NCih0aGlzIGRvY3VtZW50\nKS4gSXRzIHZlcnNpb24gaGlzdG9yeSBtaWdodCBsb29rIGxpa2U6PC9wPg0KDQo8cCBhbGlnbj0i\nY2VudGVyIj48aW1nIHNyYz0iaW1hZ2VzL2V4YW1wbGVIaXN0b3J5LmdpZiIgYWx0PSJ3cGUzLmdp\nZiAoNDc2OCBieXRlcykiDQpXSURUSD0iMzg4IiBIRUlHSFQ9IjU1MiI+PC9wPg0KDQo8cCBhbGln\nbj0ibGVmdCI+VGhlIFhNTCBEb2N1bWVudCBmb3IgdGhpcyB2ZXJzaW9uIGdyYXBoIGNhbiBiZSBj\ncmVhdGVkIGJ5IGRvaW5nIGEgcHJlb3JkZXINCnRyYXZlcnNhbCBvZiB0aGUgZ3JhcGguIE5vdGUg\ndGhhdCBYTUwgdXNldHMgY29udGFpbm1lbnQgYXNzb2NpYXRpb25zIHdoZXJlIHRoZSBVTUwgZGF0\nYQ0KbW9kZWwgYWJvdmUgdXNlcyBhIG1hbnktdG8tbWFueSBhY2NvY2lhdGlvbiB3aXRoIGFuIGFz\nc29jaWF0ZWQgb2JqZWN0LiBTbyBhIHN0cmFpZ2h0DQpmb3J3YXJkIHByZW9yZGVyIHRyYXZlcnNh\nbCB3b3VsZG4ndCBsb29rIHRoYXQgZ29vZCBpbiBYTUwgYW5kIHdvdWxkIHJlcXVpcmUgYSBsb3Qg\nb2YNCmxpbmtzLiBGb3IgdGhlIGV4YW1wbGUgZ3JhcGggYWJvdmUsIGEgcmVhc29uYWJsZSBjb21w\ncm9taXNlIG1pZ2h0IGxvb2sgbGlrZTo8L3A+DQo8ZGl2IGFsaWduPSJsZWZ0Ij4NCg0KPHByZT48\nc21hbGw+Jmx0Oz94bWwgdmVyc2lvbj0mcXVvdDsxLjAmcXVvdDsgZW5jb2Rpbmc9JnF1b3Q7dXRm\nLTgmcXVvdDs/Jmd0Ow0KJmx0OyFET0NUWVBFIHZlcnNpb25oaXN0b3J5IFNZU1RFTSAmcXVvdDt2\nZXJzaW9uaGlzdG9yeS5kdGQmcXVvdDsmZ3Q7DQoNCiZsdDtEOnZlcnNpb25oaXN0b3J5IHhtbG5z\nOkQ9JnF1b3Q7REFWOiZxdW90Ow0KICBocmVmPSZxdW90O2h0dHA6Ly9ob3N0bmFtZS93ZWJkYXYv\ndmVyc2lvbmluZy5odG0mcXVvdDsmZ3Q7DQogICZsdDtEOnJldmlzaW9uIGlkPSZxdW90OzEmcXVv\ndDsmZ3Q7DQogICAgJmx0O0Q6bGFiZWwmZ3Q7aW5pdGlhbFZlcnNpb24mbHQ7L0Q6bGFiZWwmZ3Q7\nDQogICAgJmx0O0Q6bGFiZWwmZ3Q7cm9vdCZsdDsvRDpsYWJlbCZndDsNCiAgICAmbHQ7RDpjb21t\nZW50Jmd0O1RoaXMgaXMgdGhlIGZpcnN0IHZlcnNpb24gb2YgdGhlIFdlYkRBViB2ZXJzaW9uaW5n\nIGRvY3VtZW50Jmx0Oy9EOmNvbW1lbnQmZ3Q7DQogICZsdDsvRDpyZXZpc2lvbiZndDsNCiAgJmx0\nO0Q6cmV2aXNpb24gaWQ9JnF1b3Q7MiZxdW90OyZndDsNCiAgICAmbHQ7RDpsYWJlbCZndDt3b3Jr\naW5nR3JvdXBVcGRhdGVzJmx0Oy9EOmxhYmVsJmd0Ow0KICAgICZsdDtEOmNvbW1lbnQmZ3Q7Rmly\nc3QgdXBkYXRlcywgYW5kIGNvbXBsZXRlIHNwZWNpZmljYXRpb24gZm9yIHZlcnNpb25pbmcmbHQ7\nL0Q6Y29tbWVudCZndDsNCiAgICAgICZsdDtEOmJyYW5jaCBpZD0mcXVvdDtDTSZxdW90OyZndDsN\nCiAgICAgICAgJmx0O0Q6Y29tbWVudCZndDtUaGUgQ00gYnJhbmNoIGFkZHMgY29uZmlndXJhdGlv\nbiBtYW5hZ2VtZW50IHRvIFdlYkRBViB2ZXJzaW9uaW5nJmx0Oy9EOmNvbW1lbnQmZ3Q7DQogICAg\nICAgICZsdDtEOnJldmlzaW9uIGlkPSZxdW90O0NNMS4xJnF1b3Q7Jmd0Ow0KICAgICAgICAgICZs\ndDtEOmNvbW1lbnQmZ3Q7VGhpcyBpcyB0aGUgZmlyc3QgdmVyc2lvbiBmb3IgdGhlIENNIGJyYW5j\naCZsdDsvRDpjb21tZW50Jmd0Ow0KICAgICAgICAmbHQ7L0Q6cmV2aXNpb24mZ3Q7DQogICAgICAg\nICZsdDtEOnJldmlzaW9uIGlkPSZxdW90O0NNMS4yJnF1b3Q7Jmd0Ow0KICAgICAgICAgICZsdDtE\nOmNvbW1lbnQmZ3Q7VGhpcyBpcyB0aGUgc2Vjb25kIHZlcnNpb24gZm9yIHRoZSBDTSBicmFuY2gm\nbHQ7L0Q6Y29tbWVudCZndDsNCiAgICAgICAgJmx0Oy9EOnJldmlzaW9uJmd0Ow0KICAgICAgICAm\nbHQ7RDpyZXZpc2lvbiBpZD0mcXVvdDtDTTEuMyZxdW90OyZndDsNCiAgICAgICAgICAmbHQ7RDps\nYWJlbCZndDt3ZWJEQVZDTSZsdDsvRDpsYWJlbCZndDsNCiAgICAgICAgICAmbHQ7RDpjb21tZW50\nJmd0O1RoaXMgaXMgdGhlIGZpbmFsIHZlcnNpb24gZm9yIHRoZSBDTSBicmFuY2ggYmVmb3JlIG1l\ncmdpbmcgd2l0aCB0aGUgcGFyZW50IGRvY3VtZW50Jmx0Oy9EOmNvbW1lbnQmZ3Q7DQogICAgICAg\nICZsdDsvRDpyZXZpc2lvbiZndDsNCiAgICAgICZsdDsvRDpicmFuY2gmZ3Q7DQogICAgICANCiAg\nICAgICZsdDtEOmJyYW5jaCBpZD0mcXVvdDtUQ0NNJnF1b3Q7Jmd0Ow0KICAgICAgICAmbHQ7RDpj\nb21tZW50Jmd0O1RoaXMgYnJhbmNoIGFkZHMgY29uZmlndXJhdGlvbiBtYW5hZ2VtZW50IHRvIFdl\nYkRBViB2ZXJzaW9uaW5nIHVzaW5nIHRoZSBUZWFtQ29ubmVjdGlvbiBtb2RlbCZsdDsvRDpjb21t\nZW50Jmd0Ow0KICAgICAgICAmbHQ7RDpyZXZpc2lvbiBpZD0mcXVvdDtUQ0NNMS4xJnF1b3Q7Jmd0\nOw0KICAgICAgICAgICZsdDtEOmNvbW1lbnQmZ3Q7VGhpcyBpcyB0aGUgZmlyc3QgdmVyc2lvbiBm\nb3IgdGhlIFRDQ00gYnJhbmNoJmx0Oy9EOmNvbW1lbnQmZ3Q7DQogICAgICAgICZsdDsvRDpyZXZp\nc2lvbiZndDsNCiAgICAgICAgJmx0O0Q6cmV2aXNpb24gaWQ9JnF1b3Q7VENDTTEuMSZxdW90OyZn\ndDsNCiAgICAgICAgICAmbHQ7RDpsYWJlbCZndDt3ZWJEQVZUQ0NNJmx0Oy9EOmxhYmVsJmd0Ow0K\nICAgICAgICAgICZsdDtEOmNvbW1lbnQmZ3Q7VGhpcyBpcyB0aGUgZmluYWwgdmVyc2lvbiBmb3Ig\ndGhlIFRDQ00gYnJhbmNoIGJlZm9yZSBtZXJnaW5nIHdpdGggdGhlIHBhcmVudCBkb2N1bWVudCZs\ndDsvRDpjb21tZW50Jmd0Ow0KICAgICAgICAmbHQ7L0Q6cmV2aXNpb24mZ3Q7DQogICAgICAmbHQ7\nL0Q6YnJhbmNoJmd0Ow0KICAmbHQ7L0Q6cmV2aXNpb24mZ3Q7DQogICZsdDtEOnJldmlzaW9uIGlk\nPSZxdW90OzMmcXVvdDsmZ3Q7DQogICAgJmx0O0Q6Y29tbWVudCZndDtUaGlzIGlzIHRoZSB0aGly\nZCB2ZXJzaW9uIG9mIHRoZSBXZWJEQVYgdmVyc2lvbmluZyBkb2N1bWVudCZsdDsvRDpjb21tZW50\nJmd0Ow0KICAmbHQ7L0Q6cmV2aXNpb24mZ3Q7DQogICZsdDtEOnJldmlzaW9uIGlkPSZxdW90OzQm\ncXVvdDsmZ3Q7DQogICAgJmx0O0Q6bGFiZWwmZ3Q7aW5pdGlhbFZlcnNpb24mbHQ7L0Q6bGFiZWwm\nZ3Q7DQogICAgJmx0O0Q6bGFiZWwmZ3Q7cm9vdCZsdDsvRDpsYWJlbCZndDsNCiAgICAmbHQ7RDpj\nb21tZW50Jmd0O1RoaXMgaXMgdGhlIGZvdXJ0aCB2ZXJzaW9uIG9mIHRoZSBXZWJEQVYgdmVyc2lv\nbmluZyBkb2N1bWVudCZsdDsvRDpjb21tZW50Jmd0Ow0KICAmbHQ7L0Q6cmV2aXNpb24mZ3Q7DQog\nICZsdDtEOnJldmlzaW9uIGlkPSZxdW90OzUmcXVvdDsmZ3Q7DQogICAgJmx0O0Q6bGFiZWwmZ3Q7\naW5pdGlhbFZlcnNpb24mbHQ7L0Q6bGFiZWwmZ3Q7DQogICAgJmx0O0Q6bGFiZWwmZ3Q7cm9vdCZs\ndDsvRDpsYWJlbCZndDsNCiAgICAmbHQ7RDpjb21tZW50Jmd0O1RoaXMgaXMgdGhlIGZpZnRoIHZl\ncnNpb24gb2YgdGhlIFdlYkRBViB2ZXJzaW9uaW5nIGRvY3VtZW50Jmx0Oy9EOmNvbW1lbnQmZ3Q7\nDQogICZsdDsvRDpyZXZpc2lvbiZndDsNCiAgJmx0O0Q6cmV2aXNpb24gaWQ9JnF1b3Q7NiZxdW90\nOyZndDsNCiAgICAmbHQ7RDpwcmVkZWNlc3NvciBocmVmPSZxdW90O0NNMi4zJnF1b3Q7LyZndDsN\nCiAgICAmbHQ7RDpsYWJlbCZndDtDTVZlcnNpb24mbHQ7L0Q6bGFiZWwmZ3Q7DQogICAgJmx0O0Q6\nbGFiZWwmZ3Q7Q00mbHQ7L0Q6bGFiZWwmZ3Q7DQogICAgJmx0O0Q6Y29tbWVudCZndDtUaGlzIHZl\ncnNpb24gaW5jbHVkZXMgY29uZmlndXJhdGlvbiBtYW5hZ2VtZW50Jmx0Oy9EOmNvbW1lbnQmZ3Q7\nDQogICZsdDsvRDpyZXZpc2lvbiZndDsNCiZsdDsvRDp2ZXJzaW9uaGlzdG9yeSZndDs8L3NtYWxs\nPjwvcHJlPg0KPC9kaXY+DQoNCjxwIGFsaWduPSJsZWZ0Ij5UaGUgdmVyc2lvbmhpc3RvcnkgZWxl\nbWVudCBjb250YWlucyBhbiBpbXBsZWQgYnJhbmNoIG9mZiB0aGUgbnVsbCBlbGVtZW50DQpjb250\nYWluaW5nIHRoZSBtYWluIGxpbmUgb2YgZGVzY2VudC48L3A+DQoNCjxwIGFsaWduPSJsZWZ0Ij5U\naGUgRFREIGZvciB0aGUgdmVyc2lvbiBoaXN0b3J5IGRvY3VtZW50IGlzOjwvcD4NCjxkaXYgYWxp\nZ249ImxlZnQiPg0KDQo8cHJlPjxzbWFsbD4mbHQ7P3htbCB2ZXJzaW9uPSZxdW90OzEuMCZxdW90\nOyBlbmNvZGluZz0mcXVvdDtVVEYtOCZxdW90Oz8mZ3Q7DQombHQ7IS0tIFdlYkRBViBWZXJzaW9u\nIEhpc3RvcnkgRFREIC0tJmd0Ow0KDQombHQ7IUVMRU1FTlQgdmVyc2lvbmhpc3RvcnkgKHJldmlz\naW9uKikmZ3Q7DQombHQ7IUFUVExJU1QgdmVyc2lvbmhpc3RvcnkNCglocmVmIENEQVRBICNSRVFV\nSVJFRCAmbHQ7IS0tIHRoZSBVUkwgZm9yIHRoZSB2ZXJzaW9uZWQgcmVzb3VyY2UgLS0mZ3Q7DQom\nZ3Q7DQoNCiZsdDshRUxFTUVOVCByZXZpc2lvbiAobGFiZWwqLCBjb21tZW50PywgYnJhbmNoKikm\nZ3Q7DQombHQ7IUFUVExJU1QgcmV2aXNpb24gDQoJaWQgSUQgI1JFUVVJUkVEICZsdDshLS0gdGhl\nIHJldmlzaW9uIGlkIC0tJmd0Ow0KJmd0Ow0KDQombHQ7IUVMRU1FTlQgYnJhbmNoIChjb21tZW50\nPywgcmV2aXNpb24qKSZndDsNCiZsdDshQVRUTElTVCBicmFuY2gNCglpZCBJRCAjUkVRVUlSRUQg\nJmx0OyEtLSB0aGUgYnJhbmNoIG5hbWUgLS0mZ3Q7DQomZ3Q7DQoNCiZsdDshRUxFTUVOVCBjb21t\nZW50ICgjUENEQVRBKSZndDsNCjwvc21hbGw+PC9wcmU+DQo8L2Rpdj4NCg0KPGgyPlJhdGlvbmFs\nZTwvaDI+DQoNCjxwPlZlcnNpb25pbmcgaW4gdGhlIGNvbnRleHQgb2YgdGhlIHdvcmxkLXdpZGUg\nd2ViIG9mZmVycyBhIHZhcmlldHkgb2YgYmVuZWZpdHM6IDwvcD4NCg0KPHA+SXQgcHJvdmlkZXMg\naW5mcmFzdHJ1Y3R1cmUgZm9yIGVmZmljaWVudCBhbmQgY29udHJvbGxlZCBtYW5hZ2VtZW50IG9m\nIGxhcmdlIGV2b2x2aW5nDQp3ZWIgc2l0ZXMuIE1vZGVybiBjb25maWd1cmF0aW9uIG1hbmFnZW1l\nbnQgc3lzdGVtcyBhcmUgYnVpbHQgb24gc29tZSBmb3JtIG9mIHJlcG9zaXRvcnkNCnRoYXQgY2Fu\nIHRyYWNrIHRoZSByZXZpc2lvbiBoaXN0b3J5IG9mIGluZGl2aWR1YWwgcmVzb3VyY2VzLCBhbmQg\ncHJvdmlkZSB0aGUgaGlnaGVyLWxldmVsDQp0b29scyB0byBtYW5hZ2UgdGhvc2Ugc2F2ZWQgdmVy\nc2lvbnMuIEJhc2ljIHZlcnNpb25pbmcgY2FwYWJpbGl0aWVzIGFyZSByZXF1aXJlZCB0bw0Kc3Vw\ncG9ydCBzdWNoIHN5c3RlbXMuIDwvcD4NCg0KPHA+SXQgYWxsb3dzIHBhcmFsbGVsIGRldmVsb3Bt\nZW50IGFuZCB1cGRhdGUgb2Ygc2luZ2xlIHJlc291cmNlcy4gU2luY2UgdmVyc2lvbmluZyBzeXN0\nZW1zDQpyZWdpc3RlciBjaGFuZ2UgYnkgY3JlYXRpbmcgbmV3IG9iamVjdHMsIHRoZXkgZW5hYmxl\nIHNpbXVsdGFuZW91cyB3cml0ZSBhY2Nlc3MgYnkgYWxsb3dpbmcNCnRoZSBjcmVhdGlvbiBvZiB2\nYXJpYW50IHZlcnNpb25zLiBNYW55IGFsc28gcHJvdmlkZSBtZXJnZSBzdXBwb3J0IHRvIGVhc2Ug\ndGhlIHJldmVyc2UNCm9wZXJhdGlvbi4gPC9wPg0KDQo8cD5JdCBwcm92aWRlcyBhIGZyYW1ld29y\nayBmb3IgY29vcmRpbmF0aW5nIGNoYW5nZXMgdG8gcmVzb3VyY2VzLiBXaGlsZSBzcGVjaWZpY3Mg\ndmFyeSwNCm1vc3Qgc3lzdGVtcyBwcm92aWRlIHNvbWUgbWV0aG9kIG9mIGNvbnRyb2xsaW5nIG9y\nIHRyYWNraW5nIGFjY2VzcyB0byBlbmFibGUgY29sbGFib3JhdGl2ZQ0KcmVzb3VyY2UgZGV2ZWxv\ncG1lbnQuIDwvcD4NCg0KPHA+SXQgYWxsb3dzIGJyb3dzaW5nIHRocm91Z2ggcGFzdCBhbmQgYWx0\nZXJuYXRpdmUgdmVyc2lvbnMgb2YgYSByZXNvdXJjZS4gRnJlcXVlbnRseSB0aGUNCm1vZGlmaWNh\ndGlvbiBhbmQgYXV0aG9yc2hpcCBoaXN0b3J5IG9mIGEgcmVzb3VyY2UgaXMgY3JpdGljYWwgaW5m\nb3JtYXRpb24gaW4gaXRzZWxmLiA8L3A+DQoNCjxwPkl0IHByb3ZpZGVzIHN0YWJsZSBuYW1lcyB0\naGF0IGNhbiBzdXBwb3J0IGV4dGVybmFsbHkgc3RvcmVkIGxpbmtzIGZvciBhbm5vdGF0aW9uIGFu\nZA0KbGluay1zZXJ2ZXIgc3VwcG9ydC4gQm90aCBhbm5vdGF0aW9uIGFuZCBsaW5rIHNlcnZlcnMg\nZnJlcXVlbnRseSBuZWVkIHRvIHN0b3JlIHN0YWJsZQ0KcmVmZXJlbmNlcyB0byBwb3J0aW9ucyBv\nZiByZXNvdXJjZXMgdGhhdCBhcmUgbm90IHVuZGVyIHRoZWlyIGRpcmVjdCBjb250cm9sLiBCeSBw\ncm92aWRpbmcNCnN0YWJsZSBzdGF0ZXMgb2YgcmVzb3VyY2VzLCB2ZXJzaW9uIGNvbnRyb2wgc3lz\ndGVtcyBhbGxvdyBub3Qgb25seSBzdGFibGUgcG9pbnRlcnMgaW50bw0KdGhvc2UgcmVzb3VyY2Vz\nLCBidXQgYWxzbyB3ZWxsLWRlZmluZWQgbWV0aG9kcyB0byBkZXRlcm1pbmUgdGhlIHJlbGF0aW9u\nc2hpcHMgb2YgdGhvc2UNCnN0YXRlcyBvZiBhIHJlc291cmNlLiA8L3A+DQoNCjxwPkl0IGFsbG93\ncyBleHBsaWNpdCBzZW1hbnRpYyByZXByZXNlbnRhdGlvbiBvZiBzaW5nbGUgcmVzb3VyY2VzIHdp\ndGggbXVsdGlwbGUgc3RhdGVzLiBBDQp2ZXJzaW9uaW5nIHN5c3RlbSBkaXJlY3RseSByZXByZXNl\nbnRzIHRoZSBmYWN0IHRoYXQgYSByZXNvdXJjZSBoYXMgYW4gZXhwbGljaXQgaGlzdG9yeSwNCmFu\nZCBhIHBlcnNpc3RlbnQgaWRlbnRpdHkgYWNyb3NzIHRoZSB2YXJpb3VzIHN0YXRlcyBpdCBoYXMg\naGFkIGR1cmluZyB0aGUgY291cnNlIG9mIHRoYXQNCmhpc3RvcnkuIDwvcD4NCg0KPGgyPjxhIE5B\nTUU9Ik5vbmdvYWxzIj48L2E+Tm9uLWdvYWxzPC9oMj4NCg0KPHA+VGhlc2Ugbm9uLWdvYWxzIGVu\ndW1lcmF0ZSBmdW5jdGlvbmFsaXR5IHdoaWNoIHRoZSB3b3JraW5nIGdyb3VwIGhhcyBleHBsaWNp\ndGx5IGFncmVlZA0KdG8gZXhjbHVkZSBmcm9tIHRoaXMgZG9jdW1lbnQ7IHRoZXkgYXJlIGRvY3Vt\nZW50ZWQgaGVyZSBmb3IgZXhwbGFuYXRvcnkgcHVycG9zZXMuJm5ic3A7IA0KDQo8b2w+DQogIDxs\naT5SZXZpc2lvbnMgaW4gbXVsdGlwbGUgcmV2aXNpb24gaGlzdG9yaWVzIChzZWUgWzxhIEhSRUY9\nIiNyZWYtV0VCREFWLUdPQUxTIj5XRUJEQVYtR09BTFM8L2E+XSwNCiAgICBzZWN0aW9ucyA1Ljku\nMS4zIGFuZCA1LjkuMi41KS4mbmJzcDsgVGhpcyBjYXBhYmlsaXR5IHdhcyBmZWx0IHRvIGJlIHRv\nbyByYXJlbHkgdXNlZnVsLjwvbGk+DQogIDxsaT5GZWRlcmF0ZWQgcmV2aXNpb24gaGlzdG9yaWVz\nICh0aGF0IGlzLCByZXZpc2lvbiBoaXN0b3JpZXMgd2hpY2ggYXJlIG5vdCBzdG9yZWQgb24gYQ0K\nICAgIHNpbmdsZSBzZXJ2ZXIpLiZuYnNwOyBUaGlzIGNhcGFiaWxpdHkgd291bGQgaW50cm9kdWNl\nIGdyZWF0IGRpZmZpY3VsdGllcy4mbmJzcDsgQSBzZXJ2ZXINCiAgICBpbXBsZW1lbnRvciB3aG8g\nbmVlZHMgaXQgY2FuIHVzZSBvdXQtb2YtYmFuZCBzZXJ2ZXItdG8tc2VydmVyIGNvbW11bmljYXRp\nb247IGJ1dCB0aGlzDQogICAgY29tbXVuaWNhdGlvbiBpcyBhcmd1YWJseSBvdXQgb2YgdGhlIHNj\nb3BlIG9mIFdlYkRBViwgd2hpY2ggaXMgYSBjbGllbnQtdG8tc2VydmVyDQogICAgcHJvdG9jb2wu\nPC9saT4NCiAgPGxpPkNsaWVudC1wcm9wb3NlZCB2ZXJzaW9uIGlkZW50aWZpZXJzIChzZWUgWzxh\nIEhSRUY9IiNyZWYtV0VCREFWLUdPQUxTIj5XRUJEQVYtR09BTFM8L2E+XSwNCiAgICBzZWN0aW9u\nIDUuOS4yLjgpLiZuYnNwOyBMYWJlbHMgZG8gdGhlIGpvYiBiZXR0ZXIuPC9saT4NCjwvb2w+DQoN\nCjxoMj48YSBOQU1FPSJTZWN1cml0eSI+PC9hPlNlY3VyaXR5IENvbnNpZGVyYXRpb25zPC9oMj4N\nCg0KPHA+VG8gYmUgd3JpdHRlbi4mbmJzcDsgSXQgaXMgbGlrZWx5IHRoYXQgaW1wbGVtZW50aW5n\nIGZlYXR1cmVzIHRvIG1lZXQgdGhlIGdvYWxzDQpkZXNjcmliZWQgaGVyZSB3aWxsIHByZXNlbnQg\nZmV3IG9yIG5vIG5ldyBzZWN1cml0eSByaXNrcyBiZXlvbmQgdGhvc2Ugb2YgYmFzZSBEQVYuJm5i\nc3A7DQpPbmUgcG9zc2libGUgZXhjZXB0aW9uIGlzIHRoYXQgaXQgbWF5IGJlY29tZSBtb3JlIGRp\nZmZpY3VsdCB0byBoaWRlIHRoZSBjb250ZW50cyBvZiBhDQpyZXNvdXJjZSB3aGVuIHRoZXJlIG1h\neSBleGlzdCBvdGhlciB2ZXJzaW9ucyB3aXRoIGRpZmZlcmVudCBhY2Nlc3MgY29udHJvbCBsaXN0\ncy4gPC9wPg0KDQo8aDI+PGEgTkFNRT0iUmVmZXJlbmNlcyI+PC9hPlJlZmVyZW5jZXM8L2gyPg0K\nDQo8cD5bV0VCREFWXVkuWS4gR29sYW5kLCBFLkouIFdoaXRlaGVhZCwgSnIuLCBBLiBGYWl6aSwg\nUy5SLiBDYXJ0ZXIsIEQuIEplbnNlbiwNCiZxdW90O0V4dGVuc2lvbnMgZm9yIERpc3RyaWJ1dGVk\nIEF1dGhvcmluZyBvbiB0aGUgV29ybGQgV2lkZSBXZWIgLS0gV0VCREFWJnF1b3Q7LA0KSW50ZXJu\nZXQtRHJhZnQgPGENCkhSRUY9Imh0dHA6Ly93d3cuaWV0Zi5vcmcvaW50ZXJuZXQtZHJhZnRzL2Ry\nYWZ0LWlldGYtd2ViZGF2LXByb3RvY29sLTA4LnR4dCI+ZHJhZnQtaWV0Zi13ZWJkYXYtcHJvdG9j\nb2wtMTA8L2E+Lg0KTm92LiwgMTk5OCA8YnI+DQo8YSBOQU1FPSJyZWYtV0VCREFWLUdPQUxTIj48\nL2E+W1dFQkRBVi1HT0FMU10gSi4gU2xlaW4sIEYuIFZpdGFsaSwgSi4gV2hpdGVoZWFkLCBELg0K\nRHVyYW5kLCAmcXVvdDtSZXF1aXJlbWVudHMgZm9yIGEgRGlzdHJpYnV0ZWQgQXV0aG9yaW5nIGFu\nZCBWZXJzaW9uaW5nIFByb3RvY29sIGZvciB0aGUNCldvcmxkIFdpZGUgV2ViJnF1b3Q7LCA8YQ0K\nSFJFRj0iaHR0cDovL3d3dy5pY3MudWNpLmVkdS9wdWIvaWV0Zi93ZWJkYXYvcmVxdWlyZW1lbnRz\nL3JmYzIyOTEudHh0Ij5SRkMtMjI5MTwvYT4uJm5ic3A7DQpGZWJydWFyeSAxOTk4LiA8YnI+DQo8\nYSBOQU1FPSJyZWYtV0VCREFWLUFDUCI+PC9hPltXRUJEQVYtQUNQXSBKLiBTbGVpbiwgSi4gRGF2\naXMsIEEuIEJhYmljaCwgSi4gV2hpdGVoZWFkLA0KJnF1b3Q7V2ViREFWIEFkdmFuY2VkIENvbGxl\nY3Rpb25zIFByb3RvY29sJnF1b3Q7LCBJbnRlcm5ldC1EcmFmdCA8YQ0KSFJFRj0iaHR0cDovL3d3\ndy5pY3MudWNpLmVkdS9wdWIvaWV0Zi93ZWJkYXYvY29sbGVjdGlvbi9kcmFmdC1pZXRmLXdlYmRh\ndi1jb2xsZWN0aW9uLXByb3RvY29sLTAxLnR4dCI+ZHJhZnQtaWV0Zi13ZWJkYXYtY29sbGVjdGlv\nbi1wcm90b2NvbC0wMi50eHQ8L2E+LiZuYnNwOw0KTm92LiwgMTk5OC4gPGJyPg0KPGEgTkFNRT0i\ncmVmLURBU0wiPjwvYT5bREFTTF0gUy4gUmVkZHksIEQuIEplbnNlbiwgUy4gUmVkZHksIFIuIEhl\nbmRlcnNvbiwgSi4gRGF2aXMsIEEuDQpCYWJpY2gsICZxdW90O0RBViBTZWFyY2hpbmcgJmFtcDsg\nTG9jYXRpbmcmcXVvdDssIEludGVybmV0LURyYWZ0IDxhDQpIUkVGPSJmdHA6Ly9mdHAuaXNpLmVk\ndS9pbnRlcm5ldC1kcmFmdHMvZHJhZnQtcmVkZHktZGFzbC1wcm90b2NvbC0wMi50eHQiPmRyYWZ0\nLXJlZGR5LWRhc2wtcHJvdG9jb2wtMDQudHh0PC9hPi4mbmJzcDsNCk5vdi4sIDE5OTguIDxicj4N\nCjxhIE5BTUU9InJlZi1DVlMiPjwvYT5bQ1ZTXSA8YSBIUkVGPSJodHRwOi8vd3d3LmN5Y2xpYy5j\nb20vY3ljbGljLXBhZ2VzL2Jvb2tzLmh0bWwiPmh0dHA6Ly93d3cuY3ljbGljLmNvbS9jeWNsaWMt\ncGFnZXMvYm9va3MuaHRtbDwvYT4NCjxicj4NCjxhIE5BTUU9InJlZi1CT05TQUkiPjwvYT5bQk9O\nU0FJXSBNb3ppbGxhLm9yZywgPGENCkhSRUY9Imh0dHA6Ly93d3cubW96aWxsYS5vcmcvYm9uc2Fp\nLmh0bWwiPmh0dHA6Ly93d3cubW96aWxsYS5vcmcvYm9uc2FpLmh0bWw8L2E+IDxicj4NCiZuYnNw\nOyA8L3A+DQoNCjxwIGFsaWduPSJsZWZ0Ij4mbmJzcDs8L3A+DQo8L2JvZHk+DQo8L2h0bWw+DQo=\n\n--0__=Y2POLT1gC2CXyjE0VwtryzPozZrYVOq0u8mliYFYfcesdwLvImk0KcCn--\n     \n   \n\n", "id": "lists-005-10528017"}, {"subject": "Re: WebDAV Versioning Model", "content": "I've placed this document on the WebDAV web site, at:\n\nhttp://www.ics.uci.edu/pub/ietf/webdav/versioning/model/\n\n- Jim\n\n> -----Original Message-----\n> From: ietf-dav-versioning-request@w3.org\n> [mailto:ietf-dav-versioning-request@w3.org]On Behalf Of\n> jamsden@us.ibm.com\n> Sent: Friday, February 05, 1999 10:33 AM\n> To: ietf-dav-versioning@w3.org; khygh@us.ibm.com\n> Subject: WebDAV Versioning Model\n\n> Attached is the latest WebDAV versioning model. This model does not\n> distinguish between Document Management Systems (DMS) and Configuration\n> Management Systems (CM), but rather attempts to integrate the semantics of\n> both while remaining as simple as possible. It attempts to provide the\n> flexibility and ease of use of DMS systems while retaining the rich\n> semantics available in modern CM systems and lets the user choose which\n> semantics to use on a revision by revision basis. The model was driven by\n> the scenarios in the Versioning Goals document, so you may want to review\n> that document in parallel with the model.\n     \n   \n\n", "id": "lists-005-10639818"}, {"subject": "Proposed charter for versioning WG", "content": "One characteristic of the IETF which distinguishes it from other standards\ndevelopment organizations is the IETF requires its working groups to have\nfinite lifespans, and to close after its work has been complete.  This is\nmotivated by a desire not to have working groups keep expanding their\nmission to self-perpetuate, and to ensure that the working group doesn't get\n\"stale\" with the same cast of characters rehashing the same issues.\n\nNow, I don't think the WebDAV working group has fallen into any of these\ntraps yet -- we continue to make good progress on the versioning protocol,\nand the advanced collections protocol.  We haven't strayed from our original\ncharter.  Now that the WebDAV Distriubted Authoring protocol has been\napproved, we're starting to see lots of public announcements by companies of\ntheir WebDAV product plans (see http://www.webdav.org/projects/).  There is\nalso increasing interest in open source development of WebDAV applications,\nsignificantly helped by Greg Stein's webdav.org site.  All these are signs\nof robust health.\n\nSo, you might ask, if it ain't broke, why fix it?  Well, one good reason is\nthat Keith Moore, our Applications Area advisor thinks the time is right.\nBut, more generally, I look at it as a case of preventative medicine.  By\ncreating a separate versioning working group, with its own separate charter,\nseveral positive goals are accomplished:\n\n * It sends a signal that new people can become involved and participate.\n\n   While it's always the case that new people can get involved in an\n   IETF effort, it's often difficult to know when you can get involved\n   without annoying people who have been working on the topic for awhile.\n   For example, Mark Anderson's comments on draft-ietf-webdav-protocol-09\n   last fall were well intentioned, but had terrible timing.\n\n * It provides the opportunity to refresh the agreement over what work is\nbeing done.\n\n   Most people on the mailing list today didn't have a chance to discuss the\n   original WebDAV charter.  Even if there is common agreement that the\ncharter\n   of the versioning working group should continue in the same vein as\ncurrent\n   efforts, it still is worthwhile to make sure that *current* list members\n   agree with the goals.\n\n * It forces people to explicitly subscribe to a new mailing list.\n\n   Though it may seem funny to list this as a positive, working group\nmailing\n   lists tend to attract a lot of lurkers over time, people who want to\ntrack an\n   effort rather than being an active participant.  You might be surprised\nto\n   know that the WebDAV mailing list now has appx. 350 people on it!\nObviously\n   you're not all active participants :-) (Although I very much appreciate\n   having such a large pool of people to call on for volunteers for various\n   activities). By causing people to reaffirm their interest by joining a\nnew\n   list, it tends to \"refresh\" the membership.\n\n * It allows the burden of work to be more evenly shared.\n\n   This one is more of a personal motivation, but it does impact the\n   working group as a whole.  The motivation and ability to participate\n   of the hardest working people in a working group is hard to sustain\n   over several years, and it's good to have some rotation of duties.\n   If too much is asked of the same people for too long, the working\n   group suffers immensely when they, inevitably, are no longer able to\n   participate any longer.\n\nMany of you know that I have been working towards my Ph.D. degree while\nbeing chair of WebDAV.  And, truth be told, my participation has definitely\ndelayed my graduation.  I have no regrets -- this has been an excellent\nexperience, the kind of activity I wanted to be able to work on during grad.\nschool.  Plus, interacting with members of the working group has been very\nrewarding, both professionally and personally.  Still, I'm at least a year\naway from graduation if I have complete focus on my degree, and I need to\nget more of WebDAV off my plate to do this.\n\nSo, while I still intend to continue on as chair of the WebDAV working\ngroup, working to finish up advanced collections, and work on issues from\nthe issues list, and resolve any interoperability problems that may arise, I\nintend that the efforts on versioning and advanced collections will form new\nworking groups.  I will not chair those new groups, though I will help form\nthem, and make sure they get a good start.  My goal is to create continuity\nfrom the current WebDAV working group into the new working groups, to make\nsure none of the momentum we have is lost.\n\nThere is successful precedent for this in the DASL working group, which has\nbeen making steady progress towards defining a searching protocol for DAV\nresources (http://www.ics.uci.edu/pub/ietf/dasl/).  DASL shows the strength\nof creating a new working group -- it has a different set of people working\non it than who developed the base WebDAV protocol, people who have deep\nsearching experience.  Their mailing list collected people who had interest\nin the searching problem, helping ensure that their discussions are focused,\nand not lost in other topics on the main DAV list.  DASL is the right model\nfor what the working groups on versioning and access control can accomplish.\n\nAt the bottom of this message is a proposed charter for the versioning\nworking group, which I have tentatively named \"DELTA-V\" (you know, to\nemphasize they're creating extensions to DAV -- \"delta\" -- and are working\non the \"V\" part of DAV. :-)  I'd appreciate any comments you have on the\ncharter -- send them to the main WebDAV list.  You can also expect to see\nanother charter in the near future to develop an access control working\ngroup, but I don't have this one done yet.\n\nI look forward to working with you to develop these new working groups, and\nto setting the stage for the completion of the original WebDAV goals,\ncreating a writeable, versioned collaborative Web.\n\n- Jim\n\n---------------------------------------\n\n\nWeb Versioning and Configuration Management (DELTA-V)\n\nChair(s):\n\nTBD (Though Jim Whitehead emphatically declines to be chair)\n\nApplications Area Director(s):\n\nKeith Moore <moore@cs.utk.edu>\nPatrik Faltstrom <paf@swip.net>\n\nApplications Area Advisor:\n\nTBD, probably Keith Moore <moore@cs.utk.edu>\n\nMailing Lists:\n\nGeneral Discussion: ietf-dav-versioning@w3.org\nTo Subscribe: ietf-dav-versioning-request@w3.org\nSubject: subscribe\nArchive: http://lists.w3.org/Archives/Public/ietf-dav-versioning/\n\nDescription of Working Group:\n\nxThis working group will define extensions to HTTP and the WebDAV\nDistributed Authoring Protocol necessary to enable distributed Web\nauthoring tools to perform, in an interoperable manner, versioning and\nconfiguration management of Web resources.\n\nVersioning, parallel development, and configuration management are\nimportant features for remote authoring of Web content.  Version\nmanagement is concerned with tracking and accessing the history of\nimportant states of a single Web resource, such as a standalone Web\npage.  Parallel development provides additional resource availability\nin multi-user, distributed environments, letting authors make changes\non the same resource at the same time, later merging together those\nchanges. Configuration management addresses the problems of tracking\nand accessing multiple interrelated resources over time as sets of\nresources, not simply individual resources.  Traditionally, artifacts\nof software development, including code, design, test cases,\nrequirements, help files, and more have been a focus of configuration\nmanagement. Web sites, comprised of multiple inter-linked resources\n(HTML, graphics, sound, CGI, and others), are an important class of\ncomplex information artifacts that benefit from the application of\nconfiguration management.\n\nThe WebDAV working group originally focused on defining version\nmanagement capabilities for remote authoring applications. However, it\nhas become clear that while versioning functionality alone is useful\nfor a range of content authoring scenarios involving one, or a small\nset of resources, versioning alone is insufficient for managing larger\nsets of content. Protocol support for parallel development and simple\nremote configuration management of Web resources provides\nfunctionality for managing larger sets of interrelated content\ndeveloped by multiple users at different locations.\n\nA sub-group of the WebDAV working group has developed functional\nrequirements for versioning and configuration management of Web\ncontent. These requirements encompass the following capabilities,\nwhich shall be considered by this working group:\n\nIN-SCOPE:\n\n* Naming and accessing resource versions and configurations\n* Creating new revisions of a resource\n* Placing a resource under version and configuration control\n* History retrieval\n* Differencing\n* Merging of revisions and configurations\n* Operations on configurations\n* Mapping resource versions and configurations to the URL namespace\n* Versioning support for downlevel HTTP and WebDAV clients\n\nFurther information on these objectives can be found in the document,\n\"Goals for Web Versioning\".\n\nNOT IN SCOPE:\n\n* HTTP server to server communication protocols\n* Versioning and configuration management via non-HTTP and WebDAV protocols.\n* Implementation of functionality by non-origin proxies\n\nDeliverables\n\nThe final output of this working group is expected to be two documents:\n\n1. A goals document, which describes the high-level functional\n   requirements for remote versioning and configuration management,\n   including rationale. Jim Amsden, IBM, is editor of this document.\n\n2. A model document, which describes the semantics of versioning,\n   configuration management, and parallel development in a\n   protocol independent fashion.  Editor: TBD\n\n2. A protocol specification, which describes new HTTP methods,\n   headers, request bodies, response bodies, and WebDAV properties to\n   implement the remote versioning and configuration management\n   goals. Chris Kaler, Microsoft, is editor of this document.\n\nGoals and Milestones:\n\nSince significant work on remote versioning and configuration\nmanagement has already taken place within the WebDAV working group,\nthe following schedule is a reasonable estimate of the remaining\neffort, despite the scope of the working group.\n\nJun 99 (Specification, Goals, Model) Produce drafts of distributed\n       versioning and configuration management protocol specification,\n       as well as the goals and requirements documents. Submit as\n       Internet Draft.\n\nJul 99 (Meeting, Specification, Goals, Model) Meet at Oslo IETF and\n       hold working group meeting to review the protocol specification,\n       goals, and model document.\n\nOct 99 (Goals) Create final version of distributed versioning and\n       configuration management goals document. Submit for approval as\n       Informational RFC.\n\nOct 99 (Specification, Model) Produce revised model document, and\n       distributed versioning and configuration management protocol\n       specification. Submit both as Internet Drafts.\n\nNov 99 (Meeting, Specification, Model) Meet at Washington, DC IETF and\n       hold working group meeting to review the model document and the\n       distributed versioning and configuration management protocol\n       specification.\n\nFeb 00 (Specification, Model) Submit revised model document, and\n       distributed versioning and configuration management\n       specification as Internet Drafts.\n\nMar 00 (Meeting, Specification, Model) Meet at Adelaide IETF and hold\n       working group meeting to review the model document and\n       distributed versioning and configuration management protocol\n       specification.\n\nApr 00 (Specification, Model) Submit revised model document and\n       distributed versioning and configuration management\n       specification as Internet Draft.  Hold working group last call\n       for comments on both drafts.\n\nMay 00 (Specification, Model) Revise model document and distributed\n       versioning and configuration management specification based on\n       working group last call comments, and submit both documents to\n       the IESG for approval as a Proposed Standard RFC.\n     \n   \n\n", "id": "lists-005-10643735"}, {"subject": "Updated Web versioning and config. mgmt. charter", "content": "Hi,\n\nI've updated the charter for the Web Versioning and Configuration Management\nworking group, and placed it on the Web at:\n\nhttp://www.ics.uci.edu/pub/ietf/webdav/versioning/charter.txt\n\nI have also requested a BOF slot at the Minneapolis IETF meeting to discuss\nthis charter.\n\n- Jim\n     \n   \n\n", "id": "lists-005-10658574"}, {"subject": "Branching Scenarios", "content": "     I'm interested to see how two commonly used branching\n     techniques/policies would be accomplished using the proposed WebDAV\n     versioning model.  I'll outline the ideas and describe the basic\n     scenarios.  I'll describe the scenarios using software development\n     nomenclature and assume use of a branching SCM system. The topic of\n     this post is if and how such scenarios would be supported assuming\n     they apply to web content management.\n\n     Note that both Case 1 and Case 2 represent SCM process choices that\n     are commonly used.  For good or bad they represent two ways that\n     parallel development is managed at Company X.\n\n     Case 1: Version V1 of a product ZOO has reached its feature complete\n     milestone (FC), which for this project means it has all its intended\n     features, but still has bugs to be fixed.  At this point some\n     developers will continue fixing bugs in version V1, but others will\n     move on to work on the next version (V2).  The V1 code is on the\n     mainline. Because further changes to V1 are intended to be minimized\n     and the V2 work is a natural evolution of the V1 work, V2 work will\n     continue on the mainline.  Also, it is important that all bug fixes\n     for V1 also be immediately reflected in the V2 work.  So V1 bug fixes\n     also will be reflected on the mainline.  If a resource needs to be\n     changed for a V1 fix and it has already been fixed modified on the\n     mainline for V2, then the V1 change is made on a branch and also on\n     the mainline.  Otherwise, if no V2 changes have yet been made to the\n     resource the V1 change is only made on the mainline.  Thus the V2\n     version of ZOO is just the tip of the mainline, whereas the V1 version\n     must be obtained from a fixed configuration (via a fixed label, or\n     whatever mechanism is used) and this configuration must be updated\n     with each bug fix to V1.\n\n     Case 2: Version V1 of product ZOO has been released and version V2\n     development is well underway.  A key customer has contracted to have a\n     specific enhancement made to V1 specifically for them, the resulting\n     version is referred to as V1-A.  The V1-A enhancement is superseded by\n     different features that will be available with the V2 release, but the\n     customer does not wish to wait for V2 to complete.  All work on V1-A\n     will not be used in V2.  Therefore all V1-A changes are made on\n     branches newly created just for V1-A.\n\n     So, how would a WebDAV server that supports versioning (using the\n     current proposal) support these two cases?\n\n     TRY1: An ACTIVITY is directly related to a branch.  Creating a new\n     activity means creating a new branch.  This branching policy supports\n     case 2, but I don't see how it can easily support case 1.  In Case 2\n     the desire behavior is obtained by continuing V2 using the V1 Activity\n     and creating a new activity for V1-A.  In case 1 the V2 activity does\n     not want to create a new branch, so it must continue to use the V1\n     activity.  Then V1 bug fixes would have to go into a new activity\n     forcing a new branch with every change, but is just case 2 and does\n     not match the branching policy of case 1.\n\n     TRY2: An Activity uses the following branch policy:\n     * if the selected revision to be checkout is the latest then check it\n     out on the same branch it is on.\n     * if the selected revision is not the latest, then check it out on a\n     new branch associated with the activity.\n\n     The TRY2 branching policy works for Case 1.  The V1 activity continues\n     to be used even after the V2 activity is created.  Only resources that\n     have been modified by V2 cause V1 to branch.  Because V1 does not work\n     off of latest, it will not cause V2 to branch, but all changes to V1\n     on the original branch will be picked up by V2 and non of the others.\n\n     However TRY2 does not provide the desired behavior for CASE 2.\n     Creating a new Activity for V1-A does not necessarily result in a new\n     branch.\n\n     Understand, the point here is not to find some way to manage cases 1\n     and 2 using the Activity mechanism, but to find a way to do it and\n     preserve the branching policies of Company X.  This is important to\n     Company X because they want to continue using their SCM procedures and\n     have their new WebDAV server fit into this existing system.\n\n     I don't see how this can be done without some indication being given\n     as to which branching policy is desired for each Activity.  Such an\n     indication could be in the form of a property on the Activity or an\n     option in the creation of the activity. Alternatively or in addition,\n     an administrator might specify which branching policies were allowed\n     for a set of resources.  The indication of which policy to use could\n     be abstract and general, e.g. Principle vs. Supporting activity.  Or\n     the indication could be an implementation specific property.  A third\n     idea would be to see if a few specific types of activities could be\n     defined to meet known needs and leave the door open for adding new\n     ones later.\n\n     None of these choices fills me with glee.  I'm probably missing\n     something.  Help me out.\n\n     --Sarge\n     \n   \n\n", "id": "lists-005-10661417"}, {"subject": "FYI: Osmic", "content": "Ted Nelson, the researcher who coined the term \"hypertext\" and who worked\nfor many years on the Xanadu system, has recently been working on\nversioning, as part of his Osmic system.  The Osmic approach is much more\nfine-grain than the WebDAV versioning proposal, and is more similar to\nsynchronous collaborative editors.  For details on Osmic, including access\nto the code for a running demo, go to URL:\n\nhttp://www.sfc.keio.ac.jp/~ted/OSMIC/OSMICpage.html\n\nThe versioning model is described more at:\n\nhttp://www.sfc.keio.ac.jp/~ted/OSMIC/osmicTime.html\n\nIMO, one of the fundamental departure points between the Osmic work and the\nWebDAV versioning work is that WebDAV provides the same versioning\nfacilities to all content types.  Providing more fine-grain versioning\nrequires content type specific knowledge so you know what the basic\noperators are for that content type (what does \"insert\" mean for a bitmap\nimage?).  Internal knowledge about the content type is needed if the content\ntype has a checksum, or a complex internal structure, which prevents it from\nbeing treated solely as a set of bytes for merge operations. In turn, the\ncontent-type specific knowledge then makes the protocol more brittle, since\nit is now dependent on the definition of the content type, and many\nfrequently-used content types on the Web are in constant evolution, making a\nprotocol based on them brittle.  Of course, if you limit yourself, as Osmic\ndoes, to ASCII text (a stable, and widely supported content type) these\nproblems don't appear.\n\n- Jim\n     \n   \n\n", "id": "lists-005-10669341"}, {"subject": "Time for weekly Versioning Conference Call", "content": "I'm setting up a weekly versioning conference call, similar in purpose\nto the weekly advanced-collections call that Judy is running.  So first\nI need to set up a time.  Do people prefer:\n- 2pm EST, on Mondays\n- 2pm EST, on Wednesdays\n- something else\n\nI should have a permanent phone number and pass-code by the end of the week.\n\nAlso, I am soliciting agenda items.  Off the top of my head, a few I have\nfor the first meeting are:\n\n  (from Chris Kaler) possible new name for \"activity\"\n  (from Geoff Clemm) what is a vportal and why we might need them\n  (from Geoff Clemm) versioned collections\n\nCheers,\nGeoff\n     \n   \n\n", "id": "lists-005-10673361"}, {"subject": "Version issues", "content": "A few issues came up at our last versioning working group meeting:\n\n1. DAV versioning level 1 will still need to be a way of resolving access\nto versioned resources given just a URL (and not a label). If workspaces\naren't supported, level 1 servers will have to provide some other way to\nresolve URLs to specific revisions, perhaps a default revision for each\nversioned resource. For level 2 servers that do support workspaces, this\nwould result in two, potentially conflicting ways of performing URL\nmapping. This is a strong argument for including workspaces in level 1.\nWhat would anyone want to do with versioning level 1 that workspaces\nwouldn't support? What would workspaces include that would be considered\ntoo much for level 1? If there are no compelling answers to these\nquestions, we should include workspaces in level 1, including the default\nworkspace.\n\n2. Deleting a resource must explicitly state that the resource is removed\nfrom its parent collection; that is, the collection with which the resource\nis an internal member. Versioning complicates delete semantics. There are\nthree things we might want to delete: an unversioned or working resource, a\nrevision (and all its descendents?) of a versioned resource, a versioned\nresource and all its revision history. This must be done in the context of\nversioned and unversioned collections that contain the resource, or\nversioned resource as an internal member. The preferred way to do this\nwould be to have add and remove methods on collections to create and delete\nresources as its the collection that controls the namespace. Unfortunately,\nDAV doesn't have those semantics, so we will have to find a work-around for\nversioning.\n\nActually, the current WebDAV spec is a little confusing about collections\nand their members. The current spec indicates collections contain URLs, not\nresources. But, there is the notion of internal members and referential\nmembers, and deleting a collection deletes all its internal members. So the\ncollection behaves like it contains resources, not URLs. This issue will\nlikely get more confusing when we add versioned resources, versioned\ncollections, and multiple revisions.\n\n3. It is not possible to automatically create workspaces or activities for\neither non-versioning clients, or versioning clients that don't specify\nthem. Default workspaces and/or activities must be used. Creating a new\nworkspace or activity on each request could cause resources that were\nmanipulated in the previous request to disappear.\n     \n   \n\n", "id": "lists-005-10676333"}, {"subject": "Re: Version issues", "content": "[CK] Comments below...\n\nA few issues came up at our last versioning working group meeting:\n\n1. DAV versioning level 1 will still need to be a way of resolving access\nto versioned resources given just a URL (and not a label). If workspaces\naren't supported, level 1 servers will have to provide some other way to\nresolve URLs to specific revisions, perhaps a default revision for each\nversioned resource. For level 2 servers that do support workspaces, this\nwould result in two, potentially conflicting ways of performing URL\nmapping. This is a strong argument for including workspaces in level 1.\nWhat would anyone want to do with versioning level 1 that workspaces\nwouldn't support? What would workspaces include that would be considered\ntoo much for level 1? If there are no compelling answers to these\nquestions, we should include workspaces in level 1, including the default\nworkspace.\n\n[CK] I suggest we keep the Revision-Id header and the SETDEFAULT method.\n\n2. Deleting a resource must explicitly state that the resource is removed\nfrom its parent collection; that is, the collection with which the resource\nis an internal member. Versioning complicates delete semantics. There are\nthree things we might want to delete: an unversioned or working resource, a\nrevision (and all its descendents?) of a versioned resource, a versioned\nresource and all its revision history. This must be done in the context of\nversioned and unversioned collections that contain the resource, or\nversioned resource as an internal member. The preferred way to do this\nwould be to have add and remove methods on collections to create and delete\nresources as its the collection that controls the namespace. Unfortunately,\nDAV doesn't have those semantics, so we will have to find a work-around for\nversioning.\n\n[CK] I expect deleting a working resource to be the same as UNCHECKOUT.\n[CK] Deleting a versioned resource is up to the store.  Some stores might\n[CK] just delete it.  Some might create an \"delete\" version.  I don't think\n[CK] we want to push a specific model on people.  Especially since the\n[CK] DELETE method is about a resource and in no way describes the\n[CK] underlying repository actions.\n\nActually, the current WebDAV spec is a little confusing about collections\nand their members. The current spec indicates collections contain URLs, not\nresources. But, there is the notion of internal members and referential\nmembers, and deleting a collection deletes all its internal members. So the\ncollection behaves like it contains resources, not URLs. This issue will\nlikely get more confusing when we add versioned resources, versioned\ncollections, and multiple revisions.\n\n[CK]Your right -- some clarification here would be could.\n\n3. It is not possible to automatically create workspaces or activities for\neither non-versioning clients, or versioning clients that don't specify\nthem. Default workspaces and/or activities must be used. Creating a new\nworkspace or activity on each request could cause resources that were\nmanipulated in the previous request to disappear.\n\n[CK] If we say this is what \"logically\" happens on a Level 1 server then\n[CK] OK.  But if the server must in fact do this, then I think the cost\n[CK] is too high since Level 1 clients don't care about this information.\n     \n   \n\n", "id": "lists-005-10681278"}, {"subject": "Versioning Conference Calls: Mondays at 2pm EST", "content": "Phone number is:        1-888-819-8909\nPass Code is:           97985\n\nThere was a unanimous preference for Mondays, so Monday at 2pm it is.\nRational Software will provide the toll-free number for these calls.\n\n\nThe primary topic for next Monday's call (2/22) will be the versioning\ngoals document.  Particular topics that have been raised:\n\n  - new term for \"activity\" (Chris)\n  - workspaces at level 1 (Jim)\n  - deleting revisions/versioned-resources (Jim)\n  - what is a vportal and why we might need them (Geoff)\n    (related to the deletion question)\n  - semantics of versioned collections (Geoff)\n  - branching semantics for activities (Sarge)\n\nI doubt very much we'll get through all of these topics,\nbut this gives everyone some things to focus on.  Feel free to\nsend me any additional topics you'd like to see added to the\nagenda.\n\nCheers,\nGeoff\n\n--\nGeoffrey M. Clemm\nChief Engineer, Configuration Management Business Unit\nRational Software Corporation\n(781) 676-2684   geoffrey.clemm@rational.com   http://www.rational.com\n     \n   \n\n", "id": "lists-005-10687376"}, {"subject": "Re: Version issues", "content": "Comments below in <jra> tags.\n\n\n\n\n\nChris Kaler <ckaler@microsoft.com> on 02/17/99 12:13:42 PM\n\nTo:   Jim Amsden/Raleigh/IBM\ncc:\nSubject:  RE: Version issues\n\n\n\n\nI don't think level 1 servers want to deal with revision selection rules.\nI\nsuspect they could be complicated.  As well, we need to understand the\nsemantics of parallel checkouts in the \"default workspace\".  The current\ndefinition of a workspaces prohibits this and I think it is an important\nrequirement for level 1.\n\n<jra>\nLevel 1 revision selection rules don't need to be complicated at all. There\nare no activities or configurations, so the revision selection rule has\ncheckedout and 0 or more labels. When a resource is accessed with a simple\nURL, this means, get the checked out revision if any, otherwise look for a\nrevision that has a matchin label. It's hard to imagine anything simpler.\n</jra>\n\nGeoff and I started talking about the Revision-Id header yesterday.  I\nthink\nit is reasonable for a client to request version X of /foo/bar.htm.  It\nseems a cumbersome requirement to have to set the revision of /foo/bar.htm\nin the default workspace to be X and get /foo/bar.htm.  As well, this won't\nscale at all.  Imagine one person trying to get version X and one trying to\nget version Y.  We clearly need more discussion on this, but I don't yet\nsee\nhow we can eliminate a header that specifies a revision.  I do believe that\nwe could condense several headers into one...\n\n<jra>\nI also belive that users want to access specific revisions given the label.\nIf they can assign a label, they should be able to access the resource that\nthey assigned the label to. Recall that this capability is in the model. In\nthe new version I moved the method to Repository.getResource(url : String,\nlabel : String = null) : Resource. There's also Repository.getResource(url\n: String, context Workspace) : Resource to access a resource in the context\nof a workspace. One reason you would want to do this is if you want to look\nat an old version, or compare two revisions, and don't want to change your\nworkspace.\n\nMy issue isn't that I didn't want access by labels, only that access when\nlabels aren't specified should use Workspaces to resolve the URL.\n</jra>\n\nI, personally, think that RSR are interesting but probably too complicated\nfor level 1 servers.  We could say that the SETDEFAULT method is a\n\"utility\"\nmethod that modifies the workspace to use the specified revision of the\nspecified resource.  This allows us to still describe level 1 functionality\nin the context of level 2 workspaces.  And for level 2, it provides a handy\nservice for augmenting an RSR without having to pull it, modify it, and put\nit.\n\n<jra>\nAgain, I don't think revision selection rules are complicate at all,\nespecially for level 1 which doesn't have activities, merging, or\nconfigurations. The complexity results from introducing multiple revisions.\nLeaving workspaces out of level 1 will just move the complexity to the\nclient or user who have to remember lots of labels on a resource by\nresource basis. This makes the server simpler, but not WebDAV.\n\nI stress again, what would anyone want to do with versioning level 1 that\nworkspaces wouldn't support? What would workspaces include that would be\nconsidered too much for level 1? We need specific scenarios that address\nthese issues. As you know, I am also keen to keep things simple. Its just I\nwant the simplicity for the users and clients, not necessarily just for the\nserver.\n</jra>\n\nThoughts?\n\nChris\n\n-----Original Message-----\nFrom: jamsden@us.ibm.com [mailto:jamsden@us.ibm.com]\nSent: Tuesday, February 16, 1999 12:56 PM\nTo: Chris Kaler\nSubject: RE: Version issues\n\n\n\n\nBut if we keep the Revision-Id header and a SETDEFAULT method, this will\nconflict with level using a default workspace. I suggest we effectively use\ndefault workspaces for level 1. This doesn't mean servers have to implement\nthem, only do something that makes them look like they work. Clients should\nbe able to use level 1 services without being aware of workspaces. If\nactivities and configurations are not in level 1, then the workspace only\nhas to consider revision selection rules that include checkedout, latest,\nand revision labels. This should be pretty simple.\n\n\n\n\n\n\nChris Kaler <ckaler@microsoft.com> on 02/16/99 03:21:30 PM\n\nTo:   Jim Amsden/Raleigh/IBM, ietf-dav-versioning@w3.org\ncc:\nSubject:  RE: Version issues\n\n\n\n\n\n[CK] Comments below...\n\nA few issues came up at our last versioning working group meeting:\n\n1. DAV versioning level 1 will still need to be a way of resolving access\nto versioned resources given just a URL (and not a label). If workspaces\naren't supported, level 1 servers will have to provide some other way to\nresolve URLs to specific revisions, perhaps a default revision for each\nversioned resource. For level 2 servers that do support workspaces, this\nwould result in two, potentially conflicting ways of performing URL\nmapping. This is a strong argument for including workspaces in level 1.\nWhat would anyone want to do with versioning level 1 that workspaces\nwouldn't support? What would workspaces include that would be considered\ntoo much for level 1? If there are no compelling answers to these\nquestions, we should include workspaces in level 1, including the default\nworkspace.\n\n[CK] I suggest we keep the Revision-Id header and the SETDEFAULT method.\n\n2. Deleting a resource must explicitly state that the resource is removed\nfrom its parent collection; that is, the collection with which the resource\nis an internal member. Versioning complicates delete semantics. There are\nthree things we might want to delete: an unversioned or working resource, a\nrevision (and all its descendents?) of a versioned resource, a versioned\nresource and all its revision history. This must be done in the context of\nversioned and unversioned collections that contain the resource, or\nversioned resource as an internal member. The preferred way to do this\nwould be to have add and remove methods on collections to create and delete\nresources as its the collection that controls the namespace. Unfortunately,\nDAV doesn't have those semantics, so we will have to find a work-around for\nversioning.\n\n[CK] I expect deleting a working resource to be the same as UNCHECKOUT.\n[CK] Deleting a versioned resource is up to the store.  Some stores might\n[CK] just delete it.  Some might create an \"delete\" version.  I don't think\n[CK] we want to push a specific model on people.  Especially since the\n[CK] DELETE method is about a resource and in no way describes the\n[CK] underlying repository actions.\n\nActually, the current WebDAV spec is a little confusing about collections\nand their members. The current spec indicates collections contain URLs, not\nresources. But, there is the notion of internal members and referential\nmembers, and deleting a collection deletes all its internal members. So the\ncollection behaves like it contains resources, not URLs. This issue will\nlikely get more confusing when we add versioned resources, versioned\ncollections, and multiple revisions.\n\n[CK]Your right -- some clarification here would be could.\n\n3. It is not possible to automatically create workspaces or activities for\neither non-versioning clients, or versioning clients that don't specify\nthem. Default workspaces and/or activities must be used. Creating a new\nworkspace or activity on each request could cause resources that were\nmanipulated in the previous request to disappear.\n\n[CK] If we say this is what \"logically\" happens on a Level 1 server then\n[CK] OK.  But if the server must in fact do this, then I think the cost\n[CK] is too high since Level 1 clients don't care about this information.\n     \n   \n\n", "id": "lists-005-10690833"}, {"subject": "Working drafts repository", "content": "FYI, in order to improve the transparency of our process, the versioning\ndesign team has created a repository for interim working drafts of its\ndocuments.  This repository is located at:\n\nhttp://dav.ics.uci.edu/vdt/\n\nSpecifically, the interim versioning goals is located at:\n\nhttp://dav.ics.uci.edu/vdt/version-goals.doc\n\nThe interim versioning model is located at:\n\nhttp://dav.ics.uci.edu/vdt/versioning.doc\n\nYou can look at it with HTTP, and you can also can do read-only DAV\noperations as well (like create a Web folder).\n\nDocuments in this directory have a chance of not being internally\nconsistent, not being complete, and having many open issues in them.  They\nare subject to rapid change. Some items in the documents may not represent\nthe consensus viewpoint of the design team.\n\nNote that this repository is not intended to replace regular submission of\ndocuments as Internet-Drafts -- this is a supplement, not a replacement.\n\nIf you have time to look at them and submit comments to the list, please do\nso.  We're trying hard to trade off the need to have a small group of people\nwho engage in a high-bandwidth discussion of the issues to develop a good\ndesign, versus the desire to involve a broad audience, and gather feedback\nfrom people who are interested, but who can't spare the time to be deeply\ninvolved.\n\n- Jim\n     \n   \n\n", "id": "lists-005-10701353"}, {"subject": "Re: Version issues", "content": "It isn't that workspaces provide unneeded functionality for Level 1.\nIt's just an abstraction that a) isn't in simple versioning models now,\nso would require learning and understanding, and b) isn't necessary.\n\nThe way I envision it for a Level 1 implementation is this:\n\n1. If I request a resource and specify nothing other than \"get me this\nresource\" the default is to give me the latest.  Without branching and\nother Level 2 features, this is trivial.  With Level 2 implementations,\nthis is interpreted as the latest on the main line.\n\n2. If I want something other than the latest, I include a Revision Id\nor a Label.  This works fine for both levels, without any complexity\nwhatsoever.\n\nAm I just not getting it?\n\n>>> <jamsden@us.ibm.com> 02/17/99 11:20AM >>>\n\n\nComments below in <jra> tags.\n\n\n\n\n\nChris Kaler <ckaler@microsoft.com> on 02/17/99 12:13:42 PM\n\nTo:   Jim Amsden/Raleigh/IBM\ncc:\nSubject:  RE: Version issues\n\n\n\n\nI don't think level 1 servers want to deal with revision selection\nrules.\nI\nsuspect they could be complicated.  As well, we need to understand the\nsemantics of parallel checkouts in the \"default workspace\".  The\ncurrent\ndefinition of a workspaces prohibits this and I think it is an\nimportant\nrequirement for level 1.\n\n<jra>\nLevel 1 revision selection rules don't need to be complicated at all.\nThere\nare no activities or configurations, so the revision selection rule\nhas\ncheckedout and 0 or more labels. When a resource is accessed with a\nsimple\nURL, this means, get the checked out revision if any, otherwise look\nfor a\nrevision that has a matchin label. It's hard to imagine anything\nsimpler.\n</jra>\n\nGeoff and I started talking about the Revision-Id header yesterday.  I\nthink\nit is reasonable for a client to request version X of /foo/bar.htm.\nIt\nseems a cumbersome requirement to have to set the revision of\n/foo/bar.htm\nin the default workspace to be X and get /foo/bar.htm.  As well, this\nwon't\nscale at all.  Imagine one person trying to get version X and one\ntrying to\nget version Y.  We clearly need more discussion on this, but I don't\nyet\nsee\nhow we can eliminate a header that specifies a revision.  I do believe\nthat\nwe could condense several headers into one...\n\n<jra>\nI also belive that users want to access specific revisions given the\nlabel.\nIf they can assign a label, they should be able to access the resource\nthat\nthey assigned the label to. Recall that this capability is in the\nmodel. In\nthe new version I moved the method to Repository.getResource(url :\nString,\nlabel : String = null) : Resource. There's also\nRepository.getResource(url\n: String, context Workspace) : Resource to access a resource in the\ncontext\nof a workspace. One reason you would want to do this is if you want to\nlook\nat an old version, or compare two revisions, and don't want to change\nyour\nworkspace.\n\nMy issue isn't that I didn't want access by labels, only that access\nwhen\nlabels aren't specified should use Workspaces to resolve the URL.\n</jra>\n\nI, personally, think that RSR are interesting but probably too\ncomplicated\nfor level 1 servers.  We could say that the SETDEFAULT method is a\n\"utility\"\nmethod that modifies the workspace to use the specified revision of\nthe\nspecified resource.  This allows us to still describe level 1\nfunctionality\nin the context of level 2 workspaces.  And for level 2, it provides a\nhandy\nservice for augmenting an RSR without having to pull it, modify it, and\nput\nit.\n\n<jra>\nAgain, I don't think revision selection rules are complicate at all,\nespecially for level 1 which doesn't have activities, merging, or\nconfigurations. The complexity results from introducing multiple\nrevisions.\nLeaving workspaces out of level 1 will just move the complexity to the\nclient or user who have to remember lots of labels on a resource by\nresource basis. This makes the server simpler, but not WebDAV.\n\nI stress again, what would anyone want to do with versioning level 1\nthat\nworkspaces wouldn't support? What would workspaces include that would\nbe\nconsidered too much for level 1? We need specific scenarios that\naddress\nthese issues. As you know, I am also keen to keep things simple. Its\njust I\nwant the simplicity for the users and clients, not necessarily just for\nthe\nserver.\n</jra>\n\nThoughts?\n\nChris\n\n-----Original Message-----\nFrom: jamsden@us.ibm.com [mailto:jamsden@us.ibm.com]\nSent: Tuesday, February 16, 1999 12:56 PM\nTo: Chris Kaler\nSubject: RE: Version issues\n\n\n\n\nBut if we keep the Revision-Id header and a SETDEFAULT method, this\nwill\nconflict with level using a default workspace. I suggest we effectively\nuse\ndefault workspaces for level 1. This doesn't mean servers have to\nimplement\nthem, only do something that makes them look like they work. Clients\nshould\nbe able to use level 1 services without being aware of workspaces. If\nactivities and configurations are not in level 1, then the workspace\nonly\nhas to consider revision selection rules that include checkedout,\nlatest,\nand revision labels. This should be pretty simple.\n\n\n\n\n\n\nChris Kaler <ckaler@microsoft.com> on 02/16/99 03:21:30 PM\n\nTo:   Jim Amsden/Raleigh/IBM, ietf-dav-versioning@w3.org\ncc:\nSubject:  RE: Version issues\n\n\n\n\n\n[CK] Comments below...\n\nA few issues came up at our last versioning working group meeting:\n\n1. DAV versioning level 1 will still need to be a way of resolving\naccess\nto versioned resources given just a URL (and not a label). If\nworkspaces\naren't supported, level 1 servers will have to provide some other way\nto\nresolve URLs to specific revisions, perhaps a default revision for\neach\nversioned resource. For level 2 servers that do support workspaces,\nthis\nwould result in two, potentially conflicting ways of performing URL\nmapping. This is a strong argument for including workspaces in level\n1.\nWhat would anyone want to do with versioning level 1 that workspaces\nwouldn't support? What would workspaces include that would be\nconsidered\ntoo much for level 1? If there are no compelling answers to these\nquestions, we should include workspaces in level 1, including the\ndefault\nworkspace.\n\n[CK] I suggest we keep the Revision-Id header and the SETDEFAULT\nmethod.\n\n2. Deleting a resource must explicitly state that the resource is\nremoved\nfrom its parent collection; that is, the collection with which the\nresource\nis an internal member. Versioning complicates delete semantics. There\nare\nthree things we might want to delete: an unversioned or working\nresource, a\nrevision (and all its descendents?) of a versioned resource, a\nversioned\nresource and all its revision history. This must be done in the context\nof\nversioned and unversioned collections that contain the resource, or\nversioned resource as an internal member. The preferred way to do this\nwould be to have add and remove methods on collections to create and\ndelete\nresources as its the collection that controls the namespace.\nUnfortunately,\nDAV doesn't have those semantics, so we will have to find a work-around\nfor\nversioning.\n\n[CK] I expect deleting a working resource to be the same as\nUNCHECKOUT.\n[CK] Deleting a versioned resource is up to the store.  Some stores\nmight\n[CK] just delete it.  Some might create an \"delete\" version.  I don't\nthink\n[CK] we want to push a specific model on people.  Especially since the\n[CK] DELETE method is about a resource and in no way describes the\n[CK] underlying repository actions.\n\nActually, the current WebDAV spec is a little confusing about\ncollections\nand their members. The current spec indicates collections contain URLs,\nnot\nresources. But, there is the notion of internal members and\nreferential\nmembers, and deleting a collection deletes all its internal members. So\nthe\ncollection behaves like it contains resources, not URLs. This issue\nwill\nlikely get more confusing when we add versioned resources, versioned\ncollections, and multiple revisions.\n\n[CK]Your right -- some clarification here would be could.\n\n3. It is not possible to automatically create workspaces or activities\nfor\neither non-versioning clients, or versioning clients that don't\nspecify\nthem. Default workspaces and/or activities must be used. Creating a\nnew\nworkspace or activity on each request could cause resources that were\nmanipulated in the previous request to disappear.\n\n[CK] If we say this is what \"logically\" happens on a Level 1 server\nthen\n[CK] OK.  But if the server must in fact do this, then I think the\ncost\n[CK] is too high since Level 1 clients don't care about this\ninformation.\n     \n   \n\n", "id": "lists-005-10705165"}, {"subject": "Re: Version issues", "content": "Bruce,\nI'm sorry to hear you weren't feeling well, but welcome back!\n\nNo, you're getting it just fine. For your item 1 below, the default\nworkspace does just what you want. You never even need to know its there.\nRecall the default workspace has a revision selection rule containing\ncheckedout and latest.\n\nFor item 2, the model currently allows access through a specific revision\nname which temporarily overrides the workspace, so this can be done too.\n\nIf this was all you wanted, then probably workspaces for level 1 would be\noverkill. But, lets look at some other simple scenarios and see what would\nhappen.\n\nSay a development organization finishes work on  a milestone and wants some\nway to refer to the proper revisions. When work continues, these revisions\nwon't necessarily be the latest revision because the resources may have\nchanged in some appropriate way. Configurations solve this in level 2, but\na common scenario for level 1 might be to come up with a label for the\nrelease and use this label on every revision that participates.\n\nSo now every time you want to get the R1 revision for any of these\nresources, you have to remember the revision name and provide it on each\naccess. That's not so bad though, and is the same thing as remembering a\nworkspace that has checkedout, R1, and latest in its revision selection\nrule. So far this is a wash.\n\nNow say there's an R2 of the project as a whole. Some of the resources\nchanged and some of them didn't. You could label all the participant\nrevisions with R2 and that would work. But, after a while specific\nrevisions might have a lot of labels on them making the revision history of\nmany resource hard to manage. In addition users have to remember something\nnew, use label R2 instead of R1. An alternative is to just label the ones\nthat changed with R2 and put checkedout, R2, R1, and latest in the revision\nselection rule. Then you'll get the right versions without remembering R1,\nR2, ..., you only have to remember the same workspace you were using before\nthe revisions changed. All users get updated just by updating their\nworkspace. The default workspace revision selection rule can be changed to\nso that clients that can't or don't specify a revision will get the right\nrevisions too. You could do this with default labels, but it would take a\nlot more work to update a property on every resource resetting its default\nwhen you can just add a single entry to a revision selection rule.\n\nWorkspaces just provide flexibility and ease of use for level 1, not any\nnew functionality. I think they make the clients simpler and simplify the\nuser's interaction with the server. So they are useful for level 1 even\nthough there aren't any activities or configurations.\n\n\n\n\n\n\n\"Bruce Cragun\" <BCragun.ORM2-1.OREM2@GW.Novell.com> on 02/17/99 03:10:40 PM\n\nTo:   ckaler@microsoft.com, Jim Amsden/Raleigh/IBM\ncc:   ietf-dav-versioning@w3.org\nSubject:  RE: Version issues\n\n\n\n\nIt isn't that workspaces provide unneeded functionality for Level 1.\nIt's just an abstraction that a) isn't in simple versioning models now,\nso would require learning and understanding, and b) isn't necessary.\n\nThe way I envision it for a Level 1 implementation is this:\n\n1. If I request a resource and specify nothing other than \"get me this\nresource\" the default is to give me the latest.  Without branching and\nother Level 2 features, this is trivial.  With Level 2 implementations,\nthis is interpreted as the latest on the main line.\n\n2. If I want something other than the latest, I include a Revision Id\nor a Label.  This works fine for both levels, without any complexity\nwhatsoever.\n\nAm I just not getting it?\n\n>>> <jamsden@us.ibm.com> 02/17/99 11:20AM >>>\n\n\nComments below in <jra> tags.\n\n\n\n\n\nChris Kaler <ckaler@microsoft.com> on 02/17/99 12:13:42 PM\n\nTo:   Jim Amsden/Raleigh/IBM\ncc:\nSubject:  RE: Version issues\n\n\n\n\nI don't think level 1 servers want to deal with revision selection\nrules.\nI\nsuspect they could be complicated.  As well, we need to understand the\nsemantics of parallel checkouts in the \"default workspace\".  The\ncurrent\ndefinition of a workspaces prohibits this and I think it is an\nimportant\nrequirement for level 1.\n\n<jra>\nLevel 1 revision selection rules don't need to be complicated at all.\nThere\nare no activities or configurations, so the revision selection rule\nhas\ncheckedout and 0 or more labels. When a resource is accessed with a\nsimple\nURL, this means, get the checked out revision if any, otherwise look\nfor a\nrevision that has a matchin label. It's hard to imagine anything\nsimpler.\n</jra>\n\nGeoff and I started talking about the Revision-Id header yesterday.  I\nthink\nit is reasonable for a client to request version X of /foo/bar.htm.\nIt\nseems a cumbersome requirement to have to set the revision of\n/foo/bar.htm\nin the default workspace to be X and get /foo/bar.htm.  As well, this\nwon't\nscale at all.  Imagine one person trying to get version X and one\ntrying to\nget version Y.  We clearly need more discussion on this, but I don't\nyet\nsee\nhow we can eliminate a header that specifies a revision.  I do believe\nthat\nwe could condense several headers into one...\n\n<jra>\nI also belive that users want to access specific revisions given the\nlabel.\nIf they can assign a label, they should be able to access the resource\nthat\nthey assigned the label to. Recall that this capability is in the\nmodel. In\nthe new version I moved the method to Repository.getResource(url :\nString,\nlabel : String = null) : Resource. There's also\nRepository.getResource(url\n: String, context Workspace) : Resource to access a resource in the\ncontext\nof a workspace. One reason you would want to do this is if you want to\nlook\nat an old version, or compare two revisions, and don't want to change\nyour\nworkspace.\n\nMy issue isn't that I didn't want access by labels, only that access\nwhen\nlabels aren't specified should use Workspaces to resolve the URL.\n</jra>\n\nI, personally, think that RSR are interesting but probably too\ncomplicated\nfor level 1 servers.  We could say that the SETDEFAULT method is a\n\"utility\"\nmethod that modifies the workspace to use the specified revision of\nthe\nspecified resource.  This allows us to still describe level 1\nfunctionality\nin the context of level 2 workspaces.  And for level 2, it provides a\nhandy\nservice for augmenting an RSR without having to pull it, modify it, and\nput\nit.\n\n<jra>\nAgain, I don't think revision selection rules are complicate at all,\nespecially for level 1 which doesn't have activities, merging, or\nconfigurations. The complexity results from introducing multiple\nrevisions.\nLeaving workspaces out of level 1 will just move the complexity to the\nclient or user who have to remember lots of labels on a resource by\nresource basis. This makes the server simpler, but not WebDAV.\n\nI stress again, what would anyone want to do with versioning level 1\nthat\nworkspaces wouldn't support? What would workspaces include that would\nbe\nconsidered too much for level 1? We need specific scenarios that\naddress\nthese issues. As you know, I am also keen to keep things simple. Its\njust I\nwant the simplicity for the users and clients, not necessarily just for\nthe\nserver.\n</jra>\n\nThoughts?\n\nChris\n\n-----Original Message-----\nFrom: jamsden@us.ibm.com [mailto:jamsden@us.ibm.com]\nSent: Tuesday, February 16, 1999 12:56 PM\nTo: Chris Kaler\nSubject: RE: Version issues\n\n\n\n\nBut if we keep the Revision-Id header and a SETDEFAULT method, this\nwill\nconflict with level using a default workspace. I suggest we effectively\nuse\ndefault workspaces for level 1. This doesn't mean servers have to\nimplement\nthem, only do something that makes them look like they work. Clients\nshould\nbe able to use level 1 services without being aware of workspaces. If\nactivities and configurations are not in level 1, then the workspace\nonly\nhas to consider revision selection rules that include checkedout,\nlatest,\nand revision labels. This should be pretty simple.\n\n\n\n\n\n\nChris Kaler <ckaler@microsoft.com> on 02/16/99 03:21:30 PM\n\nTo:   Jim Amsden/Raleigh/IBM, ietf-dav-versioning@w3.org\ncc:\nSubject:  RE: Version issues\n\n\n\n\n\n[CK] Comments below...\n\nA few issues came up at our last versioning working group meeting:\n\n1. DAV versioning level 1 will still need to be a way of resolving\naccess\nto versioned resources given just a URL (and not a label). If\nworkspaces\naren't supported, level 1 servers will have to provide some other way\nto\nresolve URLs to specific revisions, perhaps a default revision for\neach\nversioned resource. For level 2 servers that do support workspaces,\nthis\nwould result in two, potentially conflicting ways of performing URL\nmapping. This is a strong argument for including workspaces in level\n1.\nWhat would anyone want to do with versioning level 1 that workspaces\nwouldn't support? What would workspaces include that would be\nconsidered\ntoo much for level 1? If there are no compelling answers to these\nquestions, we should include workspaces in level 1, including the\ndefault\nworkspace.\n\n[CK] I suggest we keep the Revision-Id header and the SETDEFAULT\nmethod.\n\n2. Deleting a resource must explicitly state that the resource is\nremoved\nfrom its parent collection; that is, the collection with which the\nresource\nis an internal member. Versioning complicates delete semantics. There\nare\nthree things we might want to delete: an unversioned or working\nresource, a\nrevision (and all its descendents?) of a versioned resource, a\nversioned\nresource and all its revision history. This must be done in the context\nof\nversioned and unversioned collections that contain the resource, or\nversioned resource as an internal member. The preferred way to do this\nwould be to have add and remove methods on collections to create and\ndelete\nresources as its the collection that controls the namespace.\nUnfortunately,\nDAV doesn't have those semantics, so we will have to find a work-around\nfor\nversioning.\n\n[CK] I expect deleting a working resource to be the same as\nUNCHECKOUT.\n[CK] Deleting a versioned resource is up to the store.  Some stores\nmight\n[CK] just delete it.  Some might create an \"delete\" version.  I don't\nthink\n[CK] we want to push a specific model on people.  Especially since the\n[CK] DELETE method is about a resource and in no way describes the\n[CK] underlying repository actions.\n\nActually, the current WebDAV spec is a little confusing about\ncollections\nand their members. The current spec indicates collections contain URLs,\nnot\nresources. But, there is the notion of internal members and\nreferential\nmembers, and deleting a collection deletes all its internal members. So\nthe\ncollection behaves like it contains resources, not URLs. This issue\nwill\nlikely get more confusing when we add versioned resources, versioned\ncollections, and multiple revisions.\n\n[CK]Your right -- some clarification here would be could.\n\n3. It is not possible to automatically create workspaces or activities\nfor\neither non-versioning clients, or versioning clients that don't\nspecify\nthem. Default workspaces and/or activities must be used. Creating a\nnew\nworkspace or activity on each request could cause resources that were\nmanipulated in the previous request to disappear.\n\n[CK] If we say this is what \"logically\" happens on a Level 1 server\nthen\n[CK] OK.  But if the server must in fact do this, then I think the\ncost\n[CK] is too high since Level 1 clients don't care about this\ninformation.\n     \n   \n\n", "id": "lists-005-10716531"}, {"subject": "Re: Version issues", "content": "This is a great discussion!\n\nI used the word \"complicated\" and that probably isn't the right word.  What\nI meant is that I have a store with 1001 files, 1000 of which have been set\nto specific versions and I want to set the last one to a specific revision,\nI'd rather issue a SETDEFAULT command for that specific URL than pull the\nfull RSR which includes all 1000 rules, add one, and push the 1001 rules up\nto the server.\n\nChris\n\n-----Original Message-----\nFrom: jamsden@us.ibm.com [mailto:jamsden@us.ibm.com]\nSent: Wednesday, February 17, 1999 12:45 PM\nTo: Bruce Cragun\nCc: ietf-dav-versioning@w3.org\nSubject: RE: Version issues\n\n\n\n\nBruce,\nI'm sorry to hear you weren't feeling well, but welcome back!\n\nNo, you're getting it just fine. For your item 1 below, the default\nworkspace does just what you want. You never even need to know its there.\nRecall the default workspace has a revision selection rule containing\ncheckedout and latest.\n\nFor item 2, the model currently allows access through a specific revision\nname which temporarily overrides the workspace, so this can be done too.\n\nIf this was all you wanted, then probably workspaces for level 1 would be\noverkill. But, lets look at some other simple scenarios and see what would\nhappen.\n\nSay a development organization finishes work on  a milestone and wants some\nway to refer to the proper revisions. When work continues, these revisions\nwon't necessarily be the latest revision because the resources may have\nchanged in some appropriate way. Configurations solve this in level 2, but\na common scenario for level 1 might be to come up with a label for the\nrelease and use this label on every revision that participates.\n\nSo now every time you want to get the R1 revision for any of these\nresources, you have to remember the revision name and provide it on each\naccess. That's not so bad though, and is the same thing as remembering a\nworkspace that has checkedout, R1, and latest in its revision selection\nrule. So far this is a wash.\n\nNow say there's an R2 of the project as a whole. Some of the resources\nchanged and some of them didn't. You could label all the participant\nrevisions with R2 and that would work. But, after a while specific\nrevisions might have a lot of labels on them making the revision history of\nmany resource hard to manage. In addition users have to remember something\nnew, use label R2 instead of R1. An alternative is to just label the ones\nthat changed with R2 and put checkedout, R2, R1, and latest in the revision\nselection rule. Then you'll get the right versions without remembering R1,\nR2, ..., you only have to remember the same workspace you were using before\nthe revisions changed. All users get updated just by updating their\nworkspace. The default workspace revision selection rule can be changed to\nso that clients that can't or don't specify a revision will get the right\nrevisions too. You could do this with default labels, but it would take a\nlot more work to update a property on every resource resetting its default\nwhen you can just add a single entry to a revision selection rule.\n\nWorkspaces just provide flexibility and ease of use for level 1, not any\nnew functionality. I think they make the clients simpler and simplify the\nuser's interaction with the server. So they are useful for level 1 even\nthough there aren't any activities or configurations.\n\n\n\n\n\n\n\"Bruce Cragun\" <BCragun.ORM2-1.OREM2@GW.Novell.com> on 02/17/99 03:10:40 PM\n\nTo:   ckaler@microsoft.com, Jim Amsden/Raleigh/IBM\ncc:   ietf-dav-versioning@w3.org\nSubject:  RE: Version issues\n\n\n\n\nIt isn't that workspaces provide unneeded functionality for Level 1.\nIt's just an abstraction that a) isn't in simple versioning models now,\nso would require learning and understanding, and b) isn't necessary.\n\nThe way I envision it for a Level 1 implementation is this:\n\n1. If I request a resource and specify nothing other than \"get me this\nresource\" the default is to give me the latest.  Without branching and\nother Level 2 features, this is trivial.  With Level 2 implementations,\nthis is interpreted as the latest on the main line.\n\n2. If I want something other than the latest, I include a Revision Id\nor a Label.  This works fine for both levels, without any complexity\nwhatsoever.\n\nAm I just not getting it?\n\n>>> <jamsden@us.ibm.com> 02/17/99 11:20AM >>>\n\n\nComments below in <jra> tags.\n\n\n\n\n\nChris Kaler <ckaler@microsoft.com> on 02/17/99 12:13:42 PM\n\nTo:   Jim Amsden/Raleigh/IBM\ncc:\nSubject:  RE: Version issues\n\n\n\n\nI don't think level 1 servers want to deal with revision selection\nrules.\nI\nsuspect they could be complicated.  As well, we need to understand the\nsemantics of parallel checkouts in the \"default workspace\".  The\ncurrent\ndefinition of a workspaces prohibits this and I think it is an\nimportant\nrequirement for level 1.\n\n<jra>\nLevel 1 revision selection rules don't need to be complicated at all.\nThere\nare no activities or configurations, so the revision selection rule\nhas\ncheckedout and 0 or more labels. When a resource is accessed with a\nsimple\nURL, this means, get the checked out revision if any, otherwise look\nfor a\nrevision that has a matchin label. It's hard to imagine anything\nsimpler.\n</jra>\n\nGeoff and I started talking about the Revision-Id header yesterday.  I\nthink\nit is reasonable for a client to request version X of /foo/bar.htm.\nIt\nseems a cumbersome requirement to have to set the revision of\n/foo/bar.htm\nin the default workspace to be X and get /foo/bar.htm.  As well, this\nwon't\nscale at all.  Imagine one person trying to get version X and one\ntrying to\nget version Y.  We clearly need more discussion on this, but I don't\nyet\nsee\nhow we can eliminate a header that specifies a revision.  I do believe\nthat\nwe could condense several headers into one...\n\n<jra>\nI also belive that users want to access specific revisions given the\nlabel.\nIf they can assign a label, they should be able to access the resource\nthat\nthey assigned the label to. Recall that this capability is in the\nmodel. In\nthe new version I moved the method to Repository.getResource(url :\nString,\nlabel : String = null) : Resource. There's also\nRepository.getResource(url\n: String, context Workspace) : Resource to access a resource in the\ncontext\nof a workspace. One reason you would want to do this is if you want to\nlook\nat an old version, or compare two revisions, and don't want to change\nyour\nworkspace.\n\nMy issue isn't that I didn't want access by labels, only that access\nwhen\nlabels aren't specified should use Workspaces to resolve the URL.\n</jra>\n\nI, personally, think that RSR are interesting but probably too\ncomplicated\nfor level 1 servers.  We could say that the SETDEFAULT method is a\n\"utility\"\nmethod that modifies the workspace to use the specified revision of\nthe\nspecified resource.  This allows us to still describe level 1\nfunctionality\nin the context of level 2 workspaces.  And for level 2, it provides a\nhandy\nservice for augmenting an RSR without having to pull it, modify it, and\nput\nit.\n\n<jra>\nAgain, I don't think revision selection rules are complicate at all,\nespecially for level 1 which doesn't have activities, merging, or\nconfigurations. The complexity results from introducing multiple\nrevisions.\nLeaving workspaces out of level 1 will just move the complexity to the\nclient or user who have to remember lots of labels on a resource by\nresource basis. This makes the server simpler, but not WebDAV.\n\nI stress again, what would anyone want to do with versioning level 1\nthat\nworkspaces wouldn't support? What would workspaces include that would\nbe\nconsidered too much for level 1? We need specific scenarios that\naddress\nthese issues. As you know, I am also keen to keep things simple. Its\njust I\nwant the simplicity for the users and clients, not necessarily just for\nthe\nserver.\n</jra>\n\nThoughts?\n\nChris\n\n-----Original Message-----\nFrom: jamsden@us.ibm.com [mailto:jamsden@us.ibm.com]\nSent: Tuesday, February 16, 1999 12:56 PM\nTo: Chris Kaler\nSubject: RE: Version issues\n\n\n\n\nBut if we keep the Revision-Id header and a SETDEFAULT method, this\nwill\nconflict with level using a default workspace. I suggest we effectively\nuse\ndefault workspaces for level 1. This doesn't mean servers have to\nimplement\nthem, only do something that makes them look like they work. Clients\nshould\nbe able to use level 1 services without being aware of workspaces. If\nactivities and configurations are not in level 1, then the workspace\nonly\nhas to consider revision selection rules that include checkedout,\nlatest,\nand revision labels. This should be pretty simple.\n\n\n\n\n\n\nChris Kaler <ckaler@microsoft.com> on 02/16/99 03:21:30 PM\n\nTo:   Jim Amsden/Raleigh/IBM, ietf-dav-versioning@w3.org\ncc:\nSubject:  RE: Version issues\n\n\n\n\n\n[CK] Comments below...\n\nA few issues came up at our last versioning working group meeting:\n\n1. DAV versioning level 1 will still need to be a way of resolving\naccess\nto versioned resources given just a URL (and not a label). If\nworkspaces\naren't supported, level 1 servers will have to provide some other way\nto\nresolve URLs to specific revisions, perhaps a default revision for\neach\nversioned resource. For level 2 servers that do support workspaces,\nthis\nwould result in two, potentially conflicting ways of performing URL\nmapping. This is a strong argument for including workspaces in level\n1.\nWhat would anyone want to do with versioning level 1 that workspaces\nwouldn't support? What would workspaces include that would be\nconsidered\ntoo much for level 1? If there are no compelling answers to these\nquestions, we should include workspaces in level 1, including the\ndefault\nworkspace.\n\n[CK] I suggest we keep the Revision-Id header and the SETDEFAULT\nmethod.\n\n2. Deleting a resource must explicitly state that the resource is\nremoved\nfrom its parent collection; that is, the collection with which the\nresource\nis an internal member. Versioning complicates delete semantics. There\nare\nthree things we might want to delete: an unversioned or working\nresource, a\nrevision (and all its descendents?) of a versioned resource, a\nversioned\nresource and all its revision history. This must be done in the context\nof\nversioned and unversioned collections that contain the resource, or\nversioned resource as an internal member. The preferred way to do this\nwould be to have add and remove methods on collections to create and\ndelete\nresources as its the collection that controls the namespace.\nUnfortunately,\nDAV doesn't have those semantics, so we will have to find a work-around\nfor\nversioning.\n\n[CK] I expect deleting a working resource to be the same as\nUNCHECKOUT.\n[CK] Deleting a versioned resource is up to the store.  Some stores\nmight\n[CK] just delete it.  Some might create an \"delete\" version.  I don't\nthink\n[CK] we want to push a specific model on people.  Especially since the\n[CK] DELETE method is about a resource and in no way describes the\n[CK] underlying repository actions.\n\nActually, the current WebDAV spec is a little confusing about\ncollections\nand their members. The current spec indicates collections contain URLs,\nnot\nresources. But, there is the notion of internal members and\nreferential\nmembers, and deleting a collection deletes all its internal members. So\nthe\ncollection behaves like it contains resources, not URLs. This issue\nwill\nlikely get more confusing when we add versioned resources, versioned\ncollections, and multiple revisions.\n\n[CK]Your right -- some clarification here would be could.\n\n3. It is not possible to automatically create workspaces or activities\nfor\neither non-versioning clients, or versioning clients that don't\nspecify\nthem. Default workspaces and/or activities must be used. Creating a\nnew\nworkspace or activity on each request could cause resources that were\nmanipulated in the previous request to disappear.\n\n[CK] If we say this is what \"logically\" happens on a Level 1 server\nthen\n[CK] OK.  But if the server must in fact do this, then I think the\ncost\n[CK] is too high since Level 1 clients don't care about this\ninformation.\n     \n   \n\n", "id": "lists-005-10730703"}, {"subject": "Re: Branching Scenarios", "content": "Suppose we defined a DAV:branch property that can be assigned to an activity.\nThis is just a way for a client to say what \"branch\" they want products of\nthat activity to go on.  A server can just ignore this property, if it doesn't\nsupport or isn't interested in branches (e.g. a change-set system).\n\nLet's see how this plays out against Brad's scenarios:\n\n   From: Bradley_Sergeant@intersolv.com\n\n        Case 1: Version V1 of a product ZOO has reached its feature complete\n        milestone (FC), which for this project means it has all its intended\n        features, but still has bugs to be fixed.  At this point some\n        developers will continue fixing bugs in version V1, but others will\n        move on to work on the next version (V2).  The V1 code is on the\n        mainline.\n\nSo V1 activities had their DAV:branch property set to \"mainline\".\n\n        Because further changes to V1 are intended to be minimized\n        and the V2 work is a natural evolution of the V1 work, V2 work will\n        continue on the mainline.\n\nSo V2 activities will have their DAV:branch property set to \"mainline\".\n\n        Also, it is important that all bug fixes\n        for V1 also be immediately reflected in the V2 work.  So V1 bug fixes\n        also will be reflected on the mainline.  If a resource needs to be\n        changed for a V1 fix and it has already been fixed modified on the\n        mainline for V2, then the V1 change is made on a branch and also on\n        the mainline.  Otherwise, if no V2 changes have yet been made to the\n        resource the V1 change is only made on the mainline.  Thus the V2\n        version of ZOO is just the tip of the mainline, whereas the V1 version\n        must be obtained from a fixed configuration (via a fixed label, or\n        whatever mechanism is used) and this configuration must be updated\n        with each bug fix to V1.\n\nA simple approach is to just set the DAV:branch of V1 bug fix\nactivities to be \"V1-bug-fix\", and then require that all V1 bug fix\nactivites be merged to the mainline.  Then the RSR for V2 is just\n   LATEST(mainline)\nand the RSR for V1 is just\n   LATEST(V1-bug-fix) else V1-Config\n\nThis produces the effect you want, but isn't *identical* to the branching\nyou describe above.  To produce something identical, you could just add\nanother property, say DAV:secondary-branch.  Then you would set the\nDAV:branch of a V1 bug fix to be \"mainline\" and the DAV:secondary-branch\nto be \"V1-bug-fix\".  Your server would put things on the DAV:branch if it\ncould, and otherwise put it on the DAV:secondary-branch.  In this case,\nthe RSR for V1 is more complicated (to capture the changes you made on the\nmainline that are for V1).  Because of the resulting complication in the\nV1 RSR, I'd recommend the first approach, but that's up to the user/client.\n\n        Case 2: Version V1 of product ZOO has been released and version V2\n        development is well underway.  A key customer has contracted to have a\n        specific enhancement made to V1 specifically for them, the resulting\n        version is referred to as V1-A.  The V1-A enhancement is superseded by\n        different features that will be available with the V2 release, but the\n        customer does not wish to wait for V2 to complete.  All work on V1-A\n        will not be used in V2.  Therefore all V1-A changes are made on\n        branches newly created just for V1-A.\n\nJust set the DAV:branch property of V1-A activities to be the \"V1-A\".\n\n        I don't see how this can be done without some indication being given\n        as to which branching policy is desired for each Activity.\n\nAgreed.\n\n        Such an\n        indication could be in the form of a property on the Activity or an\n        option in the creation of the activity.\n\nWe've got a fine extensibility mechanism in the form of properties ...\nI say, use it.  What else would the \"option on creation\" map to?  You\ncould try to bundle all this into the \"resource-type\" property, but I\nsee no reason to do so.\n\n        Alternatively or in addition,\n        an administrator might specify which branching policies were allowed\n        for a set of resources. The indication of which policy to use could\n        be abstract and general, e.g. Principle vs. Supporting activity.  Or\n        the indication could be an implementation specific property.  A third\n        idea would be to see if a few specific types of activities could be\n        defined to meet known needs and leave the door open for adding new\n        ones later.\n\nI believe there are just two suggestions here: have this additional information\nstored in the resource-type, or store it in new properties.  The latter seems\nfar more flexible, with no disadvantages, so I'd vote for that.\n\n        None of these choices fills me with glee.  I'm probably missing\n        something.  Help me out.\n\nWhat's wrong with a couple of conventional properties, that allow a client\nto store a choice in a standard place accessible by interested clients and\nservers?\n\nCheers,\nGeoff\n     \n   \n\n", "id": "lists-005-10745467"}, {"subject": "Re: Branching Scenarios", "content": "   Author:  jamsden@us.ibm.com at SMTPPOST\n\n   The more I think about it, the more I believe the protocol should not be\n   involved in specifying policies for\n   specific repository implementations or legacy data integration. This seems\n   like something that would be impossible to describe, and impossible to even\n   determine what arbitrary repository managers might want to do. I would\n   suggest this is a server implementation issue, not a protocol issue.\n\nI take an intermediate position on this issue.\n\nI do believe that handling the needs of branch-based systems are\nessential, and that it is important to verify this by mapping these\nneeds into a canonical set of scenarios and properties for use by\nbranch-based clients.\n\nBut I believe it is important that these properties and scenarios\nshould *not* be in the base protocol, but rather should be in a\nseparate document (such as is being done for the proposed structured\ndocument extended properties).  As Jim indicates, there are a huge number\nof special policies and implementations found in each of the various\nCM implementations, and the base protocol would be seriously harmed if\nwe weighed it down with all the detailed scenarios and properties\nthat are relevant to only a certain kind of server implementation.\n\nCheers,\nGeoff\n     \n   \n\n", "id": "lists-005-10752973"}, {"subject": "Re: Branching Scenarios", "content": "Note: I described in a preceding message how DAV:branch and\nDAV:secondary-branch properties could be used to produce the\nexact behavior Brad wants to see.  So, from a protocol perspective,\nI believe there is no issue here.  But I do have some comments\nabout the merge issues Brad has raised.\n\nSo read on only if you care about a \"branching style\" discussion,\nwhich has nothing to do with the protocol (:-).\n\n......\n\n   From: Bradley.Sergeant@merant.com\n\n   Let's say I take your second suggestion in supporting CASE 1 below.\n   V2 users work the mainline and V1 bug fixing is done in a V1 activity.\n   Your assumption appears to be that each activity would create a new\n   branch for the first revision of each resource checked out in the\n   activity, i.e. the branching policy described under TRY1 below.  Fine,\n   let's go with that for now.\n\n   Each V1 change will create a revision off the mainline on a new\n   branch.  Because the CASE 1 policy is that all V1 changes are\n   immediately reflected in V2 (the mainline) each consistent set of V1\n   changes needs to be merged back into the mainline.  This results in\n   lots of short branches merged immedately back to the mainline, usually\n   with no intervening revisions.\n\nIf there have been no changes on the mainline, then the merge is trivial\nand shoulc be automatic for even the most basic merge tools.  If there have\nbeen intervening changes on the mainline, then the human is stuck with a\nreal merge, whether they like it or not.\n\n        Further changes to V1 on a previously\n   V1 modified branch would require a subsequent merge onto the mainline.\n\nAgain, either the change is trivial and automatic if there have been no\nchanges to the mainline since the V1 branch was last merged, or there have\nbeen changes to the mainline, and the human is stuck with a real merge.\n\n   Subsequent merges like this build on previous merges and the user may\n   find himself remerging items, depending on the sophistication of the\n   merge tool and the willingness to trust previous human merge\n   operations.  This is unavoidable in the case where V2 changes have\n   occurred on the same resource.\n\nAgreed.\n\n        It is completely unnessary otherwise,\n   but the forced branch policy of activity V1 requires it.\n\nAs above, I even a simple-minded merge tool could detect that\nthere have been no changes since the last time the branch has been merged\n(just look at the predecessor and merge-predecessor relations),\nand therefore it can just automatically make a copy in this case\nwithout any human intervention.\n\nCheers,\nGeoff\n     \n   \n\n", "id": "lists-005-10756710"}, {"subject": "Re: Branching Scenarios", "content": "   From: Bradley.Sergeant@merant.com\n\n   Now let's look at this without talking of branches.  Can the scenario\n   be described in a pure activity world.  Sure.  Case 1 says that all V1\n   activity changes are intended to be reflected immediately in the V2\n   activity (i.e. the mainline), but no V2 changes are to be seen by V1.\n   This is not imposible to describe.  It's just a characterization of\n   the intention of the activitiy.  Knowing this intention the server may\n   optimize or not.\n\nI think your original scenario phrased this better.  I.e. people working\non V2 want to make sure they get all the bug-fixes from V1.  No need\nto mention activity or branch mechanics in the scenario.  You'd probably\nwant to add \"and don't want to do any more merges than they absolutely\nhave to\", and you've probably captured the full scenario.\n\n   CASE1: TEE off mainline\n   An activity V1 intends all its changes to be reflected immediately in\n   the mainline, but no other mainline changes are to be seen by V1.\n\nI would be against this kind of phrasing of the scenario.  It is\nphrased in terms of CM mechanics, not user needs.\n\n   The CASE 2 scenario below is already covered in the Goals doc.\n\n   I believe there is a third common case we have not discuss so far.\n   I'll breifly outline it:\n\n   CASE 3: AutoMerge\n   Developers wish to work off the mainline, but in separate activities\n   so they are not blocked by others checking out the same resources.\n   However, all checkins are all intended for the mainline.  This may be\n   done by checking in to private activity and immedately merging to the\n   mainline, but subsequent checkouts are desired from the mainline and\n   not from the last checkout(checkin) of in the private activity.  This\n   is because of the desire to pickup the latest changes by others.\n\nHmmm.  This scenario seems a bit strange.  You can keep working on\nsomething as long as you as long as you don't check it in, but as soon as you\ncheck it in, you have to merge it with whatever else has been happening.\nWhat benefit is achieved by forcing people not to check-in until they\nare ready to merge?  (It just means they keep things checked-out longer).\n\n   NOTE: The builtin rule that last checked in revision superceeds the\n   revision selection rule in the workspace when selecting a revision\n   would seem to disallow a direct solution CASE 3 as workspace and\n   activity is currently defined.\n\nThe rule is \"products of the current activity\" take precedence.\nHow does this interfere with what you have in mind for case 3?\n(For a merge, you'd normally switch to a \"do-merge-xxx\" activity).\n\n   These are the only three types of activities I could come up with.\n   CASE 2 is clearly supported by Activities.  I believe the other two\n   cases may require some refinement of the model.  So please include\n   them as scenarios and we can work out the model and protocol to\n   support them as time goes on.  Ok?\n\nI'm happy with the first two (with the branch mechanics removed),\nbut I'd need to hear more about the third before being comfortable\nwith it as a scenario.\n\nCheers,\nGeoff\n     \n   \n\n", "id": "lists-005-10761745"}, {"subject": "Re: Versioning goals doc input", "content": "I agree with each of Brad's points (especially the one of thanking Jim\nfor doing a great job on the goals document!).  One suggestion for\nrewording the descriptive text of Goal 2:\n\nReplace \"Versioning capabilities must not depend on the media type\" with\n\"The versioning protocol should not depend on the media type\".  I believe\nthat this was really what this goal was about, and this is then compatible\nwith a server doing special things for different media types.\n\nA few additional comments:\n\nDefinition 5:  Just use \"initial revision\" for this concept.  I'd like to\nuse the term \"root\" to refer to the \"root collection of a configuration\",\nand there is no need for using \"root revision\" as a synonym for\n\"initial revision\".\n\nDefinition 9: Replace \"derived\" with \"checked-out\".  It doesn't do any good\nto define one term (\"predecessor\") with another undefined term (\"derived\").\nThen a revision can have one predecessor and multiple successors (which\nforms a tree, rather than a DAG).\n\nThen add a new definition -\nMerge-Source: The \"merge-source\"s of a revision are those revisions that\nhave been merged with the predecessor to form this revision.\n\nCheers,\nGeoff\n     \n   \n\n", "id": "lists-005-10767332"}, {"subject": "Some configuration management scenarios", "content": "Here are some scenarios that are intended to capture (and extend) the\n3 scenarios Brad described, but in a \"branch-neutral\" fashion (except\nfor 1.3, which is explicitly a branch-based scenario).\n\nBrad: Please check to see if I've accurately captured the scenarios\nyou had in mind.  In particular, I believe 3.2 is your scenario 1,\n3 is your scenario 2, and 2 is your scenario 3.  (I reordered them\nto make the \"simpler\" scenarios first, which hopefully doesn't just\ncause confusion :-).\n\n\n(1) There is a project, P1, that produces a series of configurations\n(there is an identified workspace, Workspace-P1, that produces\nnew configurations for P1).  There can only be one checkout of a\nversioned-resource at any time, and each developer wants to see the\nsame resources, including working-resources, as every other developer\n(every developer uses Workspace-P1).\n\nThis is the \"chaos with history\" scenario (:-).\n\n(2) There is a project, P1, that produces a series of configurations.\nEach developer on the P1 project wants to work on his activity in\nisolation (in a personal workspace), and will merge the completed\nactivity into the project (into Workspace-P1) when it is ready to be\nseen by the other developers.\n\n(2.1) New activities must be based on the current state of the project\n(the contents of Workspace-P1).\n\n(2.2) New activities must be based on the most recent configuration of\nP1 (the most recent configuration produced by Workspace-P1), rather\nthan the current state of P1.\n\n(2.3) To minimize merge conflicts when merging into Workspace-P1,\na developer merges the latest configuration from Workspace-P1\ninto his personal workspace before merging his activity into Workspace-P1.\n\n(2.4) A branch-based system is used, and all P1 developers are\nrequired to work on the same branch (the DAV:branch property of\nall P1 activities are set to be \"branch-P1\").  This ensures that\nonly a single branch exists for all versioned resources, and\nrequires a \"merge\" before CHECKIN for any resources that have\nbeen checked-out in parallel.\n\n\n(3) There are two projects: P1 and P2 that each produce a series of\nconfigurations (from Workspace-P1 and Workspace-P2 respectively).  The\nP2 project was based on a configuration from the P1 project.  An\nactivity is either done for the P1 project (performed in or merged\ninto Workspace-P1) or for the P2 project (performed in or merged into\nWorkspace-P2).\n\n(3.1) Any bug-fix activities for P1 should be incorporated into the P2\nproject (be merged into Workspace-P2).\n\n\nCheers,\nGeoff\n     \n   \n\n", "id": "lists-005-10771064"}, {"subject": "Re: Some configuration management scenarios", "content": "Geoff,\n\nI am a little confused about the objective of this note. What is your\nobjective is sending this note.\n\nThanks\n\nSankar\n     \n   \n\n", "id": "lists-005-10776293"}, {"subject": "Re: Some configuration management scenarios", "content": "Sorry, Sankar, I should have provided more context.\n\nBrad Sergeant mailed out 3 key branching scenarios to this mailing\nlist (dated Feb 12, 1999).  I believe these are key CM scenarios,\nindependent of whether you are branch-based or not, so I told Brad\nthat I'd try to rephrase them in a branch-independent way, so that\nwe could include them in the Goals document without making them\nsound like they are scenarios only relevant for branch-based servers.\n\nPlease let me know if the objective of the note merits further\nclarification.\n\nCheers,\nGeoff\n\n   From: \"Sankar Virdhagriswaran\" <sv@crystaliz.com>\n   Date: Tue, 23 Feb 1999 11:19:15 -0500\n\n           charset=\"iso-8859-1\"\n\n   X-Priority: 3\n   X-Msmail-Priority: Normal\n   X-Mailer: Microsoft Outlook Express 4.72.3007.0\n   X-Mimeole: Produced By Microsoft MimeOLE V4.72.3007.0\n   Resent-From: ietf-dav-versioning@w3.org\n   X-Mailing-List: <ietf-dav-versioning@w3.org> archive/latest/110\n   X-Loop: ietf-dav-versioning@w3.org\n   Sender: ietf-dav-versioning-request@w3.org\n   Resent-Sender: ietf-dav-versioning-request@w3.org\n   Precedence: list\n   X-Lines: 11\n\n   Content-Length: 129\n\n   Geoff,\n\n   I am a little confused about the objective of this note. What is your\n   objective is sending this note.\n\n   Thanks\n\n   Sankar\n     \n   \n\n", "id": "lists-005-10779490"}, {"subject": "Re: Some configuration management scenarios", "content": ">we could include them in the Goals document without making them\n>sound like they are scenarios only relevant for branch-based servers.\n\n\n\nExcellent. This is what you were trying to do, but wanted to make sure. I\nagree with what you are trying to do.\n\nThanks\n\nSankar\n     \n   \n\n", "id": "lists-005-10784087"}, {"subject": "Re: Some configuration management scenarios", "content": "Wouldn't the \"chaos with history\" scenario be the one where you have a\nproject where multiple people can checkout the same versioned resource and\ncheckins are versioned, possibly with client merge, but at a minimum, last\none wins?\n\nChris\n\n-----Original Message-----\nFrom: Geoffrey M. Clemm [mailto:gclemm@tantalum.atria.com]\nSent: Tuesday, February 23, 1999 8:04 AM\nTo: ietf-dav-versioning@w3.org\nSubject: Some configuration management scenarios\n\n\n\nHere are some scenarios that are intended to capture (and extend) the\n3 scenarios Brad described, but in a \"branch-neutral\" fashion (except\nfor 1.3, which is explicitly a branch-based scenario).\n\nBrad: Please check to see if I've accurately captured the scenarios\nyou had in mind.  In particular, I believe 3.2 is your scenario 1,\n3 is your scenario 2, and 2 is your scenario 3.  (I reordered them\nto make the \"simpler\" scenarios first, which hopefully doesn't just\ncause confusion :-).\n\n\n(1) There is a project, P1, that produces a series of configurations\n(there is an identified workspace, Workspace-P1, that produces\nnew configurations for P1).  There can only be one checkout of a\nversioned-resource at any time, and each developer wants to see the\nsame resources, including working-resources, as every other developer\n(every developer uses Workspace-P1).\n\nThis is the \"chaos with history\" scenario (:-).\n\n(2) There is a project, P1, that produces a series of configurations.\nEach developer on the P1 project wants to work on his activity in\nisolation (in a personal workspace), and will merge the completed\nactivity into the project (into Workspace-P1) when it is ready to be\nseen by the other developers.\n\n(2.1) New activities must be based on the current state of the project\n(the contents of Workspace-P1).\n\n(2.2) New activities must be based on the most recent configuration of\nP1 (the most recent configuration produced by Workspace-P1), rather\nthan the current state of P1.\n\n(2.3) To minimize merge conflicts when merging into Workspace-P1,\na developer merges the latest configuration from Workspace-P1\ninto his personal workspace before merging his activity into Workspace-P1.\n\n(2.4) A branch-based system is used, and all P1 developers are\nrequired to work on the same branch (the DAV:branch property of\nall P1 activities are set to be \"branch-P1\").  This ensures that\nonly a single branch exists for all versioned resources, and\nrequires a \"merge\" before CHECKIN for any resources that have\nbeen checked-out in parallel.\n\n\n(3) There are two projects: P1 and P2 that each produce a series of\nconfigurations (from Workspace-P1 and Workspace-P2 respectively).  The\nP2 project was based on a configuration from the P1 project.  An\nactivity is either done for the P1 project (performed in or merged\ninto Workspace-P1) or for the P2 project (performed in or merged into\nWorkspace-P2).\n\n(3.1) Any bug-fix activities for P1 should be incorporated into the P2\nproject (be merged into Workspace-P2).\n\n\nCheers,\nGeoff\n     \n   \n\n", "id": "lists-005-10787457"}, {"subject": "Re: Some configuration management scenarios", "content": "   From: Chris Kaler <ckaler@microsoft.com>\n\n   Wouldn't the \"chaos with history\" scenario be the one where you have a\n   project where multiple people can checkout the same versioned resource and\n   checkins are versioned, possibly with client merge, but at a minimum, last\n   one wins?\n\nThat I believe corresponds to scenario (2.4), i.e. you each have your\nown workspace with your own private working resources, but that you\nmake things visible to everyone when you checkin.\n\nThat is certainly another kind of chaos with history, but it is a\nslightly more controlled chaos, because at least you don't see changes\nuntil they are checked in ... in scenario (1) you see changes as soon\nas a PUT is done by anyone to a working resource.\n\nCheers,\nGeoff\n\n   -----Original Message-----\n   From: Geoffrey M. Clemm [mailto:gclemm@tantalum.atria.com]\n   Sent: Tuesday, February 23, 1999 8:04 AM\n   To: ietf-dav-versioning@w3.org\n   Subject: Some configuration management scenarios\n\n\n\n   Here are some scenarios that are intended to capture (and extend) the\n   3 scenarios Brad described, but in a \"branch-neutral\" fashion (except\n   for 1.3, which is explicitly a branch-based scenario).\n\n   Brad: Please check to see if I've accurately captured the scenarios\n   you had in mind.  In particular, I believe 3.2 is your scenario 1,\n   3 is your scenario 2, and 2 is your scenario 3.  (I reordered them\n   to make the \"simpler\" scenarios first, which hopefully doesn't just\n   cause confusion :-).\n\n\n   (1) There is a project, P1, that produces a series of configurations\n   (there is an identified workspace, Workspace-P1, that produces\n   new configurations for P1).  There can only be one checkout of a\n   versioned-resource at any time, and each developer wants to see the\n   same resources, including working-resources, as every other developer\n   (every developer uses Workspace-P1).\n\n   This is the \"chaos with history\" scenario (:-).\n\n   (2) There is a project, P1, that produces a series of configurations.\n   Each developer on the P1 project wants to work on his activity in\n   isolation (in a personal workspace), and will merge the completed\n   activity into the project (into Workspace-P1) when it is ready to be\n   seen by the other developers.\n\n   (2.1) New activities must be based on the current state of the project\n   (the contents of Workspace-P1).\n\n   (2.2) New activities must be based on the most recent configuration of\n   P1 (the most recent configuration produced by Workspace-P1), rather\n   than the current state of P1.\n\n   (2.3) To minimize merge conflicts when merging into Workspace-P1,\n   a developer merges the latest configuration from Workspace-P1\n   into his personal workspace before merging his activity into Workspace-P1.\n\n   (2.4) A branch-based system is used, and all P1 developers are\n   required to work on the same branch (the DAV:branch property of\n   all P1 activities are set to be \"branch-P1\").  This ensures that\n   only a single branch exists for all versioned resources, and\n   requires a \"merge\" before CHECKIN for any resources that have\n   been checked-out in parallel.\n\n\n   (3) There are two projects: P1 and P2 that each produce a series of\n   configurations (from Workspace-P1 and Workspace-P2 respectively).  The\n   P2 project was based on a configuration from the P1 project.  An\n   activity is either done for the P1 project (performed in or merged\n   into Workspace-P1) or for the P2 project (performed in or merged into\n   Workspace-P2).\n\n   (3.1) Any bug-fix activities for P1 should be incorporated into the P2\n   project (be merged into Workspace-P2).\n\n\n   Cheers,\n   Geoff\n     \n   \n\n", "id": "lists-005-10793542"}, {"subject": "Re: Some configuration management scenarios", "content": "     The terminology takes some getting used to, but I can see the\n     correlation's.  Scenario 3.2 may indeed correspond to my scenario 1,\n     but you did not include it in your mail.  I don't quite see it easily\n     emerging from 3 or 3.1 so I'll call it 4 for now.  The basic idea was\n     the continuance of an existing line of development for future work and\n     the creation of a dead-end activity for limited changes to a release\n     (patches), while merging all changes into the continuing development\n     as well.\n\n     (4) Project P1 releases and creates configuration R1.  Future\n     development continues as before for P1.  The \"end game\" for R1 is\n     referred to as the P1R1 project.  Any incremental \"patches\" to release\n     R1 are done in or merged into the P1R1 workspace.  Configurations for\n     the release of P1R1 are generated from the P1R1 workspace.  All\n     changes made in or merged into P1R1 are also merged into the P1\n     workspace.\n\n     (4.1) A branch-based system is used. P developers are required to work\n     on the same branch (the DAV:branch property of all P1 activities are\n     set to be \"branch-P1\").  P1R1 developers use the branch-P1 if\n     possible, otherwise use the \"branch-P1R1\" (by setting the DAV:branch\n     property of P1R1 activities to branch-P1 and the DAV:secondaryBranch\n     property to branch-P1R1).  This way only P1R1 changes that occur on\n     resources already modified by P1 activities go on the branch-P1R1.\n\n     Geoffrey, from the point of view of the branching system no merge is\n     required for P1R1 changes that go on the branch-P1.  In your current\n     protocol proposal would a merge be required in order to update the P1\n     workspace to see the P1R1 changes that were made on the branch-P1?  Or\n     will the RSR of the P1 workspace make this unneeded?  I'm thinking a\n     merge may be required, but might not result in any change to the\n     revision histories of the versioned resources.  This would be because\n     a preexisting P1 activity had previous checked in an ancestor of a\n     resource modified on branch-P1 by a P1R1 activity and the built-in\n     activity RSR rule #2 would cause an earlier revision to be selected.\n\n     Sorry for the convolution.  I'm trying to understand the implications\n     of the proposed protocol on branching systems.  (I don't have a\n     problem requiring the merge.)\n\n     --Sarge\n\n Reply Separator \n_\nSubject: Some configuration management scenarios\nAuthor:  \"Geoffrey M. Clemm\" <gclemm@tantalum.atria.com> at SMTPPOST\nDate:    2/23/99 11:04 AM\n\n\n\nHere are some scenarios that are intended to capture (and extend) the\n3 scenarios Brad described, but in a \"branch-neutral\" fashion (except\nfor 1.3, which is explicitly a branch-based scenario).\n\nBrad: Please check to see if I've accurately captured the scenarios\nyou had in mind.  In particular, I believe 3.2 is your scenario 1,\n3 is your scenario 2, and 2 is your scenario 3.  (I reordered them\nto make the \"simpler\" scenarios first, which hopefully doesn't just\ncause confusion :-).\n\n\n(1) There is a project, P1, that produces a series of configurations\n(there is an identified workspace, Workspace-P1, that produces\nnew configurations for P1).  There can only be one checkout of a\nversioned-resource at any time, and each developer wants to see the\nsame resources, including working-resources, as every other developer\n(every developer uses Workspace-P1).\n\nThis is the \"chaos with history\" scenario (:-).\n\n(2) There is a project, P1, that produces a series of configurations.\nEach developer on the P1 project wants to work on his activity in\nisolation (in a personal workspace), and will merge the completed\nactivity into the project (into Workspace-P1) when it is ready to be\nseen by the other developers.\n\n(2.1) New activities must be based on the current state of the project\n(the contents of Workspace-P1).\n\n(2.2) New activities must be based on the most recent configuration of\nP1 (the most recent configuration produced by Workspace-P1), rather\nthan the current state of P1.\n\n(2.3) To minimize merge conflicts when merging into Workspace-P1,\na developer merges the latest configuration from Workspace-P1\ninto his personal workspace before merging his activity into Workspace-P1.\n\n(2.4) A branch-based system is used, and all P1 developers are\nrequired to work on the same branch (the DAV:branch property of\nall P1 activities are set to be \"branch-P1\").  This ensures that\nonly a single branch exists for all versioned resources, and\nrequires a \"merge\" before CHECKIN for any resources that have\nbeen checked-out in parallel.\n\n\n(3) There are two projects: P1 and P2 that each produce a series of\nconfigurations (from Workspace-P1 and Workspace-P2 respectively).  The\nP2 project was based on a configuration from the P1 project.  An\nactivity is either done for the P1 project (performed in or merged into\nWorkspace-P1) or for the P2 project (performed in or merged into\nWorkspace-P2).\n\n(3.1) Any bug-fix activities for P1 should be incorporated into the P2\nproject (be merged into Workspace-P2).\n\n\nCheers,\nGeoff\n     \n   \n\n", "id": "lists-005-10800400"}, {"subject": "Re: Some configuration management scenarios", "content": "   From: Bradley.Sergeant@merant.com\n\n   The terminology takes some getting used to, but I can see the\n   correlation's.  Scenario 3.2 may indeed correspond to my scenario 1,\n   but you did not include it in your mail.\n\nOoops.  I meant to say that (3.1) corresponds to your scenario 1.\n\n   I don't quite see it easily\n   emerging from 3 or 3.1 so I'll call it 4 for now.  The basic idea was\n   the continuance of an existing line of development for future work and\n   the creation of a dead-end activity for limited changes to a release\n   (patches), while merging all changes into the continuing development\n   as well.\n\nMy scenario (3.1) was intended to capture this situation.  So let's\nsee if there are any differences between (3.1) [quoted below] and\nyour scenario (4).\n\n   (4) Project P1 releases and creates configuration R1.  Future\n   development continues as before for P1.\n\nWe're in synch so far.\n\n   The \"end game\" for R1 is\n   referred to as the P1R1 project.  Any incremental \"patches\" to release\n   R1 are done in or merged into the P1R1 workspace.  Configurations for\n   the release of P1R1 are generated from the P1R1 workspace.  All\n   changes made in or merged into P1R1 are also merged into the P1\n   workspace.\n\nIn my scenario, I didn't create a new project name or workspace for\nP1R1, but just kept calling them P1.  So if in scenario (3.1) you\nrename the workspace Workspace-P1 to be Workspace-P1R1 immediately\nafter the configuration R1 is created, then I believe scenario (3.1)\nand (4) are equivalent.  If doing this rename makes the scenario clearer\n(and I can see how it might), then I'm all for it.\n\n   (4.1) A branch-based system is used. P developers are required to work\n   on the same branch (the DAV:branch property of all P1 activities are\n   set to be \"branch-P1\").  P1R1 developers use the branch-P1 if\n   possible, otherwise use the \"branch-P1R1\" (by setting the DAV:branch\n   property of P1R1 activities to branch-P1 and the DAV:secondaryBranch\n   property to branch-P1R1).  This way only P1R1 changes that occur on\n   resources already modified by P1 activities go on the branch-P1R1.\n\nYup, that works for me.  So let's number this scenario \"3.2\".\n(I've added it to the scenario document I've started ... I'll hand\nit over to Jim as soon as it settles down).\n\n   Geoffrey, from the point of view of the branching system no merge is\n   required for P1R1 changes that go on the branch-P1.  In your current\n   protocol proposal would a merge be required in order to update the P1\n   workspace to see the P1R1 changes that were made on the branch-P1?\n\nThe protocol doesn't currently define a MERGE method (I was going to\nwait until we had agreement on the workspace and activity concepts),\nbut looking ahead, yes, I believe the protocol should provide a\nMERGE-ACTIVITY method.  The actual implementation of the MERGE-ACTIVITY\nmethod would then be up to the server, and would vary depending on\nwhether the server is branch-based, change-based, or whatever.\n\n   Or will the RSR of the P1 workspace make this unneeded?  I'm thinking a\n   merge may be required, but might not result in any change to the\n   revision histories of the versioned resources.\n\nYes, if the DAV:branch of the activity being merged is\ncurrently specified in the RSR of the destination workspace, then the\nserver knows that no resource merges are required to achieve the\nactivity merge (it was effectively done as soon as the new revisions\nwere checked-in).  If the activity has a DAV:secondary-branch, then the\nserver would have to do a merge from that secondary-branch, if it\nexists on a versioned resource.\n\n   This would be because\n   a preexisting P1 activity had previous checked in an ancestor of a\n   resource modified on branch-P1 by a P1R1 activity and the built-in\n   activity RSR rule #2 would cause an earlier revision to be selected.\n\nAha!  Now I see the concern you expressed earlier about having the\nDAV:activity be built-in high priority rule.  It would have to be an\n\"and\" rule (i.e. let later rules extend the revision selected to a\ndescendent), but many servers only support \"or\" rules (i.e. if you\nfind a match in that rule, don't look at any more rules).\n\nJimA: I believe this means we should remove the second built-in rule,\nwhich means that the only built-in rule is that the working resources\nin a workspace take precedence over the revision selection rules\n(that's a built-in rule I'm sure of :-).  (Jim, we'll probably need\nto discuss this on the phone).\n\n   Sorry for the convolution.  I'm trying to understand the implications\n   of the proposed protocol on branching systems.  (I don't have a\n   problem requiring the merge.)\n\nNo apologies allowed!  These were all excellent points.\n\nCheers,\nGeoff\n\n\n\n    Reply Separator \n   Subject: Some configuration management scenarios\n   Author:  \"Geoffrey M. Clemm\" <gclemm@tantalum.atria.com> at SMTPPOST\n   Date:    2/23/99 11:04 AM\n\n\n\n   Here are some scenarios that are intended to capture (and extend) the\n   3 scenarios Brad described, but in a \"branch-neutral\" fashion (except\n   for 1.3, which is explicitly a branch-based scenario).\n\n   Brad: Please check to see if I've accurately captured the scenarios\n   you had in mind.  In particular, I believe 3.2 is your scenario 1,\n   3 is your scenario 2, and 2 is your scenario 3.  (I reordered them\n   to make the \"simpler\" scenarios first, which hopefully doesn't just\n   cause confusion :-).\n\n\n   (1) There is a project, P1, that produces a series of configurations\n   (there is an identified workspace, Workspace-P1, that produces\n   new configurations for P1).  There can only be one checkout of a\n   versioned-resource at any time, and each developer wants to see the\n   same resources, including working-resources, as every other developer\n   (every developer uses Workspace-P1).\n\n   This is the \"chaos with history\" scenario (:-).\n\n   (2) There is a project, P1, that produces a series of configurations.\n   Each developer on the P1 project wants to work on his activity in\n   isolation (in a personal workspace), and will merge the completed\n   activity into the project (into Workspace-P1) when it is ready to be\n   seen by the other developers.\n\n   (2.1) New activities must be based on the current state of the project\n   (the contents of Workspace-P1).\n\n   (2.2) New activities must be based on the most recent configuration of\n   P1 (the most recent configuration produced by Workspace-P1), rather\n   than the current state of P1.\n\n   (2.3) To minimize merge conflicts when merging into Workspace-P1,\n   a developer merges the latest configuration from Workspace-P1\n   into his personal workspace before merging his activity into Workspace-P1.\n\n   (2.4) A branch-based system is used, and all P1 developers are\n   required to work on the same branch (the DAV:branch property of\n   all P1 activities are set to be \"branch-P1\").  This ensures that\n   only a single branch exists for all versioned resources, and\n   requires a \"merge\" before CHECKIN for any resources that have\n   been checked-out in parallel.\n\n\n   (3) There are two projects: P1 and P2 that each produce a series of\n   configurations (from Workspace-P1 and Workspace-P2 respectively).  The\n   P2 project was based on a configuration from the P1 project.  An\n   activity is either done for the P1 project (performed in or merged into\n   Workspace-P1) or for the P2 project (performed in or merged into\n   Workspace-P2).\n\n   (3.1) Any bug-fix activities for P1 should be incorporated into the P2\n   project (be merged into Workspace-P2).\n\n\n   Cheers,\n   Geoff\n     \n   \n\n", "id": "lists-005-10808555"}, {"subject": "Re: Some configuration management scenarios", "content": "   From: Bradley.Sergeant@merant.com\n\n   Ok, now I see how your scenario 3 will work.  We don't need P1R1, it\n   only serves to indicate a change in the P1 project's RSR to run off a\n   fixed configuration rather than a latest label.  Make sense?\n\nYes, exactly.\n\n   Also, if we remove the #2 buildin selection rule in workspaces and\n   rely on the RSR rule then my other concerns go away and things get\n   simpler.\n\nGreat!\n\n   Thanks for clearing this up.\n\nHere's what I've currently got for the amended CM scenario list:\n\n-----------------------\n\n(1) There is a project, P1, that produces a series of configurations\n(there is an identified workspace, Workspace-P1, that produces\nnew configurations for P1).  There can only be one checkout of a\nversioned-resource at any time, and each developer wants to see the\nsame resources, including working-resources, as every other developer\n(every developer uses Workspace-P1).\n\n\n(2) There is a project, P1, that produces a series of configurations.\nEach developer on the P1 project wants to work on his activity in\nisolation (in a personal workspace), and will merge the completed\nactivity into the project (into Workspace-P1) when it is ready to be\nseen by the other developers.\n\n(2.1) New activities must be based on the current state of the project\n(the contents of Workspace-P1).\n\n(2.1-B) A branch-based system is used. All P1 developers are\nrequired to work on the same branch (the DAV:branch property of\nall P1 activities are set to be \"branch-P1\").  This ensures that\nonly a single branch exists for all versioned resources, and\nrequires a \"merge\" before CHECKIN for any resources that have\nbeen checked-out in parallel.\n\n(2.2) New activities must be based on the most recent configuration of\nP1 (the most recent configuration produced by Workspace-P1), rather\nthan the current state of P1.\n\n(2.3) To minimize merge conflicts when merging into Workspace-P1,\na developer merges the latest configuration from Workspace-P1\ninto his personal workspace before merging his activity into Workspace-P1.\n\n\n(3) At some point project P1 produces a configuration C1.  Project P2\nis now started, based on C1.  A workspace, Workspace-P2, is created to\ngenerate the series of configurations for P2, and Workspace-P1 is\nrenamed Workspace-P1-C1.  An activity is either done for the P1-C1\nproject (performed in or merged into Workspace-P1-C1) or for the P2\nproject (performed in or merged into Workspace-P2).\n\n(3.1) Any bug-fix activities for P1-C1 should be incorporated into the P2\nproject (be merged into Workspace-P2).\n\n(3.1-B) A branch-based system is used.  All P1 activities have their\nDAV:branch property set to branch-main.  After P1 produces a\nparticular configuration, C1 (e.g. corresponding to a product\nrelease), a new project, P2, is started based on C1.\nAll P2 activities have their DAV:branch property set to branch-main,\nand all P1 activities now have their DAV:secondary-branch property\nset to branch-P1.\n\nThe effect of the DAV:secondary-branch is that this branch is used\nwhen a revision is checked out that already has a branch-main successor.\nThen when a P1 activity is merged into Workspace-P2, only versioned\nresources that have a branch-P1 branch need to be merged (the others\nwere effectively automatically merged on checkin).\n     \n   \n\n", "id": "lists-005-10818891"}, {"subject": "Versioning TeleConf Agenda, 3/3/99 (Wednesday)", "content": "phone: 888 819 8909  pass-code#97985\n\nAgenda:\n\n- Can a Workspace be used as a Checkout-Token.\n- Is \"automatic\" a reasonable value for the DAV:activity property\n  of a workspace (i.e. the server is completely responsible for\n  allocating an activity to each checkout).  If so, what constraints\n  (if any) do we want to place on how the server can allocate checkouts\n  and revisions to an activity.\n\nThis week, I specifically kept the agenda short to see if we can\nreach closure a specific issue and move forward.  I also vote we\nkeep the meeting to no more than one hour, i.e. 2-3 EST, 11-12 PST.\n\nNext week, the TeleConf will revert back to its usual Monday time slot.\n\nCheers,\nGeoff\n     \n   \n\n", "id": "lists-005-10824835"}, {"subject": "Re: Versioning TeleConf Agenda, 3/3/99 (Wednesday)", "content": "At 11:43 AM -0500 3/2/99, Geoffrey M. Clemm wrote:\n>phone: 888 819 8909  pass-code#97985\n\n>Agenda:\n\n>- Can a Workspace be used as a Checkout-Token.\n>- Is \"automatic\" a reasonable value for the DAV:activity property\n>  of a workspace (i.e. the server is completely responsible for\n>  allocating an activity to each checkout).  If so, what constraints\n>  (if any) do we want to place on how the server can allocate checkouts\n>  and revisions to an activity.\n\n>This week, I specifically kept the agenda short to see if we can\n>reach closure a specific issue and move forward.  I also vote we\n>keep the meeting to no more than one hour, i.e. 2-3 EST, 11-12 PST.\n\nShould we (to violate your intent to keep things short) discuss the goal\nquestion about the lifetime of URL/RevisionID tuples?\n\nDavid Durand              dgd@cs.bu.edu  \\  david@dynamicDiagrams.com\nBoston University Computer Science        \\  Sr. Analyst\nhttp://www.cs.bu.edu/students/grads/dgd/   \\  Dynamic Diagrams\n--------------------------------------------\\  http://www.dynamicDiagrams.com/\nMAPA: mapping for the WWW                    \\\n     \n   \n\n", "id": "lists-005-10828277"}, {"subject": "Standard WebDAV Properties", "content": "The WebDAV protocol supports a number of functions including collections,\nproperties, namespace management, and soon to come, ordered collections,\nreferences, versioning, parallel development, configuration management, and\nsearching. However, in spite of all these functions, client applications\noften want more. For example, a typical document management application\nmight do document life cycle management functions like review and approval\ncycles, document states and transitions, rendering variants in multiple\ndocument formats, workflow and groupware functions, notification,\npublishing, etc. These client applications can exploit new resource types\nand WebDAV properties to implement these functions, but unless multiple\nclient applications implement them the same way, interoperability is\ncompromised. We could extend WebDAV to include all these capabilities, but\nthen the protocol would get very complex, take a long time to develop, and\ninclude too many domain specific concepts what would not be reused for\nother domains. So how do we support new functions, promote\ninteroperability, and keep the protocol domain neutral and simple?\n\nOne approach is to take a lesson from XML. XML is a standard language for\ntagged documents. The standard specifies (among other things) that an XML\ndocument contains elements which have attributes and can contain other\nelements. So XML, unlike HTML, defines a standard syntax for documents, but\nnot a standard for their specific content structure. A class of documents\ncan be described using a Document Type Definition (DTD) that specifies the\nvalid element structure for that class of documents.  A DTD defines a\n\"document language\" that can be used to describe and validate documents\nthat conform to that language. Interested industries can get together and\ndefine a document language for their industry. Then applications\ninteroperate at two levels: one using XML documents as a common interchange\nformat, and another using agreed upon DTDs to describe the structure of\nthese documents. XML doesn't have to change to support Health Care or the\nAutomotive Industry, those industries just have to agree on their\nrespective DTDs. There are standards efforts underway to facilitate the\nconstruction of these DTDs. For example:\n\n  - CDF  for push applications\n  - CIM2  for systems and network management apps\n  - EAD  for apps which need access to archival inventories and registers\n  - HTML4  for Web documents\n  - MathML for mathematics\n  - OAG  for supply chain applications\n  - OTP  for eCommerce applications\n  - PGML  for graphics\n  - RosettaNet  their catalog DTD for use in eCommerce\n  - SMIL  for streaming media apps\n  - vCard  for applications needing to process an electronic business card\n  - WML - for transcoding applications to wireless PvC devices\n  - iCal  - for calendar and calendar-related events\n\nThere are also web sites that provide a repository for DTDs so that\ninterested parties can see what other people are doing in the same domain,\nand can locate potential collaborators. See http://www.schema.net.\n\nWe could do something similar for client extensions to WebDAV based on\nresource types and properties. This could be facilitated by establishing a\nweb site that WebDAV client developers could visit and contribute to that\nwould contain proposals for properties and resource document types to\nsupport particular domains. For example, one could envision a consortium of\ndocument management providers who would collaborate on resource types and\nproperties to support document life cycle management as described above.\nThis would allow client providers to establish standards without extending\nthe WebDAV protocol for particular domains of interest while still enabling\ninteroperability. Client applications could continue to add value of their\nown, but could expect that documents conforming to the standard would have\nexpected properties and structure.\n\nI propose that we establish such a web site, and that the WebDAV working\ngroups may want to exploit this concept themselves instead of adding a lot\nof DAV properties to the standard that may prove to be too domain specific\nfor general reuse, or result in too may server options for clients to be\neffectively written.\n     \n   \n\n", "id": "lists-005-10832405"}, {"subject": "Re: Standard WebDAV Properties", "content": "   From: \"Roy T. Fielding\" <fielding@kiwi.ics.uci.edu>\n\n   >Roy, I think his note was calling for a way to say \"I defined a book\n   >author property using <this> DTD and semantic\" so that others could use\n   >the same specification with the intent of some level of\n   >interoperability.\n\n   >I didn't read anything in there about HTTP methods or other\n   >protocol-level changes.\n\n   If it is being used to establish interoperability, then it is the protocol.\n\nRoy: From what I've seen of your postings, and knowing what Jim is\nproposing, I believe the two of you are in violent agreement, but\nthat there must have been something in the way Jim phrased it that\nleft it open to misinterpretation.  (Or maybe you just disagree :-).\n\nThere are two very different ways of achieving interoperability.\n\nYou can add new HTTP methods, headers, and resource types.  You then\nneed to describe the interaction between the new methods and headers\nwith and all existing resource types, and then the interaction between\nthe new resource types and all methods (both old and new).\n\nGiven that HTTP methods and headers are a flat name space and a\nserver needs to respond to any method/header combination applied\nto any resource type, it is essential that the number of new ones\nintroduced be draconianly minimized.\n\nBut another way to achieve interoperability is to agree upon how a\nparticular property name will be used, and a DTD for the value of that\nproperty.  Unfortunately, if you take your earlier statement literally,\nthen this agreement is a \"protocol change\", and groups interested\nin this kind of interoperability feel the need to get their property\nnames and DTD's \"into the protocol\".\n\nWhat Jim is proposing is that this is a *different* kind, but equally\nvalid form of interoperability, and because it requires no new\nmethods, headers, or resource types, it does *not* have to be addressed\nby the protocol working group, but rather more informally by posting\nto a web site or some means other than a formal IETF working group.\n\nSo Jim's proposal is actually designed to *limit* the work/scope of a\nworking group (and as a member of the versioning design team, that is\na goal I vigorously support :-).\n\n   Semantics-by-reference is a very common technique (we had the same discussio\nn\n   at the Dublin Metadata Conference regarding schemas).  I wasn't disagreeing\n   with Jim's suggestion, except to note that\n\n     1) XML is nothing special in that regard, and\n\nIt's not special, but we're already requiring an XML parser to handle\nWebDAV properties, so why make people use two (or n) parsers, when an\nXML parser would work just fine.  It's just a parser, after all.\n\n     2) the IETF doesn't do that, and\n\nThat's Jim's point.  While people think that \"if it's an interoperability\nissue, it must be addressed by an IETF working group\", we get constant\npressure to deal with issues that we believe could be handled more\ninformally.  Lisa's structured document property proposal is an excellent\nexample.\n\n     3) HTTP doesn't need it if the application is done right.\n\n   The HTTP approach, when used wisely, is to construct a set of resources\n   that represent the application, and then use standard methods on those\n   resources.\n\nI heartily agree.\n\n   My reading of Jim's message was that it was a criticism of\n   the direction of WebDAV versioning, which I would agree with, but\n   his suggested solution is entirely different than mine.  This doesn't\n   change the fact that it is a good idea to have such a DTD library.\n\nI'm *very* interested in hearing your criticism of the direction\nof WebDAV versioning (781-676-2684 if you think it would be more\neffective by phone).  I personally believe there were way too many\nheaders and methods being proposed, and not enough use of new resource\ntypes and standard properties for them.  In draft-clemm-webdav-versioning\nI propose just one new header (Workspace) and 6 new methods:\nCONTROL, CHECKOUT, CHECKIN, UNCHECKOUT, GETCONFLICTS, UPDATE.\nWe are currently working hard to unify this proposal with\ndraft-ietf-webdav-versioning.\n\nCheers,\nGeoff\n     \n   \n\n", "id": "lists-005-10839251"}, {"subject": "IETF Versioning Meetings", "content": "As agreed on the teleconference today, we will have a WebDAV versioning\nworking group meeting on Wed and Thu, March 17 and 18 at IETF 44. We'll\nbreak on Wed afternoon for the versioning BOF at 1:00 and the WebDAV\nworking group meeting at 3:30 where Chris is presenting an overview of\nWebDAV versioning.\n\nThere has been a lot of versioning discussions the last few weeks, and to\nensure we are all on the same page as much as possible, I would like to\ncorrect the WebDAV versioning summary below to reflect our current\nthinking. In addition, I think it would be useful for the versioning group\nto review Chris's and my (for the WebDAV BOF) presentation materials so\nthat we can be aware of any controversial content. I'm not saying we should\navoid controversial content, that's what the working group meetings are\nfor. Just that none of us should be surprised by any new issues, or issues\nwe thought were understood and resolved. A lot has been happening pretty\nfast, and it would be very easy for simple misunderstandings to occur. It\nwould be great to avoid these where possible. So please review this summary\nto ensure it captures our current thinking, identify any errors, and call\nout what you think are remaining open issues. I haven't said anything below\nabout leveling or non-versioning aware clients, but I anticipate there are\nnumber of opportunities for optional functions and defaults described that\ncould be exploited. Let me know if you think there's something missing.\n\nLet's set aside some time in next week's call to review presentation\nmaterial outlines. Chris, is this OK with you?\n\nWebDAV Versioning Summary\n\nThe following is a brief summary of the WebDAV semantics for supporting\nversioning, parallel development, and configuration management. This\nsummary does not describe the details of the protocol, only the high level\nsemantics the protocol is intended to support.\n\nCreating Versioned Resources\n\nA resource or collection can be put under version control. Putting a\nresource under version control creates a versioned resource and sets its\ninitial revision to the resource. A checked in revision cannot be modified\nby anyone at any time.\n\nNaming Revisions: revision ids and labels\n\nA revision of a versioned resource is given a system assigned revision id\nwhen it is checked in. This revision id acts as an immutable identifier\ndistinguishing this revision from all others of the same versioned\nresource. A revision id can be assigned to only one revision of a versioned\nresource, and can never be reused on that versioned resource.\n\nA user may assign other revision names called revision labels to a revision\nin order to distinguish it from other revisions using more meaningful\nnames. These revision labels must be unique for any given versioned\nresource, but may be reassigned to any revision of the versioned resource\nat any time. Revisions of different versioned resources may have the same\nlabel. There is a distinguished, floating label called \"latest\" which\nalways refers to the latest revision in a given activity.\n\nModifying a Versioned Resource\n\nA versioned resource may be modified by checking out a revision to create a\nworking resource. A working resource can be updated (PUT, PROPPATCH, etc.)\nany number of times. When updates are complete, the working resource is\nchecked back in. Users can use checkout/checkin to register intent to\nmodify a versioned resource similar to the way lock and unlock are used in\nDAV level 2. The sense is reversed though. A checked in revision cannot be\nchanged without checking it out first.\n\nA revision may be checked in as mutable or immutable. If the revision is\nmutable, a subsequent checkin of a working resource may be done in place\nallowing the mutable revision to be updated in place without creating a new\nrevision. Any previous contents of the revision are lost. A working\nresource created by a checkout of a mutable revision can also be checked\nback in creating a new revision if the user wants to retain the previous\nrevision. If the revision is immutable, any checkin of a working resource\nderived from this revision must create a new revision. The mutability of a\nrevision cannot be changed once it has been established on an initial\ncheckin.\n\nServers may choose to not allow revisions to be checked in as mutable, or\nthey may not allow a revision to be checked in without creating a new\nrevision. These constraints are typical of current configuration management\nsystems. Document management systems typically allow revisions to be\nmutable and don't have these restrictions.\n\nA revision of a collection is modified by adding or removing members.\nChanging the contents of a member of a revision of a versioned collection\ndoes not imply a change to the parent collection.\n\nParallel Development with Activities\n\nResources are checked out in the context of an activity. An activity\nabstracts a set of related changes a user is making to versioned resources.\nEach activity represents a parallel thread of development. Servers that\ndon't support parallel development effectively only support one, default\nactivity. A revision that is already checked out in an activity cannot be\nchecked out again in the same activity. If parallel development is desired,\na user can checkout the revision in another activity and merge them later.\n\nSelecting Revision through the Workspace\n\nResources, working resources, and revisions of versioned resources are all\naccessed using a URL. Specific revisions of a versioned resource can be\naccessed by specifying the resource URL and a version label. However,\nversioned resources are usually accessed using a simple URL. The revision\nselected when a specific revision name is not specified is resolved through\na workspace. A workspace provides a mapping between URLs for versioned\nresources, and specific revisions. This allows versioned resources and\nunversioned resources to be accessed the same way supporting relative ULRs\nand DAV level-2 clients that are not versioning aware.\n\nA workspace contains a current activity and a revision selection rule.\nRevisions are selected using the following rules in order: 1) if there is a\nchecked out revision, then it is selected. else 2) if there is a revision\nthat is checked in under the current activity, then the latest revision in\nthis activity is selected, else 3) the workspace revision selection rule is\napplied to select the revision. If there is no matching revision, then a\nresource not found status is returned. This rule is applied to collections\nto select the revision that determines their member versioned resources,\nand to other resource to determine the revision containing their contents.\n\nA workspace revision selection rule can specify any number of revision\nlabels, activities, configurations, or the functor \"latest\" to specify what\nrevision to select. The rules are applied in order until the first matching\nis found. Any subsequent potential matches are ignored. A label matches a\nrevision with that label. An activity matches the latest revision in that\nactivity, and may result in merge conflicts. A configuration matches a\nrevision contained in that configuration. Latest matches the latest\nrevision. The first two rules above are just implied components of the\nworkspace revision selection rule. They are called out separately as they\nare fixed by the server.\n\nIf a request is made and no workspace is specified, a default workspace\ncontaining activity named \"mainline\", and \"latest\" in the version selection\nrule is used. Administrators can change the current activity and revision\nselection rule of this default workspace to have such down-level client\nrequests done in some other activity, or to support access to more specific\nrevisions of versioned resources.\n\nConfiguration Management\n\nA workspace represents a volatile set of revisions. Any new checkouts,\nchanges to the current activity, merging operations, or changes to the\nrevision selection rule may result in the selection of different revisions.\nA configuration is a resource that represents an immutable set of\nrevisions. A configuration contains a specific revision of each member\nversioned resource. A configuration cannot contain a mutable revision\nbecause the semantics of configurations cannot be guaranteed. A workspace\nwhose version selection rule contains a configuration will always return\nthe same revisions as long as there are no revisions checked out and\nnothing in the current activity.\n\nVersioned Collections\n\nA collection contains a set of members. For versioned collections, the\nmembers are versioned resources, not particular revisions. To add or remove\nmembers from a revision of a versioned collection, it must be checked out\njust like any other resource. Creating a new revision of a member, or\nmodifying a member has no effect on the collection. Deleting a versioned\nresource that is an internal member from a collection does not delete the\nversioned resource, it only deletes the member from that version of the\ncollection. The resource may still be a member of a previous or subsequent\nrevision of this or some other collection. The URL for a collection without\na particular revision name is resolved to a particular revision using the\nworkspace the same as any other resource. If the collection is part of a\nURL for some other resource, then its members are determined from the\nselected revision.\n\nRevision History\n\nEach revision has a predecessor relationship with the revision it was\nchecked out or merged from, and a successor relationship with revisions\nthat were checked out from it. The revision history of a versioned resource\nis the tree made up of all its revisions from the initial revision to all\ntip revisions in all activities in which this versioned resource was\nmodified.\n\nMerging\n\nEach activity represents a separate parallel thread of development. Users\nmake their changes in the context of an activity. Changes to the same\nrevision must be done in separate activities. At some point, a user may\nwant to merge changes made to the same revision together to create a new\nrevision containing the combined updates. This is accomplished by merging\nan activity into a workspace. In order to do a merge, it is first necessary\nto determine what must be merged. A merge conflict report lists the\nresources that have been modified in parallel in different activities. The\nmerge conflict report is generated using the following rules: 1) if the\nmerge source specifies a predecessor of the revision selected by the\nworkspace, then the workspace revision is selected, else 2) if the merge\nsource specifies a successor of the revision selected by the workspace,\nthen the merge source revision is selected, else 3) the merge source and\nthe current workspace specify revisions that are on different\nlines-of-descent, and a potential merge conflict exists and is included in\nthe merge conflict report.\n\nA user can request the differences between two revisions of a resource\n(servers may provide a differences report, but they must at least indicate\nif they are the same or not). A user can request conflicts between an\nactivity and the current workspace to generate a merge conflict report. A\nuser can also request the differences between a configuration and the\ncurrent workspace which lists at least the activities that are contained in\nthe configuration but not in the workspace and vice versa. So differences\nare detected at different levels: content differences for resources,\nrevision differences for activities, and activity differences for\nconfigurations.\n\nOnce the merge conflicts are known, a user resolves the conflicts by\nmerging the source activity with the workspace. This enters the merge\nsource into the workspace, and sets the current conflicts that must be\nresolved. The conflicts are resolved by merging the revisions from the\nmerge source into the revision selected by the workspace to create a new\nworking resource. Servers may perform some default auto merging, but at a\nminimum, the merge is done by checking out the revision in the current\nactivity and noting the merge from the merge source. This creates an\nadditional successor/predecessor relationship between the merge source and\nworkspace revisions called merged-from. The conflict is now removed because\nthe working resource is now a successor of both the source and target\nrevisions. It is the user's responsibility to apply the differences in the\ntwo revisions in an appropriate manner. The merge is complete when all the\nconflicts are resolved, all differences have been merged, and the resources\nare all checked back in. The merge source can now be removed from the\nworkspace as all of its changes are now included in the current activity.\nOnly one activity can be merged at a time.\n\nWhen merging mutable revisions, the merge conflict report may be inaccurate\nas the source revision may change without the system being aware. Users are\nresponsible for applying any changes to ancestor revisions to their\ndescendants as appropriate. The system cannot determine if there are any\nchanges that need to be applied other than by looking a the last-modified\ndates of the revisions.\n\nLocking Versioned Resources\n\nLocking a versioned resource prevents any revision from being checked out\nin any activity. Locking a revision of a versioned resource prevents just\nthat revision from being checked out in any activity. Locking an activity\nprevents any revisions from being checked out in that activity. Locking a\nworkspace prevents any checkouts in the current activity of that workspace\n(similar to locking the current activity), and prevents changes to the\nworkspace revision selection rule.\n     \n   \n\n", "id": "lists-005-10845896"}, {"subject": "Re: IETF Versioning Meetings", "content": "Jim,\n\nThank you for the summary. I have inter-leaved some questions/issues. I hope\nthis is not too late to raise the issues and I also hope that the issues are\nmore because of my mis-understanding rather than some thing missing in the\nsemantics being proposed.\n\n\n>A revision of a collection is modified by adding or removing members.\n>Changing the contents of a member of a revision of a versioned collection\n>does not imply a change to the parent collection.\n\n\nI may be confused about what you are trying to say, however, I wonder if\nthis assumption is too strong for dependency analysis. If a programmer is\nwriting code (file A) that is dependent on the specification of the program\n(file B) and if both of these are being kept together as a semantically\nmeaningful collection, then modifying file B or A does impact the semantic\nconsistency of the collection. Does this make sense?\n\n>Parallel Development with Activities\n\n>Resources are checked out in the context of an activity. An activity\n>abstracts a set of related changes a user is making to versioned resources.\n>Each activity represents a parallel thread of development. Servers that\n>don't support parallel development effectively only support one, default\n>activity.\n\nAre nesting of activities allowed? If not this model is too restrictive for\nweb site development and deployment. Furthermore, if nested activities are\nallowed then are 'continuation' of activities after intermeidate submissions\nare made allowed?\n\nThere are two fundamental notions here. Change and compound change. It\nsounds like your description covers the 'change' concept, it does not cover\nthe 'compound change'.\n\n>A workspace contains a current activity and a revision selection rule.\n\nI don't understand the semantics of 'contained'. The way I think about it\neach activity is associated with a workspace and each workspace has\nselection rules. Am I missing something.\n\n>Revisions are selected using the following rules in order: 1) if there is a\n>checked out revision, then it is selected. else 2) if there is a revision\n>that is checked in under the current activity, then the latest revision in\n>this activity is selected, else 3) the workspace revision selection rule is\n>applied to select the revision. If there is no matching revision, then a\n>resource not found status is returned. This rule is applied to collections\n>to select the revision that determines their member versioned resources,\n>and to other resource to determine the revision containing their contents.\n\n\nCould you provide some rationale for why the ordering? I am confused. I\nwould think that the simplest case (and hence the default case) would be to\nallow users to checkout named (and not labeled) revisions in the context of\na workspace and there is no 'view rule' processing required. Don't you\nthinking processing of view rules should be followed after this. Maybe that\nis what you are saying, but just wanted to make sure.\n\n>Versioned Collections\n\n>A collection contains a set of members. For versioned collections, the\n>members are versioned resources, not particular revisions. To add or remove\n\nI assume versioned collections can contain other collections. Is this\nassumption correct?\n\n>the current workspace specify revisions that are on different\n>lines-of-descent, and a potential merge conflict exists and is included in\n>the merge conflict report.\n\n\nHow are dependency conflicts captured in this model? Are they excluded in\nthe current thinking?\n     \n   \n\n", "id": "lists-005-10862065"}, {"subject": "Re: Standard WebDAV Properties", "content": "[Postmaster note: There has been a large number of postings from\naddresses not subscribed to the mailing list.  This list is currently\nconfigured to toss all such postings into a 'check me for spam' queue,\nthus introducing delay.  Participants should post from the address\nto which they asked their ietf-dav-versioning mail to be sent.  -R.Swick]\n\nDate: Wed, 3 Mar 1999 19:36:41 -0500 (EST)\nSender: gstein@lyra.org\nOld-Date: Wed, 03 Mar 1999 16:33:13 -0800\nFrom: Greg Stein <gstein@lyra.org>\nTo: jamsden@us.ibm.com\nCC: w3c-dist-auth@w3.org, ietf-dav-versioning@w3.org\n\n\njamsden@us.ibm.com wrote:\n> ...\n> I propose that we establish such a web site, and that the WebDAV working\n> groups may want to exploit this concept themselves instead of adding a lot\n> of DAV properties to the standard that may prove to be too domain specific\n> for general reuse, or result in too may server options for clients to be\n> effectively written.\n\nI very much agree with your thoughts... it would be very helpful to have\na central repository like this.\n\nI would like to submit that www.webdav.org can be the site you're\nsuggesting. It can provide web pages, download areas, and mailing lists\n(with archives). It goes without saying, but it is also DAV server :-),\nallowing for a person or a small group to act as editors for such a\nrepository.\n\nThe property schemas could go under the \"Specifications\" section on the\nsite. If you feel they really need to be called out, then we can also\ncreate a new top-level section.\n\nWould you be willing to edit/maintain this area? Or at least start it?\nIt would take me long to set up access. For tools, Michael Best has been\nusing Joe Orton's sitecopy to perform updates of the Projects/Software\narea.\n\nCheers,\n-g\n\n--\nGreg Stein, http://www.lyra.org/\n     \n   \n\n", "id": "lists-005-10868506"}, {"subject": "Re: Standard WebDAV Properties", "content": "Date: Thu, 4 Mar 1999 05:01:15 -0500 (EST)\nTo: jamsden@us.ibm.com\ncc: w3c-dist-auth@w3.org, ietf-dav-versioning@w3.org\nOld-Date: Thu, 04 Mar 1999 01:59:50 -0800\nFrom: \"Roy T. Fielding\" <fielding@kiwi.ics.uci.edu>\n\n\n>One approach is to take a lesson from XML. XML is a standard language for\n>tagged documents. ...\n\nI don't want to burst any bubble here, but XML has yet to become a lesson\nfor anything but pre-release marketing hype.  What you say is true of any\ncodification of application domains, and metadata efforts in general.\nIf we understand and agree upon the key elements of an application\narchitecture, then standard identifiers of those elements can be used\nto construct self-descriptive actions.  That is a good thing in any syntax,\nbut something that the IETF usually avoids doing within a WG.\n\nThe problem with using that style to define a protocol, however, is that\nall pieces of the communication apparatus cannot be expected to understand\nall application domains, and certainly cannot be expected to download\napplication domain descriptions.  There must be a standard set of general\nsemantics that is sufficient to identify what type of action is taking place,\nnot the details of how it will be implemented.  That is what HTTP provides\nwith the abstract resource interface, of which WebDAV is now a part.\n\nAs I said a while back, if a specific application is calling for a\nlarge number of HTTP methods to be defined, then that application is\nmisusing HTTP.  Almost always, the solution is to rethink the role of\nresources in the application.\n\n....Roy\n     \n   \n\n", "id": "lists-005-10873205"}, {"subject": "Re: Standard WebDAV Properties", "content": "Date: Thu, 4 Mar 1999 05:18:05 -0500 (EST)\nSender: gstein@lyra.org\nOld-Date: Thu, 04 Mar 1999 02:15:10 -0800\nFrom: Greg Stein <gstein@lyra.org>\nTo: \"Roy T. Fielding\" <fielding@kiwi.ics.uci.edu>\nCC: jamsden@us.ibm.com, w3c-dist-auth@w3.org, ietf-dav-versioning@w3.org\n\n\nUmm...\n\nRoy, I think his note was calling for a way to say \"I defined a book\nauthor property using <this> DTD and semantic\" so that others could use\nthe same specification with the intent of some level of\ninteroperability.\n\nI didn't read anything in there about HTTP methods or other\nprotocol-level changes.\n\nAs an empirical example, Lisa Lippert's draft spec for additional\ncollection properties is a great case-study for publishing some\n\"standardized\" properties [that occur outside of the needs of the base\nprotocol(s)].\n\nCheers,\n-g\n\nRoy T. Fielding wrote:\n\n> >One approach is to take a lesson from XML. XML is a standard language for\n> >tagged documents. ...\n\n> I don't want to burst any bubble here, but XML has yet to become a lesson\n> for anything but pre-release marketing hype.  What you say is true of any\n> codification of application domains, and metadata efforts in general.\n> If we understand and agree upon the key elements of an application\n> architecture, then standard identifiers of those elements can be used\n> to construct self-descriptive actions.  That is a good thing in any syntax,\n> but something that the IETF usually avoids doing within a WG.\n\n> The problem with using that style to define a protocol, however, is that\n> all pieces of the communication apparatus cannot be expected to understand\n> all application domains, and certainly cannot be expected to download\n> application domain descriptions.  There must be a standard set of general\n> semantics that is sufficient to identify what type of action is taking place,\n> not the details of how it will be implemented.  That is what HTTP provides\n> with the abstract resource interface, of which WebDAV is now a part.\n\n> As I said a while back, if a specific application is calling for a\n> large number of HTTP methods to be defined, then that application is\n> misusing HTTP.  Almost always, the solution is to rethink the role of\n> resources in the application.\n\n> ....Roy\n\n--\nGreg Stein, http://www.lyra.org/\n     \n   \n\n", "id": "lists-005-10877671"}, {"subject": "e: Standard WebDAV Properties", "content": "Date: Thu, 4 Mar 1999 05:52:13 -0500 (EST)\nTo: Greg Stein <gstein@lyra.org>\ncc: w3c-dist-auth@w3.org, ietf-dav-versioning@w3.org\nOld-Date: Thu, 04 Mar 1999 02:47:49 -0800\nFrom: \"Roy T. Fielding\" <fielding@kiwi.ics.uci.edu>\n\n>Roy, I think his note was calling for a way to say \"I defined a book\n>author property using <this> DTD and semantic\" so that others could use\n>the same specification with the intent of some level of\n>interoperability.\n\n>I didn't read anything in there about HTTP methods or other\n>protocol-level changes.\n\nIf it is being used to establish interoperability, then it is the protocol.\nSemantics-by-reference is a very common technique (we had the same discussion\nat the Dublin Metadata Conference regarding schemas).  I wasn't disagreeing\nwith Jim's suggestion, except to note that\n\n  1) XML is nothing special in that regard, and\n  2) the IETF doesn't do that, and\n  3) HTTP doesn't need it if the application is done right.\n\nThe HTTP approach, when used wisely, is to construct a set of resources\nthat represent the application, and then use standard methods on those\nresources.  My reading of Jim's message was that it was a criticism of\nthe direction of WebDAV versioning, which I would agree with, but\nhis suggested solution is entirely different than mine.  This doesn't\nchange the fact that it is a good idea to have such a DTD library.\n\n....Roy\n     \n   \n\n", "id": "lists-005-10882930"}, {"subject": "Re: Standard WebDAV Properties", "content": "Date: Thu, 4 Mar 1999 15:09:39 -0500 (EST)\nSender: francis@ariel.appoint.lan\nOld-Date: Thu, 04 Mar 1999 20:10:38 +0000\nFrom: John Stracke <francis@ecal.com>\nTo: w3c-dist-auth@w3.org\nCC: ietf-dav-versioning@w3.org\n\n\"Roy T. Fielding\" wrote:\n\n> >Roy, I think his note was calling for a way to say \"I defined a book\n> >author property using <this> DTD and semantic\" so that others could use\n> >the same specification with the intent of some level of\n> >interoperability.\n> >\n> >I didn't read anything in there about HTTP methods or other\n> >protocol-level changes.\n\n> If it is being used to establish interoperability, then it is the protocol.\n\nNot quite--it is *a* protocol.  A schema would be an application-specific\nprotocol built on top of DAV.  There are presumably going to be plenty of peopl\ne\ntrying to do such protocols; Jim's just trying to set up a uniform way to\ndescribe them, and a place to publish them, so that people can share their work\n,\nand try to get some ad hoc interoperability, even if they don't have\nIETF blessing for their protocols.\n\n--\n/=============================================================\\\n|John Stracke    | My opinions are my own | S/MIME & HTML OK  |\n|francis@ecal.com|============================================|\n|Chief Scientist | NT's lack of reliability is only surpassed |\n|eCal Corp.      |  by its lack of scalability. -- John Kirch |\n\\=============================================================/\n     \n   \n\n", "id": "lists-005-10886784"}, {"subject": "agenda for today's (3/8) versioning conf.call", "content": "2PM-EST, 11AM-PST\ncall: 888-819-8909 id:97985\n\n- Review IETF presentations\n- URN's for versioned-resources\n\nChris: Do you have anything you can mail out prior to the\nconference call today?\n\nCheers,\nGeoff\n     \n   \n\n", "id": "lists-005-10890989"}, {"subject": "Re: agenda for today's (3/8) versioning conf.call", "content": ">- URN's for versioned-resources\n\n\n\nThis piqued my interest. What is this about? If you are going to be writing\nthis up, then you can ignore my note and send it later.\n     \n   \n\n", "id": "lists-005-10893936"}, {"subject": "Notes on the 3/8/99 Dav-Versioning Conference Call", "content": "Participating:\nJim Amsden,Geoff Clemm,David Durand,Chris Kaler,Bradley Sergeant\n\nTopic: Administrivia about Minneapolis versioning presentations\n  <no notes taken>\n\nTopic: URN's for versioned resources\n\nJim and Geoff presented a few key use cases were presented that\nrequired the use of \"locatable URN's\".  In particular:\n\n   - Reliable Configurations\n\n   A configuration is an immutable snapshot of a subtree of a website.\n   The concept of a configuration must co-exist with the need to allow\n   clients to modify the binding of a \"user URL\" to a new resource via\n   a MOVE.\n\n   This could be achieved by requiring that the server assign a\n   \"locatable URN\" to each versioned resource, independent\n   of the \"user URL\" that is subject to a MOVE.\n   A configuration would be defined in terms of a set of \"locatable URN\"s,\n\n   - Merging Configurations\n\n   In order to reliably merge configurations, it is essential to know\n   whether two different revisions of the \"same\" versioned resource\n   appear in the two configurations, since this implies a \"merge\" of\n   those revisions is needed.  The \"user URL\"s of the two revisions are\n   not sufficient, because one or more MOVE's could have renamed the\n   revisions.  This could be achieved by providing a \"VR-URN\" property of\n   a revision, containing the \"locatable URN\" for that revision's versioned\n   resource.  The versioned resource must be \"locatable\" because the\n   revision history must be accessible in order to support the merge\n   process (e.g. finding the nearest common ancestor revision).\n\n   - Non-local Workspaces\n\n   Many versioning systems maintain a workspace on a host separate from\n   where the versioning resources are stored (e.g. on the client or on a\n   different web-server).  To support this, a server must provide some way\n   of reliably referencing a particular versioned-resource.  A locatable\n   URN would support this requirement.\n\nDave pointed out that a \"locatable URN\" is currently at best a\n\"work-in-progress\".\n\nBrad pointed out that a URN wrt some identified \"repository\" resource\nis feasible, and is what is actually supported today by versioning and\ndocument management systems.\n\nGeoff agreed with both of these points, and volunteered to write up\na proposal that addresses these use cases with a \"repository resource\"\ninstead of a \"locatable URN\".\n     \n   \n\n", "id": "lists-005-10897014"}, {"subject": "Re: IETF Versioning Meetings", "content": "   From: \"Sankar Virdhagriswaran\" <sv@crystaliz.com>\n\n   >A revision of a collection is modified by adding or removing members.\n   >Changing the contents of a member of a revision of a versioned collection\n   >does not imply a change to the parent collection.\n\n   I may be confused about what you are trying to say, however, I wonder if\n   this assumption is too strong for dependency analysis. If a programmer is\n   writing code (file A) that is dependent on the specification of the program\n   (file B) and if both of these are being kept together as a semantically\n   meaningful collection, then modifying file B or A does impact the semantic\n   consistency of the collection. Does this make sense?\n\nThere are two \"levels\" of collection versioning.  The first \"base level\"\nis the one Jim describes, i.e. a collection is changed (and therefore\nrequires to be checked-out) only if you are adding or deleting an\nimmediate (level 1) member of the collection.\n\nIf you care about the revision selection choices in a tree rooted at a\nparticular collection, you would capture the revision state of all\nmembers of that tree in a \"configuration\".  If any revision selection\nchanged for any member, this would be reflected in a new\nconfiguration.  If you version configurations (which I believe you\nshould), then you use revisions of a configuration to capture the\nevolution of that tree.\n\n   >Parallel Development with Activities\n\n   >Resources are checked out in the context of an activity. An activity\n   >abstracts a set of related changes a user is making to versioned resources.\n   >Each activity represents a parallel thread of development. Servers that\n   >don't support parallel development effectively only support one, default\n   >activity.\n\n   Are nesting of activities allowed? If not this model is too restrictive for\n   web site development and deployment. Furthermore, if nested activities are\n   allowed then are 'continuation' of activities after intermeidate submissions\n   are made allowed?\n\nI'm also believe support for \"parent\" or \"nested\" activities is essential.\nSome other members of the design team or less decided, so feedback pro/con\nfrom the mailing list is encouraged!\n\n   There are two fundamental notions here. Change and compound change. It\n   sounds like your description covers the 'change' concept, it does not cover\n   the 'compound change'.\n\nThis is a good summary of the need for nested activities.\n\n   >A workspace contains a current activity and a revision selection rule.\n\n   I don't understand the semantics of 'contained'. The way I think about it\n   each activity is associated with a workspace and each workspace has\n   selection rules. Am I missing something.\n\nI think you've got it.  The word \"contains\" should probaby be changed,\nsince it sounds like collection membership, which is not the case.\nNote that only (at most) one activity will be the current activity of\na workspace at any moment (that's the one that new checkout's will go\ninto), so at a single moment most activities will not be the current\nactivity of a workspace (although if they have any revisions, they\nmust have been the current activity of some workspace at some point).\n\n   >Revisions are selected using the following rules in order: 1) if there is a\n   >checked out revision, then it is selected. else 2) if there is a revision\n   >that is checked in under the current activity, then the latest revision in\n   >this activity is selected, else 3) the workspace revision selection rule is\n   >applied to select the revision. If there is no matching revision, then a\n   >resource not found status is returned. This rule is applied to collections\n   >to select the revision that determines their member versioned resources,\n   >and to other resource to determine the revision containing their contents.\n\n   Could you provide some rationale for why the ordering? I am confused. I\n   would think that the simplest case (and hence the default case) would be to\n   allow users to checkout named (and not labeled) revisions in the context of\n   a workspace and there is no 'view rule' processing required. Don't you\n   thinking processing of view rules should be followed after this. Maybe that\n   is what you are saying, but just wanted to make sure.\n\nWe have agreed to get rid of rule (2), so that just leaves:\n\"checked-out else whatever the revision-selection-rule picks\".\nDoes this correspond better to your intuition?  (It's what I'd\nlike for us to say, anyway).  Some people are going even further\nand saying that \"a workspace doesn't even have to select the working\nresources checked out into it, that's just one of the possible\nrevision-selection rules\".  That makes less sense to me than\nrequiring that at *least* a workspace must (always) select the\nworking resources checked-out into it.\n\n   >Versioned Collections\n\n   >A collection contains a set of members. For versioned collections, the\n   >members are versioned resources, not particular revisions. To add or remove\n\n   I assume versioned collections can contain other collections. Is this\n   assumption correct?\n\nYes.\n\n   >the current workspace specify revisions that are on different\n   >lines-of-descent, and a potential merge conflict exists and is included in\n   >the merge conflict report.\n\n   How are dependency conflicts captured in this model? Are they excluded in\n   the current thinking?\n\nI believe the answer is \"yes\", but if you have a dependency conflict model\nin mind, please send it in for consideration.  The main reason that we have\nnot dealt with dependency conflicts is that there seems to be very little\ncommonality in servers today that we could capture in a protocol.\n\nGreat comments, and thanks for the careful analysis!!\n\nCheers,\nGeoff\n     \n   \n\n", "id": "lists-005-10901872"}, {"subject": "Re: IETF Versioning Meetings", "content": ">configuration.  If you version configurations (which I believe you\n>should), then you use revisions of a configuration to capture the\n>evolution of that tree.\n\n\n\nThis is what I was trying to get at. Thanks.\n\n>I'm also believe support for \"parent\" or \"nested\" activities is essential.\n>Some other members of the design team or less decided, so feedback pro/con\n>from the mailing list is encouraged!\n\n\n>   There are two fundamental notions here. Change and compound change. It\n>   sounds like your description covers the 'change' concept, it does not\ncover\n>   the 'compound change'.\n\n>This is a good summary of the need for nested activities.\n\n\n\nRepeating myself: I think nested activities are useful for isolating changes\nin any large web site which has multiple owners (e.g., marketing,\nengineering, marketing/mark comm, marketing/PR, etc.), multiple rates of\nchange (e.g., today's news vs. spec. sheet), and for large cross functional\nwork groups.\n\nAt the very least, I would hope that the current design will not make it\nhard to implement nested activities.\n\n>revision-selection rules\".  That makes less sense to me than\n>requiring that at *least* a workspace must (always) select the\n>working resources checked-out into it.\n\n\nI have not thought about what you are saying. However, I ask a related\nquestion (in my mind anyways, I may be confused). How do these selection\nrules interact with the proposal for URNs.\n\nThe reason I ask is again to see if the model I have in my mind will work. I\nsee version selection happening because of default or explicit rules of the\nworkspace (as proposed) or by user selection of 'names'. From a cursory\nunderstanding of the proposal for URNs that was recently sent out, I thought\nit allowed for user selection based on 'names'. Am I hoplessly confused?\n\n>I believe the answer is \"yes\", but if you have a dependency conflict model\n>in mind, please send it in for consideration.  The main reason that we have\n>not dealt with dependency conflicts is that there seems to be very little\n>commonality in servers today that we could capture in a protocol.\n\n\n\nI think you are right w.r.to commonality in servers today. However, it does\nnot stop me from trying ;-). The general idea is to have a set of conditions\nthat need to be met before a 'change' can be successfully applied (change\nand compound change are the same from this perspective). The conditions\nassert states in which items need to be for success. Different policy\nmechanisms can then be implemented to resolve conflicts that arise when a\nchange is applied. The kind of dependency that I described in the example is\none 'policy' that makes sure that 'read-write' conflicts are captured by the\nsystem. In parallel development with nested activities, this sort of\ndependency becomes key to manage. There are other policies that one could\nthink of. I hope this all makes sense even though it is pretty abstract.\n     \n   \n\n", "id": "lists-005-10910749"}, {"subject": "Re: IETF Versioning Meetings", "content": "   From: \"Sankar Virdhagriswaran\" <sv@hunchuen.crystaliz.com>\n\n   At the very least, I would hope that the current design will not make it\n   hard to implement nested activities.\n\nThat is the case (i.e. nested activities just require an additional\n\"parent-activities\" property for an activity).  The semantic affect\nof nested activities would be that if a parent-activity is specified\nin a revision-selection-rule, all child activities of that activity\nare implicitly selected as well.  This doesn't require any additional\nprotocol support.\n\n   How do <revision> selection\n   rules interact with the proposal for URNs.\n\nFor simple revision-selection-rules (like activity, label, and\nconfiguration based rules), there is no interaction (versioned resource\nURL's or URN's do not appear in the rules).\n\nThere are some \"scoped\" revision-selection-rules that some servers\ncurrently support, that apply a given rule clause to only a subset\nof the versioned-resources.  This scoping could be in terms of the\nproposed URN's or in terms of the URL's, or both.  It is likely that\nwe won't define these scoped rsr clauses in the first draft of the\nspec, but a server is free to make this kind of extension.\n\n   The reason I ask is again to see if the model I have in my mind will work. I\n   see version selection happening because of default or explicit rules of the\n   workspace (as proposed) or by user selection of 'names'. From a cursory\n   understanding of the proposal for URNs that was recently sent out, I thought\n   it allowed for user selection based on 'names'. Am I hoplessly confused?\n\nRather than talk about URL's and URN's, let's talk about types of resources.\nThere is a versioned-resource.  This is what you get after you put\na versionable resource under version control.  For versioning systems\nthat support a \"repository\" for versioned resource history, the\nversioned-resource is actually just a special kind of reference to a\n\"history resource\" (that stores all the revisions etc. for that versioned\nresource).\n\nThe versioned-resource always has a URL.  I have proposed that the\nhistory resource have a URN.  My initial proposal was that these history\nresource URN's be \"locatable\".  After the Monday discussion, I have agreed\nto try to revise that to say \"if you have a handle (e.g. a URL to)\na \"repository\", you can map that URN into a real resource\".  (I haven't\nhad a chance to write that up yet).\n\nSo although you can get any revision from a history resource (by looking\nat certain properties), the normal way of getting a revision is to take\nthe URL of a versioned resource, and specify a \"Version-Name\" or\n\"Workspace\" header if you want anything other than the \"default\" revision.\n\n   >I believe the answer is \"yes\", but if you have a dependency conflict model\n   >in mind, please send it in for consideration.  The main reason that we have\n   >not dealt with dependency conflicts is that there seems to be very little\n   >commonality in servers today that we could capture in a protocol.\n\n   I think you are right w.r.to commonality in servers today. However, it does\n   not stop me from trying ;-). The general idea is to have a set of conditions\n   that need to be met before a 'change' can be successfully applied (change\n   and compound change are the same from this perspective). The conditions\n   assert states in which items need to be for success. Different policy\n   mechanisms can then be implemented to resolve conflicts that arise when a\n   change is applied. The kind of dependency that I described in the example is\n   one 'policy' that makes sure that 'read-write' conflicts are captured by the\n   system. In parallel development with nested activities, this sort of\n   dependency becomes key to manage. There are other policies that one could\n   think of. I hope this all makes sense even though it is pretty abstract.\n\nSince the conflicts report is an XML document, you should be able to extend\nit to handle more specialized forms of conflicts supported by a particular\nserver.  Does this cover the use cases of interest?\n\nCheers,\nGeoff\n     \n   \n\n", "id": "lists-005-10916698"}, {"subject": "Re: IETF Versioning Meetings", "content": ">are implicitly selected as well.  This doesn't require any additional\n>protocol support.\n\n\nGreat!\n\n>Since the conflicts report is an XML document, you should be able to extend\n>it to handle more specialized forms of conflicts supported by a particular\n>server.  Does this cover the use cases of interest?\n\n\n\nFrom the conflict resolution perspective, this is correct. I have not seen\nthe format of the XML DTD (or is it just an XML document) for the conflict\nreport, so I can't say for sure.\n\nHowever, specification of the 'states' in which a versioned resource can be\nat is important for this to work right. In particular, 'state' in which a\nversioned resource was at when a method was executed (e.g., checkout) needs\nto be tracked at the right level of granularity. Additionally, these states\nneed to be gotten from the conflict report (as perhaps property) of the\nversioned resource.\n     \n   \n\n", "id": "lists-005-10923822"}, {"subject": "Re: IETF Versioning Meetings", "content": "   From: \"Sankar Virdhagriswaran\" <sv@hunchuen.crystaliz.com>\n\n   >Since the conflicts report is an XML document, you should be able to extend\n   >it to handle more specialized forms of conflicts supported by a particular\n   >server.  Does this cover the use cases of interest?\n\n   From the conflict resolution perspective, this is correct. I have not seen\n   the format of the XML DTD (or is it just an XML document) for the conflict\n   report, so I can't say for sure.\n\nWe have not yet defined the conflict report DTD, but it would be\nextensible using the standard XML extension mechanism (i.e. servers\ncan provide additional elements, and clients would ignore elements\nthat they don't understand).\n\n   However, specification of the 'states' in which a versioned resource can be\n   at is important for this to work right. In particular, 'state' in which a\n   versioned resource was at when a method was executed (e.g., checkout) needs\n   to be tracked at the right level of granularity. Additionally, these states\n   need to be gotten from the conflict report (as perhaps property) of the\n   versioned resource.\n\nAdding new properties to revisions, and reflecting these properties in\nextended XML elements in the conflict report, is something the server\nshould be free to do.\n\nCheers,\nGeoff\n     \n   \n\n", "id": "lists-005-10927703"}, {"subject": "Re: IETF Versioning Meetings", "content": ">Adding new properties to revisions, and reflecting these properties in\n>extended XML elements in the conflict report, is something the server\n>should be free to do.\n\n\n\nGreat!\n     \n   \n\n", "id": "lists-005-10932065"}, {"subject": "default workspace vs. set-default method vs. default label", "content": "In order to provide interoperability, the level-1 technique for\n\"setting the default revision\" of a versioned-resource should work\nwhen applied to a versioned-resource being maintained by a level-2\nserver.\n\nIf a level-2 server uses a default workspace, with the\nrevision-selection-rule of the default workspace determining default\nrevision selection, then one would have to provide a \"set-default\"\nmethod for level-1, and in general, a \"set-default\" might fail\nagainst an arbitrary revision-selection-rule.\n\nSo from my perspective, the best choice is to get rid of the notion of\na \"default workspace\", and stick with the notion of a \"default label\".\nThen you just set the default label when you want to adjust the\ndefault revision of any particular versioned-resource, and you require\nthat CHECKIN automatically move the default label to the new\nrevision, if predecessor of the new revision is the current default\nrevision.\n\nCheers,\nGeoff\n     \n   \n\n", "id": "lists-005-10935017"}, {"subject": "detecting a \"non-versioning-aware client\"", "content": "At various times, we have talked about the behavior of a method when\nit is applied by a \"non-versioning-aware\" client.  Hopefully I'm just\nmissing something obvious, but how exactly do we detect that a request\nhas been issued by a non-versioning-aware client?\n\nCertainly there will be some protocol versions that are known to be\nnon-versioning-aware (e.g. HTTP-1.1, etc.), but what about new\nprotocol extensions?  How can a server determine if a client using\nsome arbitrary new extension is versioning-aware or not?\n\nOne answer is that I've missed something, and we can tell.  We still\nmay not want to treat versioning-aware and non-versioning-aware\nclients differently, but at least we could if we wanted to.\n\nAnother answer is that we will treat any client whose versioning\nawarenes is unknown as if it were versioning aware.  This could be\nrather confusing for a non-versioning-aware client that upgrades\nto a new (non-versioning-aware) protocol version, and suddenly\nsees very different versioning behavior.\n\nThere is an analgous problem with treating unknown protocols as\nalways non-versioning-aware.\n\nA final answer is that we will not base any behavior on whether the client\nis versioning-aware or not.  At the moment, this seems to be the best\nanswer to me.\n\nCheers,\nGeoff\n     \n   \n\n", "id": "lists-005-10938757"}, {"subject": "Re: default workspace vs. set-default method vs. default label", "content": "Geoff writes:\n> In order to provide interoperability, the level-1 technique for\n> \"setting the default revision\" of a versioned-resource should work\n> when applied to a versioned-resource being maintained by a level-2\n> server.\n\n> If a level-2 server uses a default workspace, with the\n> revision-selection-rule of the default workspace determining default\n> revision selection, then one would have to provide a \"set-default\"\n> method for level-1, and in general, a \"set-default\" might fail\n> against an arbitrary revision-selection-rule.\n\n> So from my perspective, the best choice is to get rid of the notion of\n> a \"default workspace\", and stick with the notion of a \"default label\".\n> Then you just set the default label when you want to adjust the\n> default revision of any particular versioned-resource, and you require\n> that CHECKIN automatically move the default label to the new\n> revision, if predecessor of the new revision is the current default\n> revision.\n\nPlease pardon me if I'm way off base here. I think I'm mostly up to date\nbut I may have missed something along the way. Anyway, it seems to me\nthat replacing the default workspace with a default label would be giving up a\nlot of flexibility and adding a fair amount of extra work in some situations.\n\nFor instance, I assume you can arbitrarily change the definition of the\ndefault workspace to use a different branch or label whereas to get the same\neffect with labels you would have to relabel everything.\n\nIt may take some effort to make sure that the set-default cannot fail or that\nthere is some sort of default-default (!) in case of failure, but it seems\nworth it in light of the potential loss in ease of use.\n\nOn the other hand, it also seems like the default label could be the\ninterim solution until such time as the set-default failure case is\nadequately resolved.\n\nCheers,\n\nDamon Poole\nEde Development\n     \n   \n\n", "id": "lists-005-10942815"}, {"subject": "Re: default workspace vs. set-default method vs. default label", "content": "Damon Poole and Jim Amsden both provide compelling (at least to me)\nreasons for *not* following my suggestion to limit default version\nselection to simple \"set-default-revision\" functionality.  For example,\na branch or change-based server will probably want to require that\ndefaults be specified in terms of branches or change-sets, not isolated\nrevisions (thus ensuring some level of inter-resource consistency).\n\nSo it sounds like a more acceptable proposal is to say that default\nrevision selection is specified by the revision-selection-rule of a\ndefault workspace, and that minimally a server must support a\n\n   <DAV:label> latest </DAV:label>\n\nrevision-selection-rule.\n\nIf a server only has to support a revision-selection-rule in the\ndefault workspace, and does not have to allow modification of the\ndefault workspace's revision-selection-rule, I believe this ensures\nthat a server needs to do no more work than that required for a\n\"set-default-revision\" method.\n\nIs this a generally acceptable compromise?\n\nCheers,\nGeoff\n\n   X-Mailer: exmh version 2.0zeta 7/24/97\n\n   Date: Sun, 14 Mar 1999 16:30:24 -0500\n   From: Damon Poole <damon@ede.com>\n   Resent-From: ietf-dav-versioning@w3.org\n   X-Mailing-List: <ietf-dav-versioning@w3.org> archive/latest/140\n   X-Loop: ietf-dav-versioning@w3.org\n   Sender: ietf-dav-versioning-request@w3.org\n   Resent-Sender: ietf-dav-versioning-request@w3.org\n   Precedence: list\n\n   Content-Length: 1892\n\n\n   Geoff writes:\n   > In order to provide interoperability, the level-1 technique for\n   > \"setting the default revision\" of a versioned-resource should work\n   > when applied to a versioned-resource being maintained by a level-2\n   > server.\n\n   > If a level-2 server uses a default workspace, with the\n   > revision-selection-rule of the default workspace determining default\n   > revision selection, then one would have to provide a \"set-default\"\n   > method for level-1, and in general, a \"set-default\" might fail\n   > against an arbitrary revision-selection-rule.\n\n   > So from my perspective, the best choice is to get rid of the notion of\n   > a \"default workspace\", and stick with the notion of a \"default label\".\n   > Then you just set the default label when you want to adjust the\n   > default revision of any particular versioned-resource, and you require\n   > that CHECKIN automatically move the default label to the new\n   > revision, if predecessor of the new revision is the current default\n   > revision.\n\n   Please pardon me if I'm way off base here. I think I'm mostly up to date\n   but I may have missed something along the way. Anyway, it seems to me\n   that replacing the default workspace with a default label would be giving up\n a\n   lot of flexibility and adding a fair amount of extra work in some situations\n.\n\n   For instance, I assume you can arbitrarily change the definition of the\n   default workspace to use a different branch or label whereas to get the same\n\n   effect with labels you would have to relabel everything.\n\n   It may take some effort to make sure that the set-default cannot fail or tha\nt\n   there is some sort of default-default (!) in case of failure, but it seems\n   worth it in light of the potential loss in ease of use.\n\n   On the other hand, it also seems like the default label could be the\n   interim solution until such time as the set-default failure case is\n   adequately resolved.\n\n   Cheers,\n\n   Damon Poole\n   Ede Development\n     \n   \n\n", "id": "lists-005-10948032"}, {"subject": "Re: default workspace vs. set-default method vs. default label", "content": "Geoff,\n\nYour revised proposal sounds good to me. And actually, it seems more like\nan elegant solution than a compromise to me. :-)\n\nCheers,\n\nDamon\n\n> Damon Poole and Jim Amsden both provide compelling (at least to me)\n> reasons for *not* following my suggestion to limit default version\n> selection to simple \"set-default-revision\" functionality.  For example,\n> a branch or change-based server will probably want to require that\n> defaults be specified in terms of branches or change-sets, not isolated\n> revisions (thus ensuring some level of inter-resource consistency).\n\n> So it sounds like a more acceptable proposal is to say that default\n> revision selection is specified by the revision-selection-rule of a\n> default workspace, and that minimally a server must support a\n\n>    <DAV:label> latest </DAV:label>\n\n> revision-selection-rule.\n\n> If a server only has to support a revision-selection-rule in the\n> default workspace, and does not have to allow modification of the\n> default workspace's revision-selection-rule, I believe this ensures\n> that a server needs to do no more work than that required for a\n> \"set-default-revision\" method.\n\n> Is this a generally acceptable compromise?\n     \n   \n\n", "id": "lists-005-10954934"}, {"subject": "Re: detecting a \"non-versioning-aware client\"", "content": "I believe we can determine this based on the request.\n\nIf the client issues a request that utilizes new semantics,\nmethods, or properties, they are assumed to be \"versioning aware\".\n\nIf there issue requests that indicate they are not versioning\naware, then we treat them as down-level.  One such case would\nbe issuing a PUT or PROPPATCH against an immutable revision.\n\nChris\n\n-----Original Message-----\nFrom: Geoffrey M. Clemm [mailto:gclemm@tantalum.atria.com]\nSent: Sunday, March 14, 1999 12:49 PM\nTo: ietf-dav-versioning@w3.org\nSubject: detecting a \"non-versioning-aware client\"\n\n\n\nAt various times, we have talked about the behavior of a method when\nit is applied by a \"non-versioning-aware\" client.  Hopefully I'm just\nmissing something obvious, but how exactly do we detect that a request\nhas been issued by a non-versioning-aware client?\n\nCertainly there will be some protocol versions that are known to be\nnon-versioning-aware (e.g. HTTP-1.1, etc.), but what about new\nprotocol extensions?  How can a server determine if a client using\nsome arbitrary new extension is versioning-aware or not?\n\nOne answer is that I've missed something, and we can tell.  We still\nmay not want to treat versioning-aware and non-versioning-aware\nclients differently, but at least we could if we wanted to.\n\nAnother answer is that we will treat any client whose versioning\nawarenes is unknown as if it were versioning aware.  This could be\nrather confusing for a non-versioning-aware client that upgrades\nto a new (non-versioning-aware) protocol version, and suddenly\nsees very different versioning behavior.\n\nThere is an analgous problem with treating unknown protocols as\nalways non-versioning-aware.\n\nA final answer is that we will not base any behavior on whether the client\nis versioning-aware or not.  At the moment, this seems to be the best\nanswer to me.\n\nCheers,\nGeoff\n     \n   \n\n", "id": "lists-005-10959226"}, {"subject": "Versioning TeleConf Agenda, 3/15/99 (Monday)", "content": "phone: 888 819 8909  pass-code#97985\n\nAgenda:\n\n- downlevel (i.e. with no versioning headers) semantics for\n  MOVE, PROPPATCH, PROPFIND, LOCK, and DELETE on a versioned resource\n\nJust one item ... shouldn't take too long (:-).\n\nCheers,\nGeoff\n     \n   \n\n", "id": "lists-005-10964291"}, {"subject": "Re: detecting a \"non-versioning-aware client\"", "content": "It appears the consensus is that there is no magic way to tell whether\na client is versioning aware, so you can't base your behavior on\nwhether it is or not.  But you can try to make the semantics of any\nrequest with no versioning methods or headers be whatever would be\nleast surprising to a versioning unaware client, since alternative\nsemantics for versioning aware clients can be defined to require\nversioning methods or headers.\n\nThere's probably a much clearer way of saying this, but those of\nyou that care probably know what I mean (:-).\n\nCheers,\nGeoff\n\n   From: \"Chris Kaler (Exchange)\" <ckaler@Exchange.Microsoft.com>\n\n   I believe we can determine this based on the request.\n\n   If the client issues a request that utilizes new semantics,\n   methods, or properties, they are assumed to be \"versioning aware\".\n\n   If there issue requests that indicate they are not versioning\n   aware, then we treat them as down-level.  One such case would\n   be issuing a PUT or PROPPATCH against an immutable revision.\n\n   Chris\n\n   -----Original Message-----\n   From: Geoffrey M. Clemm [mailto:gclemm@tantalum.atria.com]\n   Sent: Sunday, March 14, 1999 12:49 PM\n   To: ietf-dav-versioning@w3.org\n   Subject: detecting a \"non-versioning-aware client\"\n\n\n\n   At various times, we have talked about the behavior of a method when\n   it is applied by a \"non-versioning-aware\" client.  Hopefully I'm just\n   missing something obvious, but how exactly do we detect that a request\n   has been issued by a non-versioning-aware client?\n\n   Certainly there will be some protocol versions that are known to be\n   non-versioning-aware (e.g. HTTP-1.1, etc.), but what about new\n   protocol extensions?  How can a server determine if a client using\n   some arbitrary new extension is versioning-aware or not?\n\n   One answer is that I've missed something, and we can tell.  We still\n   may not want to treat versioning-aware and non-versioning-aware\n   clients differently, but at least we could if we wanted to.\n\n   Another answer is that we will treat any client whose versioning\n   awarenes is unknown as if it were versioning aware.  This could be\n   rather confusing for a non-versioning-aware client that upgrades\n   to a new (non-versioning-aware) protocol version, and suddenly\n   sees very different versioning behavior.\n\n   There is an analgous problem with treating unknown protocols as\n   always non-versioning-aware.\n\n   A final answer is that we will not base any behavior on whether the client\n   is versioning-aware or not.  At the moment, this seems to be the best\n   answer to me.\n\n   Cheers,\n   Geoff\n     \n   \n\n", "id": "lists-005-10967036"}, {"subject": "Re: detecting a \"non-versioning-aware client\"", "content": "Of course we could just say that versioning aware clients\nalways pass in the \"Versioning: Yes\" header :-)\n\n-----Original Message-----\nFrom: Geoffrey M. Clemm [mailto:gclemm@tantalum.atria.com]\nSent: Monday, March 15, 1999 9:30 PM\nTo: Chris Kaler (Exchange)\nCc: ietf-dav-versioning@w3.org\nSubject: Re: detecting a \"non-versioning-aware client\"\n\n\n\nIt appears the consensus is that there is no magic way to tell whether\na client is versioning aware, so you can't base your behavior on\nwhether it is or not.  But you can try to make the semantics of any\nrequest with no versioning methods or headers be whatever would be\nleast surprising to a versioning unaware client, since alternative\nsemantics for versioning aware clients can be defined to require\nversioning methods or headers.\n\nThere's probably a much clearer way of saying this, but those of\nyou that care probably know what I mean (:-).\n\nCheers,\nGeoff\n\n   From: \"Chris Kaler (Exchange)\" <ckaler@Exchange.Microsoft.com>\n\n   I believe we can determine this based on the request.\n\n   If the client issues a request that utilizes new semantics,\n   methods, or properties, they are assumed to be \"versioning aware\".\n\n   If there issue requests that indicate they are not versioning\n   aware, then we treat them as down-level.  One such case would\n   be issuing a PUT or PROPPATCH against an immutable revision.\n\n   Chris\n\n   -----Original Message-----\n   From: Geoffrey M. Clemm [mailto:gclemm@tantalum.atria.com]\n   Sent: Sunday, March 14, 1999 12:49 PM\n   To: ietf-dav-versioning@w3.org\n   Subject: detecting a \"non-versioning-aware client\"\n\n\n\n   At various times, we have talked about the behavior of a method when\n   it is applied by a \"non-versioning-aware\" client.  Hopefully I'm just\n   missing something obvious, but how exactly do we detect that a request\n   has been issued by a non-versioning-aware client?\n\n   Certainly there will be some protocol versions that are known to be\n   non-versioning-aware (e.g. HTTP-1.1, etc.), but what about new\n   protocol extensions?  How can a server determine if a client using\n   some arbitrary new extension is versioning-aware or not?\n\n   One answer is that I've missed something, and we can tell.  We still\n   may not want to treat versioning-aware and non-versioning-aware\n   clients differently, but at least we could if we wanted to.\n\n   Another answer is that we will treat any client whose versioning\n   awarenes is unknown as if it were versioning aware.  This could be\n   rather confusing for a non-versioning-aware client that upgrades\n   to a new (non-versioning-aware) protocol version, and suddenly\n   sees very different versioning behavior.\n\n   There is an analgous problem with treating unknown protocols as\n   always non-versioning-aware.\n\n   A final answer is that we will not base any behavior on whether the\nclient\n   is versioning-aware or not.  At the moment, this seems to be the best\n   answer to me.\n\n   Cheers,\n   Geoff\n     \n   \n\n", "id": "lists-005-10972833"}, {"subject": "Suggestions from Sweden", "content": "Dear WebDAV working group,\n\nWe are very excited about the WebDAV project. The WebDAV standard\nwill change the way people will work in the future, in this respect it\nis as important as any other enabling technology such as html, xml and\nJava.\n\nWe are promoting the standard whenever we can. For instance, I will\npresent WebDAV at the XML fair in Stockholm this week.\n\nWe are turning Documentor, our SGML/XML editor, into a DAV client.\n\nWe have 15 years of experience in the field of system development and\nconfiguration management. Our company is a spin off from Ericsson.\n\nI know this is a bit late, but we would also like to contribute to the\nWebDAV work if we can. We would like to start off with some suggestions.\n\nThey are set forth in detail at http://www.excosoft.se/dev/webdav.\n\nThe suggestions are summarized below.\n\n* The implementation of a version naming scheme that promotes an\nunderstanding of versions, version trees and branches. This is not\nprimarily a suggestion for WebDAV itself, but for the repository\ndevelopers. However, I believe we can be more explicit\nwhen we are discussing version trees if we have a naming scheme.\n\n* Checked-out versions should be given a unique id. This id should be\nmaintained when versions are frozen.\n\n* A version of a collection should be able to define the versions for\nits children. A collection version will in this respect be a\nconfiguration.\n\n* A URI should be able to specify version designators on collection\nlevels.\n\nRegards\nJan Christian Herlitz\n\n========================================================\nJan Christian Herlitz * Founder, R&D Manager\nExcosoft AB * Electrum 420 * SE-164 40 Kista * Sweden\nTel: +46 8 703 9190 * Fax: +46 8 703 9490\nherlitz@excosoft.se * www.excosoft.se\n========================================================\n     \n   \n\n", "id": "lists-005-10978767"}, {"subject": "Re: Suggestions from Sweden", "content": "Welcome aboard!  I haven't had a chance to review\nhttp://www.excosoft.se/dev/webdav yet, but I'll try\nto address one of the points you raise:\n\n   From: Jan Christian Herlitz <J-C.Herlitz@excosoft.se>\n\n   * A version of a collection should be able to define the versions for\n   its children. A collection version will in this respect be a\n   configuration.\n\nI believe we need both concepts, i.e.\na \"collection revision\" (whose internal members are versioned-resources)\nand a \"collection configuration revision\" (whose members are a specific\nrevision for each versioned-resource in the collection).\n\nA collection configuration revision will always pick a revision of the\ncollection, as well as a revision of each of the versioned-resources\ncontained in that collection revision.\n\nA new collection revision is created when a versioned-resource is\nadded or removed from the collection.  A new collection configuration\nrevision is created whenever a different revision of any of the\nversioned-resource members is to be selected.\n\n(A picture might be needed here :-).\n\nCheers,\nGeoff\n     \n   \n\n", "id": "lists-005-10983206"}, {"subject": "3/22/99 versioning conference call cancelled.", "content": "The next conference call will be at the usual time/number on 3/29/99.\n\nCheers,\nGeoff\n     \n   \n\n", "id": "lists-005-10987123"}, {"subject": "DELTA-V: IETF-44 Brief Summary", "content": "The Web Versioning and Configuration Management, or DELTA-V BOF meeting was\nheld on Wednesday, March 17, 1999, from 13:00 to 15:00.  Jim Amsden chaired\nthe meeting, with Jim Whitehead recording notes.  Approximately 65 people\nwere in attendance.\n\nThe meeting began with a presentation by Jim Amsden on the proposed charter\nfor the DELTA-V working group (charters were handed out to all attendees\nbefore the start of the meeting).  Following this presentation, there was\nopen discussion on the scope of the working group, which was\nnon-contentious.  At the end of the discussion period, Jim asked for a show\nof hands for people who thought the IETF should have a working group in this\narea, and appx. 25-30 people raised their hands.  When the attendees were\nasked to voice any objections they had to such a working gorup being formed,\nnoone made any comments.\n\nFor the remainder of the meeting, Chris Kaler gave an overview of the\nconcepts and preliminary design that has been developed by a WebDAV WG\ndesign team investigating a versioning and configuration management\nprotocol.  There was significant Q&A between the audience and members of the\ndesign team.\n     \n   \n\n", "id": "lists-005-10989609"}, {"subject": "DELTA-V: IETF-44 BOF Minutes", "content": "Below is the first draft of minutes for the DELTA-V BOF held at the\nMinneapolis IETF.  If you have any comments or clarifications on these\nminutes, please send email to Jim Whitehead <ejw@ics.uci.edu>.\n\n- Jim\n\nMeeting Minutes\nDELTA-V BOF\nMinneapolis IETF\nWednesday, March 17, 1999\n\n\nThe Web Versioning and Configuration Management (DELTA-V) BOF meeting was\nheld on Wednesday, March 17, 1999, from 13:00 to 15:00.  Jim Amsden chaired\nthe meeting, with Jim Whitehead recording notes.  Approximately 65 people\nwere in attendance.\n\nThe meeting began with a presentation by Jim Amsden on the proposed charter\nfor the DELTA-V working group (charters were handed out to all attendees\nbefore the start of the meeting).  Jim Amsden noted that work has been going\non within WebDAV, in a subgroup, and they have determined that the area is\nsufficiently complex to warrant the creation of a new working group, and are\nholding this BOF to judge the level of interest in the topic.\n\nDuring the presentation, questions were asked about the item in the charter\nstating that development of a server-to-server protocol is out of scope.\nThese questions asked whether not having a server to server protocol would\nmake it impossible to support configurations which cross servers.  The\nconcern was that cross-server configurations would lead inevitably to a\nserver-to-server protocol.  Jim Amsden replied that the design group\nbelieves it's possible to handle this case without going down a slippery\nslope to a server-to-server protocol.  But, he noted that it's a\npossibility, and the design team will be alert for this.\n\nAnother question concerned why a versioning and configuration management\nprotocol was being built on top of HTTP, and why was HTTP being used for\nauthoring.  Jim Amsden replied that this work was extending WebDAV, which\ninitially extended HTTP for authoring because HTTP, and other protocols such\nas FTP, are insufficient for collaborative authoring of Web resources.\n\nJacob Palme next put up a handwritten slide showing annotations on versioned\nresources, and asked whether DELTA-V was considering supporting this kind of\ncapability.  Jim Amsden stated that while DELTA-V was not planning on\naddressing annotation support, he felt that (other than the versioning\naspects) this capability could be implemented using capabilities of the\nWebDAV Distributed Authoring Protocol (RFC 2518).\n\nThis was followed by a discussion of version histories which span multiple\nservers.  Yaron Goland felt very strongly that a versioned resource must be\nable to start on one server and end on another server.  He noted that the\nWebDAV Distributed Authoring Protocol tried very hard to make sure that if,\nin the future, there were federated servers, the protocol wouldn't make this\nimpossible.  After some discussion on this issue, it appeared that, while\nthe initial Web versioning and configuration management protocol wouldn't\nallow for the creation and manipulation of cross-server version histories,\nthere was some agreement to  work hard to make sure it's possible to express\ncross-server version histories.\n\nThere was a brief discussion on whether properties are versioned.  In the\ncurrent design, properties are part of a resource, and are versioned with\nit.  However, some properties are mutable (for example, access control\nproperties), and can be modified without causing a new revision to be made.\n\nAnother question was asked: will all clients have to know about all the\nconfiguration management capabilities in order to perform simple versioning\noperations?  The answer was no, there will be either 2 or 3 levels of\nversioning capability, with simple versioning being at level 1.\n\nAt the end of the discussion period, Jim Amsden asked for a show of hands\nfor people who thought the IETF should have a working group in this area,\nand appx. 25-30 people raised their hands.  When the attendees were asked to\nvoice any objections they had to such a working gorup being formed, nobody\nmade any comments.\n\nChris Kaler next gave a presentation on the concepts, data model, and goals\nfor the Web versioning and configuration management protocol, as developed\nby the subgroup of WebDAV that has been actively working on this problem.\n\nA question was raised on the levels of versioning and configuration\nmanagement support. The questioner noted that the current design has a\nnumber of discrete states of versioning support, and posited that it is\nlikely that some clients or some servers might not be at exactly one of\nthose points.  Chris Kaler agreed with this observation, and noted that each\nlevel can be viewed as a minimum set of capabilities supported by an\napplication, and an application might support more capabilities than they\nare advertising.\n\nA clarification question was asked: when you check-out a resource, is this a\nshared or exclusive checkout?  Chris replied that in advanced versioning, a\ncheckout can be shared.\n\nMark Day noted that in previous discussions on this topic within WebDAV,\nthere had been an issue of whether revisions were mutable or immutable.\nChris noted that if there are mutable properties, then a \"immutable\"\nrevision might change if its mutable properties have been changed.  There is\nalso the document management style mutability, where a checked-in revision\nmight possibly be changed.\n\nThere was some discussion on the topic of activities, which clarified the\nconcept for attendees.  One question asked whether an activity is a change\npackage, to which Brad Sergeant replied that an activity is not a change\npackage, or a change set for that matter.\nThere was discussion on the definition of an activity, and some scenarios of\nuse.  An audience member noted that an activity makes sense for the\nsemantics of a merge operation, and Jim Amsden replied that activities will\ndefinitely be needed for merging together parallel changes.\n\nAn attendee asked if a revision is a delta between two objects?  Chris\nreplied, stating that a revision is a specific state of an item, not a\ndelta.\n\nAn attendee noted that a configuration is defined in terms of revisions, not\nin terms of URLs, and wondered if this was correct. Chris replied, \"Yes and\nno.  It is a collection of revisions, but each revision has a unique URL.\"\n\nA clarification question was asked: the existence of workspaces implies that\nyou can handle multiple lines of development. Chris stated that this was\ncorrect.\n\nAnother question asked, whether there was an assumption that there is a\ncentral database and there is a view of this? Chris replied that the design\ngroup is assuming that a server implementation would use a database.\n\nAn attendee asked, can I version my workspace to create a configuration?\nJim Amsden replied that you don't version a workspace.  Jim stated that a\nconfiguration is a versionable resource, although this assertion caused some\ndissention among the design team.\n\nThe question was raised, why should a workspace be a server-side item? Why\nshouldn't the client take care of this? Chris replied that a workspace needs\nto be on the server for URL management, as well as for interoperability.\nPlus, when workspaces are on the server, a person can start work with one\nclient at the office, then go home and use a separate client and still get\nwork done.\n\nThere was a brief discussion on the complexity of revision selection rules\n(RSRs).  Yaron Goland noted that RSRs sound very complex, and could perhap\nlead to the development of a Turing complete scripting language.  There was\nagreement on the existence of this \"slippery slope\",  tempered by a belief\namong the design group that RSRs can be kept very simple, without the need\nfor scripting facilities.  There was a suggestion that the DASL query\nlanguage could perhaps be used for RSR definition.\n\nThe question was raised, can a team share a workspace? Chris replied that\nthe design group is viewing workspaces as belonging to individuals, not\nteams.  But, you could create a master, then make multiple copies of the\nworkspace.  This was followed by some discussion over how to support shared\nteam development within a workspace.  It was noted that there can be\nmultiple activities per workspace.\n\nDuring the discussion of workspaces, it was noted that if you want to copy\nthem, then share them, etc., workspaces are starting to sound like they\nshould be versioned.  Chris replied that it might be possible, but the\ndesign gorup wishes to avoid the circularity of having to use versioned\nresources to control operations on other versioned resources. An attendeed\nnoted, however, \"this doesn't sound so hard to me.  I've used a system where\na workspace is a versioned resource, and it works quite well.\"  Chris stated\nthat the design group should go consider this issue again.\n\nChris next presents scenarios for versioning, which do not elicit any\nquesions. He then proceeds to slides on the goals, and then non-goals slide,\nwhich has history across servers listed as a non-goal.\n\nYaron Goland stated that he is concerned that some operations on revision\nhistories, such as moving a label, might cause problems for version\nhistories which span servers. Jim Whitehead noted that there are approaches\nthat can address this, such as making labels a pair of a human readable\nstring plus a GUID. Chris Kaler noted that the design group definitely needs\nto give this some thought and support version histories that are in a\ndistributed environment.  Yaron stated that he would be happy with language\nthat stated that this functionality won't be explicitly supported, but that\ndistributed version graphs should be possible to express.  Chris stated that\nthe design group will consider this. Since supporting this goal may lead to\ndesign choices we don't want to make, I don't want to commit to supporting\nthis right now.  Jim Amsden noted that IBM researched cross-repository\nversioning for a long time, and the issue is very difficult.\n\nThere was a brief discussion, including some use scenarios, on\nconfigurations, trying to clarify the participant's understanding of\nconfigurations.  This was followed by a similar discussion of merging.\n\nThe question was asked whether is it possible for configurations to\nreference other configurations?  Chris noted that the design gorup has been\ntalking about this feature, and returned the question: \"what you you think\nthe right answer is?\"  There were several voiecs among the attendees who\nagreed with the assertion that configurations should be able to refer to\nother configuration.  This was supported by a brief scenario where the same\nobjects are shared across organizational boundaries (a graphics department\nmakes graphics, and parking department uses them) within an organization.\nChris noted that the design group will need to consider this issue more in\nlight of this feedback.\n\nThere was some discussion on merging.  One participant noted that it might\nbe very valuable to not have merging be a very strict operation, and allow\npeople to perform a later merge operation.  It might be too strict to force\npeople to merge all resources right away, or all during a merge operation,\nbefore other activities can take place.  This was followed by some\ndiscussion trying to refine the question, and some belief by the design team\nthat this capability is already supported.  There was a decision to take\nthis dicsussion offline.\n\n*** End of meeting ***\n     \n   \n\n", "id": "lists-005-10993244"}, {"subject": "Versioning TeleConf Agenda 3/29/99", "content": "phone: 888 819 8909  pass-code#97985\n\nAgenda:\n\n- Is \"DAV:creationdate\" sufficient for temporal history?\n\n- Is DAV:versioned-resource-id needed for level-1 versioning\n  (it currently appears at level-2).\n\nCheers,\nGeoff\n     \n   \n\n", "id": "lists-005-11006993"}, {"subject": "Re: Continuation of comments on versioning draft -0", "content": "   From: \"Lisa Dusseault\" <lisa@xythos.com>\n\n   If you decide to keep LABEL, changed or unchanged, I think it will only be\n   useful as an advanced versioning feature, where it might work better in\n   conjunction with workspaces...  please, please do not require \"core\" support\n   for LABEL.\n\nIn advanced versioning, it is much more likely that a server will\nsupport baselines, and not try to fake it with labels.  So labels\nare primarily there for core versioning servers that don't want\nto implement baselines.\n\nNote that your server can do what it wants, e.g. expose the DAV:version-name\nas a label, and fail all explicit client attempts to use the LABEL method.\nThe only interoperability cost that you would incur would be that\na client would then not be able to label against your server.  But\nit would be able to checkout/checkin and all the other usual core\nversioning things.  \n\n   Section 11.2: DAV:successor-report\n   Must this be supported by core versioning?  With single-line-of-descent\n   versioning, I would think that this report wouldn't be particularly useful,\n   and would just be extra work.\n\nYou need this report (actually, it is now a property)\nto get a URL for the version that is the successor.\n\n   Section 11.3 DAV:checkout-report\n   Must this be supported by servers that only allow a single checkout to the\n   same URL as the version selector?  With a server that simple, all a user\n   needs to do is find out if the resource is currently checked out to get all\n   the information they would out of this report.\n\nJust knowing that a version is checked out doesn't tell you anything\nabout the current state of that checked out resource (i.e. it's\ncurrent content or properties or location).  Especially if the checked\nout resource is a working resource, it might be hard to find it otherwise.\n\n   Speaking of which, how do I find out who checked out a resource?\n\nBy looking at the DAV:creator-displayname of the checked-out resource\n(or any other relevant property of the checked-out resource).\n\n   Section 11.4.1\n   This example contains a \"latest-checkin-report\".  The response includes a\n   single XML element, DAV:href.  I'd like to see the name of the report\n   included in every report, so it would be clearer to the client what it's\n   receiving:\n\nIn 09, this has been converted to be a live property rather than a\nreport, so the issue no longer arises.\n\nAlso note that it is unclear whether including this in the response\nwould help a client that didn't know what it just asked for (:-).\n\n   Section 11.5, DAV:version-tree-report\n   It does make sense to have this supported by \"core\".  But, does it have to\n   be nested?  The simple and common case will be a single-line-of-descent\n   versioning history, which is inefficiently represented as nested.\n\nInefficiently represented?  Doesn't it just change where the closing\n</DAV:version-tree> tags appear?\n\nThe purpose of this report is to guarantee that a core client to get\nthe entire version tree in one request.  It could also do so with a\nDAV:property-report, but that report is not required by core.\n\nBTW, I also prefer a list of versions, which is why I prefer the\nthe DAV:property-report over the DAV:version-tree report, but I\ncouldn't convince the rest of the design team of this (:-).\n\n   Section 12, Advanced Versioning\n\n   I'd like to admit at this point that I didn't take as close a look at\n   Advanced versioning.  I'm primarily concerned with a reasonable set of\n   \"core\" features that can be useful, and _not_ _too_ _confusing_, for normal\n   people doing normal document authoring.\n\nIn general, we encourage reviewers to skim over the advanced features\nto see which ones they are interested in, and then look carefully at\nthat subset.  In your case, it sounds like that is primarily the\nversion history resource and the DAV:checkin-fork property.\n\nBut reviews on the whole thing are of course much appreciated!\n\n   That said, I do have a few comments.\n\n   Section 12.1, Terms\n   In the Baseline diagram -- thanks for which -- do V4 and V6 correspond to\n   versions that were created after the creation of the baseline?\n\nNot necessarily.  They are just the versions that happen to be the\ntargets of the members of the collection that was baselined.\n\n   Please specify whether that is a MUST.\n\nIt's not even a SHOULD.  It's just a MAY.\n\n  Can a baseline be created that refers to prior versins?\n\nYes, just set the targets of the members of your collection\nto be the appropriate set of prior versions.\n\n   Section 13.3, Activities, Change Sets and Branches\n   The description here of an Activity as a \"change set\" seems incompatible\n   with the description of an activity in \"terms\" as having only versions on a\n   single line of descent.\n\nWhy?  A change set would be ambiguous if it had versions on multiple\nlines of descent of a single version history.\n\n   Section 13.6, Automatic Version Control\n   How does the automatic creation of a versioned resource differ, in the\n   response, from the creation of a non-versioned resource?\n\nNot in any way required by the protocol.\n\n   If I, an\n   unsuspecting user, try to PUT a resource to a collection and it gets turned\n   into a versioned resource immediately, how do I know?\n\nBy knowing what repository you are working against ... some versioning\nrepositories only support versioned resources (i.e. they can't cope\nwith a mixture of versioned and unversioned resources).\n\n   Otherwise, I might\n   turn around and then try to version it!\n\nThat's OK.  The VERSION-CONTROL method is specifically defined to be a\nno-op in this case, to make life easier for clients.  So in general,\nfrom a protocol perspective, a client doesn't have to care whether a\nrepository automatically puts things under version control.\n\n   Section 14.2.1, DAV:version-history\n   Why isn't this property part of \"core\", if such complicated things as\n   \"version-tree-report\" are in \"core\"?\n\nNot being in \"core\" just means that it is not a required feature\nof a versioning server.  In particular, I expect *most* versioning\nservers to support the version repository resource.  I personally\nhave argued that the version history resource should be part of core,\nso I'm not the best one to defend it's not being in core (:-).\nIn particular, I believe Chris Kaler was the primary advocate of\nit not being in core.  \n\n   Is the version history totally\n   unaccessible from a \"core\" versioning server?\n\nBeing a \"core versioning\" server just sets the minimum for what you support.\nIn particular, any server can (and usually will) a significant number of\nthe advanced versioning properties, methods, and reports.\n\n   I notice there is a DAV:version-history for a version (14.2.1) and for a\n   working resource (14.3.1).  Are these the same?  How do they differ?\n   Could we have examples of the value of this property, particulary for the\n   diagrams that can be seen in section 13.5 or similar?\n\nIn 09.1, only a version has a DAV:version-history property.  \nIf you want to get the version history associated with a\nversion selector, you would get it from its DAV:target or\nDAV:checked-out version (you can get it with one round trip\nusing the DAV:property-report).\n\n   Section 14.5, Workspace Properties\n   How can you definitively tell if a collection is a workspace?\n\nGood point.  I'll add a DAV:workspace property (analogous to\nthat on a version selector).  Then you can just\ncheck if its DAV:workspace property identifies itself.\n\n   Can I convert a workspace to a collection and vice versa?\n\nNo.  You create a workspace with MKWORKSPACE.  You can create\na collection that is a copy of a workspace with the COPY method.\n\n   Section 14.5.1\n   Can you convert from a collection to a workspace by adding the\n   DAV:current-activity-set property to it?\n\nNo.  \n\n   Must DAV:current-activity-set be present if a collection is a workspace?\n\nNo (in particular, it would never be present if the server\ndid not support activities).\n\n   Section 16.10, CHECKIN\n   This implies that the merge-set and auto-merge-set must be empty before the\n   request can succeed.  How do they get empty?\n\nWith PROPPATCH (note that they are not protected properties).\n\n   It's not clear if MERGE is\n   supposed to empty those props, or if the user is supposed to manually.\n\nThe postconditions of MERGE specify the effect of MERGE on the\nmerge-set and auto-merge-set.  In particular, it adds values to\nthese properties, but never removes values.\n\n   Section 17.1, MKWORKSPACE\n   I'll suggest in a separate email that MKCOL be used for this...\n\nI believe that the most important part of the definition of a method\nis its list of postconditions.  The postconditions of MKWORKSPACE\ndiffer significantly from those of MKCOL, and therefore it would be\ninappropriate to use the same method for both.  This is of course\na value call, since \"differ significantly\" is not a well-defined term.\n\n   Section 17.2, MKACTIVITY\n   What does an Activity resource look like ?  What properties does it support?\n\nSee the section 14.7: \"Activity Properties\"\n\n   Does it have a resource type?\n\nYes, required to be DAV:activity.\n\n   Does it have an owner?\n\nUp to the server.\n\n   Can you delete it?\n\nUp to the server, but if so, you'd use the DELETE method to do so.\n\n   Can you GET it?  Can you PUT it?\n\nSee sections 16.2 and 16.2.  Yes, you can, but the result is undefined\nby this protocol.\n\n   Can you PROPPATCH it? \n\nSure (you can PROPPATCH any resource).\n\n   How about MOVE/COPY?\n\nUp to the server.\n\n   Who has permissions on it?\n\nWe'll have to wait for the ACL protocol to answer that question.\n\n   Can you LOCK it?\n\nSure.\n\n   Can an \"Activity\" select versions from anywhere? \n\nYes (although a versioning server will commonly restrict them\nto being from the same repository).\n\n   How does it represent them ?\n\nAs members of its DAV:version-set.\n\n   How do you change the set of versions selected by an Activity?\n\nBy modifying the DAV:activity-set of a version, which is done\nby CHECKIN (or possibly PROPPATCH, if a server allows that).\n\n   Are MKACTIVITY and the corresponding \"activity\" resource necessary at all?\n\nAn activity has several key properties in this protocol, as well as \nall the dead/live properties that a change request\nmanagement or activity management system will want to define.\n\n   It seems that an Activity resource only exists so that it can have its URL.\n   Well, that seems stupid.\n\nDon't forget the properties (:-).\n\n   The client can easily generate a unique string --\n   how about a UUID?  -- and use that for an Activity string.\n   A more sensible readable string may even be possible, like\n   \"lisa@xythos.com,20001002T15:38,myactivity\".  Then the user just has to add\n   that to the activity-set for everything in that activity.\n   This would help reduce the load on the server.\n\nYou need a URL to apply a method (such as MERGE) to it,\nor to access it's properties (such as its DAV:version-set).\n\n   Otherwise, does the server\n   have to check everytime the activity-set is changed, to see if the\n   activities are all valid, existing activity resources?\n\nYes, just like it has to check whenever you update a property of any\nother resource (i.e. that there really is such a resource).  (That's\nit's job, after all :-).\n\n   Section 17.3, BASELINE-CONTROL\n   This is really confused.  I think this needs much more explanation of what\n   the model is before it's implementable.  What kinds of resources are you\n   supposed to be able to apply this method to?\n\nSee the preconditions of the method.  In particular, DAV:must-be-collection.\n\n   What does it do to the resource?\n\nSee the postconditions.  It sets the DAV:baseline-selector of the\ncollection to be a newly created baseline selector.  A baseline selector\nselects a baseline from a baseline history, just as a version selector\nselects a version from a version history.  This baseline selector\ncan then be checked out and in to create baselines of the collection.\n\n   Can you have multiple baselines for a single workspace, as the model\n   implies?\n\nA workspace can have several members that are baselined collections.\nEach of these baselined collections have an associated baseline selector\nwhose target is a particular baseline.  So in this sense, yes, a single\nworkspace can have multiple baselines (one from each of the baselined\ncollection members).\n\n   The model says you can only convert workspaces to baselines, but this\n   section says  you can convert collections to baselines.\n\nThat was a bug in the 08 draft ... you used to only be able to baseline\na workspace collection, but in 09, this was extended to allow you to\nbaseline any collection ... in particular, you can have baselined collections\non a server that does not support workspaces.\n\n   The new \"baseline selector\" resource that is created as a result of this\n   request is underspecified.  What is it? What properties does it have?  Can\n   you delete it?  What happens if you GET it?  What happens if you PROPFIND\n   it?\n\nGood point!  This should have been defined in the advanced versioning\nTerminology section.  The answer is that a baseline selector is just a\nversion selector whose target happens to be a baseline version.  So\nits properties and methods are just those of any other version\nselector.\n\n   Last comment, refering to no particular section:  I think the draft did a\n   bit of a poor division between \"core\" and \"advanced\" with the\n   \"version-history\" stuff.  Please take another look at what goes where; most\n   of the \"version history\" properties are specified under \"advanced\".  thanks.\n\nChris, would you like to respond to this?  You're our designated \"version\nhistory should not be in core\" advocate (:-).\n\n   I think that's enough for this mail!\n\nLisa, I would like to especially thank you for taking the trouble to\nlook over the advanced sections that probably weren't of direct interest\nto your clients or servers!  I will try to post a 9.2 draft that \ncontains the fixes/changes based on your comments by the end of the\nweek.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-11093452"}, {"subject": "Re: Fewer new versioning methods, please", "content": "Note:  I'll omit issues that have already been addressed in previous\npostings.\n\n\n   From: \"Lisa Dusseault\" <lisa@xythos.com>\n\n   General principles:\n    - New methods require new code.  Old methods may allow reuse of more,\n   perhaps all code, either on the client or the server or both.\n\nNew methods do not necessarily require much new code.  They just\nrequire new entry points that are free to call existing code whenever\nappropriate.\n\n    - New methods require new specification.  This seems easy, but I find the\n   cost to be actually high.  Don't forget, not only must the draft-writers\n   define the new method in all its combinatorial glory, but also every\n   implementor has to fill in the holes which necessarily exist. \n\nA new method does require a new specification, but this can be based\non inheritance or delegation (i.e. this is the same as foo but adds\nthe following postconditions).  This the approach taken by the\nadvanced versioning extensions to the core versioning methods.\n\nWhether or not the extension has a new method name or not shouldn't\naffect this much one way or the other.\n\n    - New methods may require firewall or proxy attention.  What if the\n   adminstrator forgets to add MKACTIVITY to the list of methods that their\n   firewall allows?\n\nIf you care about firewall penetration, then you'll just use CONNECT,\nbecause you can't be sure that even PROPPATCH will make it through.\n\n   The specific commands I'd like to see NOT invented:\n\n   SET-TARGET\n   ----------\n\n   Here is a case where I strongly feel that too much extra implementation (and\n   specification, and test) effort is required to implement this functionality\n   with new methods.  Isn't this an easy one to replace with PROPPATCH?\n\nNot on the server side, because the content and all the dead\nproperties have to be updated as well, and there is nothing in\nexisting PROPPATCH that will do this.\n\n   The\n   only reason I can imagine for having a new method is so that I can name a\n   version-name or label in SET-TARGET, and the server can then turn around and\n   put the full version URL in the DAV:target property.  But it doesn't seem\n   that versions have URLs any more, or at least I'm confused about whether you\n   have version URLs any more.\n\nYes, versions have URL's.  We just don't use a special name like\n\"version URL's\" for them anymore.  (After all, there had to be\nsomething in all those properties containing href's that refer to versions :-).\n\n   LABEL\n   -----\n\n   I would even prefer a new method called \"ADDPROPVALUE\" or \"MVPROPPATCH\" or\n   \"ADDVALUE\" that serves to add a new value to any multi-value prop, rather\n   than this extremely specialized LABEL method.\n\nClients need a reliable way of saying \"fail if this label is already\nset on another version\".  They also need a way of saying \"remove this\nlabel from another version if its already on that other version\".\nThere's no way of making this important distinction with a simple\nPROPPATCH.\n\n   VERSION-CONTROL\n   ---------------\n\n   Obviously, the server needs to have special code to deal with the case where\n   \"isversioned\" is changed with a PROPPPATCH: it needs to set a few other\n   properties and create a version-history.  The server would have to have\n   special code to deal with VERSION-CONTROL, too.\n\nAnd a new initial version ... this seems like a lot of side effects for\nsetting a boolean property to \"T\".\n\n   I'd like to note, however, that you shouldn't require a version-history to\n   be created when a resource is made versioned.  There's only one version at\n   the time, the \"current\" one.  The server can easily go create the\n   version-history when the second version is created.  This improvement, which\n   I recommend anyway, makes the \"isversioned\" property even easier to\n   PROPPATCH.\n\nThis does make the model significantly less regular, for little\nobvious benefit.\n\n   I know this one is a little difficult, but I have a strong reason to ask for\n   it:  current state of DAV client APIs.   I'd like to be able to use an\n   existing DAV client library and start do do versioning without a lot of\n   extra trouble.  This is mostly possible:  with auto-versioning, I don't need\n   to do CHECKOUT and CHECKIN; mostly RFC2518 actions can be used to interact\n   with versioned resources.   The more behaviour we allow with PROPPATCH\n   instead of SET-TARGET and VERSION-CONTROL, the closer we come to quick and\n   easy client implementation.  I may even be able to use a completely\n   un-altered DAV client, as long as it allows me to enter in values to set for\n   random properties: just turn versioning ON with PROPPATCH, and I've now got\n   a version history,  Although it may be difficult for me to navigate to old\n   versions immediatley, at least I know they're there.\n\nIt doesn't seem likely that a generic PROPPATCH client will make a\nvery effective versioning client, so it doesn't seem like a\ncompelling reason to force the protocol through the property mechanism.\n\n   UNCHECKOUT\n   ----------\n\n   This is a minor one, but I thought that UNCHECKOUT might as well be modeled\n   as a CHECKIN with \"cancel-checkout\" in its body.  It seems much simpler to\n   state requirements then -- \"A CHECKOUT must be followed by a number of write\n   operations, followed by a CHECKIN\".\n\nActually, I proposed this a while back, and it didn't get a warm\nreception.  I didn't really care that much one way or another, so I\njust let it drop.\n\n\n   BASELINE-CONTROL\n   ----------------\n\n   Like VERSION-CONTROL, I believe this can be done with PROPPATCH.  First, it\n   sets the \"DAV:baseline-selector\" on the collection.  That's easily done with\n   PROPPATCH.\n\n   The other is more complicated, and would require a little rethinking but the\n   result is I think an easier model all around.  It requires not having a\n   resource that is a \"baseline selector\".  What is the point of this resource?\n   Why isn't the information contained in this resource instead part of the\n   property set of the baseline collection itself?  Does a baseline selector\n   have a URL?  Can it be deleted?  Who is the owner?  What properties does it\n   have?   Where is it located?  How do I delete a baseline -- do I have to\n   delete the baseline selector resource AND proppatch the\n   \"DAV:baseline-selector\" property on the collection?  Can the two be\n   inconsistent?  What about the period of time inbetween the two actions?\n\nA baseline selector is just a version selector, where the versions happen\nto be baselines.  So a baseline selector just has all the properties and\nmethods of a version selector.  This makes it very simple and regular to model.\n\n   I do feel that MERGE is a completely appropriate new method, doing something\n   quite unlike any previous method. Just to prove I know some moderation.  :)\n\nOK, we'll keep MERGE then (:-).\n\nThe most vocal advocate of new methods for everything was Chris Kaler\n(he even wanted separate methods for querying version information,\nand not even use properties for that).  So we seem to have ended up\nin a compromise between your position and Chris's position ... new methods\nfor operations that have side effects beyond setting the value of a\nsingle property, but using properties to determine the current versioning\nstate.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-11114494"}, {"subject": "Re: A bit more on MERG", "content": "   From: \"Lisa Dusseault\" <lisa@xythos.com>\n\n   \"The MERGE method is responsible for determining\"... I suspect this should\n   read \"The server is responsible for determining\", or possibly, \"The MERGE\n   method contains the information necessary to determine\".\n\nWhat is the difference between \"The MERGE method is responsible\" and\n\"The server is responsible\" ?  \n\n   How can a collection of version selectors be a destination? Are they _all_\n   the destination?\n\nA collection can be the Destination, and then it is up to the MERGE\nmethod to determine for each version identified by the request URL,\nwhich version selector in that collection should be the merge\ndestination of that version.\n\n   How can a request-URL identify a version?\n\nEvery version has a URL (assigned to it by the server).  Or the\nrequest URL can identify an activity or a baseline, in which case all\nversions in that resource's DAV:version-set are merged.\n\n   Rather than have the request-URL be an activity, I'd prefer to see the\n   activity named in the body of the MERGE.\n\nThat would be fine with me, and then we could have the request-URL\nidentify the merge destination (and not have to use the Destination\nheader).  Does anyone else care?\n\n   Is the server supposed to use the values of the \"merge-set\" and\n   \"auto-merge-set\" properties when performing the MERGE?\n\nNo, the MERGE is responsible for setting (or updating) the merge-set\nand auto-merge-set properties.  I'll update the protocol to make this\nclearer.\n\n   (I'm still confused about whether the merge-set and auto-merge set\n   properties are supposed to be cleared after a MERGE, to allow a CHECKIN, or\n   whether they should stay around for information).\n\nThe client is required to clear the merge-set and auto-merge-set\n(normally, moving those URL's to the predecessor-set), before that\nversion selector can be checked in.  I'll add some sentences to\nemphasize this in the MERGE method introduction.\n\n   \"If the merge destination is a working resource, the request version is\n   added to the DAV:merge-set\"... Why is it added, if the client intentionally\n   left it out?\n\nThe server sets it, not the client.  The purpose of the MERGE\noperation is to have the server, not the client, figure out what needs\nto be merged.\n\n   What is \"the request version\" -- I thought there could be\n   several according to the introductory paragraph on MERGE?\n\nThis are a set of request versions.  This sentence indicates what\nis done with each of them.\n\n   And, do you mean\n   that the \"request version\", whichever it is, is added to the DAV:merge-set\n   property only, or that it is actually added to the set of documents being\n   merged?\n\nWhat does \"actually added to the set of documents being merged\" mean?\n\n   \"If the merge destination is a version selector whose target is neither a\n   descendant nor an ancestor of the request version...  The merge destination\n   URL MUST appear in the DAV:update-set\".  But I don't see this done in the\n   example.  Perhaps along \"descendent or ancestor\" you allow \"parent\"?\n\nEach merge destination URL will be some member of the collection identified\nby the Destination  header (as is the case for the example).  What did you\nexpect to see in the example that wasn't there?\n\n   I finally noticed here that activities are supposed to have sub-activities.\n   Please specify how this is done.\n\nBy PROPPATCH'ing the DAV:sub-activity property of the activity\n(it's not a protected property).\n\n   I couldn't find where activities are\n   updated, or linked to sub-activities.\n\nThey are updated by CHECKIN, and can also be updated by PROPPATCH'ing\nthe DAV:activity-set of a version, if the server allows that.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-11128606"}, {"subject": "More detailed responses to responses... (was RE: Review of draft -08", "content": "[this mail has well-indented sections from an earlier mail from me, sections\nby <tim>, less-indented paragraphs are by geoff, and ends with my text\nagain...]\n\n>    Section 5.2.6, DAV:version-name\n>    Refers to Version URL. Where is this defined?\n>\n>    <tim> It isn't :-(\n>\n> In the 9.1 draft, all remaining uses of the phrase \"version URL\"\n> have been replaced by \"URL that identifies a version\".\n>\n\nHow do clients discover the \"URL that identifies a version\"?  I would think\nit would be useful, though perhaps not required, to have this be\ndiscoverable in a standard way.\n\n>    Section 5.3, Version Selector Properties\n>    How does a client definitively figure out if a URL points to a \"Version\n>    Selector\", a version history, or a regular resource?\n>\n> Wouldn't it find out what it needs to know by asking the resource\n> what methods, live properties, and reports it supports?\n\nI'm not so sure... Since there's already so much variation in server\nimplementation possibilities (auto-versioning, automatic creation of\nversioned resources, what URLs of versions look like, etc.)  I'd rather not\nleave that up to the guesswork of the client.  I could imagine a resource\nthat \"used to be\" versioned appearing very much like a resource that is\ncurrently versioned.  A definitive property that declares whether a resource\nis a version selector, a version, or a version history would clearly fix\nthis.\n\n>    Section 6.1, Overwrite\n>    Does this section imply that doing a PUT, POST, COPY or MOVE with a\n>    destination URL that is versioned with \"Overwrite: T\" header\n> should delete\n>    all the version history and replace the versioned resource\n> with either a\n>    non-versioned resource -- or a versioned resource whose\n> history has been\n>    deleted??  Please, please, say no -- versioning-unaware clients will\n>    constantly be stomping on version-history if we define it this way.\n>\n> I assume that by \"versioned resource\", you mean \"version selector\"?\n> The deletion of a version selector (resulting from Overwrite:T) has\n> no affect on the version that is the target of that version selector,\n> nor on the version history of that version.  They are three distinct\n> and disjoint resources (in fact, in core versioning, you have no way\n> of naming a version history resource, much less delete it).\n\nOK, I'm confused.  I'm concerned about servers that support auto-versioning\nhere, so for those servers...\n\nIf I do a PUT to a version selector, isn't that interpreted as a write to\nthe resource whose versions are represented by the version selector?\nDoesn't the version selector \"pass through\" most requests somehow?  Doesn't\nthe use of VERSION-CONTROL turn the target -- say \"foo.doc\" -- from a\nregular resource into a version selector which points a version with the\ncontents that used to be in \"foo.doc\"?  I thought a PUT to \"foo.doc\", when\n\"foo.doc\" is actually not a single-versioned resource but a version selector\nwhich points to one of a selection of versions, would result in a creation\nof a new version.  If that is true, then how is PUT with Overwrite:T\npossibly going to overwrite the version selector?\n\n>    Please clarify if \"overwrite:F\" should result in no write at all if a\n>    versioned resource exists at the destination.\n>\n> Again, I assume you mean \"version selector\".  (Note to design team:\n> think of the confusion that would have resulted if we had used\n> the term \"versioned resource\" to mean \"version history\" :-).\n>\n> Overwrite:F has its usual semantics, namely abort the operation if\n> a resource exists at the destination.\n\nOK, I like that -- it doesn't violate the principle of least-surprise.\nPlease at least recommend that in the draft.\n\n\n>    What if the source resource is not versioned, and the target is?\n>    Surely what the user intends is to make the contents of the source\n>    become the newest version at the target, not to delete the whole\n>    version history!  Imagine I'm working in my personal directory on\n>    some code/document, and when I've got it in a good/tested state, I\n>    decide to put it into the shared code/document area, where files\n>    are under version control.  Surely COPY is the natural way to do\n>    this.\n>\n>    <tim> The natural way would, I suggest, be to checkout the destination\n>    resources, update them with your personal directory contents,\n> and checkin\n>    the updates.\n>\n> I agree. In particular, if you have done any resource moving/renaming\n> in your personal directory, you'd better do those moves/renames in the\n> versioned area before doing your updates.\n\nFine, but neither of these answers answered my question.  What if in a COPY\nthe source resource is not versioned, and the target is a version selector?\nI'd propose that the behaviour be to use the source content to create a new\nversion with that content at the destination.\n\n\n>    Section 10.1 - VERSION-CONTROL\n>    I would prefer not to have a separate method for this.  Would we need a\n>    separate method for making something auto-versioned as well?\n> I understand\n>    the desire to convert an existing resource to a versioned resource; it\n>    should be done with PROPPATCH since we've already got that method.\n>\n> VERSION-CONTROL does a lot more than just update a property on the\n> resource identified by the request-URL.  It also creates a version history\n> resource, and creates an initial revision in that version history.  I\n> believe it would be misleading to make that all be the side effect of\n> a PROPPATCH.\n\nWhy is this misleading?  Why is this any worse than auto-creation of\nversioned resources, as proposed in the draft?\n\n\n>    I am\n>    specifically thinking of clients here, and how they can make\n> fewer requests\n>    (particularly when creating a new, versioned resource) and\n> client coders\n>    would write less special-purpose code (less bugs!).  As a server\n>    implementor, this new method isn't as big a deal since I know\n> I'd have to\n>    treat the property specially instead.\n>\n> When used to create a version selector for an existing version history,\n> the VERSION-CONTROL method takes two arguments: the location of the\n> new version selector, and the version that should be its initial target.\n> There's no way to marshal both arguments in a PROPPATCH.\n>\n> In any case, I don't see how you save any code by having PROPPATCH\n> dispatch to your version control routine instead of having the\n> VERSION-CONTROL method dispatch to the exact same routine.\n\nLike I said, it's not the server that saves code in this particular\ninstance, but the client.  Clients that do versioning intelligently may be\npossible with existing client APIs if we do this carefully -- with\nPROPPATCH.\n\nOn the server side, it isn't code that is conserved, but testing and\nspecification effort may be.  It's easier to adapt a test suite that already\nhas PROPPATCH; it's easier to specify how PROPPATCH of a new prop should\nwork than to specify a whole new METHOD (with attendant headers, how does\neach header interact with method, errors, etc).\n\n\n>    ... If a resource is already\n>    checked out -- can a \"core-compliant\" server refuse the\n> CHECKOUT request?\n>\n> The server can refuse any command (heck, it's the server after all :-).\n>\n> To declare this behavior, set the (optional) DAV:checkout-fork property\n> to DAV:forbidden (see section 14.1.3).  Then you would return a 409 status\n> with <DAV:checkout-of-checked-out-version-is-forbidden/> in the response\n> body of the CHECKOUT request.\n\nExcellent.  Please put this in the draft.\nWe also need <DAV:multiple-checkouts-forbidden/> for servers which not only\ndo not allow checkout of a version that has already been checked out, but\nalso do not allow checkout on any version of a resource for which any\nversion has already been checked out.\n\n>    Can you do a CHECKIN if you haven't done a CHECKOUT?\n>\n> Depends what you mean by \"you\".  You can do a CHECKIN on any resource\n> that is checked out (i.e. a checked-out version selector or a working\n> resource), assuming that a write lock does not prevent you from doing so.\n\nSo clients are recommended to LOCK, CHECKOUT, PUT, CHECKIN, UNLOCK if they\nwant to prevent other checkins in the meantime?  Fair enough.\n\n\n>    Section 10.5, SET-TARGET\n>    I'm proposing, in a separate mail, that this be replaced with\n> PROPPATCH of\n>    the DAV:target property.\n>\n> This would be a PROPPATCH with a very major side effect.  In particular,\n> not only would it update the DAV:target property, but it would update\n> the content and all the dead properties of the version selector as well.\n> That's way too many side effects for my taste.\n\nWhy is it fine for a new method to have a bunch of side effects, but not for\nPROPPATCH of a new property?\n\nIt's simple to design the property such that ignorant clients are extremely\nunlikely to set the property ignorantly and surprise themselves.  Just make\nthe only valid values of the \"DAV:target\" property be values which the\nclient/user would be unlikely to come up with at random.  I think my\nrecommendation fit that bill, because it ensconced the URL in a <href> tag,\nthe name in a <name> tag, etc.\n\nSo if a server supports putting a URL to a version in \"DAV:target\", you\nwould set (in the body of the PROPPATCH):\n  <D:target><D:href>http://foo.bar/my.doc,1</D:href></D:target>\n\nIf the server supports putting a label in \"DAV:target\", you would set\n  <D:target><D:label>beta2</D:label></D:target>\n\nFinally, if the server supports putting a version-name in a \"DAV:target\",\nyou would set\n  <D:target><D:version-name>beta2</D:version-name></D:target>\n\nWhy is this any more dangerous than SET-TARGET?  It's no more likely to be\nused accidentally!\n\n\nA thought to throw out:  I would support replacing SET-TARGET and\nVERSION-CONTROL (maybe LABEL, and maybe a couple others) with a new method\nthat treats \"settings\" (things with side effects) differently from\n\"properties\".\n\nSo we could name this \"SET\" (or \"SETTINGPATCH\" or \"CHANGE-SETTING\" if you\nwant verbosity); It would be very similar to PROPPATCH in syntax.\n - This method would only be used to change one setting at a time, since\nchanging multiple settings at a time brings up concerns of the interactions\nand order of application.\n - Atomicity wouldn't be a concern if it only changes one setting at a time.\n - We would only have to define syntax once -- whether depth is allowed, how\nother headers might apply, what errors can be returned -- rather than define\nsyntax every time we want to do something similar to this in any DAV-related\nprotocol design effort\n - It would be a good \"bundle\" of activity -- like PROPPATCH -- to which a\nsingle permission might reasonably be applied\n\nLisa\n\n\n\n", "id": "lists-005-11139035"}, {"subject": "Re: More detailed responses to responses..", "content": "See <tim2> tags below...\n\n\n>    Section 5.2.6, DAV:version-name\n>    Refers to Version URL. Where is this defined?\n>\n>    <tim> It isn't :-(\n>\n> In the 9.1 draft, all remaining uses of the phrase \"version URL\"\n> have been replaced by \"URL that identifies a version\".\n>\n\nHow do clients discover the \"URL that identifies a version\"?  I would think\nit would be useful, though perhaps not required, to have this be\ndiscoverable in a standard way.\n\n<tim2> The URL for a version (along with those of its peers) can be found\nfrom the history resource property <DAV:version-set>, or a particular\nversion identified by a target selector is found in the <DAV:target>\nproperty of the selector.\n\n>    Section 5.3, Version Selector Properties\n>    How does a client definitively figure out if a URL points to a\n\"Version\n>    Selector\", a version history, or a regular resource?\n>\n> Wouldn't it find out what it needs to know by asking the resource\n> what methods, live properties, and reports it supports?\n\nI'm not so sure... Since there's already so much variation in server\nimplementation possibilities (auto-versioning, automatic creation of\nversioned resources, what URLs of versions look like, etc.)  I'd rather not\nleave that up to the guesswork of the client.  I could imagine a resource\nthat \"used to be\" versioned appearing very much like a resource that is\ncurrently versioned.  A definitive property that declares whether a\nresource\nis a version selector, a version, or a version history would clearly fix\nthis.\n\n<tim2> I agree.  The spec does give definitive rules for identifying types\nby the presence of properties, but this is IMHO a suboptimal way of doing\nbusiness.  Someone (you know who you are<g>) was going to check to see if\nwebfolders would work in the face of 'strucured' resource type values, and\nif we could be backwards compatible, this would be my preference (i.e., a\nresource type would be <DAV:collection><DAV:version-selector/>... etc.)\nFailing this approach, a separate property would be good.\n\n>    Section 6.1, Overwrite\n>    Does this section imply that doing a PUT, POST, COPY or MOVE with a\n>    destination URL that is versioned with \"Overwrite: T\" header\n> should delete\n>    all the version history and replace the versioned resource\n> with either a\n>    non-versioned resource -- or a versioned resource whose\n> history has been\n>    deleted??  Please, please, say no -- versioning-unaware clients will\n>    constantly be stomping on version-history if we define it this way.\n>\n> I assume that by \"versioned resource\", you mean \"version selector\"?\n> The deletion of a version selector (resulting from Overwrite:T) has\n> no affect on the version that is the target of that version selector,\n> nor on the version history of that version.  They are three distinct\n> and disjoint resources (in fact, in core versioning, you have no way\n> of naming a version history resource, much less delete it).\n\n<tim2> If you meant that the destination was a version, the PUT/POST/...\nwould fail outright, if the destination were a version selector...(see\nbelow)\n\nOK, I'm confused.  I'm concerned about servers that support auto-versioning\nhere, so for those servers...\n\nIf I do a PUT to a version selector, isn't that interpreted as a write to\nthe resource whose versions are represented by the version selector?\n\n<tim2> No, a version selector is a resource in its own right, with content\nand properties.  Implementation aside, think of a checked in version\nselector as an immutable copy of a version whose DAV:target indicates where\nit was copied from.  Checking out such a version selector opens the copy\nfor change ('in place'), and updates via PUT/whatever to the version\nselector are 'isolated' from other versions and the history of the resource\nassociated with the version selector.  When you checkin the version\nselector it marks it as immutable and copies the content & dead properties\ninto a new version (in the version history).\n\n<tim2> As I said, you wouldn't want to implement it this way, but that's\nhow I choose to think about it.\n\n<tim2> Now if you think about how version selectors react when they are the\ndestination of a method, it makes more sense.\n\nDoesn't the version selector \"pass through\" most requests somehow?\n\n<tim2> No, the 'redirector model' leads to the wrong conclusions about the\ndelta v behaviour.  You are not the first to adopt this model from reading\nthe spec.\n\nDoesn't\nthe use of VERSION-CONTROL turn the target -- say \"foo.doc\" -- from a\nregular resource into a version selector which points a version with the\ncontents that used to be in \"foo.doc\"?  I thought a PUT to \"foo.doc\", when\n\"foo.doc\" is actually not a single-versioned resource but a version\nselector\nwhich points to one of a selection of versions, would result in a creation\nof a new version.  If that is true, then how is PUT with Overwrite:T\npossibly going to overwrite the version selector?\n\n<tim2> Hopefully thinking about it as described above will fix this.\n\n>    Please clarify if \"overwrite:F\" should result in no write at all if a\n>    versioned resource exists at the destination.\n>\n> Again, I assume you mean \"version selector\".  (Note to design team:\n> think of the confusion that would have resulted if we had used\n> the term \"versioned resource\" to mean \"version history\" :-).\n>\n> Overwrite:F has its usual semantics, namely abort the operation if\n> a resource exists at the destination.\n\nOK, I like that -- it doesn't violate the principle of least-surprise.\nPlease at least recommend that in the draft.\n\n\n>    What if the source resource is not versioned, and the target is?\n>    Surely what the user intends is to make the contents of the source\n>    become the newest version at the target, not to delete the whole\n>    version history!  Imagine I'm working in my personal directory on\n>    some code/document, and when I've got it in a good/tested state, I\n>    decide to put it into the shared code/document area, where files\n>    are under version control.  Surely COPY is the natural way to do\n>    this.\n>\n>    <tim> The natural way would, I suggest, be to checkout the destination\n>    resources, update them with your personal directory contents,\n> and checkin\n>    the updates.\n>\n> I agree. In particular, if you have done any resource moving/renaming\n> in your personal directory, you'd better do those moves/renames in the\n> versioned area before doing your updates.\n\nFine, but neither of these answers answered my question.  What if in a COPY\nthe source resource is not versioned, and the target is a version selector?\nI'd propose that the behaviour be to use the source content to create a new\nversion with that content at the destination.\n\n<tim2> With overwrite 'T' you would blow away the version selector with the\nnew copy of the source.  Whether it was versioned or not is server\ndependent (as for all newly created resources).\n\n>    Section 10.1 - VERSION-CONTROL\n>    I would prefer not to have a separate method for this.  Would we need\na\n>    separate method for making something auto-versioned as well?\n> I understand\n>    the desire to convert an existing resource to a versioned resource; it\n>    should be done with PROPPATCH since we've already got that method.\n>\n> VERSION-CONTROL does a lot more than just update a property on the\n> resource identified by the request-URL.  It also creates a version\nhistory\n> resource, and creates an initial revision in that version history.  I\n> believe it would be misleading to make that all be the side effect of\n> a PROPPATCH.\n\nWhy is this misleading?  Why is this any worse than auto-creation of\nversioned resources, as proposed in the draft?\n\n<tim2> I'll let Geoff clarify his own comments, but I suspect he meant that\nyou though you were doing a simple property update from False to True, and\nhey presto the server disk is going mad creating a bunch of new resources\nas a side-effect -- that may mislead clients that thought it was a simple\nproppatch.\n\n<tim2> I believe that it would be worse than auto-creation of versioned\nresources since at least the client is making a resource creation request\nin this case, and for servers that version everything, creatig a new\nversioned resource is probably an optimized operation for them.\n\n>    I am\n>    specifically thinking of clients here, and how they can make\n> fewer requests\n>    (particularly when creating a new, versioned resource) and\n> client coders\n>    would write less special-purpose code (less bugs!).  As a server\n>    implementor, this new method isn't as big a deal since I know\n> I'd have to\n>    treat the property specially instead.\n>\n> When used to create a version selector for an existing version history,\n> the VERSION-CONTROL method takes two arguments: the location of the\n> new version selector, and the version that should be its initial target.\n> There's no way to marshal both arguments in a PROPPATCH.\n>\n> In any case, I don't see how you save any code by having PROPPATCH\n> dispatch to your version control routine instead of having the\n> VERSION-CONTROL method dispatch to the exact same routine.\n\nLike I said, it's not the server that saves code in this particular\ninstance, but the client.  Clients that do versioning intelligently may be\npossible with existing client APIs if we do this carefully -- with\nPROPPATCH.\n\nOn the server side, it isn't code that is conserved, but testing and\nspecification effort may be.  It's easier to adapt a test suite that\nalready\nhas PROPPATCH; it's easier to specify how PROPPATCH of a new prop should\nwork than to specify a whole new METHOD (with attendant headers, how does\neach header interact with method, errors, etc).\n\n\n>    ... If a resource is already\n>    checked out -- can a \"core-compliant\" server refuse the\n> CHECKOUT request?\n>\n> The server can refuse any command (heck, it's the server after all :-).\n>\n> To declare this behavior, set the (optional) DAV:checkout-fork property\n> to DAV:forbidden (see section 14.1.3).  Then you would return a 409\nstatus\n> with <DAV:checkout-of-checked-out-version-is-forbidden/> in the response\n> body of the CHECKOUT request.\n\nExcellent.  Please put this in the draft.\nWe also need <DAV:multiple-checkouts-forbidden/> for servers which not only\ndo not allow checkout of a version that has already been checked out, but\nalso do not allow checkout on any version of a resource for which any\nversion has already been checked out.\n\n>    Can you do a CHECKIN if you haven't done a CHECKOUT?\n>\n> Depends what you mean by \"you\".  You can do a CHECKIN on any resource\n> that is checked out (i.e. a checked-out version selector or a working\n> resource), assuming that a write lock does not prevent you from doing so.\n\nSo clients are recommended to LOCK, CHECKOUT, PUT, CHECKIN, UNLOCK if they\nwant to prevent other checkins in the meantime?  Fair enough.\n\n<tim2> Taking out a lock on a version selector will prevent other PUTs on\nthe version selector, and prevent others from checking it back in, but it\nwon't prevent other checkouts of the version (via othe version selectors or\nworking resources), or other versions of the resource.\n\n>    Section 10.5, SET-TARGET\n>    I'm proposing, in a separate mail, that this be replaced with\n> PROPPATCH of\n>    the DAV:target property.\n>\n> This would be a PROPPATCH with a very major side effect.  In particular,\n> not only would it update the DAV:target property, but it would update\n> the content and all the dead properties of the version selector as well.\n> That's way too many side effects for my taste.\n\nWhy is it fine for a new method to have a bunch of side effects, but not\nfor\nPROPPATCH of a new property?\n\nIt's simple to design the property such that ignorant clients are extremely\nunlikely to set the property ignorantly and surprise themselves.  Just make\nthe only valid values of the \"DAV:target\" property be values which the\nclient/user would be unlikely to come up with at random.  I think my\nrecommendation fit that bill, because it ensconced the URL in a <href> tag,\nthe name in a <name> tag, etc.\n\nSo if a server supports putting a URL to a version in \"DAV:target\", you\nwould set (in the body of the PROPPATCH):\n  <D:target><D:href>http://foo.bar/my.doc,1</D:href></D:target>\n\nIf the server supports putting a label in \"DAV:target\", you would set\n  <D:target><D:label>beta2</D:label></D:target>\n\nFinally, if the server supports putting a version-name in a \"DAV:target\",\nyou would set\n  <D:target><D:version-name>beta2</D:version-name></D:target>\n\nWhy is this any more dangerous than SET-TARGET?  It's no more likely to be\nused accidentally!\n\n<tim2> Without wanting to be dragged into the merits or otherwise of doing\nthese significant operations on the server by virtue of a property change\n... oh, I think I just did get dragged into it <g>\n\nA thought to throw out:  I would support replacing SET-TARGET and\nVERSION-CONTROL (maybe LABEL, and maybe a couple others) with a new method\nthat treats \"settings\" (things with side effects) differently from\n\"properties\".\n\nSo we could name this \"SET\" (or \"SETTINGPATCH\" or \"CHANGE-SETTING\" if you\nwant verbosity); It would be very similar to PROPPATCH in syntax.\n - This method would only be used to change one setting at a time, since\nchanging multiple settings at a time brings up concerns of the interactions\nand order of application.\n - Atomicity wouldn't be a concern if it only changes one setting at a\ntime.\n\n<tim2> Depends upon the effects of changing that setting.\n\n - We would only have to define syntax once -- whether depth is allowed,\nhow\nother headers might apply, what errors can be returned -- rather than\ndefine\nsyntax every time we want to do something similar to this in any\nDAV-related\nprotocol design effort\n\n<tim2> Ahh, but you would have to define what all the setting were, valid\nvalues, interactions, etc.\n\n - It would be a good \"bundle\" of activity -- like PROPPATCH -- to which a\nsingle permission might reasonably be applied\n\nLisa\n\n\n\n", "id": "lists-005-11157214"}, {"subject": "Re: labels and case sensitivit", "content": "Sorry for the delay in response, practical realities can take precedence.\n\nMost of these issues were dealt with in the early nineties by widespread\nindustry groups such as the Unicode Consortium (www.unicode.org) or\nXOpen standards such as XPG4 in 1992 (www.opengroup.org).\n\nI find it difficult to believe the rules for case-insensitive comparison\nare that difficult to grasp, though I admit the implementations for the\nold 8-bit character representations had to deal with the fundamental\nambiguities of context dependent mappings and can be pretty hairy\nreading. The solution for such implementation problems of course is to\nagree on the context or to remove the ambiguities in the character set\nrepresentations. The latter means either restricting use to the POSIX\nsubset of all locales, or using one of the \"universal\" sets like Unicode.\n\nInstead of 8-bit string functions such as strcoll, you might want to look \nat the WCS equivalents in most standard libraries. Issues such as no upper\nor lower case form are smoothly handled by towupper(), towlower(). If\nyou are concerned about equivalent forms (which is stretching things for\ncase insensitivity), try wcscoll(). Most of the major programming \nenvironments, Java, Windows, and commercial Unix variants should have all \nthe implementation tools needed. Many have a function such as wcsicmp(), \nor String.equalsIgnoreCase().\n\nI believe the current draft mandates UTF8-Unicode as the format for\nexchanging character data. Further specification of the implementation\ndetails in the standard is probably not in keeping with the tradition of\nsuch things and should be left to the implementors, right?\n\nCheers,\nRossW\n\n\"Dennis E. Hamilton\" wrote:\n> \n> Oh oh,\n> \n> I dunno about case insensitivity.\n> \n> With regard to what locale?\n> \n> Who has a fixed case insensitivity rule that works the same across all\n> locales in Unicode?\n> \n> This is only slightly less problematic than dealing with locale-preferred\n> collating sequences.\n> \n> Case insensitive comparisons do not always work when one party is using the\n> C locale (in which we think we know what case insensitivity means and which\n> we tend to think is the universal locale for people's data but isn't) and\n> another locale/language that has some letters that have no capital form,\n> others that have no lower-case form, and none of them are in the [extended?]\n> \"Roman\" alphabet of the typical 26 A to Z.\n> \n> I am responding out of context, but I wanted to offer the warning that\n> unless you are shoe-horned into ISO 646, this is not as obvious as most\n> people think.\n> \n> I think if you dig through Plauger's text on the Standard C (or C++)\n> string.h and ctypes.h library, you will see what there is to be concerned\n> about.  By the way, this problem is of such interesting complexity that\n> there is no caseless string compare in the Standard C library.  The\n> non-standard ones are generally not well-specified and reading the actual\n> code in certain widely-used library implementations is a real eye-opener.\n> \n> Unless you are prepared to rigorously specify the rules for case-insensitive\n> comparison, you are creating a problem, not solving one.\n> \n> -- Dennis\n> \n> AIIM DMware Technical Coordinator\n> http://www.infonuovo.com/dmware\n> ------------------\n> Dennis E. Hamilton\n> InfoNuovo\n> mailto:infonuovo@email.com\n> tel. +1-206-779-9430 (gsm)\n> fax. +1-425-793-0283\n> http://www.infonuovo.com\n> \n> -----Original Message-----\n> From: ietf-dav-versioning-request@w3.org\n> [mailto:ietf-dav-versioning-request@w3.org]On Behalf Of Ross Wetmore\n> Sent: Monday, October 02, 2000 14:11\n> To: Geoffrey M. Clemm\n> Cc: ietf-dav-versioning@w3.org\n> Subject: Re: labels and case sensitivity\n> \n> It might be more reasonable to change the wording to \"should\"\n> for case preservation, and make it a \"must\" that all label\n> comparisons are done case insensitive. There is no need to know\n> anything about server properties to operate under these conditions.\n> \n> The argument for case preservation is generally one of usability or\n> legibility in that CapitalizationCanHelpDistinguishContext. But\n> there are enough cases where case does not exist or is lost, as when\n> a user has to type in a very long string, that requiring it is too\n> strong a condition.\n> \n> Case insensitive comparisons will always work without any further\n> special handling and are the flip side of minimizing requirements\n> but being flexible in accomodating different perspectives. The only\n> significant argument against this is reduction in namespace size.\n> \n> Cheers,\n> RossW\n> \n> \"Geoffrey M. Clemm\" wrote:\n> >\n> > Currently, we require that labels be case preserving and\n> > that label comparison be case sensitive.\n> > Chris Kaler would like to have it be server-defined whether\n> > labels are case sensitive.\n> >\n> > Comments?\n> >\n> > Cheers,\n> > Geoff\n> >\n> > (I'll save my comments for a followup, so as not to confuse\n> > Chris' request with my comments).\n\n\n\n", "id": "lists-005-11179258"}, {"subject": "RE: labels and case sensitivit", "content": "I think we can pretty much eliminate the possibility that the working\ngroup will accept that the protocol *require* case-insensitive label\ncomparison (assuming we care about its adoption by the large number\nof vendors whose customers expect and insist on case sensitivity).\n\nSo I believe the only question is whether we require case sensitivity\nor whether we leave it up to the server.  Since we have defined a \nmechanism to avoid/detect unexpected label equivalence (i.e. the \"add\"\nform of the LABEL request), I don't think that we introduce\nserious interoperability problems by leaving up to the server.\n\nWould anyone object to leaving it up to the server?  And if so, please\nidentify why you feel it will introduce a serious interoperability problem.\n\nCheers,\nGeoff\n\n-----Original Message-----\nFrom: Ross Wetmore [mailto:rwetmore@verticalsky.com]\nSent: Thursday, October 05, 2000 9:56 AM\nTo: infonuovo@email.com\nCc: Geoffrey M. Clemm; ietf-dav-versioning@w3.org\nSubject: Re: labels and case sensitivity\n\n\nSorry for the delay in response, practical realities can take precedence.\n\nMost of these issues were dealt with in the early nineties by widespread\nindustry groups such as the Unicode Consortium (www.unicode.org) or\nXOpen standards such as XPG4 in 1992 (www.opengroup.org).\n\nI find it difficult to believe the rules for case-insensitive comparison\nare that difficult to grasp, though I admit the implementations for the\nold 8-bit character representations had to deal with the fundamental\nambiguities of context dependent mappings and can be pretty hairy\nreading. The solution for such implementation problems of course is to\nagree on the context or to remove the ambiguities in the character set\nrepresentations. The latter means either restricting use to the POSIX\nsubset of all locales, or using one of the \"universal\" sets like Unicode.\n\nInstead of 8-bit string functions such as strcoll, you might want to look \nat the WCS equivalents in most standard libraries. Issues such as no upper\nor lower case form are smoothly handled by towupper(), towlower(). If\nyou are concerned about equivalent forms (which is stretching things for\ncase insensitivity), try wcscoll(). Most of the major programming \nenvironments, Java, Windows, and commercial Unix variants should have all \nthe implementation tools needed. Many have a function such as wcsicmp(), \nor String.equalsIgnoreCase().\n\nI believe the current draft mandates UTF8-Unicode as the format for\nexchanging character data. Further specification of the implementation\ndetails in the standard is probably not in keeping with the tradition of\nsuch things and should be left to the implementors, right?\n\nCheers,\nRossW\n\n\"Dennis E. Hamilton\" wrote:\n> \n> Oh oh,\n> \n> I dunno about case insensitivity.\n> \n> With regard to what locale?\n> \n> Who has a fixed case insensitivity rule that works the same across all\n> locales in Unicode?\n> \n> This is only slightly less problematic than dealing with locale-preferred\n> collating sequences.\n> \n> Case insensitive comparisons do not always work when one party is using\nthe\n> C locale (in which we think we know what case insensitivity means and\nwhich\n> we tend to think is the universal locale for people's data but isn't) and\n> another locale/language that has some letters that have no capital form,\n> others that have no lower-case form, and none of them are in the\n[extended?]\n> \"Roman\" alphabet of the typical 26 A to Z.\n> \n> I am responding out of context, but I wanted to offer the warning that\n> unless you are shoe-horned into ISO 646, this is not as obvious as most\n> people think.\n> \n> I think if you dig through Plauger's text on the Standard C (or C++)\n> string.h and ctypes.h library, you will see what there is to be concerned\n> about.  By the way, this problem is of such interesting complexity that\n> there is no caseless string compare in the Standard C library.  The\n> non-standard ones are generally not well-specified and reading the actual\n> code in certain widely-used library implementations is a real eye-opener.\n> \n> Unless you are prepared to rigorously specify the rules for\ncase-insensitive\n> comparison, you are creating a problem, not solving one.\n> \n> -- Dennis\n> \n> AIIM DMware Technical Coordinator\n> http://www.infonuovo.com/dmware\n> ------------------\n> Dennis E. Hamilton\n> InfoNuovo\n> mailto:infonuovo@email.com\n> tel. +1-206-779-9430 (gsm)\n> fax. +1-425-793-0283\n> http://www.infonuovo.com\n> \n> -----Original Message-----\n> From: ietf-dav-versioning-request@w3.org\n> [mailto:ietf-dav-versioning-request@w3.org]On Behalf Of Ross Wetmore\n> Sent: Monday, October 02, 2000 14:11\n> To: Geoffrey M. Clemm\n> Cc: ietf-dav-versioning@w3.org\n> Subject: Re: labels and case sensitivity\n> \n> It might be more reasonable to change the wording to \"should\"\n> for case preservation, and make it a \"must\" that all label\n> comparisons are done case insensitive. There is no need to know\n> anything about server properties to operate under these conditions.\n> \n> The argument for case preservation is generally one of usability or\n> legibility in that CapitalizationCanHelpDistinguishContext. But\n> there are enough cases where case does not exist or is lost, as when\n> a user has to type in a very long string, that requiring it is too\n> strong a condition.\n> \n> Case insensitive comparisons will always work without any further\n> special handling and are the flip side of minimizing requirements\n> but being flexible in accomodating different perspectives. The only\n> significant argument against this is reduction in namespace size.\n> \n> Cheers,\n> RossW\n> \n> \"Geoffrey M. Clemm\" wrote:\n> >\n> > Currently, we require that labels be case preserving and\n> > that label comparison be case sensitive.\n> > Chris Kaler would like to have it be server-defined whether\n> > labels are case sensitive.\n> >\n> > Comments?\n> >\n> > Cheers,\n> > Geoff\n> >\n> > (I'll save my comments for a followup, so as not to confuse\n> > Chris' request with my comments).\n\n\n\n", "id": "lists-005-11192978"}, {"subject": "RE: predecessor-se", "content": "OK, here's everyone's last chance to object, or else the change\nwill appear in 09.2\n\nCheers,\nGeoff\n\n-----Original Message-----\nFrom: Boris Bokowski/OTT/OTI [mailto:Boris_Bokowski@oti.com]\nSent: Wednesday, October 04, 2000 1:28 PM\nTo: Clemm, Geoff\nSubject: RE: predecessor-set\n\n\nDid anybody object to this? (I expected to see the change in 09.1)\n\n-Boris.\n\n\n\n\n\n\"Clemm, Geoff\" <gclemm@rational.com>\nSent by: ietf-dav-versioning-request@w3.org\n09/28/00 03:56 PM\n\n \n        To:     ietf-dav-versioning@w3.org\n        cc: \n        Subject:        RE: predecessor-set\n\nThat's fine with me.  If nobody objects, I'll make that change.\n\nCheers,\nGeoff\n\n-----Original Message-----\nFrom: Boris Bokowski/OTT/OTI [mailto:Boris_Bokowski@oti.com]\nSent: Thursday, September 28, 2000 1:53 PM\nTo: ietf-dav-versioning@w3.org\nSubject: DAV:predecessor-set\n\n\nThe DAV:predecessor-set on checked out version selectors and working \nresources shows up in advanced versioning, but has nothing to do with \nanything else in advanced. Couldn't it be moved to core-versioning, saying \n\nthat \"core versioning servers MAY restrict the DAV:predecessor-set \nproperty to contain only the version listed in the DAV:checked-out \nproperty\"?\n\n-Boris.\n\n\n\n", "id": "lists-005-11207503"}, {"subject": "RE: labels and case sensitivit", "content": "There's a misunderstanding here.\n\nThere are no \"rules for case-insensitive comparison\" that are implemented in\ncommon among all implementations of standard libraries.  Having\nnon-standardized functions of the same name and signature is not solving\nthis problem.  Apparently, each of those implementers felt that the rules\nweren't too difficult to grasp and were indeed self-evident.  The\nconsequence, in the current state of affairs, is that two WebDAV servers, or\na server and a client, coming up with the same case-insensitive compare\nresult is at best a coincidence or the happy consequence of having used the\nsame platform and development software.  (I found *different*\nimplementations in a comparison of Visual C++ 6.0 libraries, though.  This\nis a wonderful  example of the value of leaving it to the implementation\nabsent a specification of the rules that are followed.)\n\nI agree that having a single character set, in the fashion of Unicode, cuts\ndown the variables to be dealt with.  However, the rules for\ncase-insensitive comparison can still vary by locale, and because of\nambiguities in Unicode this does not seem to be resolved.\n\nPlease site an unambiguous specification of a Unicode caseless compare (is\nthere even one in Java, the house of run-the-same-everywhere?), and agree on\nthat as a requirement for DeltaV \"case-insensitive comparison.\"   Then I\nagree that you are home free.  Failing that, all that is being created is\npeople getting caught by interoperability problems in the wild, at a point\nwhere it will be very difficult to resolve the problems.  There is no reason\nto have these problem at all.\n\nHere's the challenge.  Find a place where the rules are actually laid out,\nrather than described in principal.  Shouldn't be hard yes?  Or even find an\nimplementation that you are willing to reverse-engineer the rules from.  I\nsay it is necessary to be specific.  Why not.  It is easy, yes?\n\n-- Dennis\n\nAIIM DMware Technical Coordinator\nhttp://www.infonuovo.com/dmware\n------------------\nDennis E. Hamilton\nInfoNuovo\nmailto:infonuovo@email.com\ntel. +1-206-779-9430 (gsm)\nfax. +1-425-793-0283\nhttp://www.infonuovo.com\n\n-----Original Message-----\nFrom: Ross Wetmore [mailto:rwetmore@verticalsky.com]\nSent: Thursday, October 05, 2000 06:56\nTo: infonuovo@email.com\nCc: Geoffrey M. Clemm; ietf-dav-versioning@w3.org\nSubject: Re: labels and case sensitivity\n\n\nSorry for the delay in response, practical realities can take precedence.\n\nMost of these issues were dealt with in the early nineties by widespread\nindustry groups such as the Unicode Consortium (www.unicode.org) or\nXOpen standards such as XPG4 in 1992 (www.opengroup.org).\n\nI find it difficult to believe the rules for case-insensitive comparison\nare that difficult to grasp, though I admit the implementations for the\nold 8-bit character representations had to deal with the fundamental\nambiguities of context dependent mappings and can be pretty hairy\nreading. The solution for such implementation problems of course is to\nagree on the context or to remove the ambiguities in the character set\nrepresentations. The latter means either restricting use to the POSIX\nsubset of all locales, or using one of the \"universal\" sets like Unicode.\n\nInstead of 8-bit string functions such as strcoll, you might want to look\nat the WCS equivalents in most standard libraries. Issues such as no upper\nor lower case form are smoothly handled by towupper(), towlower(). If\nyou are concerned about equivalent forms (which is stretching things for\ncase insensitivity), try wcscoll(). Most of the major programming\nenvironments, Java, Windows, and commercial Unix variants should have all\nthe implementation tools needed. Many have a function such as wcsicmp(),\nor String.equalsIgnoreCase().\n\nI believe the current draft mandates UTF8-Unicode as the format for\nexchanging character data. Further specification of the implementation\ndetails in the standard is probably not in keeping with the tradition of\nsuch things and should be left to the implementors, right?\n\nCheers,\nRossW\n\n\"Dennis E. Hamilton\" wrote:\n>\n> Oh oh,\n>\n> I dunno about case insensitivity.\n>\n> With regard to what locale?\n>\n> Who has a fixed case insensitivity rule that works the same across all\n> locales in Unicode?\n>\n> This is only slightly less problematic than dealing with locale-preferred\n> collating sequences.\n>\n> Case insensitive comparisons do not always work when one party is using\nthe\n> C locale (in which we think we know what case insensitivity means and\nwhich\n> we tend to think is the universal locale for people's data but isn't) and\n> another locale/language that has some letters that have no capital form,\n> others that have no lower-case form, and none of them are in the\n[extended?]\n> \"Roman\" alphabet of the typical 26 A to Z.\n>\n> I am responding out of context, but I wanted to offer the warning that\n> unless you are shoe-horned into ISO 646, this is not as obvious as most\n> people think.\n>\n> I think if you dig through Plauger's text on the Standard C (or C++)\n> string.h and ctypes.h library, you will see what there is to be concerned\n> about.  By the way, this problem is of such interesting complexity that\n> there is no caseless string compare in the Standard C library.  The\n> non-standard ones are generally not well-specified and reading the actual\n> code in certain widely-used library implementations is a real eye-opener.\n>\n> Unless you are prepared to rigorously specify the rules for\ncase-insensitive\n> comparison, you are creating a problem, not solving one.\n>\n> -- Dennis\n>\n> AIIM DMware Technical Coordinator\n> http://www.infonuovo.com/dmware\n> ------------------\n> Dennis E. Hamilton\n> InfoNuovo\n> mailto:infonuovo@email.com\n> tel. +1-206-779-9430 (gsm)\n> fax. +1-425-793-0283\n> http://www.infonuovo.com\n>\n> -----Original Message-----\n> From: ietf-dav-versioning-request@w3.org\n> [mailto:ietf-dav-versioning-request@w3.org]On Behalf Of Ross Wetmore\n> Sent: Monday, October 02, 2000 14:11\n> To: Geoffrey M. Clemm\n> Cc: ietf-dav-versioning@w3.org\n> Subject: Re: labels and case sensitivity\n>\n> It might be more reasonable to change the wording to \"should\"\n> for case preservation, and make it a \"must\" that all label\n> comparisons are done case insensitive. There is no need to know\n> anything about server properties to operate under these conditions.\n>\n> The argument for case preservation is generally one of usability or\n> legibility in that CapitalizationCanHelpDistinguishContext. But\n> there are enough cases where case does not exist or is lost, as when\n> a user has to type in a very long string, that requiring it is too\n> strong a condition.\n>\n> Case insensitive comparisons will always work without any further\n> special handling and are the flip side of minimizing requirements\n> but being flexible in accomodating different perspectives. The only\n> significant argument against this is reduction in namespace size.\n>\n> Cheers,\n> RossW\n>\n> \"Geoffrey M. Clemm\" wrote:\n> >\n> > Currently, we require that labels be case preserving and\n> > that label comparison be case sensitive.\n> > Chris Kaler would like to have it be server-defined whether\n> > labels are case sensitive.\n> >\n> > Comments?\n> >\n> > Cheers,\n> > Geoff\n> >\n> > (I'll save my comments for a followup, so as not to confuse\n> > Chris' request with my comments).\n\n\n\n", "id": "lists-005-11216378"}, {"subject": "Simplicity of core versioning suppor", "content": "A couple comments were on how simple a \"core versioning\" server might be...\n\n> >   Section 2.3, Labeling a version\n> >   Labeling a version should not be a required feature of \"core\"\n> > support for\n> >   versioning.  Core versioning can get away with only having\n> >server-defined\n> >   version names.  This simplifies support for the Target header and\nother\n> >   functionality.\n>\n> How does only having server-defined version names simplify\n> support for the Target header?  Do you really not want to\n> give the client any way to define a human meaningful name\n> for a version?  That seems rather harsh.\n\nIf a server is allowed to have only server-defined version names, this\nsimplifies support for a number of things.\n - don't have to support the new LABEL method (new body semantics, etc.)\n - don't have to support the \"label-name-set\" property with its special\nmulti-value semantics\n - don't have to worry about duplication/uniqueness of labels\n - SET-TARGET becomes simpler because it can only refer to a unique\nversion-name\n\nI agree that in some user scenarios (e.g. source control) it would be harsh\nto not allow human-meaningful labels, but in other user scenarios I believe\npeople won't miss the functionality.\n\nHere's the most basic versioning scenario for non-source-control.  A bunch\nof Word docs, HTML docs, stuff like that, are in a multi-user directory.\nAll the owner wants to do is keep around version history in case somebody\nscrews up inadvertently and deletes stuff which should stay in there.  If\nthat happens, all they have to do is go back to a previous version -- maybe\none or two revisions back -- and find the deleted stuff.  In this scenario,\ndoes anybody need or miss the labeling functionality?  Probably 99% of the\ntime they won't even use SET-TARGET -- the latest version is what everybody\nwill use and refer to.\n\nReally, this use of versioning can be modeled as part of archiving.  In\narchiving do people label stuff with human-readable descriptions of the\nstate of the file?  No, they typically have a tape with a date on it, and\neach file archived to tape has its standard file name.  (Versioning plus\ntape-style archiving is better than archiving alone, because every\nintermediate version is saved, not just periodic snapshots )\n\n:)  Hey, if you replace LABEL and SET-TARGET with PROPPATCH, even with\nPROPPATCH extended to support multi-value-add, I won't argue about the label\nfunctionality any more!\n\n>    Section 5.2.2/3/4, DAV:predecessor-set, DAV: successor-set,\n>    DAV:checkout-set\n>    Please clarify that for \"core\" versioning support, since in\n> \"core\" there is\n>    no way to fork or merge, that the \"predecessor-set\" and \"successor-set\"\n>    will\n>    only contain one element.  Right?\n>\n> In core versioning, there is no way to merge, but you can fork\n> (just checkout and checkin a version that already has a successor).\n\nAgain, I'd like to argue that in non-source-control situations, versioning\ndoesn't need to support forking.  If I checkout and checkin version 6, when\nversion 7 already exists, then version 8 is created.  Or, why can't the\nserver prevent >1 checkout -- it may only have one place for a working\nresource?  Then forks would be impossible.\n\nMy reasoning is simply that it's an unnecessary burden.  Outside of\nsource-control domains, I don't think users/clients have, or if they have\nthey don't usually need, the level of sophistication required to deal with\nforks.  What happens when I take \"consultant-contract.doc\" and I\nconceptually want to \"fork\" it so that I can have one descendant tailored\nfor programmers and one for editors?  I copy \"consultant-contract.doc\" to\n\"editor-contract.doc\", creating two independent versioned resources that\nhappened to start from the same content.  Now it's easier for other users to\nfind the contract they need, because they have independent names, and each\none has its own single-line-of-descent versioning tree.  I believe this is\nhow \"forking\" actually works outside of source-control situations.\n\nFor both labels and forking, why not just make these features part of\nadvanced versioning?  Then servers can choose to implement those features.\nI'm assuming here that \"core\" means \"all these features MUST be implemented\nfor a server to be standard-compliant\", and that's why I'm concerned to\nkeeping the list simple.\n\nlisa\n\n\n\n", "id": "lists-005-11234120"}, {"subject": "Making &quot;LABEL&quot; optiona", "content": "Lisa has asked that we make LABEL functionality optional\n(i.e. move it into advanced).\n\nI personally have no problem with that, since labeling\nis pretty much orthogonal to CHECKOUT/CHECKIN.\n\nDoes anyone object? (and if so, please give some reasonably\nspecific rationale).\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-11245873"}, {"subject": "Re: labels and case sensitivit", "content": "I think the comments on locale-independent case folding and the accompanying CaseFolding.txt file are what you are looking for? \n\nI think this is still in the realm of implementation, and as such is beyond the scope of mandatory requirements by this draft. Given the desire for terseness, even suggesting this might be too much :-).\n\nCheers,\nRossW\n=====\n\nFrom http://www.unicode.org/unicode/reports/tr21/\n\n2.3 Caseless Matching\n\nCaseless matching is commonly implemented using case-folding. The latter is the process of mapping strings to a normalized form where case differences are erased. Case-folding allows for fast caseless matches in lookups. Caseless matching itself is only an approximation to the language-specific rules governing the strength of comparisons. Where locale-sensitive case matching is used, this information can be derived from the collation data for the language, where only the first and second level differences are used. For more information, see UTR #10: Unicode Collation Algorithm.\n\nHowever, in most environments, such as in file systems, text is not tagged with locale information. In such cases, the locale-specific mappings should not be used. Otherwise data structures, such as B-trees, might be built based on one set of case foldings, and used based on a different set, which will cause the B-trees to become corrupt. For those environments, a constant, locale-independent case folding should be used.\n\nThe CaseFolding.txt file can be used for doing such a locale-independent case folding. This file was generated from the Unicode Character Database, using both the one-to-one mappings and the one-to-many mappings. It folds all characters having different case forms together into a common form. To compare two strings for caseless matching, you can fold each string using this data, and then use a binary comparison.\n\nGenerally, where case distinctions are not important, other distinctions between Unicode characters (in particular, compatibility distinctions) are ignored as well. In such circumstances, text can be normalized to Normalization Form KC or KD after case-folding, to produce a normalized form that erases both compatibility distinctions and case distinctions. (See UTR #15: Unicode Normalization Forms for more information.)\n\n\n\"Dennis E. Hamilton\" wrote:\n> \n> There's a misunderstanding here.\n> \n> There are no \"rules for case-insensitive comparison\" that are implemented in\n> common among all implementations of standard libraries.  Having\n> non-standardized functions of the same name and signature is not solving\n> this problem.  Apparently, each of those implementers felt that the rules\n> weren't too difficult to grasp and were indeed self-evident.  The\n> consequence, in the current state of affairs, is that two WebDAV servers, or\n> a server and a client, coming up with the same case-insensitive compare\n> result is at best a coincidence or the happy consequence of having used the\n> same platform and development software.  (I found *different*\n> implementations in a comparison of Visual C++ 6.0 libraries, though.  This\n> is a wonderful  example of the value of leaving it to the implementation\n> absent a specification of the rules that are followed.)\n> \n> I agree that having a single character set, in the fashion of Unicode, cuts\n> down the variables to be dealt with.  However, the rules for\n> case-insensitive comparison can still vary by locale, and because of\n> ambiguities in Unicode this does not seem to be resolved.\n> \n> Please site an unambiguous specification of a Unicode caseless compare (is\n> there even one in Java, the house of run-the-same-everywhere?), and agree on\n> that as a requirement for DeltaV \"case-insensitive comparison.\"   Then I\n> agree that you are home free.  Failing that, all that is being created is\n> people getting caught by interoperability problems in the wild, at a point\n> where it will be very difficult to resolve the problems.  There is no reason\n> to have these problem at all.\n> \n> Here's the challenge.  Find a place where the rules are actually laid out,\n> rather than described in principal.  Shouldn't be hard yes?  Or even find an\n> implementation that you are willing to reverse-engineer the rules from.  I\n> say it is necessary to be specific.  Why not.  It is easy, yes?\n> \n> -- Dennis\n> \n> AIIM DMware Technical Coordinator\n> http://www.infonuovo.com/dmware\n> ------------------\n> Dennis E. Hamilton\n> InfoNuovo\n> mailto:infonuovo@email.com\n> tel. +1-206-779-9430 (gsm)\n> fax. +1-425-793-0283\n> http://www.infonuovo.com\n> \n> -----Original Message-----\n> From: Ross Wetmore [mailto:rwetmore@verticalsky.com]\n> Sent: Thursday, October 05, 2000 06:56\n> To: infonuovo@email.com\n> Cc: Geoffrey M. Clemm; ietf-dav-versioning@w3.org\n> Subject: Re: labels and case sensitivity\n> \n> Sorry for the delay in response, practical realities can take precedence.\n> \n> Most of these issues were dealt with in the early nineties by widespread\n> industry groups such as the Unicode Consortium (www.unicode.org) or\n> XOpen standards such as XPG4 in 1992 (www.opengroup.org).\n> \n> I find it difficult to believe the rules for case-insensitive comparison\n> are that difficult to grasp, though I admit the implementations for the\n> old 8-bit character representations had to deal with the fundamental\n> ambiguities of context dependent mappings and can be pretty hairy\n> reading. The solution for such implementation problems of course is to\n> agree on the context or to remove the ambiguities in the character set\n> representations. The latter means either restricting use to the POSIX\n> subset of all locales, or using one of the \"universal\" sets like Unicode.\n> \n> Instead of 8-bit string functions such as strcoll, you might want to look\n> at the WCS equivalents in most standard libraries. Issues such as no upper\n> or lower case form are smoothly handled by towupper(), towlower(). If\n> you are concerned about equivalent forms (which is stretching things for\n> case insensitivity), try wcscoll(). Most of the major programming\n> environments, Java, Windows, and commercial Unix variants should have all\n> the implementation tools needed. Many have a function such as wcsicmp(),\n> or String.equalsIgnoreCase().\n> \n> I believe the current draft mandates UTF8-Unicode as the format for\n> exchanging character data. Further specification of the implementation\n> details in the standard is probably not in keeping with the tradition of\n> such things and should be left to the implementors, right?\n> \n> Cheers,\n> RossW\n> \n> \"Dennis E. Hamilton\" wrote:\n> >\n> > Oh oh,\n> >\n> > I dunno about case insensitivity.\n> >\n> > With regard to what locale?\n> >\n> > Who has a fixed case insensitivity rule that works the same across all\n> > locales in Unicode?\n> >\n> > This is only slightly less problematic than dealing with locale-preferred\n> > collating sequences.\n> >\n> > Case insensitive comparisons do not always work when one party is using\n> the\n> > C locale (in which we think we know what case insensitivity means and\n> which\n> > we tend to think is the universal locale for people's data but isn't) and\n> > another locale/language that has some letters that have no capital form,\n> > others that have no lower-case form, and none of them are in the\n> [extended?]\n> > \"Roman\" alphabet of the typical 26 A to Z.\n> >\n> > I am responding out of context, but I wanted to offer the warning that\n> > unless you are shoe-horned into ISO 646, this is not as obvious as most\n> > people think.\n> >\n> > I think if you dig through Plauger's text on the Standard C (or C++)\n> > string.h and ctypes.h library, you will see what there is to be concerned\n> > about.  By the way, this problem is of such interesting complexity that\n> > there is no caseless string compare in the Standard C library.  The\n> > non-standard ones are generally not well-specified and reading the actual\n> > code in certain widely-used library implementations is a real eye-opener.\n> >\n> > Unless you are prepared to rigorously specify the rules for\n> case-insensitive\n> > comparison, you are creating a problem, not solving one.\n> >\n> > -- Dennis\n> >\n> > AIIM DMware Technical Coordinator\n> > http://www.infonuovo.com/dmware\n> > ------------------\n> > Dennis E. Hamilton\n> > InfoNuovo\n> > mailto:infonuovo@email.com\n> > tel. +1-206-779-9430 (gsm)\n> > fax. +1-425-793-0283\n> > http://www.infonuovo.com\n> >\n> > -----Original Message-----\n> > From: ietf-dav-versioning-request@w3.org\n> > [mailto:ietf-dav-versioning-request@w3.org]On Behalf Of Ross Wetmore\n> > Sent: Monday, October 02, 2000 14:11\n> > To: Geoffrey M. Clemm\n> > Cc: ietf-dav-versioning@w3.org\n> > Subject: Re: labels and case sensitivity\n> >\n> > It might be more reasonable to change the wording to \"should\"\n> > for case preservation, and make it a \"must\" that all label\n> > comparisons are done case insensitive. There is no need to know\n> > anything about server properties to operate under these conditions.\n> >\n> > The argument for case preservation is generally one of usability or\n> > legibility in that CapitalizationCanHelpDistinguishContext. But\n> > there are enough cases where case does not exist or is lost, as when\n> > a user has to type in a very long string, that requiring it is too\n> > strong a condition.\n> >\n> > Case insensitive comparisons will always work without any further\n> > special handling and are the flip side of minimizing requirements\n> > but being flexible in accomodating different perspectives. The only\n> > significant argument against this is reduction in namespace size.\n> >\n> > Cheers,\n> > RossW\n> >\n> > \"Geoffrey M. Clemm\" wrote:\n> > >\n> > > Currently, we require that labels be case preserving and\n> > > that label comparison be case sensitive.\n> > > Chris Kaler would like to have it be server-defined whether\n> > > labels are case sensitive.\n> > >\n> > > Comments?\n> > >\n> > > Cheers,\n> > > Geoff\n> > >\n> > > (I'll save my comments for a followup, so as not to confuse\n> > > Chris' request with my comments).\n\n\n\n", "id": "lists-005-11253476"}, {"subject": "RE: Making &quot;LABEL&quot; optiona", "content": "> Lisa has asked that we make LABEL functionality optional\n> (i.e. move it into advanced).\n>\n> I personally have no problem with that, since labeling\n> is pretty much orthogonal to CHECKOUT/CHECKIN.\n>\n> Does anyone object? (and if so, please give some reasonably\n> specific rationale).\n\nI object.\n\nA label is a mechanism for giving a specific revision a human readable name,\nas opposed to the server (machine) generated version identifier.  While it\nis true that you can support linear versioning without the use of labels, it\nis similarly true that you *could* have a filesystem automatically generate\nan identifier for each file as it is created.  My point? The ability to\nassign a human-meaningful name to a specific revision allows people to more\neasily remember ones that are significant.  Instead of remembering that\nversion 1.6 was the one sent out to customers, a label of \"Release_A\" can be\nused instead. Thus the label feature addresses a basic cognitive recall\nproblem inherent in the use of machine generated identifiers for revisions.\nSince the machine generated identifiers are part of core versioning, the\nremedy for them should also be part of core.\n\nThe vast majority of commercial and research versioning systems provide some\nmechanism for assigning a human readable name to a revision, typically in\nthe form of a label.  I will take the liberty of assuming that they are not\nblindly coding a feature everyone else has, and have provided it because it\noffers a function their user base has found to be useful.  Doesn't it seems\nthat such a commonly occurring versioning feature should also be part of our\ncore versioning?\n\nFinally, I am sure that there exist user communities that are confused by\nthe very notion of versioning, who will never use the label feature.\nSimilarly, I am sure there are communities of novice word processing users\nthat are confused by the very notion of word processing, and never use the\nspell checking feature.  Does that argue for removal of spell checking from\n\"core\" word processing? I think not.\n\n- Jim\n\n\n\n", "id": "lists-005-11273561"}, {"subject": "Re: workspace heade", "content": "   From: Tim_Ellison@uk.ibm.com\n\n    When a Workspace header is included in a request, the internal\n    members of that workspace are treated by that request as if they were\n    internal members of \"/\".\n\n   <tim> yes, '...by that request...' no mention of the response <g>\n\nWell, since the request generates the response, I'd think that it\nwould necessarily follow (:-), but I'll add some words that explicitly\nstate this.\n\n   This means that all URL's generated in the responses must act that\n   way as well (i.e. act as if the way to get to members of the collection\n   is by going through \"/\").\n\n   <tim> This would be the natural assumption, but what about the URLs to,\n   say, working resources that cannot be expressed relative to a workspace.\n\nThis is certainly an issue with a Workspace header.  One approach is\nto put those workspaces on a different (possibly virtual) host.\nAnother approach is to put a binding to those resources in every\nworkspace (probably the approach our implementation will use).\n\nAs a side note, if you are supporting workspaces, you commonly\nwill be checking out the version selectors, not versions, so\nworking resources would not be an issue.\n\n   <tim> In any case, I think it would be polite if the server mentioned the\n   workspace URL it was using in its response.\n\nThat's fine with me.  I'll add it in, since I don't think anyone will\nobject (we can always take it back out, if someone comes up with a\ngood objection).\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-11283068"}, {"subject": "Review of draft-0", "content": "   Section 5.2.2/3/4, DAV:predecessor-set, DAV: successor-set,\n   DAV:checkout-set\n   Please clarify that for \"core\" versioning support, since in \"core\" there\nis\n   no way to fork or merge, that the \"predecessor-set\" and \"successor-set\"\n   will\n   only contain one element.  Right?\n\nIn core versioning, there is no way to merge, but you can fork\n(just checkout and checkin a version that already has a successor).\nAnd although a core client cannot create a merge, it needs to be\nprepared to deal with a merge created by an advanced versioning client.\n<jra>\nIf DAV:predecessor-set was unprotected, a core versioning client could do a\nmanual merge a resource at a time.\n</jra>\n\n   Section 5.3, Version Selector Properties\n   How does a client definitively figure out if a URL points to a \"Version\n   Selector\", a version history, or a regular resource?\n\nWouldn't it find out what it needs to know by asking the resource\nwhat methods, live properties, and reports it supports?\n<jra>\nThis logic could easily be encapsulated in a higher-level client API too.\n</jra>\n\nThe purpose of VERSION-CONTROL is to create a version selector at the\nrequest URL.  This can be done either by creating a new version\nhistory whose initial version is a copy of the resource currently at\nthe request URL, or by using a version from an existing version history.\nIn either case, the postcondition is the same, i.e. a version selector\nresource will exist at the request-URL.\n<jra>\nI liked this explanation. Should it be in the spec?</jra>\n\n<jra>Thanks Lisa for an extremely thorough review!</jra>\n\n\n\n", "id": "lists-005-11291519"}, {"subject": "Re: Making &quot;LABEL&quot; optiona", "content": "I agree that LABEL functionality is very important, and should be\nstandardized in the protocol, but I don't see that Jim's arguments\nidentify the significant interoperability problems that will result \nif LABEL is optional functionality.\n\nThe \"auto-generated filename\" argument really doesn't apply here.\nThe version creation method (CHECKIN) always creates a server-named\nobject.  The addition of a label to that object is an optional\nadditional act that can be performed by a client.\n\nThe \"spellcheck\" analogy is much closer, but using this analogy,\nalthough you'd want to have a standard protocol for accessing\nspellcheck functionality from a word processor client, greying\nout the spellcheck menu item for word processing servers that\ndon't support it seems like a reasonable thing to do.  Analagously,\ngreying out the labeling functionality seems like a reasonable\nthing to do when a versioning client encounters a versioning server\nwithout label support (just as our client will grey out activity\nand baseline functionality when it encounters a server that does\nnot support activities or baselines).\n\nCheers,\nGeoff\n\n   From: \"Jim Whitehead\" <ejw@cse.ucsc.edu>\n   Date: Thu, 5 Oct 2000 11:03:01 -0700\n\n\n   > Lisa has asked that we make LABEL functionality optional\n   > (i.e. move it into advanced).\n   >\n   > I personally have no problem with that, since labeling\n   > is pretty much orthogonal to CHECKOUT/CHECKIN.\n   >\n   > Does anyone object? (and if so, please give some reasonably\n   > specific rationale).\n\n   I object.\n\n   A label is a mechanism for giving a specific revision a human readable name,\n   as opposed to the server (machine) generated version identifier.  While it\n   is true that you can support linear versioning without the use of labels, it\n   is similarly true that you *could* have a filesystem automatically generate\n   an identifier for each file as it is created.  My point? The ability to\n   assign a human-meaningful name to a specific revision allows people to more\n   easily remember ones that are significant.  Instead of remembering that\n   version 1.6 was the one sent out to customers, a label of \"Release_A\" can be\n   used instead. Thus the label feature addresses a basic cognitive recall\n   problem inherent in the use of machine generated identifiers for revisions.\n   Since the machine generated identifiers are part of core versioning, the\n   remedy for them should also be part of core.\n\n   The vast majority of commercial and research versioning systems provide some\n   mechanism for assigning a human readable name to a revision, typically in\n   the form of a label.  I will take the liberty of assuming that they are not\n   blindly coding a feature everyone else has, and have provided it because it\n   offers a function their user base has found to be useful.  Doesn't it seems\n   that such a commonly occurring versioning feature should also be part of our\n   core versioning?\n\n   Finally, I am sure that there exist user communities that are confused by\n   the very notion of versioning, who will never use the label feature.\n   Similarly, I am sure there are communities of novice word processing users\n   that are confused by the very notion of word processing, and never use the\n   spell checking feature.  Does that argue for removal of spell checking from\n   \"core\" word processing? I think not.\n\n   - Jim\n\n\n\n", "id": "lists-005-11299573"}, {"subject": "Re: Simplicity of core versioning suppor", "content": "   From: \"Lisa Dusseault\" <lisa@xythos.com>\n\n   A couple comments were on how simple a \"core versioning\" server might be...\n\n   If a server is allowed to have only server-defined version names, this\n   simplifies support for a number of things.\n\nI've put this suggestion into a separate thread, but a couple of\ncomments here (to make sure we agree on what \"optional labeling\" means).\n\n    - don't have to support the new LABEL method (new body semantics, etc.)\n\nYes, that would become optional.\n\n    - don't have to support the \"label-name-set\" property with its special\n   multi-value semantics\n\nYou'd still need the \"label-name-set\" property (to get\ninteroperable SET-TARGET and Target-Selector behavior), but it would\njust have a copy of the version name in it and wouldn't have any\nspecial multi-value semantics ... it would just be initialized with\nthe version-name, and not be updateable.\n\n    - don't have to worry about duplication/uniqueness of labels\n\nYes.\n\n    - SET-TARGET becomes simpler because it can only refer to a unique\n   version-name\n\nJust for interest's sake, how does a unique version name simplify\nSET-TARGET (I assume by \"unique\", you mean that each version has\nexactly one).  You still need the two options for SET-TARGET: a label\n(which in your case would always be a version-name) and a version URL.\n\n   :)  Hey, if you replace LABEL and SET-TARGET with PROPPATCH, even with\n   PROPPATCH extended to support multi-value-add, I won't argue about the label\n   functionality any more!\n\nOK, now I'm confused.  What difference does it make to you whether\nlabeling is marshalled via LABEL or a property update.  You have to\njust as much work on your server to support labeling semantics.\n\n   > In core versioning, there is no way to merge, but you can fork\n   > (just checkout and checkin a version that already has a successor).\n\n   Again, I'd like to argue that in non-source-control situations, versioning\n   doesn't need to support forking.  If I checkout and checkin version 6, when\n   version 7 already exists, then version 8 is created.  Or, why can't the\n   server prevent >1 checkout -- it may only have one place for a working\n   resource?  Then forks would be impossible.\n\nThe purpose of DAV:predecessor is to identify the state of the\nresource right before you started changing it.  Storing the current\nDAV:latest as the DAV:predecessor would violate these semantics.  You\ncould certainly support some additional property\n(e.g. DAV:previous-latest-at-checkin-time), but that would be a\ndifferent property (and not one that appears to be of general enough\ninterest to standardize upon).\n\n   My reasoning is simply that it's an unnecessary burden.\n\nDAV:predecessor is an extremely simple property to maintain, so\nit seems reasonable to require it from all servers.\n\n   Outside of\n   source-control domains, I don't think users/clients have, or if they have\n   they don't usually need, the level of sophistication required to deal with\n   forks.\n\nA client doesn't have to deal with forks, only a server does.  And\ndealing with a fork just means storing the correct value in\nDAV:predecessor-set when you create a version, so no sophistication\nis required.\n\n   What happens when I take \"consultant-contract.doc\" and I\n   conceptually want to \"fork\" it so that I can have one descendant tailored\n   for programmers and one for editors?  I copy \"consultant-contract.doc\" to\n   \"editor-contract.doc\", creating two independent versioned resources that\n   happened to start from the same content.  Now it's easier for other users to\n   find the contract they need, because they have independent names, and each\n   one has its own single-line-of-descent versioning tree.  I believe this is\n   how \"forking\" actually works outside of source-control situations.\n\nThat's fine ... there's nothing in the version control protocol that\nprevents you from doing this.  All it asks is that all servers store\na consistent (easily determined) value in DAV:predecessor-set.\n\n   For both labels and forking, why not just make these features part of\n   advanced versioning?  Then servers can choose to implement those features.\n\nI'm sympathetic to your desire to make labeling optional ... that does\nrequire some work (although not really all that much :-).  But the cost\nfor a server of maintaining an accurate DAV:predecessor-set is so minimal,\nthat I don't see the argument for making it optional.\n\n   I'm assuming here that \"core\" means \"all these features MUST be implemented\n   for a server to be standard-compliant\", and that's why I'm concerned to\n   keeping the list simple.\n\nNote that core means \"must be implemented by a server\", not \"must be\nexposed by a client\".  So the only arguments that are relevant are \n\"this would be hard to implement for a server\".\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-11310451"}, {"subject": "Re: Simplicity of core versioning suppor", "content": "User's determine resource identifiers (URLs) and servers map these names \nto physical resources. When we add versioning, we need to include a \ncomposite identifier to distinguish between multiple revisions of the same \nversioned resource. Labels allow a user to define such an identifier in \nsome way that is meaningful to them. Again it should be the server's \nresponsibility to map this to a particular version. Having servers provide \nvisible, server generated, immutable resource (i.e., object) identifiers \nis necessary too. We can do all sorts of linking with these identifiers \nthat would be impossible using user specified identifiers that can change \nthrough BIND and LABEL. Since core versioning introduces versions of \nresources, I think it needs to provide a way for users to identify them. \nThis is just a logical extension of the server's role for identifying \nunversioned resources. So I think LABEL belongs in core versioning. A \nserver can always implement it by refusing the label. This would be a \nsomewhat constrained server, but it might have other interesting \ncharacteristics.\n\n\n\n", "id": "lists-005-11322708"}, {"subject": "Re: More detailed responses to responses..", "content": "Note: I've trimmed the comments where I just agree with Tim's response.\n\n   >    Section 5.3, Version Selector Properties How does a client\n   >    definitively figure out if a URL points to a \"Version\n   >    Selector\", a version history, or a regular resource?\n   >\n   > Wouldn't it find out what it needs to know by asking the resource\n   > what methods, live properties, and reports it supports?\n\n   <tim2> I agree.  The spec does give definitive rules for identifying types\n   by the presence of properties, but this is IMHO a suboptimal way of doing\n   business.\n\nWhy?  For a version history, it's definitely a different resource type\n(and has DAV:version-resource as its DAV:resourcetype).  For a version\nselector, version, and regular resource, they are all the same \"type\"\n(collection, html document, whatever).  The only difference between a\n\"version selector\" html document, a \"version\" html document, and a\n\"regular\" html document is that the version selector and version have\nsome additional properties and methods.  Are you going to put \"checked-out\"\nin the resource type also?  How about \"locked\"?  These all affect what\nmethods apply to a resource.  Next thing you know, we'll all be given\nnumbers instead of names, and (wait, that's a different rant ... :-).\n\nI actually don't care much about this one way or the other (:-).  Let's\nsee what Chris says about whether extending the DAV:resourcetype field\nwill break Microsoft clients.\n\n   If I do a PUT to a version selector, isn't that interpreted as a write to\n   the resource whose versions are represented by the version selector?\n\n   <tim2> No, a version selector is a resource in its own right, with content\n   and properties.  ...\n\nSince this issue has arisen before, I'll add a clarifying sentence in\nthe core versioning model.  Note: I agree with everything \nTim said about this issue.\n\n   > Overwrite:F has its usual semantics, namely abort the operation if\n   > a resource exists at the destination.\n\n   OK, I like that -- it doesn't violate the principle of least-surprise.\n   Please at least recommend that in the draft.\n\nAll requirements from 2518 (and 2616) apply to the versioning extensions\n(i.e. it's a requirement, not a recommendation).  We normally don't\nrepeat those requirements (just think how long the document would be\nif we did!).\n\n   >    ... If a resource is already\n   >    checked out -- can a \"core-compliant\" server refuse the\n   > CHECKOUT request?\n   >\n   > The server can refuse any command (heck, it's the server after all :-).\n   > To declare this behavior, set the (optional) DAV:checkout-fork property\n   > to DAV:forbidden (see section 14.1.3).  Then you would return a 409\n   status\n   > with <DAV:checkout-of-checked-out-version-is-forbidden/> in the response\n   > body of the CHECKOUT request.\n\n   Excellent.  Please put this in the draft.\n\nIt is (in section 14.1.3 and in the advanced definition of CHECKOUT).\nOr did you mean \"put it in core\"?  There are many servers that don't\nwant to implement the DAV:checkout-fork functionality, so I don't\nthink it should be in core.\n\n   We also need <DAV:multiple-checkouts-forbidden/> for servers which not only\n   do not allow checkout of a version that has already been checked out, but\n   also do not allow checkout on any version of a resource for which any\n   version has already been checked out.\n\nThat's already there: <DAV:checkout-of-version-with-descendant-is-forbidden/>\n(pretty catchy name, eh? :-)\n\n   Why is it fine for a new method to have a bunch of side effects,\n   but not for PROPPATCH of a new property?\n\nOne reason is the atomicity argument.  If you've got a bunch of\nproperties updated in a single proppatch, if the result is just a\nchange to those properties, it is much more reasonable to expect the\nserver to be able to predict whether or not all the requests will\nsucceed (and fail the PROPPATCH if it does not).  If on the other\nhand, one of those property updates involves a significant set of side\neffects on other properties and other resources, it becomes much more\nlikely that the server will not be able to guess (or to guess wrong),\nwhich means it must pre-emptively reject the PROPPATCH call (meaning\nthe client needs to break it up and try it separately anyway), or risk\nfailing in the middle and leaving the server in a state the client\ndoes not expect.\n\nI believe that it would lead to greater interoperation of clients and\nservers if operations with side effects were clearly identified as\nseparate methods, so that clients would not be misled into thinking\nthat they can combine multiple updates into a single atomic PROPPATCH.\n\nBut I really don't care all that much about whether we marshal our\nmethods through separate method calls or PROPPATCH, so since I think\nI've forwarded the various arguments I've heard in the past, I'll\nleave this thread for others to comment on.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-11330775"}, {"subject": "RE: Making &quot;LABEL&quot; optiona", "content": "> I agree that LABEL functionality is very important, and should be\n> standardized in the protocol, but I don't see that Jim's arguments\n> identify the significant interoperability problems that will result\n> if LABEL is optional functionality.\n\nCreation or removal of interoperability problems is a poor criteria for\ndetermining what belongs in core.  Using this as the criteria, I could argue\nthat CHECKOUT should be optional, since it is impossible to identify any\nsignificant interoperability problems that would result from it being put\ninto advanced versioning.  Such a move would raise *oper*ability problems,\nbut that is my point. CHECKOUT's inclusion in core versioning depends on its\nutility for basic versioning use.  Similarly, my previous argument was that\nlabels provide such a valuable facility, useful across such a wide range of\nusers and use cases, that it belongs in core.  I illustrated this by\nidentifying how labels address the naming problems that accompany the use of\nmachine-generated version identifiers.  Since these problems would be part\nof core, it seems to me their remedy should also be part of core.\n\n> The \"auto-generated filename\" argument really doesn't apply here.\n> The version creation method (CHECKIN) always creates a server-named\n> object.  The addition of a label to that object is an optional\n> additional act that can be performed by a client.\n\nSo, are you arguing that for an operation to belong in core, a user must\nperform it every time they do a CHECKIN?  You want server-generated\nidentifiers, since it would be unreasonable to expect a user to individually\nname each revision, and you also want labels, since it is unreasonable to\nexpect a user to never want to name any revision.\n\n> The \"spellcheck\" analogy is much closer, but using this analogy,\n> although you'd want to have a standard protocol for accessing\n> spellcheck functionality from a word processor client, greying\n> out the spellcheck menu item for word processing servers that\n> don't support it seems like a reasonable thing to do.\n\nI never argued that LABEL *couldn't* be made optional, just that it\n*shouldn't*.  Any of the methods we're proposing *could* be optional, and a\nclient *could* adapt to whatever features the server provides.  The net\nresult of this would not be increased simplicity on the client side, though.\n\nLabels are such a widely provided feature across version control systems\nthat the burden of proof really lies on those who want to move this\nfunctionality out of core.  I really need to be convinced that the absence\nof labels won't: (a) violate the expectations of versioning-aware users of\nDeltaV applications (I personally would think the absence of labels to be\nextremely odd in a modern versioning system), and (b) lead to increased\ncognitive difficulties due to the absence of revision naming capabilities.\n\n- Jim\n\n\n\n", "id": "lists-005-11342928"}, {"subject": "Arguments for simpler core versionin", "content": "I suggested support for labels (other than the server-defined version-name)\nought to be part of \"advanced\" versioning, meaning that a server that was\ncore-versioning-compatible would not have to support these features.  Jim\namong others contended that most versioning systems had labelling therefore\nit was justifiably part of \"core\", one of the required features for all\nservers.\n\nWell, I did a brief bit of web research to see if I could back up my\nposition.  I ignored real source control systems because I figured they\nwould have rich versioning features of all kinds and particularly support\nfor labeling (you will get no argument from me that these are important\nfeatures for source control systems).  I also looked up support for forking,\nalthough it seems \"core\" can already nicely accomodate whether a server\nsupports forking or not, now that I understand how things work.  I included\nall of my results out of those I found which supported versioning, even\nthough one does support labelling.\n\n1.  Document Management Alliance See http://www.aiim.org/dma  [1]\n - DMA 1.0 designed for linear versioning only (extensible later,\npresumably, to branched versioning)\n - No required support for labelling (no standard for defining labels -- and\nthe DocVersion object doesn't have a label field)\n\n2.  Cyberteams does not support labelling or forking (though they're\nconsidering it, their current versioning support does not have these extra\nfeatures)\n\n3.  Xerox Docushare sure does not seem to have forking or labeling\n - http://docushare.xerox.com/en-us/Help/quickref.html\n - http://docushare.xerox.com/en-us/Help/manual/dsman5.htm#File_Versions\n - my best guess is that labelling is not supported, because there's no way\nin the user interface to do that.\n - checking out a document automatically locks it, thus preventing\nauto-forking through multiple checkouts\n\n4.  Documentum\n - http://www.documentum.com/customer/education/courses/framelink.html\n - Definitely supports versioning in terms of \"keeps old versions\"\n - DOES support labelling\n - don't think it supports forking though\n\n5.  Keymage\n - Supports versioning & version labels\n - doesn't support forking\n\n6. DOCsFusion\n - http://www.hummingbird.com/products/dkm/pdf/DOCSFusion.pdf\n - Supports 99 \"Major versions\" per doc and 26 \"sub-versions\" per major\nversion -- is that forking?\n - does not support version labelling (just version comments, author,\ntypist, and deleting a version)\n\n6. Xythos does not support labelling or forking -- can I count this one :)\n - You might have guessed this from my position, but in fact I've long felt\nthe features weren't necessary for simple document management\n - you can try versioning out on sharemation btw -- turn versioning \"on\" for\na resource\n - our customers aren't beating down our doors asking for forking or\nlabelling, I don't know that anybody has noticed the \"lack\"\n\nFinally, products which support versioning but do not provide sufficient\ninformation for me to see what versioning features are available in detail:\nengenda, dynabase, glyphica (now CoVia).\n\n\n--lisa\n\n\n[1] DMA is Document Management Alliance -- a consortium working for\ninteroperability among doc mgmt systems.  DMA has discussed whether webdav\nwould suit them as a protocol (their stuff is mostly programming-oriented\nrather than protocol oriented) and many people have suggested as much.\n\n\n\n", "id": "lists-005-11353174"}, {"subject": "RE: Making &quot;LABEL&quot; optiona", "content": "I'm with Geoff here -- let's specify a standard, but allow\nservers to decide if it is appropriate to their domain.\n\nChris\n\n-----Original Message-----\nFrom: Geoffrey M. Clemm [mailto:geoffrey.clemm@rational.com]\nSent: Thursday, October 05, 2000 12:08 PM\nTo: ietf-dav-versioning@w3.org\nSubject: Re: Making \"LABEL\" optional\n\n\n\nI agree that LABEL functionality is very important, and should be\nstandardized in the protocol, but I don't see that Jim's arguments\nidentify the significant interoperability problems that will result \nif LABEL is optional functionality.\n\nThe \"auto-generated filename\" argument really doesn't apply here.\nThe version creation method (CHECKIN) always creates a server-named\nobject.  The addition of a label to that object is an optional\nadditional act that can be performed by a client.\n\nThe \"spellcheck\" analogy is much closer, but using this analogy,\nalthough you'd want to have a standard protocol for accessing\nspellcheck functionality from a word processor client, greying\nout the spellcheck menu item for word processing servers that\ndon't support it seems like a reasonable thing to do.  Analagously,\ngreying out the labeling functionality seems like a reasonable\nthing to do when a versioning client encounters a versioning server\nwithout label support (just as our client will grey out activity\nand baseline functionality when it encounters a server that does\nnot support activities or baselines).\n\nCheers,\nGeoff\n\n   From: \"Jim Whitehead\" <ejw@cse.ucsc.edu>\n   Date: Thu, 5 Oct 2000 11:03:01 -0700\n\n\n   > Lisa has asked that we make LABEL functionality optional\n   > (i.e. move it into advanced).\n   >\n   > I personally have no problem with that, since labeling\n   > is pretty much orthogonal to CHECKOUT/CHECKIN.\n   >\n   > Does anyone object? (and if so, please give some reasonably\n   > specific rationale).\n\n   I object.\n\n   A label is a mechanism for giving a specific revision a human readable\nname,\n   as opposed to the server (machine) generated version identifier.  While\nit\n   is true that you can support linear versioning without the use of labels,\nit\n   is similarly true that you *could* have a filesystem automatically\ngenerate\n   an identifier for each file as it is created.  My point? The ability to\n   assign a human-meaningful name to a specific revision allows people to\nmore\n   easily remember ones that are significant.  Instead of remembering that\n   version 1.6 was the one sent out to customers, a label of \"Release_A\" can\nbe\n   used instead. Thus the label feature addresses a basic cognitive recall\n   problem inherent in the use of machine generated identifiers for\nrevisions.\n   Since the machine generated identifiers are part of core versioning, the\n   remedy for them should also be part of core.\n\n   The vast majority of commercial and research versioning systems provide\nsome\n   mechanism for assigning a human readable name to a revision, typically in\n   the form of a label.  I will take the liberty of assuming that they are\nnot\n   blindly coding a feature everyone else has, and have provided it because\nit\n   offers a function their user base has found to be useful.  Doesn't it\nseems\n   that such a commonly occurring versioning feature should also be part of\nour\n   core versioning?\n\n   Finally, I am sure that there exist user communities that are confused by\n   the very notion of versioning, who will never use the label feature.\n   Similarly, I am sure there are communities of novice word processing\nusers\n   that are confused by the very notion of word processing, and never use\nthe\n   spell checking feature.  Does that argue for removal of spell checking\nfrom\n   \"core\" word processing? I think not.\n\n   - Jim\n\n\n\n", "id": "lists-005-11363926"}, {"subject": "Versioning TeleConf Agenda, 10/6/00 (Friday) 11-12 ES", "content": "phone: 888 819 8909  pass-code#97985\n\nAgenda:\n\n- moving LABEL to advanced\n\n- new methods vs. PROPPATCH of live properties\n\n\n\n", "id": "lists-005-11376370"}, {"subject": "Re: workspace heade", "content": "    When a Workspace header is included in a request, the internal\n    members of that workspace are treated by that request as if they were\n    internal members of \"/\".\n\n   <tim> yes, '...by that request...' no mention of the response <g>\n\nWell, since the request generates the response, I'd think that it\nwould necessarily follow (:-), but I'll add some words that explicitly\nstate this.\n\n   This means that all URL's generated in the responses must act that\n   way as well (i.e. act as if the way to get to members of the collection\n   is by going through \"/\").\n\n   <tim> This would be the natural assumption, but what about the URLs to,\n   say, working resources that cannot be expressed relative to a workspace.\n\nThis is certainly an issue with a Workspace header.  One approach is\nto put those workspaces on a different (possibly virtual) host.\nAnother approach is to put a binding to those resources in every\nworkspace (probably the approach our implementation will use).\n\nAs a side note, if you are supporting workspaces, you commonly\nwill be checking out the version selectors, not versions, so\nworking resources would not be an issue.\n\n<tim2>\nI don't understand what you mean by 'putting abinding to those resources in\nevery workspace'.\nIn particular, say you do a property report against a version selector, to\nget its target value and 'follow' it's target to find the URL of the\nhistory resource.  Would you poof-up mappings for these values that are\nrelative to the workspace header?  Presumably there is little choice.\n\n   <tim> In any case, I think it would be polite if the server mentioned\nthe\n   workspace URL it was using in its response.\n\nThat's fine with me.  I'll add it in, since I don't think anyone will\nobject (we can always take it back out, if someone comes up with a\ngood objection).\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-11383589"}, {"subject": "DAV:checked-ou", "content": "I was just perusing v10 of the draft... The Version Selector property named\nDAV:checked-out does not account for the case where multiple checkouts of a\nresource may occur.\n\nSeems it would be possible to do the following:\n\nJoe:  CHECKOUT /foo\nJane: CHECKOUT /foo\nJane: PUT /foo\nJane: CHECKIN /foo\nJane: CHECKOUT /foo\n\nIn Jane's second checkout, the /foo Version Selector's target points to\nsomething different from Joe's (active) CHECKOUT.\n\nWhat is the purpose of this property? Thinking on it... I'm not sure whether\nits value is even \"interesting\".\n\nCheers,\n-g\n\n-- \nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-11392560"}, {"subject": "Re: DAV:checked-ou", "content": "You can only checkout a version selector once (the precondition failure, in\n10.2 CHECKOUT, would be <DAV:must-not-be-checked-out/>)\n\nTim\np.s. comments based on versioning-8.2\n\n\nGreg Stein <gstein@lyra.org> on 2000-10-06 03:37:52 PM\n\nPlease respond to Greg Stein <gstein@lyra.org>\n\nTo:   ietf-dav-versioning@w3.org\ncc:    (bcc: Tim Ellison/UK/IBM)\nSubject:  DAV:checked-out\n\n\n\n\nI was just perusing v10 of the draft... The Version Selector property named\nDAV:checked-out does not account for the case where multiple checkouts of a\nresource may occur.\n\nSeems it would be possible to do the following:\n\nJoe:  CHECKOUT /foo\nJane: CHECKOUT /foo\nJane: PUT /foo\nJane: CHECKIN /foo\nJane: CHECKOUT /foo\n\nIn Jane's second checkout, the /foo Version Selector's target points to\nsomething different from Joe's (active) CHECKOUT.\n\nWhat is the purpose of this property? Thinking on it... I'm not sure\nwhether\nits value is even \"interesting\".\n\nCheers,\n-g\n\n--\nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-11399843"}, {"subject": "RE: checked-ou", "content": "A checked-out version selector points to the version it was checked out\nfrom, and a version selector can only be checked out once.\n\nOne example use would be to compare the state of the checkout with the\nversion it was checked out from, to see what changes were made.\n\nJohn\n\n> -----Original Message-----\n> From: Greg Stein [mailto:gstein@lyra.org]\n> Sent: Friday, October 06, 2000 10:38 AM\n> To: ietf-dav-versioning@w3.org\n> Subject: DAV:checked-out\n> \n> \n> I was just perusing v10 of the draft... The Version Selector \n> property named\n> DAV:checked-out does not account for the case where multiple \n> checkouts of a\n> resource may occur.\n> \n> Seems it would be possible to do the following:\n> \n> Joe:  CHECKOUT /foo\n> Jane: CHECKOUT /foo\n> Jane: PUT /foo\n> Jane: CHECKIN /foo\n> Jane: CHECKOUT /foo\n> \n> In Jane's second checkout, the /foo Version Selector's target \n> points to\n> something different from Joe's (active) CHECKOUT.\n> \n> What is the purpose of this property? Thinking on it... I'm \n> not sure whether\n> its value is even \"interesting\".\n> \n> Cheers,\n> -g\n> \n> -- \n> Greg Stein, http://www.lyra.org/\n> \n\n\n\n", "id": "lists-005-11408531"}, {"subject": "Re: DAV:checked-ou", "content": "Woah. Where did that come from? Multiple checkouts of a version selector\nwere something that I had specifically requested a couple months ago during\na review. The answer at that time, IIRC, was \"sure, it is done like <so>\"\n\nThe scenario is:\n\n  - Joe creates and activity, checkouts out /foo into that activity, and\n    begins updating it.\n  - Jane does likewise.\n  - One or both merge the activity\n\nObviously, they can both have it checked out at the same time. Why prevent\nJane from checking the thing out, when Joe may simply end up cancelling his\ncheckout. That is just wrong.\n\nLet's take a look at two of the version control systems that I'm familiar\nwith:\n  - SourceSafe: allows multiple checkouts (config option)\n  - CVS: default/typical operation is multiple checkouts (with some work, I\n    think you can prevent them)\n\nSubversion (a CVS replacement, which I'm adding DAV support to) will operate\nsimilarly: multiple checkouts.\n\nDeltaV *must* allow this. It is a very standard mechanism, and I can't\nimagine being able to tell people, \"well DeltaV is supposed to handle\nversioning, but it can't even reach the level of CVS\"\n\nCheers,\n-g\n\nOn Fri, Oct 06, 2000 at 03:54:14PM +0100, Tim_Ellison@uk.ibm.com wrote:\n> \n> You can only checkout a version selector once (the precondition failure, in\n> 10.2 CHECKOUT, would be <DAV:must-not-be-checked-out/>)\n> \n> Tim\n> p.s. comments based on versioning-8.2\n> \n> \n> Greg Stein <gstein@lyra.org> on 2000-10-06 03:37:52 PM\n> \n> Please respond to Greg Stein <gstein@lyra.org>\n> \n> To:   ietf-dav-versioning@w3.org\n> cc:    (bcc: Tim Ellison/UK/IBM)\n> Subject:  DAV:checked-out\n> \n> \n> \n> \n> I was just perusing v10 of the draft... The Version Selector property named\n> DAV:checked-out does not account for the case where multiple checkouts of a\n> resource may occur.\n> \n> Seems it would be possible to do the following:\n> \n> Joe:  CHECKOUT /foo\n> Jane: CHECKOUT /foo\n> Jane: PUT /foo\n> Jane: CHECKIN /foo\n> Jane: CHECKOUT /foo\n> \n> In Jane's second checkout, the /foo Version Selector's target points to\n> something different from Joe's (active) CHECKOUT.\n> \n> What is the purpose of this property? Thinking on it... I'm not sure\n> whether\n> its value is even \"interesting\".\n> \n> Cheers,\n> -g\n> \n> --\n> Greg Stein, http://www.lyra.org/\n> \n> \n> \n\n-- \nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-11416870"}, {"subject": "Re: DAV:checked-ou", "content": "Woah. Where did that come from? Multiple checkouts of a version selector\nwere something that I had specifically requested a couple months ago \nduring\na review. The answer at that time, IIRC, was \"sure, it is done like <so>\"\n\n<boris> The change was made because in the old spec, servers that \nsupported\nworkspaces would be confusing for clients because they replaced version\nselectors on checkout whereas other servers created working resources at\na new URL. </boris>\n\nThe scenario is:\n\n  - Joe creates and activity, checkouts out /foo into that activity, and\n    begins updating it.\n  - Jane does likewise.\n  - One or both merge the activity\n\n<boris> I can see two possibilities for mapping this scenario to deltaV:\n In the first possibility, which does not use workspaces (or just one), \nboth\n Joe and Jane check out /foo using \n<DAV:checkout><DAV:target/></DAV:checkout>\n which creates a working resource at a server-generated URL. The merge \ntakes\n care of setting the target of the version selector at /foo. Note that the\n only difference to the way it was spec'd before is that the version \nselector's\n target is not updated when you check in a working resource. But this \nprobably\n is what you want anyway, since you use activities and merging to update \nthe\n shared state (and not the check in operation).\n The second possibility is to use three workspaces, a common one, and a \nprivate\n one for each developer. A checkout, this time without the <DAV:target/>, \nonly\n affects the private workspace, and you can use activities and merge to \nupdate\n the shared state in the common workspace.\n</boris>\n\n\n\n", "id": "lists-005-11426803"}, {"subject": "RE: Arguments for simpler core versionin", "content": "Nice analysis.\n\nI think it is inappropriate to use DMA in this comparison however.\n\nDMA 1.0 only standardizes those properties essential to holding the model\ntogether.  That is, they are required to support realization of the model /\narchitecture itself.  These are almost all synthetic and live, in the WebDAV\nsense, and they are structural in nature.  The DMA specification doesn't\naddress externally-meaningful (non-live) properties, or ones needed to make\nan application of the DMA model practically useful at all.\n\nFor example, there are no well-known properties for obvious things like\ntitle, author, or anything like that (except for metadata descriptions,\nwhere there are specific provisions for human meaningful names and\ndescriptive texts, all conformed to the locale / language of the human\noperator).\n\nThe DMA 1.0 Versioning model, even though it anticipates branching and\nmerging, doesn't even provide any synthetic labeling or version\nidentification mechanism.  It is all done navigationally.  It is expected\nthat any representation of the dmaClass_VersionDescription class of objects\nwould certainly provide properties of that ilk, but the specification is\nsilent on the matter.\n\nPS: It is not expected that version labels would be projected onto the\ndmaClass_DocVersion class even though that is the way we named the puppy --\nthe DMA versioning model allows a DocVersion to be a version in more than\none way, so in the general case all labeling must be on the\nVersionDescription, which leads from a particular place in a VersionSeries\nto a DocVersion (or other versionable object).  A single DocVersion can be\nthe target of multiple VersionDescriptions.\n\nFinally, I might as well put in my druthers:\n\n1.I think the version label should be part of core versioning.\n2.It should not employ case-insensitivity ever.\n3.I am not clear on how one would specify server-determined restrictions on\nthe character set used in  labels, so I suppose one would not do that.\n\n-- Dennis\n\nAIIM DMware Technical Coordinator\nhttp://www.infonuovo.com/dmware\n------------------\nDennis E. Hamilton\nInfoNuovo\nmailto:infonuovo@email.com\ntel. +1-206-779-9430 (gsm)\nfax. +1-425-793-0283\nhttp://www.infonuovo.com\n\n-----Original Message-----\nFrom: ietf-dav-versioning-request@w3.org\n[mailto:ietf-dav-versioning-request@w3.org]On Behalf Of Lisa Dusseault\nSent: Thursday, October 05, 2000 18:04\nTo: ietf-dav-versioning@w3.org\nSubject: Arguments for simpler core versioning\n\n\n[ ... ]\n\n1.  Document Management Alliance See http://www.aiim.org/dma  [1]\n - DMA 1.0 designed for linear versioning only (extensible later,\npresumably, to branched versioning)\n - No required support for labelling (no standard for defining labels -- and\nthe DocVersion object doesn't have a label field)\n\n[ ... ]\n\n\n\n", "id": "lists-005-11435511"}, {"subject": "Re: Versioning TeleConf Agenda, 10/6/00 (Friday) 11-12 ES", "content": "Attending: Tim Ellison, Brian Bokowski, Jim Doubek, Geoff Clemm\n\nNote: When I mention \"agreement\" and \"consensus\" in this message, I'm\njust talking about the participants of this call, not the design team\nor working group as a whole.\n\n   Agenda:\n\n   - moving LABEL to advanced\n\nWe had a combination of weak preferences to leave it in core, and a\nstrong preference (from Geoff) to move it into advanced.  Geoff's\nrationale was that Lisa had effectively provided an existence proof\nthat useful versioning behavior can be provided without labels, and\nthat although core should be designed to be compatible with the\nadvanced versioning features, the actual contents of core should be\nfocused on common or essential versioning features in both document\nand configuration management sytems.\n\nThose with a weak preference to leave it in core stated that\nthey would not object to it being moved to advanced, and agreed\nto report the consensus of the call as being that labels should\nbe moved to advanced, but with a \"label\" value defined for the OPTIONS\nDAV header, so a server can easily advertise support for labeling.\n\nGeoff will make a pass through the -10 draft, to verify that labeling\ncan easily be moved as a bundle to advanced, without disrupting the\nother core features.  He will also followup specifically to JimW's\n(passionate :-) defense of keeping labels in core.\n\n   - new methods vs. PROPPATCH of live properties\n\nThere was unanimous agreement that a method with significant\nside effects should be marshalled as a method, and not as \na PROPPATCH of a live property.\n\nWe also discussed a couple of topics not on the original agenda:\n\n   - case insensitive label comparison\n\nThe consensus of the group was that we would like to keep the\nrequirement that label comparison not involve any case folding.\nBut we also felt that for compatibility with certain existing\nrepositories, we should weaken that requirement from a MUST to\na SHOULD (just as appears in 2616 when it talks about URL comparison).\n\n   - the Workspace header\n\nTim has created a thread on this topic on the mailing list, indicating\nproblems with both the current and previous definitions of the\nsemantics of the Workspace header.  In particular, what URL's in\nthe request does the Workspace header apply to, and what URL's in\nthe response does the Workspace header apply to.  The consensus\nof the group was that the Workspace header causes more problems\nthan it solves, and the protocol would be significantly improved if\nthe Workspace header were just deleted.\n\nThe only person I know of that would object to that is Chris\nKaler, so I've left him some voice mail asking him to define\nwhat he would like the semantics of the Workspace header to be,\nand to be prepared to defend its continued presence in the\nprotocol.  Anyone else that is in favor of the Workspace header\nis encouraged to to so (i.e. define it carefully, and defend it)\nalso.\n\n\n\n", "id": "lists-005-11446678"}, {"subject": "Re: workspace heade", "content": "   From: Tim_Ellison@uk.ibm.com\n\n   <tim> ... what about the URLs to,\n   say, working resources that cannot be expressed relative to a workspace.\n\n   This is certainly an issue with a Workspace header.  One approach is\n   to put those workspaces on a different (possibly virtual) host.\n   Another approach is to put a binding to those resources in every\n   workspace (probably the approach our implementation will use).\n\n   <tim2> I don't understand what you mean by 'putting abinding to\n   those resources in every workspace'.  In particular, say you do a\n   property report against a version selector, to get its target value\n   and 'follow' it's target to find the URL of the history resource.\n   Would you poof-up mappings for these values that are relative to\n   the workspace header?  Presumably there is little choice.\n\n\nSuppose your working resources are named \"/repo/wr/...\"\nand your workspace is named \"/ws/tim_def\"\n\nThen the server responsible for \"/ws/tim_def\" could automatically\ncreate a binding named \"repo\" (to the \"/repo\" collection) in\n\"/ws/tim_def\".  This would mean that URL's like /repo/wr/... would\nwork both with and without a Workspace header.\n\nOf course, if you happen to already have a real member of /ws/tim_def\nthat is named \"repo\", you are out of luck.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-11456509"}, {"subject": "RE: Making &quot;LABEL&quot; optiona", "content": "I agree with Jim - but I would also add that labels provide more than just \na human readable name, they provide the ability to define a unique \nconfiguration of the resources in the repository.  One often does not want \nto get everything from the repository, just the subset of resources in the \nconfiguration identified by a unique label.  Baselines provide this type of \nfunctionality in advanced versioning and labels provide it in core.  If \nlabels are removed from core, how is this accomplished?\n-- Henry.\n\nAt 11:03 AM 10/5/00 -0700, Jim Whitehead wrote:\n\n> > Lisa has asked that we make LABEL functionality optional\n> > (i.e. move it into advanced).\n> >\n> > I personally have no problem with that, since labeling\n> > is pretty much orthogonal to CHECKOUT/CHECKIN.\n> >\n> > Does anyone object? (and if so, please give some reasonably\n> > specific rationale).\n>\n>I object.\n>\n>A label is a mechanism for giving a specific revision a human readable name,\n>as opposed to the server (machine) generated version identifier.  While it\n>is true that you can support linear versioning without the use of labels, it\n>is similarly true that you *could* have a filesystem automatically generate\n>an identifier for each file as it is created.  My point? The ability to\n>assign a human-meaningful name to a specific revision allows people to more\n>easily remember ones that are significant.  Instead of remembering that\n>version 1.6 was the one sent out to customers, a label of \"Release_A\" can be\n>used instead. Thus the label feature addresses a basic cognitive recall\n>problem inherent in the use of machine generated identifiers for revisions.\n>Since the machine generated identifiers are part of core versioning, the\n>remedy for them should also be part of core.\n>\n>The vast majority of commercial and research versioning systems provide some\n>mechanism for assigning a human readable name to a revision, typically in\n>the form of a label.  I will take the liberty of assuming that they are not\n>blindly coding a feature everyone else has, and have provided it because it\n>offers a function their user base has found to be useful.  Doesn't it seems\n>that such a commonly occurring versioning feature should also be part of our\n>core versioning?\n>\n>Finally, I am sure that there exist user communities that are confused by\n>the very notion of versioning, who will never use the label feature.\n>Similarly, I am sure there are communities of novice word processing users\n>that are confused by the very notion of word processing, and never use the\n>spell checking feature.  Does that argue for removal of spell checking from\n>\"core\" word processing? I think not.\n>\n>- Jim\n\n=========================================\nHenry K. Harbury <hharbury@assetvalue.com>\nManaging Director\nInvestments Analytic, Inc.\n\nSoftware Engineering\n14933 SW 91st Avenue\nTigard, Oregon 97224\n\nVoice: (503) 620-2566\nFax #: (503) 620-2856\n==========================================\n\n\n\n", "id": "lists-005-11464668"}, {"subject": "Re: DAV:checked-ou", "content": "On Fri, Oct 06, 2000 at 03:42:44PM -0400, Boris Bokowski/OTT/OTI wrote:\n> Woah. Where did that come from? Multiple checkouts of a version selector\n> were something that I had specifically requested a couple months ago \n> during\n> a review. The answer at that time, IIRC, was \"sure, it is done like <so>\"\n> \n> <boris> The change was made because in the old spec, servers that \n> supported workspaces would be confusing for clients because they replaced\n> version selectors on checkout whereas other servers created working\n> resources at a new URL. </boris>\n\nBut then the second client to check the thing out would be attemping to\ncheck out a WORKING resource. That can fail without demanding this whole\n\"single checkout\" mechanism.\n\n> The scenario is:\n> \n>   - Joe creates and activity, checkouts out /foo into that activity, and\n>     begins updating it.\n>   - Jane does likewise.\n>   - One or both merge the activity\n> \n> <boris> I can see two possibilities for mapping this scenario to deltaV:\n>  In the first possibility, which does not use workspaces (or just one),\n\nI'm not using workspaces, and don't plan to. They aren't needed in my\nscenario, as working resources at arbitrary URLs are quite acceptable.\n\n>  both Joe and Jane check out /foo using \n>    <DAV:checkout><DAV:target/></DAV:checkout>\n>  which creates a working resource at a server-generated URL. The merge \n>  takes care of setting the target of the version selector at /foo. Note\n>  that the only difference to the way it was spec'd before is that the\n>  version selector's target is not updated when you check in a working\n>  resource. But this probably is what you want anyway, since you use\n>  activities and merging to update the shared state (and not the check in\n>  operation).\n\nThis would appear to work since a version resource can have multiple hrefs\nin its DAV:checkout-set property.\n\n>  The second possibility is to use three workspaces, a common one, and a \n>  private one for each developer. A checkout, this time without the\n>  <DAV:target/>, only affects the private workspace, and you can use\n>  activities and merge to update the shared state in the common workspace.\n> </boris>\n\nI'm using activities to operate as a Change Set. Now you're also saying that\nI must create/destroy a Workspace, too. No way. DeltaV is just broken if I\nmust do something like:\n\n    MKWORKSPACE\n    MKACTIVITY\n    CHECKOUT /foo\n    PUT /foo\n    MERGE /act/123\n    DELETE /act/123\n    DELETE /ws/123\n\nWe're talking a very transitory operation, and building up a workspace for\nthat isn't right. I'm also not a fan of workspaces to begin with (I don't\nlike mutating resource types in place).\n\n-------\n\nIn John Vasta's email, he said the DAV:checked-out property on the version\nselector could be used to diff the working resource against what was checked\nout. That is the wrong approach. The DAV:checked-out should be on the\nWORKING resource, not the version selector. That is the right place for it,\nand it provides exactly the same value. If you are using workspaces, then\nthe (in-place) working resource will have that property.\n\n-------\n\nDAV:checked-out on a version selector is not right. It should be on a\nversion resource and on a working resource.\n\nI should be able to multiply-checkout a version selector, and have it imply\nthe target for checkout each time.\n\n\nOh. Geez... and I just saw in the spec. DAV:target *DISAPPEARS* from the\nversion selector when it gets checked out?\n\nNo. No. No. No. <repeat>\n\nIf somebody goes and checks out a version selector, then all the clients\nwill now need to read *two* properties to try and reach the target version\nresource? No way. What if I'm trying to do a property report and use\nDAV:target to link over to the version resources to fetch their data? Oops.\nThat doesn't work since DAV:target doesn't exist any more on some of the\nversion selectors.\n\nGah.\n\n\nPROPOSAL:\n\n  DAV:target is always defined on a Version Selector\n  Working Resources have a DAV:checked-out property\n  Version Selectors never have a DAV:checked-out property\n  Version Resources retain their DAV:checkout-set, but drop the bit about\n      version selectors having a DAV:checked-out property\n  CHECKOUT does not manipulate the Version Selector\n  Put the language back in that says a CHECKOUT on a Version Selector\n      replaces it with a Working Resource (which seems to be part of what is\n      happening here)\n\nI think that's about it.\n\nCheers,\n-g\n\n-- \nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-11475402"}, {"subject": "Re: Making &quot;LABEL&quot; optiona", "content": "   From: \"Jim Whitehead\" <ejw@cse.ucsc.edu>\n\n   > I agree that LABEL functionality is very important, and should be\n   > standardized in the protocol, but I don't see that Jim's arguments\n   > identify the significant interoperability problems that will result\n   > if LABEL is optional functionality.\n\n   Creation or removal of interoperability problems is a poor criteria for\n   determining what belongs in core.  Using this as the criteria, I could argue\n   that CHECKOUT should be optional, since it is impossible to identify any\n   significant interoperability problems that would result from it being put\n   into advanced versioning.\n\nA core client that tries to do a CHECKIN without a CHECKOUT\nwill fail against an advanced server that requires a CHECKOUT\nto precede a CHECKIN.\n\nIn contrast, a core client that does not set any labels works\njust fine against advanced servers.\n\n   Such a move would raise *oper*ability problems,\n   but that is my point. CHECKOUT's inclusion in core versioning depends on its\n   utility for basic versioning use.  \n\nI disagree.  CHECKOUT's inclusion in core reflects the fact that the\nversioning model requires CHECKOUT's to precede CHECKIN's.  The versioning\nmodel does not require any version to be labeled.\n\n   Similarly, my previous argument was that\n   labels provide such a valuable facility, useful across such a wide range of\n   users and use cases, that it belongs in core.\n\nThis is even more true for a \"history resource\", but we did not make\nthat part of core because it was not essential for effective versioning\nbehavior.\n\n   I illustrated this by\n   identifying how labels address the naming problems that accompany the use of\n   machine-generated version identifiers.  Since these problems would be part\n   of core, it seems to me their remedy should also be part of core.\n\nLabels are not needed to address the naming problem.  I consider the\nlist that Lisa provided of versioning servers that don't provide\nlabels as an existence proof of this.  In particular, we already have\na large number of standardized properties that a client can use to\nhelp the user to name and select the version they want.  For example,\nin core we provide DAV:creator-displayname and DAV:comment, and 2518\nprovides DAV:displayname.  In addition, there are a variety of server\ngenerated strings that supplement this user defined information, such\nas DAV:version-name, DAV:checkin-date, DAV:getmodificationdate, etc.\n\nA client can just ask for a DAV:version-tree report with the relevant\nfields, and the user can use that information to select the version of\ninterest.\n\nLabels with their \"can only identify one version\" property are\ncertainly useful, but by no means essential.\n\n   Any of the methods we're proposing *could* be optional, and a\n   client *could* adapt to whatever features the server provides.  The net\n   result of this would not be increased simplicity on the client side, though.\n\nI assume that all clients will give their user the ability to browse\n(and set) properties like DAV:displayname and DAV:comment on the\nversions.  Whether this is supplemented by the ability to put labels\non those versions seems like a reasonable thing to make optional,\nwith no significant increase in complexity of the client (just grey out\nthe \"label\" menu item).\n\n   Labels are such a widely provided feature across version control systems\n   that the burden of proof really lies on those who want to move this\n   functionality out of core.\n\nI believe that Lisa has now done this.\n\n   I really need to be convinced that the absence\n   of labels won't: (a) violate the expectations of versioning-aware users of\n   DeltaV applications (I personally would think the absence of labels to be\n   extremely odd in a modern versioning system), and (b) lead to increased\n   cognitive difficulties due to the absence of revision naming capabilities.\n\nI consider that most of the systems that Lisa identified to be modern\nversioning systems ... it's just that they are not software\nconfiguration management systems.  So if our protocol were only\ntargeted at software configuration management, I'd agree with you, but\nI believe it is essential that core be a suitable \"core\"\n(i.e. minimum) for both document management and software configuration\nmanagement.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-11486949"}, {"subject": "Re: DAV:checked-ou", "content": "   From: Greg Stein <gstein@lyra.org>\n\n   > <boris> The change was made because in the old spec, servers that \n   > supported workspaces would be confusing for clients because they replaced\n   > version selectors on checkout whereas other servers created working\n   > resources at a new URL. </boris>\n\n   But then the second client to check the thing out would be attemping to\n   check out a WORKING resource. That can fail without demanding this whole\n   \"single checkout\" mechanism.\n\nYes, but we believe that a client needs to be able to control whether\nthere is an \"in-place\" checkout (i.e. the version selector is now\nchecked out) or whether a new working resource (at a different URL) is\ncreated, leaving the request-URL a checked in version selector.\n\nSo you just indicate what you want, by including or omitting the\nDAV:target parameter to the CHECKOUT request.\n\n   > The scenario is:\n   > \n   >   - Joe creates and activity, checkouts out /foo into that activity, and\n   >     begins updating it.\n   >   - Jane does likewise.\n   >   - One or both merge the activity\n   > \n   > <boris> I can see two possibilities for mapping this scenario to deltaV:\n   >  In the first possibility, which does not use workspaces (or just one),\n\n   I'm not using workspaces, and don't plan to. They aren't needed in my\n   scenario, as working resources at arbitrary URLs are quite acceptable.\n\nThat's fine.  Workspaces are of course totally optional.\nBoris was just being complete in his response (:-).\n\n   >  both Joe and Jane check out /foo using \n   >    <DAV:checkout><DAV:target/></DAV:checkout>\n   >  which creates a working resource at a server-generated URL. The merge \n   >  takes care of setting the target of the version selector at /foo. Note\n   >  that the only difference to the way it was spec'd before is that the\n   >  version selector's target is not updated when you check in a working\n   >  resource. But this probably is what you want anyway, since you use\n   >  activities and merging to update the shared state (and not the check in\n   >  operation).\n\n   This would appear to work since a version resource can have multiple hrefs\n   in its DAV:checkout-set property.\n\nYes.\n\n   >  The second possibility is to use three workspaces, a common one, and a \n   >  private one for each developer. A checkout, this time without the\n   >  <DAV:target/>, only affects the private workspace, and you can use\n   >  activities and merge to update the shared state in the common workspace.\n   > </boris>\n\n   I'm using activities to operate as a Change Set. Now you're also saying that\n   I must create/destroy a Workspace, too.\n\nNo, no, no!  He was just saying that there is a *second* different\nway to get the same effect.  If you liked the first way, just ignore\nthe rest of his message (:-).\n\n   No way. DeltaV is just broken if I\n   must do something like:\n\n       MKWORKSPACE\n       MKACTIVITY\n       CHECKOUT /foo\n       PUT /foo\n       MERGE /act/123\n       DELETE /act/123\n       DELETE /ws/123\n\nNo, the second approach is one where each person creates a workspace,\nand lives in that workspace from then on (or at least, for quite a\nwhile).  You create that workspace once, and then do all your\ncheckout/checkin's on version selectors in that workspace.  You would\nonly create a second workspace for yourself if you were working on two\nprojects at the same time, in which case you'd create one workspace\nfor each project you are concurrently working on.\n\n   We're talking a very transitory operation, and building up a workspace for\n   that isn't right. I'm also not a fan of workspaces to begin with (I don't\n   like mutating resource types in place).\n\nThen you'll be happy that you no longer mutate resource types for an\nin-place checkout (:-) ... you just change the state of the version selector\nfrom checked-in to checked-out.  (But you are of course free to create\na working resource instead).\n\n   -------\n\n   In John Vasta's email, he said the DAV:checked-out property on the version\n   selector could be used to diff the working resource against what was checked\n   out. That is the wrong approach. The DAV:checked-out should be on the\n   WORKING resource, not the version selector. That is the right place for it,\n   and it provides exactly the same value. If you are using workspaces, then\n   the (in-place) working resource will have that property.\n\nWorking resources are by (the current :-) definition not in-place.\nAn \"in-place working resource\" is a checked out version selector.\n\n   -------\n\n   DAV:checked-out on a version selector is not right. It should be on a\n   version resource and on a working resource.\n\n   I should be able to multiply-checkout a version selector, and have it imply\n   the target for checkout each time.\n\n\n   Oh. Geez... and I just saw in the spec. DAV:target *DISAPPEARS* from the\n   version selector when it gets checked out?\n\n   No. No. No. No. <repeat>\n\nAs you said above, it is brain dead to mutate the resource type of\na resource \"in place\", so we don't do that anymore (:-).  I thought\nyou'd be pleased (or at worst, not care :-).\n\n   If somebody goes and checks out a version selector, then all the clients\n   will now need to read *two* properties to try and reach the target version\n   resource?\n\nThat's exactly what would have happened whenever you had an \"in-place\"\ncheckout.  Before the CHECKIN, you had a resource with a\nDAV:target property.  After the CHECKIN, you had  a resource with\nno DAV:target property, but with a DAV:checked-out property.\n\nBefore we said it also magically changed its type.  We don't\nsay that anymore.\n\nThe meaning DAV:target is very different from the meaning of\nDAV:checked-out, and reflects the state change from checked-in to\nchecked-out.\n\n   No way. What if I'm trying to do a property report and use\n   DAV:target to link over to the version resources to fetch their data?\n\nYou expected to be able to do that to a working resource?  It has no\nDAV:target property, so you were always out of luck if you wanted to\nuse the same PROPFIND on a checked in and a checked out resource.\n\n   Oops.\n   That doesn't work since DAV:target doesn't exist any more on some of the\n   version selectors.\n\nIt never did, after they were \"replaced\" by an \"in place\" working resource.\nIt's just that now we make it clear (:-).\n\n   PROPOSAL:\n\n     DAV:target is always defined on a Version Selector\n\nchecked-in version selector, sure.\n\n     Working Resources have a DAV:checked-out property\n\nAs do \"checked-out\" version selectors.\n\n     Version Selectors never have a DAV:checked-out property\n\nWhat about when they are checked out?\n\n     Version Resources retain their DAV:checkout-set, but drop the bit about\n version selectors having a DAV:checked-out property\n\nBut what about when they *are* checked out?\n\n     CHECKOUT does not manipulate the Version Selector\n\nIt always did (i.e. the \"in place\" CHECKOUT).  It just wasn't obvious\nbefore.\n\n     Put the language back in that says a CHECKOUT on a Version Selector\n replaces it with a Working Resource (which seems to be part of what is\n happening here)\n\nHow is that any better?  The bottom line is that the properties on\nthe request-URL change as a result of the CHECKOUT. \n\nKeep in mind that all we did to the spec was a mechanical query/replace\nof \"in place working resource\" with \"checked out version selector\".\nNo change at all in any of the semantics.  If you didn't think that\nit acted this way before, that is one of the main reasons why we\nchanged the description, because the old way of describing it hid\nsome very essential semantics that are now exposed.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-11498457"}, {"subject": "Re: Making &quot;LABEL&quot; optiona", "content": "Since many document management clients don't want or need baselining\nor configuration functionality, the document management versioning\nservers do not want to have to provide the infrastructure\n(i.e. labels) for it.\n\nCheers,\nGeoff\n\n   Date: Fri, 06 Oct 2000 14:38:26 -0700\n   From: \"Henry K. Harbury\" <hharbury@assetvalue.com>\n\n   I agree with Jim - but I would also add that labels provide more than just \n   a human readable name, they provide the ability to define a unique \n   configuration of the resources in the repository.  One often does not want \n   to get everything from the repository, just the subset of resources in the \n   configuration identified by a unique label.  Baselines provide this type of \n   functionality in advanced versioning and labels provide it in core.  If \n   labels are removed from core, how is this accomplished?\n   -- Henry.\n\n\n\n", "id": "lists-005-11513420"}, {"subject": "Re: DAV:checked-ou", "content": "On Fri, Oct 06, 2000 at 06:25:25PM -0400, Geoffrey M. Clemm wrote:\n>... blap blam boom ...\n\nOkay. Quick question:\n\n  If I CHECKOUT a version resource (directly or via DAV:target in the\n  CHECKOUT method), does the DAV:target disappear from any Version Selectors\n  that point at correspond to that version?\n\n\nIn other words, does the monkeying around with DAV:target and\nDAV:checked-out *only* occur for in-place checked-out version selectors?\n\n[ which in turn means it won't happen to me since I don't use in-place ]\n\nWith that tidbit, then I'll reread your email to see if problems still\nexist.\n\nThx!\n\nCheers,\n-g\n\n-- \nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-11521455"}, {"subject": "Re: DAV:checked-ou", "content": "   From: Greg Stein <gstein@lyra.org>\n\n     If I CHECKOUT a version resource (directly or via DAV:target in the\n     CHECKOUT method), does the DAV:target disappear from any Version Selectors\n     that point at correspond to that version?\n\nNope.  No strange side effects.  The only time the DAV:target disappears\nfrom a version selector is when you apply the CHECKOUT directly to that\nversion selector (with no DAV:target parameter).\n\n   In other words, does the monkeying around with DAV:target and\n   DAV:checked-out *only* occur for in-place checked-out version selectors?\n\nYes. \n\n   [ which in turn means it won't happen to me since I don't use in-place ]\n\nYup.  Note that in draft -08 and before, the client had no way of\nforcing the server to create a new working resource ... the server\ncould just merrily replace your version selector with a working\nresource.  Now it has to respect your CHECKOUT/DAV:target specification\n(and similarly, respect the *absence* of a DAV:target, and do the\nCHECKOUT in place for clients that want that behavior).\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-11529257"}, {"subject": "the Workspace heade", "content": "In my notes from the con-call, I alluded to a problem with the\nWorkspace header.  The problem is that it is incompatible with\ncommon web server extension mechanisms\n\nIn particular, a common way of extending a web server is to declare\nthat a certain module owns the URL space below a certain defined\npoint.  The web server then looks at an incoming request-URL and\npasses it to the appropriate module.  With the Workspace header, you'd\nhave to make the versioning module take over the *entire* request-URL\nspace (i.e. the whole web server), since any request-URL with a\nWorkspace header would have to be sent to the versioning module.\n\nSo this means that it is unlikely that servers that have this form of\nweb server extension mechanism will support the Workspace header,\nwhich makes it a source of non-interoperability.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-11536912"}, {"subject": "Re: Making &quot;LABEL&quot; optiona", "content": "Labels have a role separate from support from baselining. They're just a \nmechanism for distinguishing revisions that is controled by the client. \nWithout labels, clients that want to get a consistent set of revisions \nwill have to remember all the server-generated URLs and/or version names. \nAlthough possible, this is state that the server should generally be \nproviding for clients so they don't have to persist this kind of \ninformation.\n\n\n\n\nSince many document management clients don't want or need baselining\nor configuration functionality, the document management versioning\nservers do not want to have to provide the infrastructure\n(i.e. labels) for it.\n\nCheers,\nGeoff\n\n   Date: Fri, 06 Oct 2000 14:38:26 -0700\n   From: \"Henry K. Harbury\" <hharbury@assetvalue.com>\n\n   I agree with Jim - but I would also add that labels provide more than \njust\n   a human readable name, they provide the ability to define a unique\n   configuration of the resources in the repository.  One often does not \nwant\n   to get everything from the repository, just the subset of resources in \nthe\n   configuration identified by a unique label.  Baselines provide this \ntype of\n   functionality in advanced versioning and labels provide it in core.  If\n   labels are removed from core, how is this accomplished?\n   -- Henry.\n\n\n\n", "id": "lists-005-11544222"}, {"subject": "LABEL method in advance", "content": "<geoff>We had a combination of weak preferences to leave it in core, and a\nstrong preference (from Geoff) to move it into advanced.  Geoff's\nrationale was that Lisa had effectively provided an existence proof\nthat useful versioning behavior can be provided without labels, and\nthat although core should be designed to be compatible with the\nadvanced versioning features, the actual contents of core should be\nfocused on common or essential versioning features in both document\nand configuration management sytems.</geoff>\n\n<jra>Note that just because a versioning repository manager doesn't support\nlabels doesn't mean that a WebDAV server on that repository manager can't\nsupport labels. There are lots of WebDAV semantics that are not directly\nmapped to the underlying repository that have to be implemented in the\nserver. For example, the UNIX and Windows file systems don't support\narbitrary properties on files, but the Apache/mod_dav server supports\nproperties by using a separate database. We should be careful about using\nexisting repository implementations solely as an argument for\nincluding/excluding functions. I agree with JimW that labeling versions is\na fundamental concept that should be part of core. That fact that a number\nof repository managers don't support this doesn't provide motivation for\nmoving it to advanced to me because 1) these repository managers aren't\ntrying to be THE Web distributed authoring and versioning protocol\n(supporting distributed, multi-user, multi-version access), 2) they aren't\nprime movers in the repository marketplace, and 3) a number of the ones\nLisa mentioned would like to add label support.</jra>\n\n\n\n", "id": "lists-005-11553364"}, {"subject": "Re: Making &quot;LABEL&quot; optiona", "content": "   From: \"Jim Amsden/Raleigh/IBM\" <jamsden@us.ibm.com>\n\n   Labels have a role separate from support from baselining. They're just a\n   mechanism for distinguishing revisions that is controled by the client.\n\nThe clients already have this capability via properties like\nDAV:comment, DAV:displayname, and DAV:creator-displayname.  Combined\nwith server defined properties such as DAV:version-name and\nDAV:getmodificationdate, a user can distinguish one version from\nanother without the use of labels.\n\n   Without labels, clients that want to get a consistent set of revisions\n   will have to remember all the server-generated URLs and/or version\n   names.\n\nThis is what baselines are for as well, but if a set of users have no\nneed for getting a consistent set of versions (beyond what is\ncurrently selected as the targets of the version selectors), requiring\nthat every versioning implementation provide this functionality places\nan unnecessary burden on versioning servers targeted at those users.\nThe fact that there are a significant communitiy of users that care\nabout versioning, but not labeling/baselining, has been demonstrated\nby Lisa's survey of versioning systems.\n\n   From: \"Jim Amsden/Raleigh/IBM\" <marjorie@us.ibm.com>\n\n   Note that just because a versioning repository manager doesn't\n   support labels doesn't mean that a WebDAV server on that repository\n   manager can't support labels.\n\nTrue, but I'm not sure how this is relevant to the current discussion.\nNobody was saying that labels cannot be implemented (clearly they can\nbe).  Lisa's point was that it is a non-trivial effort for\nfunctionality that an important class of clients will not use.\n\n   We should be careful about using existing repository\n   implementations solely as an argument for including/excluding\n   functions.\n\nThe point being made by enumerating existing versioning\nsystems without label support was that labeling is demonstrably\nnot essential versioning functionality for a significant\nclass of users that do want versioning functionality.\n\n   I agree with JimW that labeling versions is a\n   fundamental concept that should be part of core. That fact that a\n   number of repository managers don't support this doesn't provide\n   motivation for moving it to advanced to me because 1) these\n   repository managers aren't trying to be THE Web distributed\n   authoring and versioning protocol (supporting distributed,\n   multi-user, multi-version access),\n\nA repository manager is not a protocol, nor does it try to be\none.  It just provides functionality to a class of users.\nIf a demonstrably useful versioning system cannot be marshalled\nthrough the WebDAV versioning protocol without adding in\nfunctionality not needed by users of that system, this\nin my view would represent a flaw in the protocol.\n\n   2) they aren't prime movers in the repository marketplace,\n\nI'm not sure how you determined who the \"prime movers in the\nrepository marketplace\".  I consider the systems identified\nby Lisa to represent an important class of systems for which\nthe WebDAV versioning protocol should be appropriate.\n\n   3) a number of the ones Lisa mentioned would like to add label support.\n\nSince nobody was stopping them from doing so, the fact that they\nchose not to include label support in the current versions of\ntheir systems tells me that this is not an essential feature\nof a system that provides versioning support.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-11561531"}, {"subject": "I-D ACTION:draft-ietf-deltav-versioning-10.tx", "content": "A New Internet-Draft is available from the on-line Internet-Drafts directories.\nThis draft is a work item of the Web Versioning and Configuration Management Working Group of the IETF.\n\nTitle: Versioning Extensions to WebDAV\nAuthor(s): G. Clemm, J. Amsden, C. Kaler, J. Whitehead\nFilename: draft-ietf-deltav-versioning-10.txt\nPages: 75\nDate: 06-Oct-00\n\nThis document specifies a set of methods, headers, and resource-types \nthat define the WebDAV Versioning extensions to the HTTP/1.1 protocol. \nWebDAV Versioning will minimize the complexity of clients that are\ncapable of interoperating with a variety of versioning repository\nmanagers, to facilitate widespread deployment of applications capable of\nutilizing the WebDAV Versioning services.  WebDAV Versioning includes:\n- core versioning with automatic versioning for versioning-unaware\nclients,\n- workspace, activity and baseline management,\n- URL namespace versioning.\n\nA URL for this Internet-Draft is:\nhttp://www.ietf.org/internet-drafts/draft-ietf-deltav-versioning-10.txt\n\nInternet-Drafts are also available by anonymous FTP. Login with the username\n\"anonymous\" and a password of your e-mail address. After logging in,\ntype \"cd internet-drafts\" and then\n\"get draft-ietf-deltav-versioning-10.txt\".\n\nA list of Internet-Drafts directories can be found in\nhttp://www.ietf.org/shadow.html \nor ftp://ftp.ietf.org/ietf/1shadow-sites.txt\n\n\nInternet-Drafts can also be obtained by e-mail.\n\nSend a message to:\nmailserv@ietf.org.\nIn the body type:\n\"FILE /internet-drafts/draft-ietf-deltav-versioning-10.txt\".\n\nNOTE:The mail server at ietf.org can return the document in\nMIME-encoded form by using the \"mpack\" utility.  To use this\nfeature, insert the command \"ENCODING mime\" before the \"FILE\"\ncommand.  To decode the response(s), you will need \"munpack\" or\na MIME-compliant mail reader.  Different MIME-compliant mail readers\nexhibit different behavior, especially when dealing with\n\"multipart\" MIME messages (i.e. documents which have been split\nup into multiple messages), so check your local documentation on\nhow to manipulate these messages.\n\n\nBelow is the data which will enable a MIME compliant mail reader\nimplementation to automatically retrieve the ASCII version of the\nInternet-Draft.\n\n\n\n\n\n\nMessage/External-body attachment: stored\n\n\n\n\n", "id": "lists-005-11572510"}, {"subject": "DeltaV Working Group Last Cal", "content": "*** WORKING GROUP LAST CALL FOR COMMENTS ***\n\nWebDAV Versioning and Configuration Management PROTOCOL SPECIFICATION\n\nThis is the final call for comments from the DeltaV working group on the\nWebDAV Versioning and Configuration Management Specification,\ndraft-ietf-deltav-versioning-10.  This last call for comments period begins\nimmediately, and ends December 1, 2000, at midnight, US Eastern time.  This\nallows just over seven weeks for review of the specification in time for\nthe December IETF '49 meeting.\n\nAt the end of the last call review period, a new draft will be issued.\nDepending on the scope of changes introduced between the -10 and -11\nversions, there will either be an immediate call for rough consensus (very\nfew changes), or a second last call review period (significant changes).\nOnce the document represents the rough consensus of the working group, I\nwill submit this document to the Internet Engineering Steering Group (IESG)\nfor their approval.  IESG review involves a (minimum) two week public last\ncall for comments period.  This IESG-initiated last call period is in\naddition to the working group last call period.\n\nThis document is intended to be a \"Proposed Standard\".  Quoting from RFC\n2026, \"The Internet Standards Process -- Revision 3\":\n\n   The entry-level maturity for the standards track is \"Proposed Standard\".\nA specific action by the IESG is required to move a specification onto the\nstandards track at the \"Proposed Standard\" level.\n\n   A Proposed Standard specification is generally stable, has resolved\nknown design choices, is believed to be well-understood, has received\nsignificant community review, and appears to enjoy enough community\ninterest to be considered valuable.  However, further experience might\nresult in a change or even retraction of the specification before it\nadvances.\n\n   Usually, neither implementation nor operational experience is required\nfor the designation of a specification as a Proposed Standard.  However,\nsuch experience is highly desirable, and will usually represent a strong\nargument in favor of a Proposed Standard designation.\n\nMany details on the procedures used to develop an IETF standard can be\nfound in RFC 2026, available at: http://www.ietf.org/rfc/rfc2026.txt\n\nIf there are any procedural questions or concerns, please do not hesitate\nto contact me, or raise an issue on the list.\n\nNotes:\n\n1) Issues raised during the last call period will be resolved individually,\nrather than lumped together and dealt with as a whole.  This follows the\nissue-resolution convention being followed in the HTTP WG.\n\n2) If you've been waiting for a \"stable\" version of the specification\nbefore performing a review, you need wait no longer.  This is it.  We value\nyour input, but time is running out. So please review the specification now\nin order to ensure your input gets included.\n\n- Jim Amsden\nChair, IETF DeltaV Working Group\n\n\n\n", "id": "lists-005-11581554"}, {"subject": "Versioning TeleConf Agenda, 10/13/00 (Friday) 11-12 ES", "content": "I will probably not be able to attend a con-call this Friday,\nand since no new issues have been raised, and the current issues\n(remove workspace header, move labels to advanced) are being pursued\non the mailing list, I'm inclined to cancel this week's call.\n\nIf someone else would like to post an agenda and hold the call\nthis week, please do so (I'll leave the usual number and pass-code\nactive).\n\nOtherwise, please just spend the time carefully reviewing the last\ncall version of the protocol (-10, very few changes from -09), and\npost your findings to the mailing list!\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-11591427"}, {"subject": "RE: Versioning TeleConf Agenda, 10/13/00 (Friday) 11-12 ES", "content": "I cannot make these calls since we moved them to 8am PST.\nIs there any way we can move this to 9am PST?\n\nChris\n\n-----Original Message-----\nFrom: Clemm, Geoff [mailto:gclemm@rational.com]\nSent: Monday, October 09, 2000 10:26 AM\nTo: ietf-dav-versioning@w3.org\nSubject: Versioning TeleConf Agenda, 10/13/00 (Friday) 11-12 EST\n\n\nI will probably not be able to attend a con-call this Friday,\nand since no new issues have been raised, and the current issues\n(remove workspace header, move labels to advanced) are being pursued\non the mailing list, I'm inclined to cancel this week's call.\n\nIf someone else would like to post an agenda and hold the call\nthis week, please do so (I'll leave the usual number and pass-code\nactive).\n\nOtherwise, please just spend the time carefully reviewing the last\ncall version of the protocol (-10, very few changes from -09), and\npost your findings to the mailing list!\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-11599174"}, {"subject": "Workspace header and optional labelin", "content": "I've gotten no defenders of the \"Workspace\" header (Chris ... ?)\nand no \"rebuttal\" to the most recent arguments for making labeling\noptional, so I'll go ahead and prepare a working draft with those\nchanges.  Also, Greg's comments indicated that the protocol does not\nprovide sufficient motivation for workspaces, so I'll expand that\nsection with a few of the problems that they are intended to address.\n\nSince these changes do not involve any changes to the semantics of the\nprotocol, they do not warrant a new internet draft, so I'll just post\na deltav-10.1 working draft on the web site, with deltav-10 remaining\nthe last call internet draft.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-11608419"}, {"subject": "Re: Workspace header and optional labelin", "content": "Geoff,\nSince -10 is the working group last call, we need to maintain \"change bars\"\nbetween now and proposed standard last call. Since text documents rule, we\nshould keep a changes list at the end of the document to give a heads up to\nreaders. Just high-level items, not minor changes would probably be\nsufficient. These will be removed in -11 and started again as we address\nproposed standard last call feedback leading to -12.\n\nWe should also have a list of unresolved issues to discuss at the Dec\nworking group meeting. I think making labels optional is a prime candidate.\nWith all the discussions we've had on leveling in the last two years,\nno-one has ever requested that labels be optional. Lisa brought it up and\nprovided some example repository vendors that don't support labels. You\nhave expressed support for making it optional. But the Jims' have been\npretty vocal on the other side. And I did submit a rebuttal on the recent\narguments. So I think this is a subject the working group should address.\n\nThe thing I liked about the workspace header is that it seemed to me the\nlogical resource namespace which represents the host domain, and the\nfunctional grouping of resources supporting some web application is\northogonal to versioning. By putting the workspace as a URL prefix,\nversioning is invading this logical namespace with versioning details. This\ndoesn't seem ideal. Using a header let us parameterize how to interpret the\nresource URL. However, such a header does not make it clear what context\nother URLs in the request or response are evaluated in. I suggest that a\nworkspace header should apply to all URLs in the request and response. That\nis, all operations are done in the context of the specified workspace. If\nthis needs to be overridden for a particular resource (say the destination\nfor a copy), then we can use the workspace prefix. How does that sound?\n\n\n\n\n                                                                                                                                 \n                    \"Geoffrey M. Clemm\"                                                                                          \n                    <geoffrey.clemm@rational        To:     ietf-dav-versioning@w3.org                                           \n                    .com>                           cc:     ckaler@microsoft.com                                                 \n                    Sent by:                        Subject:     Workspace header and optional labeling                          \n                    ietf-dav-versioning-requ                                                                                     \n                    est@w3.org                                                                                                   \n                                                                                                                                 \n                                                                                                                                 \n                    10/11/2000 08:50 AM                                                                                          \n                                                                                                                                 \n                                                                                                                                 \n\n\n\n\n\nI've gotten no defenders of the \"Workspace\" header (Chris ... ?)\nand no \"rebuttal\" to the most recent arguments for making labeling\noptional, so I'll go ahead and prepare a working draft with those\nchanges.  Also, Greg's comments indicated that the protocol does not\nprovide sufficient motivation for workspaces, so I'll expand that\nsection with a few of the problems that they are intended to address.\n\nSince these changes do not involve any changes to the semantics of the\nprotocol, they do not warrant a new internet draft, so I'll just post\na deltav-10.1 working draft on the web site, with deltav-10 remaining\nthe last call internet draft.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-11616559"}, {"subject": "Re: Workspace header and optional labelin", "content": "   From: \"Jim Amsden/Raleigh/IBM\" <jamsden@us.ibm.com>\n\n   Since -10 is the working group last call, we need to maintain \"change bars\"\n   between now and proposed standard last call. Since text documents rule, we\n   should keep a changes list at the end of the document to give a heads up to\n   readers. Just high-level items, not minor changes would probably be\n   sufficient. These will be removed in -11 and started again as we address\n   proposed standard last call feedback leading to -12.\n\nSounds good ... will do.\n\n   We should also have a list of unresolved issues to discuss at the Dec\n   working group meeting.\n\nI believe that these issues should be discussed on the mailing\nlist during the last call period, and not deferred to a discussion\nat the Dec working group meeting.  Certainly, any issues that cannot\nbe resolved on the mailing list should be discussed at the Dec working\ngroup meeting.\n\n   I think making labels optional is a prime candidate.\n   With all the discussions we've had on leveling in the last two years,\n   no-one has ever requested that labels be optional.\n\nWe explicitly decided to not discuss leveling over a year ago,\nsince it didn't make sense to discuss what functionality belonged\nin what level until we had actually settled on what functionality\nwe would supporting.  Over the last year, the design effort has been\nprimarily focused on firming up the details of advanced versioning\nsupport, which are primarily of interest to configuration management\nsystem providers.\n\nNow that the dust has settled, and we have received a very thorough\nreview from a document management provider, I believe we need to\ntake that review very seriously.  The fact that configuration\nmanagement providers are happy to provide labeling support is\nto be expected, and is therefore neither very surprising nor\nespecially interesting.  If we want document management system\nproviders to implement the versioning protocol (and I certainly do),\nwe need to set the \"functionality bar\" at a level appropriate for\ndocument management.\n\n   Lisa brought it up and\n   provided some example repository vendors that don't support labels. You\n   have expressed support for making it optional.   But the Jims' have been\n   pretty vocal on the other side. And I did submit a rebuttal on the recent\n   arguments.\n\nI have not seen any rebuttal to the recent arguments (only your\ninitial messages in favor of requiring label support by all servers).\nTo summarize the recent arguments:\n\nThe combination of standard client defined properties like DAV:comment\nand DAV:creator-displayname, custom client defined properties, and\nstandard server defined properties like DAV:version-name and\nDAV:getmodificationdate, are sufficient to name and locate versions of\ninterest, and this is demonstrated by the document management systems\nthat do so (without the use of labels).\n\nIt is this point that I'd need to see rebutted.\n\n   So I think this is a subject the working group should address.\n\nI believe that the appropriate forum to discuss these final\nlast call issues is this mailing list, as this provides convenient\naccess to every member of the working group.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-11629185"}, {"subject": "RE: Making &quot;LABEL&quot; optiona", "content": "One of the very differences between a source-management system and a\n[simple] document-management system with versioning is that the simple\ndoc-mgmt system does not have any concept of a consistent set of revisions.\n\nFor example, let's say EJW wanted to keep all WebDAV related drafts in a\nWebDAV repository.  Is there any concept of \"consistent set\" between the ACL\ndraft, the versioning draft, and the various advanced collections drafts?\nOnly minimally if at all -- and any desire to see what changes were made at\nthe same time can be satisfied by looking at the dates of the older\nversions.  Such a repository would be useful, keeping a history of document\nchanges around, yet it would have no strong need for labeling.\n\nIn this scenario, comments could serve any need for user-readable info on\nprevious versions.  For example version 10 of the versioning draft might\nhave a \"last call\" comment on it.   Note that the \"last call\" version of the\nversioning draft has nothing to do with the \"last call\" version of the acls\ndraft.  There is very little to be gained from supporting labeling when\nthere is no concept of a consistent set of revisions, and I argue that this\nis the case in many simple doc-mgmt systems which support versioning.\n\nIs there a justification for supporting labelling that does not require\nadvanced source-related concepts like \"consistent set of revisions\", or that\ncannot be satisfied by using the version's comment or date properties?\n\nLisa\n\n-----Original Message-----\nFrom: ietf-dav-versioning-request@w3.org\n[mailto:ietf-dav-versioning-request@w3.org]On Behalf Of Jim\nAmsden/Raleigh/IBM\nSent: Sunday, October 08, 2000 8:48 AM\nTo: ietf-dav-versioning@w3.org\nSubject: Re: Making \"LABEL\" optional\n\n\n\nLabels have a role separate from support from baselining. They're just a\nmechanism for distinguishing revisions that is controled by the client.\nWithout labels, clients that want to get a consistent set of revisions will\nhave to remember all the server-generated URLs and/or version names.\nAlthough possible, this is state that the server should generally be\nproviding for clients so they don't have to persist this kind of\ninformation.\n\n\n\n\nSince many document management clients don't want or need baselining\nor configuration functionality, the document management versioning\nservers do not want to have to provide the infrastructure\n(i.e. labels) for it.\n\nCheers,\nGeoff\n\n   Date: Fri, 06 Oct 2000 14:38:26 -0700\n  From: \"Henry K. Harbury\" <hharbury@assetvalue.com>\n\n   I agree with Jim - but I would also add that labels provide more than\njust\n  a human readable name, they provide the ability to define a unique\n  configuration of the resources in the repository.  One often does not want\n  to get everything from the repository, just the subset of resources in the\n  configuration identified by a unique label.  Baselines provide this type\nof\n  functionality in advanced versioning and labels provide it in core.  If\n  labels are removed from core, how is this accomplished?\n  -- Henry.\n\n\n\n", "id": "lists-005-11639677"}, {"subject": "Re: Workspace heade", "content": "   From: \"Jim Amsden/Raleigh/IBM\" <jamsden@us.ibm.com>\n\n   The thing I liked about the workspace header is that it seemed to me the\n   logical resource namespace which represents the host domain,\n\nA workspace is a collection, and therefore does define a namespace\nfor its members, but I'm not sure what you mean by a \"logical\"\nresource namespace (as opposed to a physical one?) or by\n\"represents the host domain\" (as opposed to \"represents the\nclient domain\"?).\n\n   and the\n   functional grouping of resources supporting some web application is\n   orthogonal to versioning.\n\nI don't see that a workspace has anything in particular to do with \"a\nfunctional grouping of resources supporting some web application\".\nA workspace is just a collection of version selectors and unversioned\nresources, with a few additional properties tracking checkouts,\nactivities, and baselines for its members.\n\n   By putting the workspace as a URL prefix, versioning is invading\n   this logical namespace with versioning details.  This doesn't seem\n   ideal. Using a header let us parameterize how to interpret the\n   resource URL.\n\nThe namespace has already been \"invaded\" with versioning details\n(e.g. versions, working resources, version histories, activities, and\nbaselines).\n\nAllocating a new URL sub-tree is exactly how web servers are\ncommonly extended, which is why a workspace collection is compatible\nwith common web server extension techniques, while a Workspace header\nis not.\n\n   However, such a header does not make it clear what context\n   other URLs in the request or response are evaluated in. I suggest that a\n   workspace header should apply to all URLs in the request and response. That\n   is, all operations are done in the context of the specified workspace.\n\nEven URL's that explicitly refer to resources on another host?\nIf the host field is overridden by the Workspace header, that\nmeans that //www.foo.com/index.html will be the same as\n//www.bar.com/index.html.  That can't be right.\n\nWhat about headers (like Destination) that are required to contain\nan absolute URI, and therefore must contain an explicit host field.\nDoes the Workspace header apply to them?  If not, how do you\nCOPY or MOVE into a workspace?\n\n   If this needs to be overridden for a particular resource (say the\n   destination for a copy), then we can use the workspace prefix. How\n   does that sound?\n\nHow is a client to determine whether a particular URL needs the\nworkspace prefix or not?  \n\nSome URL's will be to resources not in a workspace (versions, working\nresources, version histories, activities, baselines).  If a client has\nto separately decide for each URL whether or not to add a workspace\nprefix, isn't it just as easy to just always add it?\n\nWhat about URL's that are embedded in dead properties of a resource?\nHow is a client to decide whether or not to add a workspace header (or\nadd a workspace prefix to override a workspace header) when it wants\nto access it?\n\nThese issues are all addressed in the current protocol, but it\nappears to add complexity to a client, not decrease it.\n\nIf instead, a workspace member is just a member of a collection\nwith its own URL, none of these issues arise.\n\nAnd the original problem still remains ... since the Workspace header\nis incompatible with common web server extension techniques, it will\nin many cases not be implemented and therefore will be the source\nof interoperability problems.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-11651615"}, {"subject": "RE: labels as DAV:target values (was Re: Fewer new versioning methods, please!", "content": "Could somebody explain why locking of version selectors is a required\nfeature?  What is the purpose?  What is the result?  Does it affect\ncheckouts?  I reason that if it was not possible to lock a version selector,\nthen it would be possible to use labels as DAV:target values, which seems to\nme to be a very useful feature.\n\nI would imagine that the only affect locking a version selector would have\nis that it would prevent others from doing a PROPPATCH to one of the version\nselector's own properties.  It wouldn't prevent others from checking out one\nof the versions related to the version selector; it wouldn't prevent others\nfrom doing a PUT or a PROPPATCH to the version to which the version selector\npoints (that would have to be accomplished by doing a LOCK on the version\nresource, rather than the version selector).  Have I missed something?\n\nHas anybody done some serious thinking, in general, about how they are going\nto implement locking interacting with versioning?  What happens when a\nversioning-unaware client tries to LOCK a resource, not aware that it is\nactually locking a version selector?  Is the behaviour what that client\nwould expect?\n\nFinally, I wonder why the draft specifically disallows using labels as\nDAV:target values.  Just because some implementations would find it\ndifficult doesn't mean all of them will.  Why not make it optional -- and if\na server doesn't support a value of <D:label>foo</D:label> then the server\ncan respond with an error meaning \"unsupported value given for DAV:target\nproperty\".\n\nthanks,\nLisa\n\n> -----Original Message-----\n> From: ietf-dav-versioning-request@w3.org\n> [mailto:ietf-dav-versioning-request@w3.org]On Behalf Of Geoffrey M.\n> Clemm\n> Sent: Tuesday, October 03, 2000 1:06 PM\n> To: ietf-dav-versioning@w3.org\n> Subject: labels as DAV:target values (was Re: Fewer new versioning\n> methods, please!)\n>\n>\n>\n>    From: \"Lisa Dusseault\" <lisa@xythos.com>\n>\n>    > From: Tim_Ellison@uk.ibm.com\n>    > The target of the version selector is always going to be a\n> version URL ,\n>    > the protocol does not stipulate the form of a version name\n> so it does not\n>    > allow for uniquely identifying a version.  Using a label\n> would be awkward\n>    > to implement in a scaleable fashion since labels can move, so version\n>    > selectors would have to re-evaluate which version they were\n> targeting.\n>\n>    Really?  I thought that would be a bug, not a feature.  So if\n> I go and move\n>    the \"beta2\" label from version 10 of 'foo' to version 18, the\n>    target-selector doesn't automatically update its target, even if I\n>    originally based the target-selection on the label \"beta2\".  Too bad.\n>\n> Tim's point was that the DAV:target is not a label, but rather\n> is a URL that identifies a version.\n>\n> The reason why we do not allow labels as a DAV:target value is that this\n> would mean that a server would have to investigate *every*\n> version selector\n> that had that label as a target, to make sure that when it moved that\n> label, it didn't violate any  of the locks on that version selector.\n> This is prohibitively expensive as the number of version selectors for\n> a given version history becomes large, and impossible if any form of\n> disconnected use is to be supported (i.e. where a workspace can be\n> disconnected from the version repository).\n>\n> Cheers,\n> Geoff\n>\n\n\n\n", "id": "lists-005-11662288"}, {"subject": "Re: Making &quot;LABEL&quot; optiona", "content": "Is this really the case? Or is just the case for older linear documents.\nI agree with your arguments if in fact you have standalone objects as in \nyour examples. But are these examples a reasonably representative set, \nor just a particular subset?\n\nIt seems certainly not the case for a Web document which may consist \nof a hierarchy of pages, images, MM files and maybe even some sort of \npersonalization data so Joe's story unfolds differently than Jane's\nbecause of a different set of choices. \n\nThe \"document\" in this case could be a substantial collection, and some\nmeans of tying together a consistent set across different stages of \ncreation and maintenance and maybe even viewing would be mandatory. Note \ntime is NOT necessarily a good criterion for selection since edits can \nbe undone to restore previous versions as a perfectly valid operation.\n\nIt seems to me that versioning of such a document should still be possible\nwith core/simple versioning systems. If I am a lowly author, I don't want\nto have to figure out or administrate a complex versioning tool. What does\nseem to be needed though is a way to easily mark and identify a set of \nobjects for such an author to keep some sort of handle on his work.\n\nIf there is a way to do this with properties, or some existing core\ncommands, then there is no need to have labelling in core. If the steps\nthat need to be followed to do this (like ensuring there is only a single\nidentifier per version history) are just recreating a \"label\" operation\nthen either label itself is redundant or one should use at least a simple\nform of it in core.\n\nPerhaps it would be useful to outline a few more scenarios which could be\nused to decide just what \"core\" functionality means, and which types of\ndocuments would be applicable to or excluded from \"core versioning\".\n\nCheers,\nRossW\n\nLisa Dusseault wrote:\n> \n> One of the very differences between a source-management system and a\n> [simple] document-management system with versioning is that the simple\n> doc-mgmt system does not have any concept of a consistent set of revisions.\n> \n> For example, let's say EJW wanted to keep all WebDAV related drafts in a\n> WebDAV repository.  Is there any concept of \"consistent set\" between the ACL\n> draft, the versioning draft, and the various advanced collections drafts?\n> Only minimally if at all -- and any desire to see what changes were made at\n> the same time can be satisfied by looking at the dates of the older\n> versions.  Such a repository would be useful, keeping a history of document\n> changes around, yet it would have no strong need for labeling.\n> \n> In this scenario, comments could serve any need for user-readable info on\n> previous versions.  For example version 10 of the versioning draft might\n> have a \"last call\" comment on it.   Note that the \"last call\" version of the\n> versioning draft has nothing to do with the \"last call\" version of the acls\n> draft.  There is very little to be gained from supporting labeling when\n> there is no concept of a consistent set of revisions, and I argue that this\n> is the case in many simple doc-mgmt systems which support versioning.\n> \n> Is there a justification for supporting labelling that does not require\n> advanced source-related concepts like \"consistent set of revisions\", or that\n> cannot be satisfied by using the version's comment or date properties?\n> \n> Lisa\n\n\n\n", "id": "lists-005-11675240"}, {"subject": "Re: Workspace header and optional labelin", "content": "I believe that these issues should be discussed on the mailing\nlist during the last call period, and not deferred to a discussion\nat the Dec working group meeting.  Certainly, any issues that cannot\nbe resolved on the mailing list should be discussed at the Dec working\ngroup meeting.\n\n<jra>The mailing list is a great place to capture, discuss, and resolve\nissues. But the working group meetings are often attended by a broader\ncommunity. To get a little broader coverage, some issues should be\ndiscussed in this community, especially when there are conflicting views\npresented on the mailing list.</jra>\n\nWe explicitly decided to not discuss leveling over a year ago,\nsince it didn't make sense to discuss what functionality belonged\nin what level until we had actually settled on what functionality\nwe would supporting.  Over the last year, the design effort has been\nprimarily focused on firming up the details of advanced versioning\nsupport, which are primarily of interest to configuration management\nsystem providers.\n\n<jra>We have never really given up on leveling. We just renamed to to core\nversioning and advanced options because there appeared to be little\nagreement on what the levels should be. This is fine. My only point is that\nits interesting to note that optional labels never came up (that I can\nremember).</jra>\n\nNow that the dust has settled, and we have received a very thorough\nreview from a document management provider, I believe we need to\ntake that review very seriously.  The fact that configuration\nmanagement providers are happy to provide labeling support is\nto be expected, and is therefore neither very surprising nor\nespecially interesting.  If we want document management system\nproviders to implement the versioning protocol (and I certainly do),\nwe need to set the \"functionality bar\" at a level appropriate for\ndocument management.\n\n<jra>There has been DMS representation in the DeltaV working group and on\nthe design team. Of course, not every DMS was represented. But we have\nincluded many concepts and compromises to accommodate DMS systems. Perhaps\noptional label support is another. But I think its a little like saying we\nwant optional user-specified URLs for resources. I'm willing to consider\nmaking labels optional, but I would like to challenge the assumption that\nincluding them in core is setting the bar too high. I have designed WebDAV\ninterfaces to two versioning management systems that didn't support\nlabeling as specified by the protocol. Both designs supported labels. I\njust hid them in my own server-defined properties.</jra>\n\n\nThe combination of standard client defined properties like DAV:comment\nand DAV:creator-displayname, custom client defined properties, and\nstandard server defined properties like DAV:version-name and\nDAV:getmodificationdate, are sufficient to name and locate versions of\ninterest, and this is demonstrated by the document management systems\nthat do so (without the use of labels).\n\n<jra>This does not sound like either an adequate, optimal, or interoperable\nway of distinguishing revisions of the same versioned resource.\nDAV:verion-name might not be meaningful to a user, might not be used on\nmore than one versioned resource, and can't be moved.\nDAV:creator-displayname is not unique to a revision. Relying on DAV:comment\nto distinguish revisions would introduce the possibility of parsing comment\nstrings to identify a revision. This doesn't sound convenient or\ninteroperable. DAV:getmodificationdate has no logical meaning although is\nis sometimes useful to identify revisions by when they changed. Custom\nclient defined properties would not result in an interoperable solution.\n\nLisa, of the versioning repositories you surveyed, which ones are planning\non implementating a WebDAV interface? Of those, how many would like to have\nlabel support if there was some convenient way to provide it? Could labels\nbe persisted in a server-defined property? Would it be OK for the WebDAV\nserver implementation to do the labeling semantics, and just use the\nunderlying DMS repository for persistence?</jra>\n\n\n\n", "id": "lists-005-11686682"}, {"subject": "Re: labels as DAV:target values (was Re: Fewer new versioning methods, please!", "content": "   From: \"Lisa Dusseault\" <lisa@xythos.com>\n\n   Could somebody explain why locking of version selectors is a required\n   feature?\n\nLocking of version selectors (or anything else for that matter)\nis not a required feature of the versioning protocol.  But\nthe versioning protocol is designed to be compatible with the\nlocking protocol.\n\n   What is the purpose?\n\nIt allows you to GET the current contents of a checked-out version\nselector, and then PUT your updates without having to worry about\noverwriting updates to that checked-out version selector by another\nclient (potentially, another client running on your behalf).\n\n   What is the result?\n\nJust usual locking semantics.  I.e. can't modify content, dead properties,\nor MOVE it without holding the lock token.\n\n   Does it affect checkouts?\n\nYes, you do need the lock token to checkout a locked version selector.\n(But not if you are applying the checkout to a version, only if you\nare directly checking out the version selector).  I personally voted\nagainst having CHECKOUT care about locks (since it doesn't change\nthe content or dead properties of the version selector), but was\noutvoted (and I didn't care very much one way or the other).\n\n   I reason that if it was not possible to lock a version selector,\n   then it would be possible to use labels as DAV:target values, which seems to\n   me to be a very useful feature.\n\nYes, compatibility with locking semantics is one of the reasons why we\ndo not support the use of labels as DAV:target values.  Having locking\nwork with versioning was deemed more important than having a label as\na DAV:target value.\n\n   I would imagine that the only affect locking a version selector would have\n   is that it would prevent others from doing a PROPPATCH to one of the version\n   selector's own properties.\n\nA version selector only has its own properties (and its own content).\nSome of its properties (and content) happen to be the same as that of\nsome version while it is in the checked-in state, but they are still\nits own properties and its own content.\n\nSo locking a version selector has the usual semantics, i.e. it prevents\nmodification to the content and dead properties of that version selector\nunless the lock token is specified.\n\n   It wouldn't prevent others from checking out one\n   of the versions related to the version selector;\n\nThat is correct, a lock on a version selector does not prevent you\nfrom doing a checkout on any of the versions of the version history\nof the current target.  In particular, you can do a CHECKOUT/DAV:target\non a locked version selector without the lock token (since that checkout\nis applied to the target version, and not to the version selector\nitself).\n\n   it wouldn't prevent others\n   from doing a PUT or a PROPPATCH to the version to which the version selector\n   points (that would have to be accomplished by doing a LOCK on the version\n   resource, rather than the version selector).\n\nYou can't do a PUT or a PROPPATCH to the content or dead properties\nof a version (even a mutable version requires it to be done with a\nCHECKIN).\n\nIt is true that a system that supports mutable versions will need to\ncheck the locks of every version selector whose target is that mutable\nversion before allowing a CHECKIN/DAV:replace on that version, but\nthat is avoidable by not supporting mutable versions (the sensible\nthing to do :-).  In any case, at least it is only one routine, CHECKIN\nwhere this check would have to be made, and none of the other update\nroutines (PUT,PROPPATCH,MOVE,COPY,DELETE,MERGE,etc.)\n\n   Has anybody done some serious thinking, in general, about how they are going\n   to implement locking interacting with versioning?\n\nI know that we have.\n\n   What happens when a\n   versioning-unaware client tries to LOCK a resource, not aware that it is\n   actually locking a version selector?  Is the behaviour what that client\n   would expect?\n\nYup.  That's been one of the challenges of designing the versioning protocol,\nbecause there are a large number of clients out there (e.g. office-2000\nclients) that will be trying to lock resources and will not be aware that\nthey are actually locking a version selector.\n\n   Finally, I wonder why the draft specifically disallows using labels as\n   DAV:target values.\n\nOne important reason is that it is incompatible with locking, and as\nindicated above, compatibility with locking was deemed more important\n(especially if you care about interoperability) than was having labels\nas DAV:target values.  In addition, all of the arguments that apply\nto locks are likely to apply to access control as well, so locking\nis just the most obvious reason.\n\n   Just because some implementations would find it\n   difficult doesn't mean all of them will.\n\nThis is a problem for all implementations that care about locking,\nand that will care about access control.\n\n   Why not make it optional -- and if\n   a server doesn't support a value of <D:label>foo</D:label> then the server\n   can respond with an error meaning \"unsupported value given for DAV:target\n   property\".\n\nDefining a feature of the protocol that is known to be incompatible\nwith another important feature of the protocol is a very serious\nsource of non-interoperability.  Any client functionality or protocol\nextension based on one of the features will be incompatible with all\nfunctionality or protocol extensions based on the other feature.\nTo work around the incompatibility, one ends up designing additional\nfeatures that serve the same function but in a subtly different way\nto avoid the incompatibility.  But then all layered functionality must\nalso be revisited and duplicated.  As the number of incompatible\nfeatures increase, the problematic interactions increase combinatorially.\n\nCompare this to the question of making labeling optional.  Labeling\nis designed to be completely compatible with HTTP-1.1, WebDAV, core\nversioning, and all other advanced versioning features.  If any server\nencounters the need to provide labeling support, it can do so\nindependent of what other optional features of the protocol it has\nchosen to support.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-11698338"}, {"subject": "RE: Making &quot;LABEL&quot; optiona", "content": "(In reply to Lisa's posting...)\n\n<jra>Lisa, I appreciate you concern for minimizing the requirements for DMS\nsystems. They play an important role in Web authoring. Perhaps we have a\ndifferent view of labels though. See if the comments below address your\nissues.</jra>\n\nThere is very little to be gained from supporting labeling when\nthere is no concept of a consistent set of revisions, and I argue that this\nis the case in many simple doc-mgmt systems which support versioning.\n\n<jra>Support for labels isn't intended to be used to create and/or manage a\nconsistent set of revisions. Labels in WebDAV aren't \"sticky\". You can't\nlock a label on a revision. So you could use a label to name a consistent\nset of revisions, but you can't be sure you'd always get the same\nrevisions. That's what baselines are for, and this is clearly an advanced\nconcept. Clients might move the label anytime.</jra>\n\nIs there a justification for supporting labelling that does not require\nadvanced source-related concepts like \"consistent set of revisions\", or\nthat\ncannot be satisfied by using the version's comment or date properties?\n\n<jra>Sure. Labels are just a way of distinguishing one revision from\nanother using an identifier that has some meaning to the user making the\ndistinction. So in your example, I find lots of meaning in document\nrevisions labeled as \"last call\" even though there is no relationship\nbetween them(manifest as links or references) that needs to be captured as\na consistent set in a baseline. The label just helps identify which version\nof the document is in the last call state. Its just easier than saying \"go\nlook at revision 1AB2795\" or some other equally meaningful server generated\nid. This seems pretty useful, and its pretty simple.\n\nAre you thinking that label support implies baseline support, or that there\nis even a relationship between them? Baselines have nothing to do with\nlabels. They are not related in the protocol. Labels are just added and\nremoved from revisions. The only requirement is that the same label can't\nbe on more than one revision of the same versioned resource at the same\ntime. This, and the ability to use them in a Target-Selector header or\nSET-TARGET method is about the only thing that distinguishes them from\nproperties.<?jra>\n\n\n\n", "id": "lists-005-11711971"}, {"subject": "Re (2): Workspace header and optional labelin", "content": "Hi,\nI didn't have time to follow the discussion for some months, so perhaps\nI'm not uptodate on all arguments.\nWhat I noticed with the recent draft it the 'revision' was replaced\nby 'version'. I remember that I asked sometime why 'revision' was used.\nSo well done :-)\n\ngeoffrey.clemm@rational.com wrote:\n>I have not seen any rebuttal to the recent arguments (only your\n>initial messages in favor of requiring label support by all servers).\n> To summarize the recent arguments:\n> \n> The combination of standard client defined properties like DAV:comment\n> and DAV:creator-displayname, custom client defined properties, and\n> standard server defined properties like DAV:version-name and\n> DAV:getmodificationdate, are sufficient to name and locate versions of\n> interest, and this is demonstrated by the document management systems\n> that do so (without the use of labels).\nI think some sort of 'labeling' should be available in core versioning.\nSort of a poor mans baseline :-)\nPerhaps it is possible to get a similar result with DAV:comment, but\nI imagine that more than one label could be stuck to one version. So\nwon't that be a little bit confusing and complex if I label with DAV:comment.\nAlso I understand DAV:comment (perhaps wrongly) as comparable to the RCS log string\nyou can give to a new version.\nLabels aren't too complicated to implement in comparison to other things\nI guess. If labels aren't in core versioning then I fear that different\nclients would perhaps find different ways to implement pseudo labeling which\ncould hurt interoperability. It works now because every document management\nsystem that do so without the use of labels has it's matching client.\nJust some brainstorming without too much thinking. It's late already.\nSo I will stop and give just a short comment on workspace headers.\nI really wouldn't like to give them up because IMHO workspaces are\na central concept in advanced versioning. And it would be a shame to\nhide them in the protocol. But I have to think about the technical\nproblems Geoff mentioned (The stuff about server extension responsible\nfor namespace subtrees).\n\nCheers, Edgar \n-- \nedgar@edgarschwarz.de                    http://www.edgarschwarz.de\n*          DOSenfreie Zone.        Running Native Oberon.         *\nMake it as simple as possible, but not simpler.     Albert Einstein\n\n\n\n", "id": "lists-005-11721364"}, {"subject": "Re: Making &quot;LABEL&quot; optiona", "content": "   From: Ross Wetmore <rwetmore@verticalsky.com>\n\n   Is this really the case? Or is just the case for older linear documents.\n\nThere are still a lot of largely independent documents (linear is not\nreally the issue, since you can have useful hyperlinks between\nlargely independent documents).\n\n   I agree with your arguments if in fact you have standalone objects as in \n   your examples. But are these examples a reasonably representative set, \n   or just a particular subset?\n\nI found Lisa's survey reasonably representative.  She mentioned all the\nDMS systems I was familiar with, and clearly did not select out just\nthose that supported her view.\n\n   It seems certainly not the case for a Web document which may consist \n   of a hierarchy of pages, images, MM files and maybe even some sort of \n   personalization data so Joe's story unfolds differently than Jane's\n   because of a different set of choices. \n\nSure, that all happens, but for a lot of documents it doesn't happen.\nIn particular, documents and links to documents are designed to be\nlargely independent of the content of that particular document, so\nthat documents *can* be changed independently.  (Maintaining a web\nof tightly interdependent documents is *very* hard, and labels only\nbegin to address the complexities that are introduced ... you probably\nneed activities and merge support before you even begin to get it\nunder control).\n\n   Perhaps it would be useful to outline a few more scenarios which could be\n   used to decide just what \"core\" functionality means, and which types of\n   documents would be applicable to or excluded from \"core versioning\".\n\nI believe that Lisa's scenario is the key one for core versioning.\nYou have a set of largely independent documents that evolve over time,\nand for a variety of reasons you want to be able to easily go back and\nlook at the earlier states of those documents.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-11731388"}, {"subject": "RE: Making &quot;LABEL&quot; optiona", "content": "Hmm,\n\nI think we are missing something here.  I wouldn't want to assume what a\nparticular application of labels might be for (i.e, the intent) as opposed\nto what it is (i.e., the extent).\n\nMore than that, I see a problem of coherence (e.g., interoperability over\ntime or across systems and also up/down-level).\n\nPerhaps it is more useful to come at it like this: - Is it legitimate for\nsomeone to use whatever property is identified for label as a property on a\ncore-only system, so that if the system were upgraded or the data was\ntransported to a system with advanced versioning support, everything would\nwork consistently?  That is, on one level it is an user-defined property,\nbut with semantics from the advanced versioning specification?   Is there\nsome semantics on this property for which this would be a problem?\n\n[I realize that this is a conversation that might be worth holding about\nother non-core properties too, but I don't have the draft at hand, so I will\nbe Socratic instead.]\n\n[[Some of this might have sorted out if there were specific measures of what\nit means to achieve interoperabilty by WebDAV and by WebDAV + DeltaV.  Oh\nwell ... There was a specific measure for ODMA and it got broken anyhow\ngoing from ODMA 1.5 to ODMA 2.0]]\n\n\n-- Dennis\n\nAIIM DMware Technical Coordinator\nhttp://www.infonuovo.com/dmware\n------------------\nDennis E. Hamilton\nInfoNuovo\nmailto:infonuovo@email.com\ntel. +1-206-779-9430 (gsm)\nfax. +1-425-793-0283\nhttp://www.infonuovo.com\n\n\n-----Original Message-----\nFrom: ietf-dav-versioning-request@w3.org\n[mailto:ietf-dav-versioning-request@w3.org]On Behalf Of Lisa Dusseault\nSent: Wednesday, October 11, 2000 08:58\nTo: Jim Amsden/Raleigh/IBM\nCc: ietf-dav-versioning@w3.org\nSubject: RE: Making \"LABEL\" optional\n\n\n[ ... ]\n\nIs there a justification for supporting labelling that does not require\nadvanced source-related concepts like \"consistent set of revisions\", or that\ncannot be satisfied by using the version's comment or date properties?\n\nLisa\n\n-----Original Message-----\nFrom: ietf-dav-versioning-request@w3.org\n[mailto:ietf-dav-versioning-request@w3.org]On Behalf Of Jim\nAmsden/Raleigh/IBM\nSent: Sunday, October 08, 2000 8:48 AM\nTo: ietf-dav-versioning@w3.org\nSubject: Re: Making \"LABEL\" optional\n\n\n\nLabels have a role separate from support from baselining. They're just a\nmechanism for distinguishing revisions that is controled by the client.\nWithout labels, clients that want to get a consistent set of revisions will\nhave to remember all the server-generated URLs and/or version names.\nAlthough possible, this is state that the server should generally be\nproviding for clients so they don't have to persist this kind of\ninformation.\n\n\n\n\nSince many document management clients don't want or need baselining\nor configuration functionality, the document management versioning\nservers do not want to have to provide the infrastructure\n(i.e. labels) for it.\n\nCheers,\nGeoff\n\n   Date: Fri, 06 Oct 2000 14:38:26 -0700\n  From: \"Henry K. Harbury\" <hharbury@assetvalue.com>\n\n   I agree with Jim - but I would also add that labels provide more than\njust\n  a human readable name, they provide the ability to define a unique\n  configuration of the resources in the repository.  One often does not want\n  to get everything from the repository, just the subset of resources in the\n  configuration identified by a unique label.  Baselines provide this type\nof\n  functionality in advanced versioning and labels provide it in core.  If\n  labels are removed from core, how is this accomplished?\n  -- Henry.\n\n\n\n", "id": "lists-005-11740578"}, {"subject": "Re: Re (2): Workspace header and optional labelin", "content": "   From: Edgar@EdgarSchwarz.de\n\nHi Edgar, good to see you back on the list!\n\n   What I noticed with the recent draft it the 'revision' was replaced\n   by 'version'. I remember that I asked sometime why 'revision' was\n   used.  So well done :-)\n\nI'm pretty sure that your question was part of the motivation for\nmy suggesting we change, so you get to pat yourself on the back\nfor that one (:-).\n\n   I think some sort of 'labeling' should be available in core versioning.\n   Sort of a poor mans baseline :-)\n\nAs a side note, I encourage servers to actually implement baselines if\nthey want to provide baseline functionality, and encourage clients\nto use it on servers that provide it (:-).\n\n   Perhaps it is possible to get a similar result with DAV:comment, but\n   I imagine that more than one label could be stuck to one version.\n\nThe argument for using DAV:comment was not that it is a good/reasonable\nway to provide baselining, but rather that it is a good way to add\nclient defined information to a version if you are *not* interested\nin baselining, but rather just distinguishing versions from a *single*\nversion history.  If there are two versions that are tested, it is\nquite reasonable to annotate them both as \"tested\", and use other information\nto distinguish one \"tested\" version from another.  This of course doesn't\nwork with baselining, but a server that cares about baselining will\nimplement labels (or preferably, baselines).\n\n   Labels aren't too complicated to implement in comparison to other things\n   I guess. If labels aren't in core versioning then I fear that different\n   clients would perhaps find different ways to implement pseudo labeling which\n   could hurt interoperability.\n\nIf a client encounters a server that does not provide labeling\nsupport, no need to \"fake it\", you just grey out the \"label\"\noperation.  If you want labeling, just get a server that supports it,\nand then it's easy for a client to expose it, since we've standardized\non what labeling looks like when it is supported.  \n\n(I'm tempted to make an analogy about the superiority of \"market driven\"\neconomy over a \"command\" economy :-).\n\n   It works now because every document management\n   system that do so without the use of labels has it's matching client.\n\nI think labeling is such a well understood concept that any DMS system\nthat wanted the functionality would have invested in implementing it.\nThey certainly would do so in their server, and not in their client.\n\n   So I will stop and give just a short comment on workspace headers.\n   I really wouldn't like to give them up because IMHO workspaces are\n   a central concept in advanced versioning. And it would be a shame to\n   hide them in the protocol. But I have to think about the technical\n   problems Geoff mentioned (The stuff about server extension responsible\n   for namespace subtrees).\n\nYeah, I was a strong advocate of Workspace headers too, until\nI ran into those pesky technical problems ... (:-).\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-11754468"}, {"subject": "Re: optional labelin", "content": "   From: \"Jim Amsden/Raleigh/IBM\" <jamsden@us.ibm.com>\n\n   The combination of standard client defined properties like DAV:comment\n   and DAV:creator-displayname, custom client defined properties, and\n   standard server defined properties like DAV:version-name and\n   DAV:getmodificationdate, are sufficient to name and locate versions of\n   interest, and this is demonstrated by the document management systems\n   that do so (without the use of labels).\n\n   <jra>This does not sound like either an adequate, optimal, or interoperable\n   way of distinguishing revisions of the same versioned resource.\n\nAdequate? Certainly (for the vendors that do just that today).\nOptimal? Well, optimally you'd have activities and baselines as well.\nInteroperable?  Certainly.  Display the version properties in your client\nGUI and let the user select the version they want.\n\n   Relying on DAV:comment\n   to distinguish revisions would introduce the possibility of parsing comment\n   strings to identify a revision.   This doesn't sound convenient or\n   interoperable.\n\nWhat parsing is required?  DAV:comment is defined to be a string to be\ndisplayed to the user.  Your client can just do so.  This sounds both\nconvenient and interoperable (can't get much simpler than printing\nout a string).\n\nYour client should certainly provide that functionality anyway\n(i.e. updating properties, and displaying a list of versions with\ntheir properties, so the user can pick one from that list).\n\nThe only code you need to add to your client to handle a server\nwithout labels is to put an \"if (labels_supported)\" flag in front of\nthe code that displays GUI operations that use labels.\n\n(Just like the code that you have wrapped around checkout/checkin\nto handle a level-1 or level-2 WebDAV server).\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-11764876"}, {"subject": "Re: Making &quot;LABEL&quot; optiona", "content": "   From: \"Dennis E. Hamilton\" <infonuovo@email.com>\n\n   Perhaps it is more useful to come at it like this: - Is it legitimate for\n   someone to use whatever property is identified for label as a property on a\n   core-only system, so that if the system were upgraded or the data was\n   transported to a system with advanced versioning support, everything would\n   work consistently?\n\nThe protocol says that any server that supports versioning MUST reject\nan attempt to PROPPATCH any property (core or advanced) that is defined\nas \"protected\" by the protocol.  This provides an error check to make\nsure a naive client doesn't create a property that a versioning aware\nclient could misinterpret as having the protocol defined live behavior.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-11773517"}, {"subject": "Re: Re (2): Workspace header and optional labelin", "content": "On Wed, Oct 11, 2000 at 05:38:20PM -0400, Edgar@edgarschwarz.de wrote:\n>...\n> So I will stop and give just a short comment on workspace headers.\n> I really wouldn't like to give them up because IMHO workspaces are\n> a central concept in advanced versioning. And it would be a shame to\n> hide them in the protocol. But I have to think about the technical\n> problems Geoff mentioned (The stuff about server extension responsible\n> for namespace subtrees).\n\nWell... as a counterpoint argument: I've never viewed workspaces as a\ncentral concept. I've always found them rather bothersome. That darned\nWorkspace header just felt a bit wrong to me. Thankfully, I could implement\na lot of DeltaV and just completely disregard the workspace concept.\n\nCheers,\n-g\n\n-- \nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-11781539"}, {"subject": "Re: why workspace", "content": "   From: Greg Stein <gstein@lyra.org>\n\n   Well... as a counterpoint argument: I've never viewed workspaces as a\n   central concept. I've always found them rather bothersome. That darned\n   Workspace header just felt a bit wrong to me. Thankfully, I could implement\n   a lot of DeltaV and just completely disregard the workspace concept.\n\nYou are maintaining a copy of the versioned resource tree (sometimes\ncalled a \"sandbox\") on your client I assume, for local builds,\ndisconnected use, etc. ?\n\nNow what if you wanted to represent that sandbox on the server?\nThat's what a workspace is.\n\nHere's some additional motivation I'll be adding to the \"Workspace\"\nsection of the protocol:\n\n-----------------------------\nIt is often desirable to allow several clients on behalf of a single\nuser to access a related set of checked-out resources.  In particular,\nthis allows a user to access these resources from several physical\nlocations, such as from another office, from home, from a remote site,\nor while traveling, without being forced to prematurely checkin those\nchecked-out resources.  Sometimes it is even desirable to provide\nshared access to checked-out resources for several closely cooperating\nusers (using WebDAV locking to avoid overwrite problems).\n\nIf only one set of checked-out resources is required, then this can be\nachieved with core versioning by simply checking out the appropriate\nversion selectors.  This approach is often unacceptable because it\nexposes the intermediate states of the checked-out resources to every\nclient, and does not allow for a second set of checked-out resources\nto be defined for a group that wishes to be isolated from the\nintermediate states of another group.  Unfortunately, working\nresources do not address this problem, because although they allow\nmultiple concurrent checkouts from a single version history, there is\nno mechanism for grouping related working resources into an\nidentifiable set.\n\nA related problem is that it is often desirable to isolate clients\nfrom a logical change that involves renaming shared resources, until\nthat logical change is complete and tested.  When all clients use a\ncommon set of shared version selectors, every client sees the result\nof a MOVE as soon as it occurs.\n\nAn additional problem is that it is often necessary to perform testing\non the server rather than on the client.  Since a test routine on the\nserver has no way of knowing what working resources or what versions\nare to be tested, only the versions selected as the current target of\nthe version selectors can be tested.  This not only does not allow\ntesting of a checked-out resource before checking it in, but also does\nnot provide for any parallel testing of different configurations of\nversioned resources.\n\nTo address these problems, advanced versioning introduces the concept\nof a \"workspace\".  A workspace is a collection whose members are a set\nof related version selectors and unversioned resources.  In order to\nexpose multiple views of a set of related version selectors in the URL\nnamespace, multiple workspaces may be used.  In order to make a change\nmade to a version selector in one workspace visible in another\nworkspace, that version selector must be checked in, and then the\ncorresponding version selector in the other workspace can be updated\nto display the content and dead properties of the new version.  In\norder to ensure unambiguous merging and baselining semantics, a\nworkspace may contain at most one version selector for a given version\nhistory (although a server may support multiple bindings in a\nworkspace to the same version selector).\n\n----------------------------------\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-11790063"}, {"subject": "Re: why workspace", "content": "Geoff,\nGreat stuff! A couple of comments. Another reason for using workspaces is \nthat sometimes the tools required to edit, compile, or otherwise operate \non a resource have to exist on a particular platform. That is, they cannot \njust be files in the user's local (Windows or UNIX) file system. \nWorkspaces provide a uniform way of addressing resources regardless of \nwhere they are, or what versions are selected.\n\nBut this raises an issue for testing on the server. Say you are testing a \nWeb application, not an unusual situation for a WebDAV client to be in. \nNow the web server needs to see the same workspace as the client in order \nto test the resources just edited. This is the scenario you describe \nbelow. But often web server plugins (Servlets, JSP's, ASP's, CGI programs, \nISAPPI programs, Apache modules, etc.) don't go through a nested HTTP \nrequest, they access files directly using the file system. This won't work \nunless the files are materialized on the server since the file system is \nnot likely WebDAV versioning enabled. Workspaces can help this problem if \ntheir contents are mirrored in the server's file system. But then this \nlimits the number of concurrent tests on different workspaces that can be \ndone. Any thoughts on this area?\n\n\n\n\n\n   From: Greg Stein <gstein@lyra.org>\n\n   Well... as a counterpoint argument: I've never viewed workspaces as a\n   central concept. I've always found them rather bothersome. That darned\n   Workspace header just felt a bit wrong to me. Thankfully, I could \nimplement\n   a lot of DeltaV and just completely disregard the workspace concept.\n\nYou are maintaining a copy of the versioned resource tree (sometimes\ncalled a \"sandbox\") on your client I assume, for local builds,\ndisconnected use, etc. ?\n\nNow what if you wanted to represent that sandbox on the server?\nThat's what a workspace is.\n\nHere's some additional motivation I'll be adding to the \"Workspace\"\nsection of the protocol:\n\n-----------------------------\nIt is often desirable to allow several clients on behalf of a single\nuser to access a related set of checked-out resources.  In particular,\nthis allows a user to access these resources from several physical\nlocations, such as from another office, from home, from a remote site,\nor while traveling, without being forced to prematurely checkin those\nchecked-out resources.  Sometimes it is even desirable to provide\nshared access to checked-out resources for several closely cooperating\nusers (using WebDAV locking to avoid overwrite problems).\n\nIf only one set of checked-out resources is required, then this can be\nachieved with core versioning by simply checking out the appropriate\nversion selectors.  This approach is often unacceptable because it\nexposes the intermediate states of the checked-out resources to every\nclient, and does not allow for a second set of checked-out resources\nto be defined for a group that wishes to be isolated from the\nintermediate states of another group.  Unfortunately, working\nresources do not address this problem, because although they allow\nmultiple concurrent checkouts from a single version history, there is\nno mechanism for grouping related working resources into an\nidentifiable set.\n\nA related problem is that it is often desirable to isolate clients\nfrom a logical change that involves renaming shared resources, until\nthat logical change is complete and tested.  When all clients use a\ncommon set of shared version selectors, every client sees the result\nof a MOVE as soon as it occurs.\n\nAn additional problem is that it is often necessary to perform testing\non the server rather than on the client.  Since a test routine on the\nserver has no way of knowing what working resources or what versions\nare to be tested, only the versions selected as the current target of\nthe version selectors can be tested.  This not only does not allow\ntesting of a checked-out resource before checking it in, but also does\nnot provide for any parallel testing of different configurations of\nversioned resources.\n\nTo address these problems, advanced versioning introduces the concept\nof a \"workspace\".  A workspace is a collection whose members are a set\nof related version selectors and unversioned resources.  In order to\nexpose multiple views of a set of related version selectors in the URL\nnamespace, multiple workspaces may be used.  In order to make a change\nmade to a version selector in one workspace visible in another\nworkspace, that version selector must be checked in, and then the\ncorresponding version selector in the other workspace can be updated\nto display the content and dead properties of the new version.  In\norder to ensure unambiguous merging and baselining semantics, a\nworkspace may contain at most one version selector for a given version\nhistory (although a server may support multiple bindings in a\nworkspace to the same version selector).\n\n----------------------------------\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-11801384"}, {"subject": "Re: why workspace", "content": "   From: \"Jim Amsden/Raleigh/IBM\" <jamsden@us.ibm.com>\n\n   Another reason for using workspaces\n   is that sometimes the tools required to edit, compile, or otherwise\n   operate on a resource have to exist on a particular platform. That is,\n   they cannot just be files in the user's local (Windows or UNIX) file\n   system. Workspaces provide a uniform way of addressing resources\n   regardless of where they are, or what versions are selected. \n\nYes, that is one of the important reason for \"server side testing\" support.\n\n   But this raises an issue for testing on the server. Say you are testing\n   a Web application, not an unusual situation for a WebDAV client to be\n   in. Now the web server needs to see the same workspace as the client in\n   order to test the resources just edited. This is the scenario you\n   describe below. But often web server plugins (Servlets, JSP's, ASP's,\n   CGI programs, ISAPPI programs, Apache modules, etc.) don't go through a\n   nested HTTP request, they access files directly using the file system.\n   This won't work unless the files are materialized on the server since\n   the file system is not likely WebDAV versioning enabled. Workspaces can\n   help this problem if their contents are mirrored in the server's file\n   system. But then this limits the number of concurrent tests on different\n   workspaces that can be done. Any thoughts on this area? \n\nThis depends on whether your testing requires a \"shared resource\" on\nthe server.  For things like compiling and running the compiled\nprograms, testing in parallel in different workspaces often works just\nfine (since workspaces are modeled as different collections, it is\nnatural to map them to different points in a file system tree).  If\nthere is some common resource (like some database) that is required\nby the tests, then you have a problem, but this is not a problem that\nan HTTP protocol can address.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-11813659"}, {"subject": "Re: why workspace", "content": "Thank you for this explanation of workspaces.  It is *much* clearer now\n(to me, at least :-).\n\nRuss\n\n-------- Original Message --------\nSubject: Re: why workspaces\nResent-Date: Thu, 12 Oct 2000 11:34:29 -0400 (EDT)\nResent-From: ietf-dav-versioning@w3.org\nDate: Thu, 12 Oct 2000 11:33:34 -0400 (EDT)\nFrom: \"Geoffrey M. Clemm\" <geoffrey.clemm@rational.com>\nTo: ietf-dav-versioning@w3.org\nReferences: <200010112138.RAA10083@tux.w3.org>\n<20001012015825.Y347@lyra.org>\n\n\n   From: Greg Stein <gstein@lyra.org>\n\n   Well... as a counterpoint argument: I've never viewed workspaces as a\n   central concept. I've always found them rather bothersome. That\ndarned\n   Workspace header just felt a bit wrong to me. Thankfully, I could\nimplement\n   a lot of DeltaV and just completely disregard the workspace concept.\n\nYou are maintaining a copy of the versioned resource tree (sometimes\ncalled a \"sandbox\") on your client I assume, for local builds,\ndisconnected use, etc. ?\n\nNow what if you wanted to represent that sandbox on the server?\nThat's what a workspace is.\n\nHere's some additional motivation I'll be adding to the \"Workspace\"\nsection of the protocol:\n\n-----------------------------\nIt is often desirable to allow several clients on behalf of a single\nuser to access a related set of checked-out resources.  In particular,\nthis allows a user to access these resources from several physical\nlocations, such as from another office, from home, from a remote site,\nor while traveling, without being forced to prematurely checkin those\nchecked-out resources.  Sometimes it is even desirable to provide\nshared access to checked-out resources for several closely cooperating\nusers (using WebDAV locking to avoid overwrite problems).\n\nIf only one set of checked-out resources is required, then this can be\nachieved with core versioning by simply checking out the appropriate\nversion selectors.  This approach is often unacceptable because it\nexposes the intermediate states of the checked-out resources to every\nclient, and does not allow for a second set of checked-out resources\nto be defined for a group that wishes to be isolated from the\nintermediate states of another group.  Unfortunately, working\nresources do not address this problem, because although they allow\nmultiple concurrent checkouts from a single version history, there is\nno mechanism for grouping related working resources into an\nidentifiable set.\n\nA related problem is that it is often desirable to isolate clients\nfrom a logical change that involves renaming shared resources, until\nthat logical change is complete and tested.  When all clients use a\ncommon set of shared version selectors, every client sees the result\nof a MOVE as soon as it occurs.\n\nAn additional problem is that it is often necessary to perform testing\non the server rather than on the client.  Since a test routine on the\nserver has no way of knowing what working resources or what versions\nare to be tested, only the versions selected as the current target of\nthe version selectors can be tested.  This not only does not allow\ntesting of a checked-out resource before checking it in, but also does\nnot provide for any parallel testing of different configurations of\nversioned resources.\n\nTo address these problems, advanced versioning introduces the concept\nof a \"workspace\".  A workspace is a collection whose members are a set\nof related version selectors and unversioned resources.  In order to\nexpose multiple views of a set of related version selectors in the URL\nnamespace, multiple workspaces may be used.  In order to make a change\nmade to a version selector in one workspace visible in another\nworkspace, that version selector must be checked in, and then the\ncorresponding version selector in the other workspace can be updated\nto display the content and dead properties of the new version.  In\norder to ensure unambiguous merging and baselining semantics, a\nworkspace may contain at most one version selector for a given version\nhistory (although a server may support multiple bindings in a\nworkspace to the same version selector).\n\n----------------------------------\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-11822504"}, {"subject": "Re: why workspace", "content": "Very cool!\n\n\n\n   From: \"Jim Amsden/Raleigh/IBM\" <jamsden@us.ibm.com>\n\n   Another reason for using workspaces\n   is that sometimes the tools required to edit, compile, or otherwise\n   operate on a resource have to exist on a particular platform. That is,\n   they cannot just be files in the user's local (Windows or UNIX) file\n   system. Workspaces provide a uniform way of addressing resources\n   regardless of where they are, or what versions are selected.\n\nYes, that is one of the important reason for \"server side testing\" support.\n\n   But this raises an issue for testing on the server. Say you are testing\n   a Web application, not an unusual situation for a WebDAV client to be\n   in. Now the web server needs to see the same workspace as the client in\n   order to test the resources just edited. This is the scenario you\n   describe below. But often web server plugins (Servlets, JSP's, ASP's,\n   CGI programs, ISAPPI programs, Apache modules, etc.) don't go through a\n   nested HTTP request, they access files directly using the file system.\n   This won't work unless the files are materialized on the server since\n   the file system is not likely WebDAV versioning enabled. Workspaces can\n   help this problem if their contents are mirrored in the server's file\n   system. But then this limits the number of concurrent tests on different\n   workspaces that can be done. Any thoughts on this area?\n\nThis depends on whether your testing requires a \"shared resource\" on\nthe server.  For things like compiling and running the compiled\nprograms, testing in parallel in different workspaces often works just\nfine (since workspaces are modeled as different collections, it is\nnatural to map them to different points in a file system tree).  If\nthere is some common resource (like some database) that is required\nby the tests, then you have a problem, but this is not a problem that\nan HTTP protocol can address.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-11834951"}, {"subject": "Re: why workspace", "content": "Well, the preamble puts the subject into more layman's terms, so its\nclearer to people (like me) who are not in the business of developing\nversion control systems.  But, the remainder is probably sufficient\nfor a spec.\n\nThanks,\nRuss\n\n\n-------- Original Message --------\nSubject: Re: why workspaces\nDate: Thu, 12 Oct 2000 20:58:05 -0400 (EDT)\nFrom: \"Geoffrey M. Clemm\" <geoffrey.clemm@rational.com>\nTo: Russ.Pridemore@bigfoot.com\nReferences: <39E64127.5DCFE227@worldnet.att.net>\n\nGreat!  Should I include that preamble (about having a sandbox on the\nclient) or is the text between the \"----\" marks sufficient?\n\nCheers,\nGeoff\n\n   Date: Thu, 12 Oct 2000 18:54:31 -0400\n   From: Russ Pridemore <russ.pridemore@worldnet.att.net>\n\n   Thank you for this explanation of workspaces.  It is *much* clearer\nnow\n   (to me, at least :-).\n\n   Russ\n\n   -------- Original Message --------\n   Subject: Re: why workspaces\n   Resent-Date: Thu, 12 Oct 2000 11:34:29 -0400 (EDT)\n   Resent-From: ietf-dav-versioning@w3.org\n   Date: Thu, 12 Oct 2000 11:33:34 -0400 (EDT)\n   From: \"Geoffrey M. Clemm\" <geoffrey.clemm@rational.com>\n   To: ietf-dav-versioning@w3.org\n   References: <200010112138.RAA10083@tux.w3.org>\n   <20001012015825.Y347@lyra.org>\n\n\n      From: Greg Stein <gstein@lyra.org>\n\n      Well... as a counterpoint argument: I've never viewed workspaces\nas a\n      central concept. I've always found them rather bothersome. That\n   darned\n      Workspace header just felt a bit wrong to me. Thankfully, I could\n   implement\n      a lot of DeltaV and just completely disregard the workspace\nconcept.\n\n   You are maintaining a copy of the versioned resource tree (sometimes\n   called a \"sandbox\") on your client I assume, for local builds,\n   disconnected use, etc. ?\n\n   Now what if you wanted to represent that sandbox on the server?\n   That's what a workspace is.\n\n   Here's some additional motivation I'll be adding to the \"Workspace\"\n   section of the protocol:\n\n   -----------------------------\n   It is often desirable to allow several clients on behalf of a single\n   user to access a related set of checked-out resources.  In\nparticular,\n   this allows a user to access these resources from several physical\n   locations, such as from another office, from home, from a remote\nsite,\n   or while traveling, without being forced to prematurely checkin those\n   checked-out resources.  Sometimes it is even desirable to provide\n   shared access to checked-out resources for several closely\ncooperating\n   users (using WebDAV locking to avoid overwrite problems).\n\n   If only one set of checked-out resources is required, then this can\nbe\n   achieved with core versioning by simply checking out the appropriate\n   version selectors.  This approach is often unacceptable because it\n   exposes the intermediate states of the checked-out resources to every\n   client, and does not allow for a second set of checked-out resources\n   to be defined for a group that wishes to be isolated from the\n   intermediate states of another group.  Unfortunately, working\n   resources do not address this problem, because although they allow\n   multiple concurrent checkouts from a single version history, there is\n   no mechanism for grouping related working resources into an\n   identifiable set.\n\n   A related problem is that it is often desirable to isolate clients\n   from a logical change that involves renaming shared resources, until\n   that logical change is complete and tested.  When all clients use a\n   common set of shared version selectors, every client sees the result\n   of a MOVE as soon as it occurs.\n\n   An additional problem is that it is often necessary to perform\ntesting\n   on the server rather than on the client.  Since a test routine on the\n   server has no way of knowing what working resources or what versions\n   are to be tested, only the versions selected as the current target of\n   the version selectors can be tested.  This not only does not allow\n   testing of a checked-out resource before checking it in, but also\ndoes\n   not provide for any parallel testing of different configurations of\n   versioned resources.\n\n   To address these problems, advanced versioning introduces the concept\n   of a \"workspace\".  A workspace is a collection whose members are a\nset\n   of related version selectors and unversioned resources.  In order to\n   expose multiple views of a set of related version selectors in the\nURL\n   namespace, multiple workspaces may be used.  In order to make a\nchange\n   made to a version selector in one workspace visible in another\n   workspace, that version selector must be checked in, and then the\n   corresponding version selector in the other workspace can be updated\n   to display the content and dead properties of the new version.  In\n   order to ensure unambiguous merging and baselining semantics, a\n   workspace may contain at most one version selector for a given\nversion\n   history (although a server may support multiple bindings in a\n   workspace to the same version selector).\n\n   ----------------------------------\n\n\n\n", "id": "lists-005-11843998"}, {"subject": "Questions on the LABEL metho", "content": "The Marshalling section of the LABEL method says:\n\n\"The request MAY include a Depth header.  If it does include a Depth header,\nthe response MUST be a 207 Multi-Status.\"\n\nDoes this mean that a multistatus response would be returned even if there\nwere no errors? In RFC2518, the responses for recursive operations are not\nspecified this way; 207 is only returned if there are errors on a resource\nother than that denoted by the request URI. Shouldn't LABEL be consistent\nwith that behavior? (The same question applies to the SET-TARGET method.)\n\nWhen executing a recursive label operation, must the server return an error\non any unlabelable resources it finds (e.g. unversioned resources), or can\nit silently ignore them? The SET-TARGET method can be applied to a\ncollection which is not a version selector; should the LABEL method work the\nsame way?\n\nIf the LABEL request URI refers to a checked-out version selector (and there\nis no Target-Selector header), what should the response be? It appears that\nthe request should fail, since a checked-out version selector has no target,\nbut what precondition violation should be reported?\nDAV:must-be-version-or-version-selector doesn't seem right, since the\nrequest does refer to a version selector, and DAV:must-select-version only\nseems to apply when a Target-Selector header is used.\n\nJohn Vasta\n\n\n\n", "id": "lists-005-11857970"}, {"subject": "Newbie Versioning Questio", "content": "Hello,\n\nI have (what I hope) is a relatively straight forward question regarding the\nDelta-V versioning model. Does the spec require implementations to support\nversion branching, i.e., versions with two or more successors? Can an\nimplementation that supports only linear version still be compliant with the\nstandard? Does the spec allow an implementation to simply fail a CHECKOUT\noperation on a versioned resource when the target is not the tip in a linear\nversion series? If so, what would be the appropriate response code and body?\n\nI note that earlier versions of the spec contained references to a\n<DAV:branch-ok> element. This seems to imply that some consideration was\ngiven to this question in the past. Am I understanding this correctly? If\nso, what ever became of it?\n\n\n-Eric Edeen\needeen@pesolutions.com \n\n\n\n", "id": "lists-005-11866480"}, {"subject": "deltav-10.", "content": "<http://www.webdav.org/deltav/protocol/draft-ietf-deltav-versioning-10.1.htm>\n\nI've rolled up the 2 or 3 proposed changes from the first couple of\nweeks of the last call period.  These changes are identified in a\n\"changes since last draft\" section, and the controversial change\n(moving labeling to advanced) is identified in the issues section.\n\nI've also added the new workspace motivation sections that I\nposted last week.  Since none of these modifications change\nthe semantics, deltav-10 continues to be the last call draft.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-11874728"}, {"subject": "workspace header, labels, python client wante", "content": "Hi,\nI have a couple of questions.\n\nGeoff gave some nice reasons for making labels optional.\n> operation.  If you want labeling, just get a server that supports it,\n> and then it's easy for a client to expose it, since we've standardized\n> on what labeling looks like when it is supported.  \n> (I'm tempted to make an analogy about the superiority of \"market driven\"\n> economy over a \"command\" economy :-).\nWhen I see how the \"market\" is taking care that programmers aren't too\nproductive but struggle against badly designed hardware and operatings system\nI'm not sure about this superiority in some cases :-)\nAn advantage of making labels optional naturally is that a server can decide\nto implement workspaces and baselines and instead save itself the trouble\nof implementing labels.\nNevertheless I would like to see labels in core versioning as a simple\nmeans for creating baselines.\nThen there is the question of case significance in labels. I would prefer\ncase significance. Especially when I read about the trouble with\ncapitalizing letters which don't have an upper case.\nThere was a long discussion a while ago and I guess that Geoff takes\nas a consensus that the server can decide what to do. That right Geoff ?\nIn this case I see a small problem when resources with labels\nare moved from a server which supports labels with case significance\nto one which doesn't. But perhaps the market can rule again in this case ?\n\n> Yeah, I was a strong advocate of Workspace headers too, until\n> I ran into those pesky technical problems ... (:-).\nSo you will probably want to kill workspace headers completely.\nI just thought whether it would make sense to save it by saying it doesn't\napply for the method URL. So the server still could find out which subtree\nand by this which module would be concerned. A drawback would be that\nthe method URL would be a special case but I suppose there are bigger\nproblems (Sorry to ask but I don't have time at the moment to get all\nthe postings I missed the last months).\nOTOH I don't like to parse a URL to find out whether it is in some workspace\nor not (Yes I know it's possible :-)\n\nSo you see that I have some gripes but these aren't showstoppers for me.\nI suppose I could live with them. It's the same with Lisa's proposal of\nkilling some new methods. I was sympathetic with some of her ideas but\nwon't fight for them to my last breath.\n\nFianlly a question. A collegue of mine is doing a lot with Python. After\nlooking over www.webdav.org I mailed Jim Davis about the Python client\nmentioned there. \nBut it's source is not free. Does anybody know about a free Python client ?\n\nCheers, Edgar\n\n\n\n-- \nedgar@edgarschwarz.de                    http://www.edgarschwarz.de\n*          DOSenfreie Zone.        Running Native Oberon.         *\nMake it as simple as possible, but not simpler.     Albert Einstein\n\n\n\n", "id": "lists-005-11881498"}, {"subject": "Re: workspace header, labels, python client wante", "content": "   From: Edgar@EdgarSchwarz.de\n\n   Geoff gave some nice reasons for making labels optional.\n   > operation.  If you want labeling, just get a server that supports it,\n   > and then it's easy for a client to expose it, since we've standardized\n   > on what labeling looks like when it is supported.  \n\n   An advantage of making labels optional naturally is that a server\n   can decide to implement workspaces and baselines and instead save\n   itself the trouble of implementing labels.\n\nThat's a good point ... I know of at least a couple of systems that\nsupport baselining but not per-version labels.  And even when a server\nsupports both baselines and labels, a client is *much* better off to\nuse the server's native baseline support, since a good server will\nimplement baselining in a far superior way natively than can be done\nby a client using the servers labeling mechanism.\n\n   Nevertheless I would\n   like to see labels in core versioning as a simple means for\n   creating baselines.\n\nNote: In general, I'd discourage a client from trying to \"fake\"\nbaselines on a server that supports labels but not baselines.\nIf the label implementation was truly suitable for supporting\nbaselining (and many are not), then a sensible server writer will\ndo the trivial amount of extra work to support the baselining\nprotocol.  So it is very likely the only time you will run into\na server that supports labels and not baselining is when the label\nimplementation does not support effective (efficient) baselining.\nBut that of course is up to the client writer ... heck, you could\ntry to fake all of WebDAV on top of GET and PUT if you really \nwanted to (it just wouldn't work very well :-).\n\nBut even if you decide to fake baselines on with labels, all that\nmaking labels optional would mean is that you would grey out\nyour baselining functionality if neither baselines or labels\nwere available.\n\n   Then there is the question of case significance in labels. I would\n   prefer case significance. Especially when I read about the trouble\n   with capitalizing letters which don't have an upper case.  There\n   was a long discussion a while ago and I guess that Geoff takes as a\n   consensus that the server can decide what to do. That right Geoff ?\n   In this case I see a small problem when resources with labels are\n   moved from a server which supports labels with case significance to\n   one which doesn't. But perhaps the market can rule again in this\n   case ?\n\n   > Yeah, I was a strong advocate of Workspace headers too, until\n   > I ran into those pesky technical problems ... (:-).\n\n   So you will probably want to kill workspace headers completely.\n\nYes.\n\n   I just thought whether it would make sense to save it by saying it doesn't\n   apply for the method URL. So the server still could find out which subtree\n   and by this which module would be concerned. A drawback would be that\n   the method URL would be a special case but I suppose there are bigger\n   problems (Sorry to ask but I don't have time at the moment to get all\n   the postings I missed the last months).\n\nYes, the problems arise for all URL's whether it is the request URL,\na URL in a header, or a URL in the content.\n\n   OTOH I don't like to parse a URL to find out whether it is in some workspace\n   or not (Yes I know it's possible :-)\n\nIt's not so much a parsing issue (workspace URL's look like any other\nURL) as it is a property or semantic issue.  In particular, every\nversion selector in a workspace has a DAV:workspace property which\ntells you which workspace the version selector is in (if any).\n\n   So you see that I have some gripes but these aren't showstoppers for me.\n   I suppose I could live with them. It's the same with Lisa's proposal of\n   killing some new methods. I was sympathetic with some of her ideas but\n   won't fight for them to my last breath.\n\nOK, then I'll mark you down in the \"can live with it\" column (:-).\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-11891593"}, {"subject": "Re: Newbie Versioning Questio", "content": "   From: \"Edeen, Eric\" <eedeen@pesolutions.com>\n\n   I have (what I hope) is a relatively straight forward question regarding the\n   Delta-V versioning model. Does the spec require implementations to support\n   version branching, i.e., versions with two or more successors?\n\nWe call that \"forking\" (since we use the term \"branch\" for a special\nkind of activity), but no, a server does not have to support version forking.\n\nAn interoperable versioning client SHOULD be prepared to deal with\nforking (since it may encounter it), but it can deal with it in as\nprimitive a way as it wants (something better than \"dumping core\"\nis probably preferable :-).\n\n   Can an\n   implementation that supports only linear version still be compliant with the\n   standard?\n\nYes.  The standard way to expose this restriction is to have the\nserver set the property DAV:checkout-fork or DAV:checkin-fork on a\nversion-selector to be DAV:forbidden (one prevents forking on\ncheckout, the other prevents forking on checkin).\n\n   Does the spec allow an implementation to simply fail a CHECKOUT\n   operation on a versioned resource when the target is not the tip in a linear\n   version series?\n\nYes.\n\n   If so, what would be the appropriate response code and body?\n\nYou would return status 403 and in the response body, either:\n\n <DAV:checkout-of-version-with-descendant-is-forbidden/>\n\nor\n\n<DAV:checkout-of-checked-out-version-is-forbidden/>\n\nwhichever is appropriate.  This is considered \"optional\"\nfunctionality, so it appears in the advanced CHECKOUT section.\n\n   I note that earlier versions of the spec contained references to a\n   <DAV:branch-ok> element.\n\nYes.\n\n   This seems to imply that some consideration was\n   given to this question in the past. Am I understanding this correctly? If\n   so, what ever became of it?\n\nIt's still there (look at advanced CHECKOUT and CHECKIN).\nIt's in advanced, because this is optional functionality.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-11903194"}, {"subject": "DAV:supported-method-set childre", "content": "Geoff,\n\nIn section 4.4.1 of (draft-ietf-deltav-versioning-10.1), all of the possible\nchild elements of <DAV:supported-method-set> should have tag names in the\nDAV: name space.\n\nThe argument I posted previously (see\nhttp://lists.w3.org/Archives/Public/ietf-dav-versioning/2000JulSep/0169.html\n), as well as your response, applies in this case as well.\n\nThanks, Ron\n\nR. M. Jacobs\nvoice:  408-213-2213\nmailto:rjacobs@gforce.com\n\ngForce \nEnterprise eLearning Solutions\n                    Get there faster.\n\nhttp://www.gforce.com\n\n\n\n", "id": "lists-005-11912047"}, {"subject": "RE: workspace header, labels, python client wante", "content": "Mr. Schwarz's comments on wanting baselining in core reminded me of an\noffline conversation I had recently with Jim:  Jim pointed out that many of\nthe issues about what to include in core versioning involve the definition\nof what core versioning is _for_.\n\nI initially assumed -- since I work on document repositories rather than\nsource repositories -- that core would be suitable for document\nrepositories' simpler versioning needs.  That assumption was probably\nunwarranted.\n\nNevertheless, I think it would be a Good Thing if we did explicitly or at\nleast consciously target \"core versioning\" to simple document repository\nscenarios.  Source repositories can then implement on top of core versioning\nany additional features like baselining, forking, etc. that aren't required\nof document repositories.\n\nDoes anybody feel that core versioning shouldn't be targetted at ordinary\ndocument repositories that want versioning?\n\nLisa\n\n-----Original Message-----\nFrom: ietf-dav-versioning-request@w3.org\n[mailto:ietf-dav-versioning-request@w3.org]On Behalf Of Geoffrey M.\nClemm\nSent: Monday, October 16, 2000 2:51 PM\nTo: ietf-dav-versioning@w3.org\nSubject: Re: workspace header, labels, python client wanted\n\n\n\n   From: Edgar@EdgarSchwarz.de\n\n   Geoff gave some nice reasons for making labels optional.\n   > operation.  If you want labeling, just get a server that supports it,\n   > and then it's easy for a client to expose it, since we've standardized\n   > on what labeling looks like when it is supported.\n\n   An advantage of making labels optional naturally is that a server\n   can decide to implement workspaces and baselines and instead save\n   itself the trouble of implementing labels.\n\nThat's a good point ... I know of at least a couple of systems that\nsupport baselining but not per-version labels.  And even when a server\nsupports both baselines and labels, a client is *much* better off to\nuse the server's native baseline support, since a good server will\nimplement baselining in a far superior way natively than can be done\nby a client using the servers labeling mechanism.\n\n   Nevertheless I would\n   like to see labels in core versioning as a simple means for\n   creating baselines.\n\nNote: In general, I'd discourage a client from trying to \"fake\"\nbaselines on a server that supports labels but not baselines.\nIf the label implementation was truly suitable for supporting\nbaselining (and many are not), then a sensible server writer will\ndo the trivial amount of extra work to support the baselining\nprotocol.  So it is very likely the only time you will run into\na server that supports labels and not baselining is when the label\nimplementation does not support effective (efficient) baselining.\nBut that of course is up to the client writer ... heck, you could\ntry to fake all of WebDAV on top of GET and PUT if you really\nwanted to (it just wouldn't work very well :-).\n\nBut even if you decide to fake baselines on with labels, all that\nmaking labels optional would mean is that you would grey out\nyour baselining functionality if neither baselines or labels\nwere available.\n\n   Then there is the question of case significance in labels. I would\n   prefer case significance. Especially when I read about the trouble\n   with capitalizing letters which don't have an upper case.  There\n   was a long discussion a while ago and I guess that Geoff takes as a\n   consensus that the server can decide what to do. That right Geoff ?\n   In this case I see a small problem when resources with labels are\n   moved from a server which supports labels with case significance to\n   one which doesn't. But perhaps the market can rule again in this\n   case ?\n\n   > Yeah, I was a strong advocate of Workspace headers too, until\n   > I ran into those pesky technical problems ... (:-).\n\n   So you will probably want to kill workspace headers completely.\n\nYes.\n\n   I just thought whether it would make sense to save it by saying it\ndoesn't\n   apply for the method URL. So the server still could find out which\nsubtree\n   and by this which module would be concerned. A drawback would be that\n   the method URL would be a special case but I suppose there are bigger\n   problems (Sorry to ask but I don't have time at the moment to get all\n   the postings I missed the last months).\n\nYes, the problems arise for all URL's whether it is the request URL,\na URL in a header, or a URL in the content.\n\n   OTOH I don't like to parse a URL to find out whether it is in some\nworkspace\n   or not (Yes I know it's possible :-)\n\nIt's not so much a parsing issue (workspace URL's look like any other\nURL) as it is a property or semantic issue.  In particular, every\nversion selector in a workspace has a DAV:workspace property which\ntells you which workspace the version selector is in (if any).\n\n   So you see that I have some gripes but these aren't showstoppers for me.\n   I suppose I could live with them. It's the same with Lisa's proposal of\n   killing some new methods. I was sympathetic with some of her ideas but\n   won't fight for them to my last breath.\n\nOK, then I'll mark you down in the \"can live with it\" column (:-).\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-11921103"}, {"subject": "Re: workspace header, labels, python client wante", "content": "   From: \"Lisa Dusseault\" <lisa@xythos.com>\n\n   I initially assumed -- since I work on document repositories rather than\n   source repositories -- that core would be suitable for document\n   repositories' simpler versioning needs.  That assumption was probably\n   unwarranted.\n\nIn earlier drafts of the protocol, the core level was called\n\"document management\" (and advanced was called \"configuration management\"),\nso historically, Lisa's assumption is very warranted.\n\n   Nevertheless, I think it would be a Good Thing if we did explicitly or at\n   least consciously target \"core versioning\" to simple document repository\n   scenarios.  Source repositories can then implement on top of core versioning\n   any additional features like baselining, forking, etc. that aren't required\n   of document repositories.\n\nAs is probably clear from my postings, I wholeheartedly (and even\nvehemently :-) agree with the preceding paragraph.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-11935170"}, {"subject": "Re: DAV:supported-method-set childre", "content": "I agree.  If there are no objections, I'll make that change in the 10.2\ndraft.  Thanks, Ron!\n\nCheers,\nGeoff\n\n   From: Ron Jacobs <rjacobs@gforce.com>\n\n   In section 4.4.1 of (draft-ietf-deltav-versioning-10.1), all of the possible\n   child elements of <DAV:supported-method-set> should have tag names in the\n   DAV: name space.\n\n\n\n", "id": "lists-005-11943262"}, {"subject": "comments on draft-ietf-deltav-versioning-10.", "content": "The following comments are sent on behalf of a colleague.\n\nTim\n\n---------------------- Forwarded by Tim Ellison/UK/IBM on 2000-10-17 04:36\nPM ---------------------------\nTim,\n\nI have some comments on the 10.1 spec. Most are minor.\nThe last one---a feature request for MERGE---is substantial.\n\nPlease pass my comments along to the mailing list if the issues have not\nalready been discussed (I don't read the deltav mailing list).\n\nThanks,\n\n===================\n\nComments on draft-ietf-deltav-versioning-10.1\n\nsection 2.1 p.9\n\n- stray \"<big>...</big>\"\n\nsection 9.2.1 CHECKOUT example p.22\n\n- The example shows that the request-URL \"/foo.html\" is checked out as a\nnew working resource named \"http://www.webdav.org/repo/wr-157.html\". While\nit would be mighty\nconvenient for the server to preserve the \".html\" file extension part of\nthe file name, servers are under no obligation to do so. It would therefore\nbe more realistic to show the new working resource with a more\nrepresentative URL, such as \"http://www.webdav.org/repo/wr-157\".\n\nsection 10.1 DAV:version-tree-report p. 25\n\n\"The elements of a DAV:property-report identify...\n- element should be \"DAV:version-tree-report\"\n\nsection 13.3 Version Selector Properties\n\nI notice that DAV:version-history is no longer a property of version\nselectors. Is this intentional?\n\nsection 15.1 OPTIONS p. 42\n\nRemove mention of DAV:predecessor-set from the \"merge\" item (this property\nis now in core versioning 5.2.3).\n\nsection 15.1.1 OPTIONS example p. 42\n\nThere are two \"DAV\" response headers.\n\nsection 16.2 MKWORKSPACE p.50-1\n\nThe specification should not be silent on the semantics of parent\nworkspaces containing\n     - checked-out resources\n     - non-versioned members\n     - versioned collections members where eclipsing is involved\n     - member collections under baseline control (both checked-out and\nchecked-in baseline selectors)\n\nsection 16.5 MERGE p.53-4\n\nSome clients will want to pre-resolve conflicts before doing a merge: they\nuse the merge preview report to discover where the conflicts are, make the\nnecessary changes to resolve the conflicts, and then MERGE the results into\nthe shared workspace. In this way, the client can completely avoid creating\nchecked-out resources in the shared\nworkspace. Never having checked-out resources in a shared workspace has\ncertain advantages, including the ability to baseline any if its\ncollections at any time.\n\nThe current semantics of MERGE does not support this kind of client\nparticularly well. There is a time window between the merge preview and the\nMERGE operation during which another client could change the shared\nworkspace in a way that would create a new conflict situation. This would\nresult in checked-out resources in the shared workspace---exactly what the\nclient was trying to avoid.\n\nFor this kind of client, it would be most convenient if there was a\nclient-supplied merge option (DAV:pre-merged, say) indicating that the\nmethod should simply fail if there are any conflicts.  If the method fails,\nthe server must not change any of the merge destinations. While this does\nnot eliminate the window during which conflicts can arise unexpectedly, it\ndoes give a pre-resolving client a simple way to avoid\ninadvertently creating checked-out resources in a shared workspace. When\nthe method fails for this reason, the client knows that it will need to\nrepeat the normal process to discover and pre-resolve the late-breaking\nconlicts.\n\n\n\n", "id": "lists-005-11950560"}, {"subject": "Re: Questions on the LABEL metho", "content": "   From: \"Vasta, John\" <jvasta@rational.com>\n\n   The Marshalling section of the LABEL method says:\n\n   \"The request MAY include a Depth header.  If it does include a Depth header,\n   the response MUST be a 207 Multi-Status.\"\n\n   Does this mean that a multistatus response would be returned even if there\n   were no errors? In RFC2518, the responses for recursive operations are not\n   specified this way; 207 is only returned if there are errors on a resource\n   other than that denoted by the request URI. Shouldn't LABEL be consistent\n   with that behavior? (The same question applies to the SET-TARGET method.)\n\nThat sounds sensible to me.  If nobody objects, I will change this to\nsay that \"a 207 MUST be returned if a Depth header is specified and\nthe operation fails on the collection or any of its members\".\n\n   When executing a recursive label operation, must the server return an error\n   on any unlabelable resources it finds (e.g. unversioned resources), or can\n   it silently ignore them?\n\nIt should return an error (more work for a server, but better for\nthe client).\n\n   The SET-TARGET method can be applied to a\n   collection which is not a version selector; should the LABEL method work the\n   same way?\n\nYes, that was the intention.  I'll fix up the wording so that SET-TARGET and\nLABEL are described the same way.\n\n   If the LABEL request URI refers to a checked-out version selector (and there\n   is no Target-Selector header), what should the response be? It appears that\n   the request should fail, since a checked-out version selector has no target,\n   but what precondition violation should be reported?\n\nYes, it should fail.  I'll add this missing pre-condition\n(I'll just re-use DAV:must-not-be-checked-out).\n\n   DAV:must-be-version-or-version-selector doesn't seem right, since the\n   request does refer to a version selector, and DAV:must-select-version only\n   seems to apply when a Target-Selector header is used.\n\nI agree.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-11961508"}, {"subject": "Re: comments on draft-ietf-deltav-versioning-10.", "content": "   From: Tim_Ellison@uk.ibm.com\n   [The following comments are sent on behalf of a colleague.]\n\nTim: Thanks to both you and your colleague for some great comments!\n(You aren't supposed to shoot the messenger, but I assume you can\nthank him? :-)\n\n   I have some comments on the 10.1 spec. Most are minor.\n   The last one---a feature request for MERGE---is substantial.\n\n   ===================\n\n   Comments on draft-ietf-deltav-versioning-10.1\n\n   section 2.1 p.9\n\n   - stray \"<big>...</big>\"\n\nI'll forward this to the Microsoft Word developers (:-).  It won't\nshow up in the ASCII text that is the \"official\" version.\n\n   section 9.2.1 CHECKOUT example p.22\n\n   - The example shows that the request-URL \"/foo.html\" is checked out as a\n   new working resource named \"http://www.webdav.org/repo/wr-157.html\". While\n   it would be mighty\n   convenient for the server to preserve the \".html\" file extension part of\n   the file name, servers are under no obligation to do so. It would therefore\n   be more realistic to show the new working resource with a more\n   representative URL, such as \"http://www.webdav.org/repo/wr-157\".\n\nWell, if the server is expecting standard Web browsers to let you look\nat the version resource directly (i.e. other than through a version\nselector), they had better stick the .html (or at least, .htm :-) on\nthe end.  It's certainly up to the server, but I didn't want the\nexample to set a bad example (:-).\n\n   section 10.1 DAV:version-tree-report p. 25\n\n   \"The elements of a DAV:property-report identify...\n   - element should be \"DAV:version-tree-report\"\n\nWill fix (thanks for catching that!).\n\n   section 13.3 Version Selector Properties\n\n   I notice that DAV:version-history is no longer a property of version\n   selectors. Is this intentional?\n\nYes, that is one of the batch of live properties that a server is\nallowed to decide whether or not to reflect/copy the underlying version\nproperty in the version selector resource.  A client that wants to get\nthe info in one request can use a DAV:property-report.\n\n   section 15.1 OPTIONS p. 42\n\n   Remove mention of DAV:predecessor-set from the \"merge\" item (this property\n   is now in core versioning 5.2.3).\n\nGood point.  Will fix.\n\n   section 15.1.1 OPTIONS example p. 42\n\n   There are two \"DAV\" response headers.\n\nThat's on purpose.  You are allowed to have multiple headers\nof the same kind as long as they take comma separated values\n(and the effect is just as if you had all values in one line).\nI thought this was clearer than the alternatives (and reminds\nfolks of this bit of HTTP triviata :-).\n\n   section 16.2 MKWORKSPACE p.50-1\n\n   The specification should not be silent on the semantics of parent\n   workspaces containing\n- checked-out resources\n- non-versioned members\n- versioned collections members where eclipsing is involved\n- member collections under baseline control (both checked-out and\n   checked-in baseline selectors)\n\nYou are correct that all this has to be specified (and isn't).  Since\nit looks likely that anyone that is implementing workspaces will also\nbe implementing baselines, I think the best (simplest) approach is to\njust to use existing baseline functionality to initialize a workspace,\nand get rid of parent workspaces.\n\nIn particular, if a workspace is under baseline control, just use\nSET-TARGET to set that workspace to a baseline from some existing\nworkspace.  Since a baseline does not contain checked-out resources,\nnon-versioned members, or eclipsed members of versioned collections,\nnone of these questions arise.\n\nAny objections?\n\n   section 16.5 MERGE p.53-4\n\n   Some clients will want to pre-resolve conflicts before doing a merge: they\n   use the merge preview report to discover where the conflicts are, make the\n   necessary changes to resolve the conflicts, and then MERGE the results into\n   the shared workspace. In this way, the client can completely avoid creating\n   checked-out resources in the shared\n   workspace. Never having checked-out resources in a shared workspace has\n   certain advantages, including the ability to baseline any if its\n   collections at any time.\n\n   The current semantics of MERGE does not support this kind of client\n   particularly well. There is a time window between the merge preview and the\n   MERGE operation during which another client could change the shared\n   workspace in a way that would create a new conflict situation. This would\n   result in checked-out resources in the shared workspace---exactly what the\n   client was trying to avoid.\n\n   For this kind of client, it would be most convenient if there was a\n   client-supplied merge option (DAV:pre-merged, say) indicating that the\n   method should simply fail if there are any conflicts.  If the method fails,\n   the server must not change any of the merge destinations. While this does\n   not eliminate the window during which conflicts can arise unexpectedly, it\n   does give a pre-resolving client a simple way to avoid\n   inadvertently creating checked-out resources in a shared workspace. When\n   the method fails for this reason, the client knows that it will need to\n   repeat the normal process to discover and pre-resolve the late-breaking\n   conlicts.\n\nThat all sounds sensible to me.  I'd probably name the argument\nDAV:no-checkout if that's OK with you.  Anyone object to adding\nthis feature?\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-11970745"}, {"subject": "more comments on deltav-10.", "content": "section 16.4 BASELINE-CONTROL p.52\n\nThe BASELINE-CONTROL method allows a *baseline history* to be specified in\nthe body; *the initial version* in this baseline history is used as the\ntarget of the newly-created baseline selector.\n\nIn contrast, the VERSION-CONTROL method allows a *version* to be specified\nin the body; *this version* is used as the target of the newly-created\nversion selector.\n\nBesides being inconsistent, the behavior of BASELINE-CONTROL is not\nparticularly convenient for a client trying to create a workspace and\npopulate it from a pre-existing baseline version (that is, without appeal\nto an existing baseline version selector). The steps are:\n\n1. MKWORKSPACE to create a new workspace\n2. VERSION-CONTROL the workspace root collection specifying the baseline's\nroot collection version (assume this is known to client)\n3. BASELINE-CONTROL the workspace root collection specifying the baseline\nhistory\n4. SET-TARGET on the baseline selector to the baseline version\n\nIf BASELINE-CONTROL allowed a baseline version to be specified in the body\nand that version were to be used as the target of the newly-created\nbaseline selector, then steps 3 and 4 could be reduced to just one:\n\n3'. BASELINE-CONTROL the workspace root collection specifying the baseline\nversion\n\n\n\n", "id": "lists-005-11983658"}, {"subject": "Re: Questions on the LABEL metho", "content": "Any thoughts about where the extended status information will go in a\nMultiStatus response?\nThe response description seems a likely candidate.\n\nTim\n\n\"Geoffrey M. Clemm\" <geoffrey.clemm@rational.com> on 2000-10-17 08:55:06 PM\n\nPlease respond to \"Geoffrey M. Clemm\" <geoffrey.clemm@rational.com>\n\nTo:   ietf-dav-versioning@w3.org\ncc:\nSubject:  Re: Questions on the LABEL method\n\n\n\n\n\n   From: \"Vasta, John\" <jvasta@rational.com>\n\n   The Marshalling section of the LABEL method says:\n\n   \"The request MAY include a Depth header.  If it does include a Depth\nheader,\n   the response MUST be a 207 Multi-Status.\"\n\n   Does this mean that a multistatus response would be returned even if\nthere\n   were no errors? In RFC2518, the responses for recursive operations are\nnot\n   specified this way; 207 is only returned if there are errors on a\nresource\n   other than that denoted by the request URI. Shouldn't LABEL be\nconsistent\n   with that behavior? (The same question applies to the SET-TARGET\nmethod.)\n\nThat sounds sensible to me.  If nobody objects, I will change this to\nsay that \"a 207 MUST be returned if a Depth header is specified and\nthe operation fails on the collection or any of its members\".\n\n   When executing a recursive label operation, must the server return an\nerror\n   on any unlabelable resources it finds (e.g. unversioned resources), or\ncan\n   it silently ignore them?\n\nIt should return an error (more work for a server, but better for\nthe client).\n\n   The SET-TARGET method can be applied to a\n   collection which is not a version selector; should the LABEL method work\nthe\n   same way?\n\nYes, that was the intention.  I'll fix up the wording so that SET-TARGET\nand\nLABEL are described the same way.\n\n   If the LABEL request URI refers to a checked-out version selector (and\nthere\n   is no Target-Selector header), what should the response be? It appears\nthat\n   the request should fail, since a checked-out version selector has no\ntarget,\n   but what precondition violation should be reported?\n\nYes, it should fail.  I'll add this missing pre-condition\n(I'll just re-use DAV:must-not-be-checked-out).\n\n   DAV:must-be-version-or-version-selector doesn't seem right, since the\n   request does refer to a version selector, and DAV:must-select-version\nonly\n   seems to apply when a Target-Selector header is used.\n\nI agree.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-11991934"}, {"subject": "Re: more comments on deltav-10.", "content": "   From: Tim_Ellison@uk.ibm.com\n\n   section 16.4 BASELINE-CONTROL p.52\n\n   The BASELINE-CONTROL method allows a *baseline history* to be specified in\n   the body; *the initial version* in this baseline history is used as the\n   target of the newly-created baseline selector.\n\nThat is a typo ... you'll notice from the DTD that a baseline, not a\nbaseline history, is required.  Thanks for catching this!\n\n   In contrast, the VERSION-CONTROL method allows a *version* to be specified\n   in the body; *this version* is used as the target of the newly-created\n   version selector.\n\nYes, that's the way BASELINE-CONTROL should be as well.\n\n   Besides being inconsistent, the behavior of BASELINE-CONTROL is not\n   particularly convenient for a client trying to create a workspace and\n   populate it from a pre-existing baseline version (that is, without appeal\n   to an existing baseline version selector). The steps are:\n\n   1. MKWORKSPACE to create a new workspace\n   2. VERSION-CONTROL the workspace root collection specifying the baseline's\n   root collection version (assume this is known to client)\n\nActually, you can baselining a collection is independent of whether\nor not you are versioning it, so the VERSION-CONTROL step is not\nrequird.\n\n   3. BASELINE-CONTROL the workspace root collection specifying the baseline\n   history\n   4. SET-TARGET on the baseline selector to the baseline version\n\n   If BASELINE-CONTROL allowed a baseline version to be specified in the body\n   and that version were to be used as the target of the newly-created\n   baseline selector, then steps 3 and 4 could be reduced to just one:\n\n   3'. BASELINE-CONTROL the workspace root collection specifying the baseline\n   version\n\nYes, that's what it should have said.  I'll fix this.\nSince there is no need to VERSION-CONTROL the workspace, you\ncan create a new workspace based on an existing baseline in two steps:\n\n   1. MKWORKSPACE to create a new workspace\n   2. BASELINE-CONTROL the workspace root collection specifying the baseline\n\nI'll post a 10.2 draft with this fix.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-12002699"}, {"subject": "Re: Questions on the LABEL metho", "content": "That sounds right to me.  I'll add this to the protocol.\n\nCheers,\nGeoff\n\n   From: Tim_Ellison@uk.ibm.com\n\n   Any thoughts about where the extended status information will go in\n   a MultiStatus response?  The response description seems a likely\n   candidate.\n\n\n\n", "id": "lists-005-12011653"}, {"subject": "deltav-10.2 now availabl", "content": "<http://www.webdav.org/deltav/protocol/draft-ietf-deltav-versioning-10.2.doc>\n\n\nChanges since deltav-10:\n\n- Moved version selector DAV:predecessor-set property to core. (Boris)\n- Made label support optional. (Lisa)\n- Removed Workspace header (Geoff)\n- Added DAV:must-not-be-checked-out precondition for LABEL (John)\n- Only require Multi-Status if there was an error in a Depth operation\n  (e.g. LABEL and SET-TARGET). (John)\n- Got rid of \"parent workspace\" for MKWORKSPACE (Tim/Geoff)\n- Added DAV:no-checkout argument to MERGE (Tim)\n- Fixed BASELINE-CONTROL so that baseline (not baseline history)\n  is the argument (Tim).\n\nOutstanding Issues:\n\n- Should labels be moved back to core?\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-12018795"}, {"subject": "RE: Moving Labels Back to Core", "content": "I would say that, so long as label support is optional, and they don't\ndepend on any non-core mechanism, that the core is a good place to put them.\n\nMostly I see it encouraging developers to notice them and consider their\nsupport rather than come up with substitutes at the core level that don't\nscale into advanced.\n\nIt may be a small thing, and I recommend it anyhow.\n\n-- Dennis\n\nAIIM DMware Technical Coordinator\nAIIM DMware http://www.infonuovo.com/dmware\nODMA Support http://www.infonuovo.com/odma\n------------------\nDennis E. Hamilton\nInfoNuovo\nmailto:infonuovo@email.com\ntel. +1-206-779-9430 (gsm)\nfax. +1-425-793-0283\nhttp://www.infonuovo.com\n\n\n\n-----Original Message-----\nFrom: ietf-dav-versioning-request@w3.org\n[mailto:ietf-dav-versioning-request@w3.org]On Behalf Of Geoffrey M.\nClemm\nSent: Wednesday, October 18, 2000 09:07\nTo: ietf-dav-versioning@w3.org\nSubject: deltav-10.2 now available\n\n\n\n<http://www.webdav.org/deltav/protocol/draft-ietf-deltav-versioning-10.2.doc\n>\n\n\nChanges since deltav-10:\n\n- Moved version selector DAV:predecessor-set property to core. (Boris)\n- Made label support optional. (Lisa)\n- Removed Workspace header (Geoff)\n- Added DAV:must-not-be-checked-out precondition for LABEL (John)\n- Only require Multi-Status if there was an error in a Depth operation\n  (e.g. LABEL and SET-TARGET). (John)\n- Got rid of \"parent workspace\" for MKWORKSPACE (Tim/Geoff)\n- Added DAV:no-checkout argument to MERGE (Tim)\n- Fixed BASELINE-CONTROL so that baseline (not baseline history)\n  is the argument (Tim).\n\nOutstanding Issues:\n\n- Should labels be moved back to core?\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-12026340"}, {"subject": "Re: Moving Labels Back to Core", "content": "   From: \"Dennis E. Hamilton\" <infonuovo@email.com>\n\n   I would say that, so long as label support is optional, and they don't\n   depend on any non-core mechanism, that the core is a good place to put them.\n\nThe \"core\" as we currently use the term is the set of required\nfeatures, so if label support is optional, it by definition is\nnot in core.  It looks like the real problem is the term \"advanced\".  We\nshould call it \"optional\" or something (any suggestions?).\n\nSome other optional features that are obviously not\n\"advanced\" but are \"optional\" are DAV:checkout-branch\n(which lets a server declare that it only supports linear\nbranching) and mutable versions.\n\n   Mostly I see it encouraging developers to notice them and consider their\n   support rather than come up with substitutes at the core level that don't\n   scale into advanced.\n\nThis is true for everything in the \"optional\" section,\nso I think this reinforces the need to rename \"advanced\".\n\nI'll try how \"optional\" works, but if anyone has a better idea for a\nname, please let me know.  I'll also try to think up some words that\nmake it clear that if you want to implement anything not in core, to\nlook into the optional versioning features before inventing a\nnon-interoperable mechanism.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-12036922"}, {"subject": "RE: Moving Labels Back to Core", "content": "extensions\n\n-----Original Message-----\nFrom: Geoffrey M. Clemm [mailto:geoffrey.clemm@rational.com]\nSent: Wednesday, October 18, 2000 2:00 PM\nTo: ietf-dav-versioning@w3.org\nSubject: Re: Moving Labels Back to Core?\n\n\n\n   From: \"Dennis E. Hamilton\" <infonuovo@email.com>\n\n   I would say that, so long as label support is optional, and they don't\n   depend on any non-core mechanism, that the core is a good place to put\nthem.\n\nThe \"core\" as we currently use the term is the set of required\nfeatures, so if label support is optional, it by definition is\nnot in core.  It looks like the real problem is the term \"advanced\".  We\nshould call it \"optional\" or something (any suggestions?).\n\nSome other optional features that are obviously not\n\"advanced\" but are \"optional\" are DAV:checkout-branch\n(which lets a server declare that it only supports linear\nbranching) and mutable versions.\n\n   Mostly I see it encouraging developers to notice them and consider their\n   support rather than come up with substitutes at the core level that don't\n   scale into advanced.\n\nThis is true for everything in the \"optional\" section,\nso I think this reinforces the need to rename \"advanced\".\n\nI'll try how \"optional\" works, but if anyone has a better idea for a\nname, please let me know.  I'll also try to think up some words that\nmake it clear that if you want to implement anything not in core, to\nlook into the optional versioning features before inventing a\nnon-interoperable mechanism.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-12045394"}, {"subject": "further baseline-related comments on deltav-10.", "content": "Geoff's reply brings up a general problem with baselines and unversioned\ncollections.\n\nAs currently specified, a baseline captures the targets of version\nselectors at, or below, the baselined collection. If there are unversioned\ncollections at, or below, the collection being baselined, there is\ninsufficient information to make the baseline useful for restoring that\nconfiguration.\n\nHere's a simple scenario that shows the problem:\n\n1. Create a new workspace in the server-blessed collection\n     MKWORKSPACE http://example.org/ws/ws1\n\n2. Create file1 in that workspace\n     PUT http://example.org/ws/ws1/file1\n\n3. Put the file under version control\n     VERSION-CONTROL http://example.org/ws/ws1/file1\n     => http://example.org/vers/vh1/v1\n\n4. Put the workspace root collection under baseline control. This should\ncreate a new baseline history, baseline selector, and baseline version. It\nreturns the URL of the baseline version.\n     BASELINE-CONTROL http://example.org/ws/ws1\n     ==> http://example.org/bh1/b1\n\nThis baseline version captures the current targets of the version selectors\nin the workspace, namely the one for file1. It's DAV:version-set contains:\n     http://example.org/vers/vh1/v1\n\n6. Some time later, create another workspace\n     MKWORKSPACE http://example.org/ws/ws2\n\n7. Put the workspace root collection under baseline control specifying the\npreviously-created baseline version\n     BASELINE-CONTROL http://example.org/ws/ws1\n\n<baseline-control><baseline><href>http://example.org/bh1/b1</href></baseline></baseline-control>\n\n     ==> http://example.org/bh1/b1\n\nThe hope would be that this would create a version selector at\nhttp://example.org/ws/ws1/file1 with target http://example.org/vers/vh1/v1,\nmaking the new workspace isomorphic to the workspace when it was baselined.\nHowever, this would only be possible if the baseline remembered more\ninformation than just the DAV:version-set; it would also need to remember\nthat the collection had a \"file1\" internal member, and the associated\ntarget version is http://example.org/vers/vh1/v1.\n\nWhile the above scenario shows that there's a hole in the story for the\nroot collection of a baseline, the same problem exists for unversioned\ncollections anywhere below the root.\n\nThe main requirement is that a useful baseline is one that can be restored.\nThe issue to decide is what constitutes being \"restored\". Two general\napproaches:\n\n(A) Only allow baselining of versioned collections. Effectively, \"baseline\"\nbecomes an optional add-on to \"versioned-collection\", and baselines cannot\nbe offered by a server that is not prepared to offer versioned collections.\nThis supports a fairly hi-fi notion of \"restore\". It is not perfectly\nfidelity, since non-versioned members are not captured; but this is\ncompatible with the general philosophy for versioning collections.\n\n(B) Allow baselining of arbitrary collections, but capture relevant\nnamespace information along with the version selector.\nFor example, the DAV:version-set might instead contain (path, version)\npairs:\n     <version-set>\n          <item>\n               <href>file1</href>\n               <href>http://example.org/vers/vh1/v1</href>\n          </item>\nThis would supports a weaker notion of \"restore\" for non-versioned\ncollections with versioned members; it would allow these non-versioned\ncollections to be re-created when the baseline is restored, although they\nwould not be restored with any of their dead properties.\n\nApproach (B) feels more general, and allows baselines to be offered by a\nserver that does not offer versioned collections (e.g., something like\nCVS). Moreover, the additional information captured in the baseline should\nnot represent a significant burden for servers planning to offer both\nbaseline and versioned collections.\n\nOther baseline-related problems with draft 10.1:\n\nsection 15.10 CHECKOUT [p. 45-6]\n\n- Needs to specify the semantics of checking-out a baseline selector. In\nparticular, what is the initial value of the DAV:version-set of the\nchecked-out baseline selector. Presumably it contains the targets of all\ncheck-in version selectors at or below the collection to which the baseline\nselector is attached.\nIt also needs to be specified whether the DAV:version-set property of a\nchecked-out baseline selector is updated live as the baselined collection\nis modified; i.e., can I query the DAV:version-set property of a\nchecked-out baseline selector at any time to discover a perfectly accurate\npicture of the baseline collection?\n\n- Needs to specify the semantics of checking-out a baseline version. It's\nnot clear that that this is a particularly useful thing to do. Since the\nbaseline version is divorced from the baseline selector, there wouldn't\nbeen to be any way to affect its DAV:version-set between checkout and\ncheck-in.\n\nsection 15.11 CHECKIN [p. 45-6]\n\n- Needs to specify the semantics of checking-in a checked-out baseline\nselector. In particular, what is the value of the DAV:version-set of the\nnewly created baseline version, and how does it relate to the value of that\nproperty on the baseline selector, and the configuration of the baselined\ncollection, at check-in time. What happens to version selectors below the\nbaselined collection that are currently checked-out? They should eithe be\nignored, or the operation should fail in their presence.  What happens to\nnon-versioned resources below the baselined collection? They should be\nignored when capturing the baseline.\n\n- Needs to specify the semantics of checking-in a baseline working\nresource.\n\n\n\n", "id": "lists-005-12055174"}, {"subject": "Re: further baseline-related comments on deltav-10.", "content": "   From: Tim_Ellison@uk.ibm.com\n\n   As currently specified, a baseline captures the targets of version\n   selectors at, or below, the baselined collection. If there are\n   unversioned collections at, or below, the collection being\n   baselined, there is insufficient information to make the baseline\n   useful for restoring that configuration.\n\nIt is true that the DAV:version-set is not sufficient information\n(unless the baselined collection and all its sub-collections are\nversioned) which means that a baseline implementation needs to save\nadditional information beyond the DAV:version-set (this was\nintentional).  We specifically do not define how that information is\nto be captured, in order to allow for the diverse ways of implementing\nbaselines.\n\nBut one thing that does need to be fixed is in the section that\nintroduces the baseline concept, it says \"the state of a baseline is\nlimited to be a set of versions\".  This needs to be changed to say:\n\"the state of a baseline is limited to be a set of versions and their\nrelative names in the collection\".\n\n   Here's a simple scenario that shows the problem:\n\n...\n\n   7. Put the workspace root collection under baseline control\n   specifying the previously-created baseline version\n\nBASELINE-CONTROL http://example.org/ws/ws1\n\n        <baseline-control> <baseline>\n          <href>http://example.org/bh1/b1</href>\n        </baseline> </baseline-control>\n\n   The hope would be that this would create a version selector at\n   http://example.org/ws/ws1/file1 with target\n   http://example.org/vers/vh1/v1, making the new workspace isomorphic\n   to the workspace when it was baselined.\n\nYes, this is what it is required to do by the postconditions of the\nBASELINE-CONTROL method.  Before draft 10.2, you had to do a\nSET-TARGET as well, so this was only specified in the SET-TARGET\npostconditions.\n\n   However, this would only be possible if the baseline remembered\n   more information than just the DAV:version-set; it would also need\n   to remember that the collection had a \"file1\" internal member, and\n   the associated target version is http://example.org/vers/vh1/v1.\n\nYes, but an implementation is free to capture this information in any\nway it sees fit ... in collection versions, as a \"name-map\" table, or\nwhatever.  It's only requirement is that when time comes to restore\nthe baseline, it knows what the relative names are.\n\n   While the above scenario shows that there's a hole in the story for\n   the root collection of a baseline, the same problem exists for\n   unversioned collections anywhere below the root.\n\nIt's a \"hole\" in a good way, i.e. it allows a client to get what it\nwants done, while giving an implementation flexibility in how to\nimplement it.\n\n   The main requirement is that a useful baseline is one that can be\n   restored.  The issue to decide is what constitutes being\n   \"restored\".\n\nI believe this is fully defined in the post-conditions of\nBASELINE-CONTROL and SET-TARGET (the two ways a baseline can be\n\"restored\").\n\n   Two general approaches:\n\n   (A) Only allow baselining of versioned collections. Effectively,\n   \"baseline\" becomes an optional add-on to \"versioned-collection\",\n   and baselines cannot be offered by a server that is not prepared to\n   offer versioned collections.  This supports a fairly hi-fi notion\n   of \"restore\". It is not perfectly fidelity, since non-versioned\n   members are not captured; but this is compatible with the general\n   philosophy for versioning collections.\n\nThat is certainly one reasonable implementation, but there's no reason\nto \"only allow\" this implementation.\n\n   (B) Allow baselining of arbitrary collections, but capture relevant\n   namespace information along with the version selector.  For\n   example, the DAV:version-set might instead contain (path, version)\n   pairs: <version-set> <item> <href>file1</href>\n   <href>http://example.org/vers/vh1/v1</href> </item> This would\n   supports a weaker notion of \"restore\" for non-versioned collections\n   with versioned members; it would allow these non-versioned\n   collections to be re-created when the baseline is restored,\n   although they would not be restored with any of their dead\n   properties.\n\nThis is certainly another reasonable implementation, but again, not\nsomething we should require.\n\n   Approach (B) feels more general, and allows baselines to be offered\n   by a server that does not offer versioned collections (e.g.,\n   something like CVS). Moreover, the additional information captured\n   in the baseline should not represent a significant burden for\n   servers planning to offer both baseline and versioned collections.\n\nThis information could be expensive to compute for certain\nimplementations.  I believe this places an unreasonable burden on\nbaseline implementors.  They should just be required to implement the\n\"restore\" and \"merge\" operations.\n\n   Other baseline-related problems with draft 10.1:\n\n   section 15.10 CHECKOUT [p. 45-6]\n\n   - Needs to specify the semantics of checking-out a baseline\n   selector. In particular, what is the initial value of the\n   DAV:version-set of the checked-out baseline selector. Presumably it\n   contains the targets of all check-in version selectors at or below\n   the collection to which the baseline selector is attached.\n\nActually, I think we should just leave this unspecified.  Some\nimplementations will want to defer computing the DAV:version-set until\nthe CHECKIN operation, while others will use the DAV:version-set to\ndynamically track the current targets.  Requiring one way or the other\nwould be a problem for one implementation or the other.  A client that\nwants this information can either look at the DAV:checked-out\nbaseline, or do a PROPFIND for DAV:target, so there is no need for\nthis information to be retrieved from the checked out version\nselector.\n\n   It also needs to be specified whether the DAV:version-set property\n   of a checked-out baseline selector is updated live as the baselined\n   collection is modified; i.e., can I query the DAV:version-set\n   property of a checked-out baseline selector at any time to discover\n   a perfectly accurate picture of the baseline collection?\n\nSee above.\n\n   - Needs to specify the semantics of checking-out a baseline\n   version. It's not clear that that this is a particularly useful\n   thing to do. Since the baseline version is divorced from the\n   baseline selector, there wouldn't been to be any way to affect its\n   DAV:version-set between checkout and check-in.\n\nYes, checking-out a baseline version makes no sense, for the reason\nyou give.  It would be worth making this specific.  In particular, I\npropose we add a DAV:collection property for a baseline selector, to\nmake it clear that a baseline selector tracks the targets of a\nparticular collection.\n\n   section 15.11 CHECKIN [p. 45-6]\n\n   - Needs to specify the semantics of checking-in a checked-out\n   baseline selector.\n\nGood grief!  That got lost when we replaced \"MKBASELINE\" with CHECKIN\nof a baseline selector.  Thanks for catching that!\n\n   In particular, what is the value of the DAV:version-set of the\n   newly created baseline version,\n\nthe DAV:target values of all version selectors that are members of the\nDAV:collection of the checked out version selector\n\n   and how does it relate to the value of that property on the\n   baseline selector,\n\nunspecified\n\n   and the configuration of the baselined collection, at check-in\n   time.\n\nI'm not sure what you mean by \"configuration of the baselined\ncollection\" but the answer probably is \"it is the DAV:target values of\nall version selectors that are members of the baselined collection\".\n\n   What happens to version selectors below the baselined collection\n   that are currently checked-out?  They should eithe be ignored, or\n   the operation should fail in their presence.\n\nIt fails.\n\n   What happens to non-versioned resources below the baselined\n   collection? They should be ignored when capturing the baseline.\n\nYes, ignored.\n\n   - Needs to specify the semantics of checking-in a baseline working\n   resource.\n\nWe will make clear in CHECKOUT that you cannot create a baseline\nworking resource (i.e. you can only have checked out baseline\nselectors that are associated with a baselined collection).\n\nOutstanding review, Tim!  Thanks!\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-12068902"}, {"subject": "Re: further baseline-related comments on deltav-10.", "content": "I agree with all of Geoff's points, except for the current position on the\nbaselines and their namespace info.\n\nOne the one hand, there is agreement that a baseline needs to capture\nnamespace info.\n\n> This needs to be changed to say:\n> \"the state of a baseline is limited to be a set\n> of versions and their relative names in the collection\".\n\nOn the other hand, revealing this namespace information is claimed to be an\nunreasonable burden.\n\n>> Approach (B) feels more general, and allows baselines\n>> to be offered by a server that does not offer versioned\n>> collections (e.g., something like CVS). Moreover, the\n>> additional information captured in the baseline should\n>> not represent a significant burden for servers planning\n>> to offer both baseline and versioned collections.\n\n> This information could be expensive to compute for certain\n> implementations.  I believe this places an unreasonable\n> burden on baseline implementors.  They should just be\n> required to implement the \"restore\" and \"merge\" operations.\n\nI find it hard to imagine an implementation that supports baselines that\nwould not be able to cough up namespace information as readily as it could\nthe version set. But perhaps someone has a counterexample.\n\nI agree that the minimal requirements are \"restore\" and \"merge\".  (A\nhard-nosed person would observe that the DAV:version-set property is not\nrequired to meet either of these\nrequirements.)\n\nBut it feels like the DAV:version-set property is currently a half-measure;\nthe information is of little use without the corresponding namespace info,\nwhich we know every implementation has in some form.\n\nThe advantage of revealing the namespace info in addition to the version\nselection is that it makes it possible for a client to query a baseline and\nreconstruct the resource\ntree---client-side---without having to create any new objects on the\nserver. Currently, the only way to reconstruct the resource tree for\nbrowsing purposes requires read-write access. I believe there is benefit in\nenabling clients who do not have the permission to create new workspaces to\nbrowse the contents of a existing baselines. The can only do this if the\nnamespace info is divulged in addition to the version set.\n\n\n\n", "id": "lists-005-12085242"}, {"subject": "Re: further baseline-related comments on deltav-10.", "content": "   From: Tim_Ellison@uk.ibm.com\n\n   I find it hard to imagine an implementation that supports baselines that\n   would not be able to cough up namespace information as readily as it could\n   the version set. But perhaps someone has a counterexample.\n\nSure, I've got some (:-).\n\nSuppose your implementation uses versioned collections, and the only\nway that you can reconstruct the namespace information is by\ninstantiating all the collection versions in a workspace, and seeing\nwhat namespace results.  This is not a cheap operation, and\nraises various ugly implementation questions about how long you should\nkeep that workspace around (is the next request going to require the\nsame info?).\n\nOr suppose your implementation uses a \"delta\" format to just store\nwhich versions have been added/deleted from a particular predecessor\nbaseline.  You can rapidly find out the names of the added versions,\nbut it is costly to find out the names of all the versions.\n\n   I agree that the minimal requirements are \"restore\" and \"merge\".\n   (A hard-nosed person would observe that the DAV:version-set\n   property is not required to meet either of these requirements.)\n   But it feels like the DAV:version-set property is currently a\n   half-measure; the information is of little use without the\n   corresponding namespace info, which we know every implementation\n   has in some form.\n\nI'd be happy to get rid of DAV:version-set.  In fact, in an earlier\nthread, the cost of computing and passing DAV:version-set was raised,\nwhen you have, for example, a few hundred thousand resources in the\ncollection being baselined.  We never did address that concern ...\nperhaps now is the time to do so, i.e. shall we just axe\nDAV:version-set for a baseline?\n\n   The advantage of revealing the namespace info in addition to the\n   version selection is that it makes it possible for a client to\n   query a baseline and reconstruct the resource\n   tree---client-side---without having to create any new objects on\n   the server.\n\nThis approach would not scale.  If the baseline contains hundreds of\nthousands of resources, the client and server would be completely\nbogged down trying to generate and process the XML.\n\n   Currently, the only way to reconstruct the resource tree for\n   browsing purposes requires read-write access. I believe there is\n   benefit in enabling clients who do not have the permission to\n   create new workspaces to browse the contents of a existing\n   baselines. The can only do this if the namespace info is divulged\n   in addition to the version set.\n\nIt would be far better for interoperability for a server to provide\n\"read-only\" workspaces for such a client.  This is not only simpler\nfor a client (it just accesses the namespace, instead of trying to\nreconstruct it), but also gives the server the key information it\nneeds as to how long to keep around this \"queryable\" form of a\nbaseline.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-12095238"}, {"subject": "Versioning TeleConf Agenda, 10/20/00 (Friday) 11am-noon ES", "content": "phone: 888 819 8909  pass-code#97985\n\nAgenda:\n\nI actually don't have any agenda items for today, but I'll call in\njust to see if anybody has some issues they haven't had a chance to\nraise on the mailing list.\n\nChris has asked that we move the time to 12-1pm EST (still on Friday).\nThat's mostly a question for Tim, since that would make it 5-6pm for\nhim.  At any rate, following our recently minted standard procedure\nhere, anyone can ask for a time change (which Chris has) and anyone\ncan veto the time change (which nobody has as of yet), so if I get no\nvetos by Wednesday of next week, I'll make the time change that Chris\nhas requested.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-12105407"}, {"subject": "splitting up the DAV:repository-repor", "content": "We were planning on re-using the REPORT method and the\nDAV:repository-report in ACL protocol, but we've gotten\nfeedback that coupling the two protocols this tightly\nis undesireable, and that the generic DAV:repository-report\nis a confusing/misleading.\n\nTo address this concern, I propose that we split the\nDAV:repository-report into a separate report for each\nspecial type, i.e. DAV:workspace-location-report\nand DAV:activity-location-report for versioning\nand DAV:principal-location-report for ACL.\n\nThe definition of the REPORT method would then appear\nin both the ACL protocol and the Versioning protocol,\nthus removing any dependencies between them.\n\nAny objections?\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-12112655"}, {"subject": "RE: splitting up the DAV:repository-repor", "content": "I just noticed that once you split up the DAV:repository-report,\nit no longer satisfies the criteria for a report (i.e. requires\nadditional parameters for the request), so I guess that means we\njust have a few live properties, i.e. DAV:workspace-collection-set\nand DAV:activity-collection-set for versioning, and\nDAV:principal-collection-set for ACL.  This should make Russ happy,\nsince now there is *no* linkage (copied or otherwise) between the\nACL and versioning protocols.  (Actually, that makes me happy too :-).\n\nCheers,\nGeoff\n\n-----Original Message-----\nFrom: Geoffrey M. Clemm [mailto:geoffrey.clemm@rational.com]\nSent: Friday, October 20, 2000 11:12 AM\nTo: ietf-dav-versioning@w3.org; acl@webdav.org\nSubject: splitting up the DAV:repository-report\n\n\n\nWe were planning on re-using the REPORT method and the\nDAV:repository-report in ACL protocol, but we've gotten\nfeedback that coupling the two protocols this tightly\nis undesireable, and that the generic DAV:repository-report\nis a confusing/misleading.\n\nTo address this concern, I propose that we split the\nDAV:repository-report into a separate report for each\nspecial type, i.e. DAV:workspace-location-report\nand DAV:activity-location-report for versioning\nand DAV:principal-location-report for ACL.\n\nThe definition of the REPORT method would then appear\nin both the ACL protocol and the Versioning protocol,\nthus removing any dependencies between them.\n\nAny objections?\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-12120524"}, {"subject": "minor comments on deltav 10.", "content": "13.7.1 DAV:baselined-collection\n\n- Shouldn't this property be declared as \"protected\"?\n\n16.2 MKWORKSPACE\n- Remove obsolete reference to repository report.\n16.3 MKACTIVITY\n- Remove obsolete reference to repository report.\n\n\n\n", "id": "lists-005-12129802"}, {"subject": "RE: minor comments on deltav 10.", "content": "Yes, yes, and yes.\n\nThanks, Boris!\n\nCheers,\nGeoff\n\n-----Original Message-----\nFrom: Boris Bokowski/OTT/OTI [mailto:Boris_Bokowski@oti.com]\nSent: Thursday, October 26, 2000 11:35 AM\nTo: ietf-dav-versioning@w3.org\nSubject: minor comments on deltav 10.3\n\n\n13.7.1 DAV:baselined-collection\n\n- Shouldn't this property be declared as \"protected\"?\n\n16.2 MKWORKSPACE\n- Remove obsolete reference to repository report.\n16.3 MKACTIVITY\n- Remove obsolete reference to repository report.\n\n\n\n", "id": "lists-005-12137009"}, {"subject": "Versioning TeleConf Agenda, 10/27/00 (Friday) 12-1pm ES", "content": "phone: 888 819 8909  pass-code#97985\n\nFollowing standard procedure, since Chris requested\na time change to 12-1pm EST, and there were no objections,\nthe calls are now: 12-1pm EST (still on Friday)\n\nThere were no substantive issues raised this week,\nso I propose that we skip today's call.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-12144726"}, {"subject": "RE: comments on draft-ietf-deltav-versioning-10.", "content": "   section 16.2 MKWORKSPACE p.50-1\n\n   The specification should not be silent on the semantics of parent\n   workspaces containing\n- checked-out resources\n- non-versioned members\n- versioned collections members where eclipsing is involved\n- member collections under baseline control (both checked-out and\n   checked-in baseline selectors)\n\nYou are correct that all this has to be specified (and isn't).  Since\nit looks likely that anyone that is implementing workspaces will also\nbe implementing baselines, I think the best (simplest) approach is to\njust to use existing baseline functionality to initialize a workspace,\nand get rid of parent workspaces.\n\nIn particular, if a workspace is under baseline control, just use\nSET-TARGET to set that workspace to a baseline from some existing\nworkspace.  Since a baseline does not contain checked-out resources,\nnon-versioned members, or eclipsed members of versioned collections,\nnone of these questions arise.\n\nAny objections?\n\n[CK] I assume we still keep baseline and workspaces separate in terms\n     of OPTIONS discoverability, yes?\n\n\n\n", "id": "lists-005-12151939"}, {"subject": "Re: comments on draft-ietf-deltav-versioning-10.", "content": "   From: Chris Kaler <ckaler@microsoft.com>\n\n   [CK] I assume we still keep baseline and workspaces separate in terms\nof OPTIONS discoverability, yes?\n\nDefinitely yes.  In addition to fine-grained discovery via\nDAV:supported-methods, DAV:supported-live-properties, and\nDAV:supported-reports, we have the following \"feature-sets\" defined\nfor the DAV header: workspace, baseline, activity, merging, and\nversioned-collection.\n\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-12161140"}, {"subject": "Re: WebDAV at San Diego IET", "content": "FYI\n\nDelta-V is currently scheduled for 13:00 - 15:00 on Thursday 14th December.\n\nTim\np.s.  The hotels are booking up fast.\n\n---------------------- Forwarded by Tim Ellison/UK/IBM on 2000-10-31 09:36\nAM ---------------------------\n\n\"Jim Whitehead\" <ejw@cse.ucsc.edu> on 2000-10-31 12:20:59 AM\n\nPlease respond to \"Jim Whitehead\" <ejw@cse.ucsc.edu>\n\nTo:   \"WebDAV WG\" <w3c-dist-auth@w3.org>\ncc:\nSubject:  WebDAV at San Diego IETF\n\n\n\n\nThe WebDAV working group is scheduled to hold a meeting at the San Diego\nIETF meeting, IETF-49.     The San Diego IETF is scheduled for December\n10-15, 2000.  At present, WebDAV WG will be meeting from 3:30-5:30PM, on\nWednesday, December 13.  Note that this time is subject to change.\n\nAt present, my plan is to dedicate the meeting to discussion of the Access\nControl Protocol, in hopes that any existing issues can be resolved, and\nthe\nspec. can be sent to working group last call soon after this meeting.\n\nDetails on how to register for IETF-49, along with hotel information, can\nbe\nfound at:\n\nhttp://www.ietf.org/meetings/IETF-49.html\n\n- Jim\n\n\n\n", "id": "lists-005-12168676"}, {"subject": "typo", "content": "Geoff,\n\nThere are references to the old repository report in 16.2 and 16.3 of\nversioning-10.3;  these should be changes to refer to\nDAV:workspace-collection-set and DAV:activity-collection-set respectively.\n\nTim\n\n\n\n", "id": "lists-005-12177086"}, {"subject": "RE: typo", "content": "I have posted a 10.4 version with this fixed on the web site, but for some\nreason,\nI can't get in to update the index.html page.  But you can find 10.4 in\nthe usual place by specifying the URL by hand.\n\nCheers,\nGeoff\n\n-----Original Message-----\nFrom: Tim_Ellison@uk.ibm.com [mailto:Tim_Ellison@uk.ibm.com]\nSent: Tuesday, October 31, 2000 5:44 AM\nTo: ietf-dav-versioning@w3.org\nSubject: typos\n\n\n\n\nGeoff,\n\nThere are references to the old repository report in 16.2 and 16.3 of\nversioning-10.3;  these should be changes to refer to\nDAV:workspace-collection-set and DAV:activity-collection-set respectively.\n\nTim\n\n\n\n", "id": "lists-005-12183908"}, {"subject": "DAV4J Source Released on developerWork", "content": "IBM is pleased to announce the DAV4J source is now available on \ndeveloperWorks under the IBM Public License. Full details can be found at \nthe new DAV4J home site at \nhttp://oss.software.ibm.com/developerworks/opensource/dav4j. DAV4J will \neventually be moved off the alphaWorks site, so update you links to the \nnew developerWorks site.\n\nAlthough DAV4J is hosted under the open source zone on developerWorks, IBM \nis not creating an Open Source project for DAV4J at this time. We are only \nmaking the source available to help support the WebDAV community through:\n\n    - an offering to promote the development of the WebDAV grounded in the \n\n      reality of an implementation\n    - a platform for easily exploring the WebDAV protocol and \nimplementation \n      options as it evolves\n    - feedback to the WebDAV working groups based on real implementation\n      experience\n    - a client API that facilitates WebDAV client application development\n    - a server architecture supporting multiple repository managers\n    - an implementation based on the Java and servlet standards supporting \n\n      WebDAV methods in many current Web servers\n\nIBM is also participating in the Apache/mod_dav Open Source effort, and \nincludes mod_dav in the IBM HTTP server (which is Apache). See \nwww.webdav.org for details. I (Jim Amsden) will be monitoring the DAV4J \nmailing list, and will consider updates, bug fixes, new features, etc., \ntime permitting.\nThe DAV4J client API provides Java client applications with a simple, rich \ninterface for accessing resources managed by a WebDAV server. Using this \nAPI, client applications are relieved from managing the details of the low \nlevel HTTP communication protocol, constructing and parsing XML request \nand response entity bodies, and the complexities of the WebDAV semantics. \nDAV4J also provides a servlet that with WebSphere AppServer extends the \nApache Web server with the WebDAV Class 2 protocol. \nDAV4J provides: \n\n1. Protocol independent (not just WebDAV) communication between client and \nserver applications including support for http:, rmi:, and local access. \nSupport for iiop: may be provided in a future release. Local access is \nused if the host name in the URL is the local host and no port is \nspecified.\\\n \n2. A high-level, object-oriented interface capturing the WebDAV Class 2 \nsemantics that can interface with any WebDAV Class 2 compliant server. \n\n3. A Java servlet that along with WebSphere AppServer enables DAV Class 2 \nmethods in the Apache Web server. The Apache Web server can be configured \nso that some URLs can be handled either directly by the Apache server \nwithout WebDAV methods while other URLs are handled by the DAV4J servlet \nwith WebDAV methods. This allows a single Apache server to be both a \nproduction and authoring server on different partitions of the URL \nnamespace. \n\n4. The ability to access multiple back end repository managers using a \nsingle, common, standard, simple protocol: WebDAV. The DAV4J architecture \nencapsulates low-level repository services required to implement the \nWebDAV semantics into a number of simple Java interfaces. All that is \nrequired to provide WebDAV access to a repository manager is to implement \nthese interfaces on the repository manager. DAV4J includes a repository \nmanager based on the local file system as a reference implementation and \nexample of how to integrate a repository manager. \n\n5. Platform independent, 100% pure Java portability. \nDAV4J consists of the DAV4J client API, the DAV4J servlet, and the file \nsystem repository manager. By changing a few simple properties, Web \nservers supporting servlets can be configured to support WebDAV methods. \nThe distribution includes configuration information for the Apache Web \nserver and IBM WebSphere AppServer. WebDAV is described in the IETF draft \nspecification RFC2518\n\n\n\n", "id": "lists-005-12191555"}, {"subject": "Value of DAV:suported-method-se", "content": "Currently, draft-ietf-deltav-versioning-10 specifies that the value of\nDAV:supported-method-set is a series of empty XML elements, where each\nelement is in the DAV: namespace, and the name of the element exactly\ncorresponds to an HTTP/DAV/DeltaV method name.  I think this is less than\nideal, since it unnecessarily couples the DAV: namespace, and the space of\nHTTP/DAV/DeltaV method names.  Prior to this property, these namespaces were\ncompletely orthogonal. With the introduction of this property, with values\nin the DAV: namespace, all new HTTP/DAV/DeltaV methods will need to be\nchosen so they do not overlap an existing DAV: URI.  While there are\ncurrently no collisions, I think it is valuable to keep these namespaces\nseparate, so future protocol extensions do not need to worry about this\nnamespace overlap.\n\nThe remedy is easy:\n\na) Place these names in a separate, dedicated namespace, such as\nDAV://methods/.\n\nb) Use some other marshalling.  A comma-separated list of method names might\nallow reuse of server code that generates the value of the Allow HTTP\nheader.\n\nMy preference is (b), but either would address the coupling issue.\n\n- Jim\n\n\n\n", "id": "lists-005-12203712"}, {"subject": "Rationale for DAV:if-unsupported", "content": "So, I understand the surface rationale for the DAV:if-unsupported attribute.\nThere is a desire to ensure that, for some XML elements, DeltaV\nimplementations MUST fail if they do not understand the element (when\nDAV:if-unsupported=\"error\").\n\nWhat I don't understand are the specific use cases driving this feature.\nThe example in Section 3.1.1 is uncompelling -- it seems quite reasonable to\nmandate that every DeltaV server, whether Basic or Advanced, understand the\ncheckout XML element, or be judged non-compliant.  Thus, setting\nDAV:if-unsupported=\"error\" on the checkout XML element is redundant.\n\nAssuming there is a compelling use case, I have a few nits about this\nfeature:\n\n* At present, it is specified as a double-negative (if this element is not\nsupported, then treat it as a non-success).  I'd rather see this\nreformulated in terms of positive logic, since I believe that's easier for\npeople to understand, and implement right.  So, I'd rename the attribute\n\"must-understand\", with values \"true\" and \"false\", with true meaning the\ninterpretation fails if the implementation doesn't understand the element,\nand false meaning the element can safely be ignored using the DAV ignore\nrule.\n\n* The text describing this attribute assumes that it would only be used in\nclient to server message traffic.  However, XML traffic flows in both\ndirections in DeltaV, so I think it makes sense to discuss what the client\nshould do if it uncounters an \"if-unsupported='error'\" attribute.  Treating\nthe result as a server-generated syntax error might be appropriate, or it\nmight generally be OK for the client to use the DAV ignore rule.\n\n* The inheritance rule for DAV:if-unsupported could uncessarily limit the\nkind of XML processing that can be performed.  Some XML parsing strategies\nsimply use sophisticated string searches, and don't perform tree traversals.\nSuch an implementation would be slowed by the inheritance requirement.\n\n- Jim\n\n\n\n", "id": "lists-005-12211771"}, {"subject": "read/write of new WebDAV propertie", "content": "The new WebDAV properties specified in Section 4 should all specify whether\nthey are read/write, or read-only.  For example, DAV:comment is read/write,\nand DAV:supported-method-set, DAV:supported-live-property-set, and\nDAV:supported-report-set are all obviously read only.\nDAV:creator-displayname is less obvious.  I think it should be read/write,\nespecially if it is being advertised as being generally applicable across\nall servers, but there certainly will be cases where it wouldn't be\nwriteable.\n\n- Jim\n\n\n\n", "id": "lists-005-12220660"}, {"subject": "RE: read/write of new WebDAV propertie", "content": "We've been using the term \"protected\" for properties that cannot be\nupdated with a PROPPATCH.  Anything not marked as \"protected\" is\nupdateable by PROPPATCH.  I'll add \"protected\" to the DAV:supported-xxx\nproperties.\n\nCheers,\nGeoff\n\n-----Original Message-----\nFrom: Jim Whitehead [mailto:ejw@cse.ucsc.edu]\nSent: Wednesday, November 01, 2000 7:08 PM\nTo: ietf-dav-versioning@w3.org\nSubject: read/write of new WebDAV properties\n\n\nThe new WebDAV properties specified in Section 4 should all specify whether\nthey are read/write, or read-only.  For example, DAV:comment is read/write,\nand DAV:supported-method-set, DAV:supported-live-property-set, and\nDAV:supported-report-set are all obviously read only.\nDAV:creator-displayname is less obvious.  I think it should be read/write,\nespecially if it is being advertised as being generally applicable across\nall servers, but there certainly will be cases where it wouldn't be\nwriteable.\n\n- Jim\n\n\n\n", "id": "lists-005-12228104"}, {"subject": "RE: Value of DAV:suported-method-se", "content": "I'd like to be able to extend this at some point to include\nthings like \"understood arguments to the method\", and for this,\nchoice (a) is better, so I'd rather go with that.\n\nCheers,\nGeoff \n\n-----Original Message-----\nFrom: Jim Whitehead [mailto:ejw@cse.ucsc.edu]\nSent: Wednesday, November 01, 2000 6:06 PM\nTo: ietf-dav-versioning@w3.org\nSubject: Value of DAV:suported-method-set\n\n\nCurrently, draft-ietf-deltav-versioning-10 specifies that the value of\nDAV:supported-method-set is a series of empty XML elements, where each\nelement is in the DAV: namespace, and the name of the element exactly\ncorresponds to an HTTP/DAV/DeltaV method name.  I think this is less than\nideal, since it unnecessarily couples the DAV: namespace, and the space of\nHTTP/DAV/DeltaV method names.  Prior to this property, these namespaces were\ncompletely orthogonal. With the introduction of this property, with values\nin the DAV: namespace, all new HTTP/DAV/DeltaV methods will need to be\nchosen so they do not overlap an existing DAV: URI.  While there are\ncurrently no collisions, I think it is valuable to keep these namespaces\nseparate, so future protocol extensions do not need to worry about this\nnamespace overlap.\n\nThe remedy is easy:\n\na) Place these names in a separate, dedicated namespace, such as\nDAV://methods/.\n\nb) Use some other marshalling.  A comma-separated list of method names might\nallow reuse of server code that generates the value of the Allow HTTP\nheader.\n\nMy preference is (b), but either would address the coupling issue.\n\n- Jim\n\n\n\n", "id": "lists-005-12236418"}, {"subject": "Re: Rationale for DAV:if-unsupported", "content": "   From: \"Jim Whitehead\" <ejw@cse.ucsc.edu>\n\n   So, I understand the surface rationale for the DAV:if-unsupported\nattribute.\n   There is a desire to ensure that, for some XML elements, DeltaV\n   implementations MUST fail if they do not understand the element (when\n   DAV:if-unsupported=\"error\").\n   What I don't understand are the specific use cases driving this feature.\n\nJust for the record, you were the one that requested this feature\noriginally, but I'll take over its defense (:-).\n\n   The example in Section 3.1.1 is uncompelling -- it seems quite reasonable\nto\n   mandate that every DeltaV server, whether Basic or Advanced, understand\nthe\n   checkout XML element, or be judged non-compliant.  Thus, setting\n   DAV:if-unsupported=\"error\" on the checkout XML element is redundant.\n\nThis is here for extensibility.  We will undoubtebly be adding new\nparameters to the various commands over time, and a server needs to\nknow if it is something it can ignore or not.\n\nFor example, suppose we wanted to add a DAV:keep-checked-out parameter\nto the VERSION-CONTROL request?  A client could survive quite well if\nthis parameter were ignored (the user would just have to explicitly\ncheck it out later), but some clients might be generating an automatic\nsequence of requests, and wouldn't want to be surprised.\n\n   Assuming there is a compelling use case, I have a few nits about this\n   feature:\n\n   * At present, it is specified as a double-negative (if this element is\nnot\n   supported, then treat it as a non-success).  I'd rather see this\n   reformulated in terms of positive logic, since I believe that's easier\nfor\n   people to understand, and implement right.  So, I'd rename the attribute\n   \"must-understand\", with values \"true\" and \"false\", with true meaning the\n   interpretation fails if the implementation doesn't understand the\nelement,\n   and false meaning the element can safely be ignored using the DAV ignore\n   rule.\n\nDAV:must-understand=\"T\" is certainly fine, but DAV:must-understand=\"F\"\nlooks rather weird (at first glance, it might look like you are requiring\nthat the server *not* understand the element :-).\n\nDAV:if-unsupported=\"ignore\" does not have this problem, and claiming\nthat if-unsupported=\"fail\" is a double negative because you can\nreplace \"fail\" with \"not succeed\" is rather bogus, since with that\ntechnique, you can make any statement into a double negative by\nreplacing both terms with the negations of their inverses.\n\nBut I don't care much, so I'll go ahead and make the change if nobody\nelse cares.  Note: I'll make it \"must-support\", since a server can\nunderstand a feature but not support it, and it is the support that\nthe client cares about.\n\n   * The text describing this attribute assumes that it would only be used\nin\n   client to server message traffic.  However, XML traffic flows in both\n   directions in DeltaV, so I think it makes sense to discuss what the\nclient\n   should do if it uncounters an \"if-unsupported='error'\" attribute.\nTreating\n   the result as a server-generated syntax error might be appropriate, or it\n   might generally be OK for the client to use the DAV ignore rule.\n\nI don't follow you.  What would a client ever do differently if\nit encounters a DAV:must-support coming from the server?\n\n   * The inheritance rule for DAV:if-unsupported could uncessarily limit the\n   kind of XML processing that can be performed.  Some XML parsing\nstrategies\n   simply use sophisticated string searches, and don't perform tree\ntraversals.\n   Such an implementation would be slowed by the inheritance requirement.\n\nOK, I'm happy to get rid of the inheritance requirement.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-12245256"}, {"subject": "RE: Versioning TeleConf Agenda, 11/3/00 (Friday) 12-1pm ES", "content": "phone: 888 819 8909  pass-code#97985\n\nThere were no substantive issues raised this week,\nso I propose that we skip today's call.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-12256670"}, {"subject": "RE: Rationale for DAV:if-unsupported", "content": "> Just for the record, you were the one that requested this feature\n> originally, but I'll take over its defense (:-).\n\nD'oh!\n\n> This is here for extensibility.  We will undoubtebly be adding new\n> parameters to the various commands over time, and a server needs to\n> know if it is something it can ignore or not.\n\nOK, seems reasonable.\n\n> But I don't care much, so I'll go ahead and make the change if nobody\n> else cares.  Note: I'll make it \"must-support\", since a server can\n> understand a feature but not support it, and it is the support that\n> the client cares about.\n\nI like must-support.\n\n> I don't follow you.  What would a client ever do differently if\n> it encounters a DAV:must-support coming from the server?\n\nHypothetically, it might make sense to include this in a property value, so\nthe client knows its should not believe it understands the value of the\nproperty unless it also understands the element.\n\nMore than anything though, the lack of symmetry is what bothers me.  If it's\na general XML feature, why limit it to a single direction of message flow?\n\n> OK, I'm happy to get rid of the inheritance requirement.\n\nOK.\n\n- Jim\n\n\n\n", "id": "lists-005-12263821"}, {"subject": "DeltaV Working Group and Design Team Meeting", "content": "Just a reminder that the next DeltaV working group\nmeeting will be held at the 49th IETF meeting on\nDecember 14th from 1:00PM to 3:00PM. I hope to see\nmany of you there. This is an important meeting as\nwe want to take the versioning specification to\nIETF last call sometime in January. So bring your\nissues and lets get this done!\n\nAlthough all official work happens in the mailing\nlist and at the Delta-V working group meetings, it is\noften beneficial to have additional \"high bandwidth\"\ndiscussions to facilitate design discussions between\nworking group meetings.  We try to have these design\nteam meetings between and during the regularly scheduled\nIETF meetings to help make progress on our specification.\nThe next of these design team meetings will be held at\nduring IETF 49 on Wedensday. Dec 13 and Thursday, \nDec 14. I don't have a meeting location at this time. \nWorst case, I'll post a location on the message board.\n\nPlease note that meeting minutes will be issued to the\nmailing list and all decisions made at the meeting are\ntentative until reviewed on mailing list. Any member of\nthe DeltaV working group is welcome to attend, but be\nprepared to get into the details!\n\n\n\n", "id": "lists-005-12271846"}, {"subject": "Working collection", "content": "It seems a long time since this was last discussed -- well I've forgotten\nthe explanation so here goes:\n\nWe agreed that URLs to versions exist outside the normal DAV namespace.\nThis is concept is variously reflected in the spec as virtually hosted URLs\n(http://repo.webdav.org/his/23/ver/42) and 'stolen' parts of the root\ncollection namespace (e.g. http://www.webdav.org/repo/wr-157.html).\n\nClients should not, therefore, expect to be able to construct new URLs\nbased on these server maintained URLs (i.e. removing / adding segments to\nreach other resources).\n\nQ1:\nWe know that a versioned collection is a mapping from names to version\nhistories.  So when you check out a versioned collection what can you do\nwith the resulting working collection?  Are you constrained to creating\nmembers that bind to histories only?  Are you prevented from creating new\nbindings at all?\n\nQ2:\nCan you delete bindings from a working collection -- presumably yes since\nif you can't change a working collection's members you can only use them to\nchange properties? (There is clearly a good case for checked out collection\nversion selectors).\n\nWhen the server sees a URL to a working collection, say of the form\nhttp://repo.webdav.org/vr/9/wr/1/foo it can 'know' about the form of these\nURLs to determine that everything up to 'foo' is the URL to the working\ncollection and 'foo' is the member of that collection, but there would be\n(typically) no relationship between that URL and the URL of the history\nresource that 'foo' is currently bound to; so it would not be possible to\nslash-through 'foo' to reach other resources.\n\nTim\n\n\n\n", "id": "lists-005-12280683"}, {"subject": "workspace", "content": "The spec should say that workspaces cannot 'overlap', i.e., a workspace\ncannot be a member of another workspace, and bindings cannot be made\noutside the workspace.  Having multiple workpace 'parents' would confuse\nmany things, including current activity, and make workspace semantics for\nsingle history selectors very time consuming to enforce.\n\nTim\n\n\n\n", "id": "lists-005-12290346"}, {"subject": "Re: workspace", "content": "Tim_Ellison@uk.ibm.com wrote:\n> \n> The spec should say that workspaces cannot 'overlap', i.e., a workspace\n> cannot be a member of another workspace, and ...\n\n  ... bindings cannot be made outside the workspace.  \n\n  Can you clarify what is meant by the above? Bindings to/from what for\ninstance?\n\n> Having multiple workpace 'parents' would confuse\n> many things, including current activity, and make workspace semantics for\n> single history selectors very time consuming to enforce.\n> \n> Tim\n\nCheers,\nRossW\n\n\n\n", "id": "lists-005-12298633"}, {"subject": "Re: workspace", "content": "Simply that you shouldn't be allowed to create an overlap by binding a\nmember of one workspace to a member of another workspace, or create a\nbinding from a member of a workspace to, say, a parent of the workspace\nsince the workspace would become a member of itself.\n\nHowever, since the delta-v spec cannot refer to the binding spec (\"other\nthan as work in progress\") it should be sufficient to say that workspaces\ncannot be nested, and leave other binding issues for that work group<g>\n\nTim\n\n\n\nRoss Wetmore <rwetmore@verticalsky.com> on 2000-11-10 02:24:58 PM\n\nPlease respond to Ross Wetmore <rwetmore@verticalsky.com>\n\nTo:   Tim Ellison/UK/IBM@IBMGB\ncc:   ietf-dav-versioning@w3.org\nSubject:  Re: workspaces\n\n\n\n\nTim_Ellison@uk.ibm.com wrote:\n>\n> The spec should say that workspaces cannot 'overlap', i.e., a workspace\n> cannot be a member of another workspace, and ...\n\n  ... bindings cannot be made outside the workspace.\n\n  Can you clarify what is meant by the above? Bindings to/from what for\ninstance?\n\n> Having multiple workpace 'parents' would confuse\n> many things, including current activity, and make workspace semantics for\n> single history selectors very time consuming to enforce.\n>\n> Tim\n\nCheers,\nRossW\n\n\n\n", "id": "lists-005-12306229"}, {"subject": "Re: workspace", "content": "Simply that you shouldn't be allowed to create an overlap by binding a\nmember of one workspace to a member of another workspace, or create a\nbinding from a member of a workspace to, say, a parent of the workspace\nsince the workspace would become a member of itself.\n\nHowever, since the delta-v spec cannot refer to the binding spec (\"other\nthan as work in progress\") it should be sufficient to say that workspaces\ncannot be nested, and leave other binding issues for that work group<g>\n\nTim\n\n\n\nRoss Wetmore <rwetmore@verticalsky.com> on 2000-11-10 02:24:58 PM\n\nPlease respond to Ross Wetmore <rwetmore@verticalsky.com>\n\nTo:   Tim Ellison/UK/IBM@IBMGB\ncc:   ietf-dav-versioning@w3.org\nSubject:  Re: workspaces\n\n\n\n\nTim_Ellison@uk.ibm.com wrote:\n>\n> The spec should say that workspaces cannot 'overlap', i.e., a workspace\n> cannot be a member of another workspace, and ...\n\n  ... bindings cannot be made outside the workspace.\n\n  Can you clarify what is meant by the above? Bindings to/from what for\ninstance?\n\n> Having multiple workpace 'parents' would confuse\n> many things, including current activity, and make workspace semantics for\n> single history selectors very time consuming to enforce.\n>\n> Tim\n\nCheers,\nRossW\n\n\n\n", "id": "lists-005-12315693"}, {"subject": "Re: workspace", "content": "It is still not clear to me precisely what you are excluding. I agree\nthere are some specific scenarios such as a workspace including itself\nthat probably should be excluded. I would like to see this pinned down\nclearly though and not a vague or general precept applied on the basis\nof a corner case without careful consideration.\n\nI see no difficulty with workspace members being in more than one \nworkspace and no reason to exclude this with a generic rule at the \nmoment. This is not quite the terminology you used which means perhaps \nsuch definitions need to be elaborated a little more clearly, or the \nunderlying rationale spelled out.\n\nI don't currently see any fundamental difficulty with nesting \nworkspaces, and would like the issues clarified before such flattening \nbecomes mandatory. This is a fairly significant restriction.\n\nI agree it is reasonable to leave the mechanics of sharing to a binding \nspec, as long as the delta-v spec treats such issues as orthogonal.\n\nCheers,\nRossW\n\nTim_Ellison@uk.ibm.com wrote:\n> \n> Simply that you shouldn't be allowed to create an overlap by binding a\n> member of one workspace to a member of another workspace, or create a\n> binding from a member of a workspace to, say, a parent of the workspace\n> since the workspace would become a member of itself.\n> \n> However, since the delta-v spec cannot refer to the binding spec (\"other\n> than as work in progress\") it should be sufficient to say that workspaces\n> cannot be nested, and leave other binding issues for that work group<g>\n> \n> Tim\n> \n> Ross Wetmore <rwetmore@verticalsky.com> on 2000-11-10 02:24:58 PM\n> \n> Please respond to Ross Wetmore <rwetmore@verticalsky.com>\n> \n> To:   Tim Ellison/UK/IBM@IBMGB\n> cc:   ietf-dav-versioning@w3.org\n> Subject:  Re: workspaces\n> \n> Tim_Ellison@uk.ibm.com wrote:\n> >\n> > The spec should say that workspaces cannot 'overlap', i.e., a workspace\n> > cannot be a member of another workspace, and ...\n> \n>   ... bindings cannot be made outside the workspace.\n> \n>   Can you clarify what is meant by the above? Bindings to/from what for\n> instance?\n> \n> > Having multiple workpace 'parents' would confuse\n> > many things, including current activity, and make workspace semantics for\n> > single history selectors very time consuming to enforce.\n> >\n> > Tim\n> \n> Cheers,\n> RossW\n\n\n\n", "id": "lists-005-12324978"}, {"subject": "Re: workspace", "content": "I believe that the spec would have to be updated to deal with multiple\nworkspaces for a given resource.\n\nFor example,\n\n- a version selector has a DAV:workspace property.  What would its value be\nfor a resource in a 'nested' workspace?  The resource would be a member of\nmultiple workspaces so this would have to be changed to a set.\n\n- a workspace is expected to be able to report its checkout set\n(DAV:workspace-checkout-set).  When performing a checkout a server would\nhave to nominally find all references to the resource and update all\nworkspaces with the additional checked out resource.\n\n- same for current activity set of a workspace.  The server would\npresumably be expected to make checkouts in the union of all current\nactivity sets of all workspaces that the resource is a member.  Servers\nthat restrict to single activities would have to be aware of enclosing\nworkspaces and disallow additional DAV:current-activity-set values for\nnested workspaces, and disallow binding to reachable workspaces that\nalready have a current activity set defined.\n\n- \"In order to ensure unambiguous merging and baselining semantics, a\nworkspace may contain at most one version selector for a given version\nhistory.\"  A bind to an existing resource in another workspace would\nrequire the server to determine if there are any version selectors in each\nworkspace that fail this precondition.\n\nI'd be interested to hear if anyone is planning on implementing nested\nworkspaces.\n\nTim\n\n\nRoss Wetmore <rwetmore@verticalsky.com> on 2000-11-10 05:32:17 PM\n\nPlease respond to Ross Wetmore <rwetmore@verticalsky.com>\n\nTo:   Tim Ellison/UK/IBM@IBMGB, ietf-dav-versioning@w3.org\ncc:\nSubject:  Re: workspaces\n\n\n\n\nIt is still not clear to me precisely what you are excluding. I agree\nthere are some specific scenarios such as a workspace including itself\nthat probably should be excluded. I would like to see this pinned down\nclearly though and not a vague or general precept applied on the basis\nof a corner case without careful consideration.\n\nI see no difficulty with workspace members being in more than one\nworkspace and no reason to exclude this with a generic rule at the\nmoment. This is not quite the terminology you used which means perhaps\nsuch definitions need to be elaborated a little more clearly, or the\nunderlying rationale spelled out.\n\nI don't currently see any fundamental difficulty with nesting\nworkspaces, and would like the issues clarified before such flattening\nbecomes mandatory. This is a fairly significant restriction.\n\nI agree it is reasonable to leave the mechanics of sharing to a binding\nspec, as long as the delta-v spec treats such issues as orthogonal.\n\nCheers,\nRossW\n\nTim_Ellison@uk.ibm.com wrote:\n>\n> Simply that you shouldn't be allowed to create an overlap by binding a\n> member of one workspace to a member of another workspace, or create a\n> binding from a member of a workspace to, say, a parent of the workspace\n> since the workspace would become a member of itself.\n>\n> However, since the delta-v spec cannot refer to the binding spec (\"other\n> than as work in progress\") it should be sufficient to say that workspaces\n> cannot be nested, and leave other binding issues for that work group<g>\n>\n> Tim\n>\n> Ross Wetmore <rwetmore@verticalsky.com> on 2000-11-10 02:24:58 PM\n>\n> Please respond to Ross Wetmore <rwetmore@verticalsky.com>\n>\n> To:   Tim Ellison/UK/IBM@IBMGB\n> cc:   ietf-dav-versioning@w3.org\n> Subject:  Re: workspaces\n>\n> Tim_Ellison@uk.ibm.com wrote:\n> >\n> > The spec should say that workspaces cannot 'overlap', i.e., a workspace\n> > cannot be a member of another workspace, and ...\n>\n>   ... bindings cannot be made outside the workspace.\n>\n>   Can you clarify what is meant by the above? Bindings to/from what for\n> instance?\n>\n> > Having multiple workpace 'parents' would confuse\n> > many things, including current activity, and make workspace semantics\nfor\n> > single history selectors very time consuming to enforce.\n> >\n> > Tim\n>\n> Cheers,\n> RossW\n\n\n\n", "id": "lists-005-12335291"}, {"subject": "Example - GET request with DAV:must-select-version response ??", "content": "Example 7.1.1 (title) should read:\n\n7.1.1 Example - CHECKOUT request with DAV:must-not-be-checked-out response\n\n\n\nOleg\n\n\n\n", "id": "lists-005-12348659"}, {"subject": "Version selector propertie", "content": "From the versioning spec (section 2.2):\n\n\"Although the content and dead properties of a checked-in version selector\nare required to be the same as those of its current target, its live\nproperties may differ.\"\n\nI would have thought that some live properties should(must?) not be\ndifferent.\n\nHopefully, we would agree that the DAV:getContentLength property must not\nbe different.\n\nOk, how about the DAV:resourcetype?  I think that that would most likely\nnot be different, but maybe it would (interpret the same content as\ndifferent types, editing url and execute url maybe?)  Comments?\n\nDAV:getlastmodified?\nWell you probably do want that to be different to the version that was the\ntarget of the SETTARGET.  I suspect that having the getlastmodified time go\n'backwards' when setting the target to an earlier version would screw up\ncaching proxies, and clients that rely on If-Unmodified-Since: et al\nheaders.\n\nI think we would agree that the DAV:getetag property should be different.\n\nA successful SETTARGET should result in new last modified and etag values\nfor a version selector.\n\nTim\n\n\n\n", "id": "lists-005-12355971"}, {"subject": "403&amp;409 status code", "content": "Section 7.1 of the spec describes how the server must answer a response\nbody for 403 & 409 responses with each method precondition that fails.\n\nIt seems to be an art to divide the preconditions between 403 and 409, but\nseems like something we should agree upon.  There is usually some\ncombination of requests that the client can do to make a failing request\nsubsequently succeed.\n\nMy rule of thumb was \"assume it is a 409 unless the client cannot fix the\nsituation without destroying resources\".  For example, a client could make\none-version-selector-per-history-per-workspace succeed by deleting the\nother version selector, but they can never make cannot-copy-history\nsucceed.\n\nThe sections where the preconditions appear in versioning-10.4 are in\nparentheses after the name below.\n\n403 Forbidden.\n     The server understood the request, but is refusing to fulfill it.\n     Authorization will not help and the request SHOULD NOT be repeated.\nbaseline-control-must-be-empty (16.4)\ncannot-copy-history (15.7)\ncannot-modify-protected-property (7.4)\ncannot-modify-unsupported-property (7.4)\ncannot-modify-version-content (7.3)\ncannot-modify-version-property (7.4)\ncannot-rename-resource (7.7, 15.8)\ncheckin-fork-forbidden (15.11)\ncheckout-of-checked-out-version-is-forbidden (15.10)\ncheckout-of-version-with-descendant-is-forbidden (15.10)\nlinear-activity (15.10, 15.11)\nmerge-destination-must-be-valid (16.5)\nmust-be-baseline (16.4)\nmust-be-collection (16.4)\nmust-be-checked-in-version-selector (9.5)\nmust-be-checked-out-version-selector (9.4)\nmust-be-version-or-version-selector (9.2, 16.1)\nmust-be-version-selector (15.10)\nmust-be-versionable (9.1)\nmust-have-no-members (16.4)\nmust-select-version (9.5, 15.2, 15.4, 15.7, 15.10, 15.12, 16.1, 16.5)\nno-checkout-of-baseline-version (15.10)\nno-unreserved-checkout-for-reserved-activity (15.10)\npredecessor-in-checked-out-version-history (15.11)\n\n\n409 Conflict\n     The request could not be completed due to a conflict with the current\n     state of the resource. This code is only allowed in situations where\n     it is expected that the user might be able to resolve the conflict\n     and resubmit the request.\ncannot-add-to-existing-history (9.1)\ncannot-merge-checked-out-resource (16.5)\ncannot-modify-destination-parent-version-selector (15.8)\ncannot-modify-version-selector-content (7.3)\ncannot-modify-parent-version-selector (15.5, 15.8, 15.9)\ncannot-modify-version-selector-property (7.4)\ncheckin-fork-discouraged (15.11)\ncheckin-requires-lock-token (9.3)\ncheckout-of-checked-out-version-is-discouraged (15.10)\ncheckout-of-version-with-descendant-is-discouraged (15.10)\ncheckout-required (16.5)\ncheckout-requires-lock-token (9.2)\ninitial-version-required (9.1)\nlabel-must-exist (16.1)\nmerge-must-be-complete (15.11)\nmerge-requires-lock-token (16.5)\nmust-be-new-label (16.1)\nmust-be-version (9.1)\nmust-be-checked-out (9.3)\nmust-not-be-checked-out (9.2, 16.1)\nno-checked-out-baselined-collection-members (15.11)\nno-eclipsed-baselined-collection-members (15.11)\none-baseline-selector-per-history-per-workspace (16.4)\none-version-selector-per-history-per-workspace (15.9)\none-checkout-per-activity-per-history (15.10)\nonly-overwrite-mutable-version (15.11)\nresource-must-be-null (16.2, 16.3)\nset-target-requires-lock-token (9.5)\nuncheckout-requires-lock-token (9.4)\n\n\nTim Ellison\nJava Technology Centre, MP146\nIBM UK Laboratory, Hursley Park, Winchester, UK.\ntel: +44 (0)1962 819872  internal: 249872  MOBx: 270452\n\n\n\n", "id": "lists-005-12364214"}, {"subject": "Re: Working collection", "content": "I propose that we disallow CHECKOUT of a collection version.\n\nTim Ellison\nJava Technology Centre, MP146\nIBM UK Laboratory, Hursley Park, Winchester, UK.\ntel: +44 (0)1962 819872  internal: 249872  MOBx: 270452\n---------------------- Forwarded by Tim Ellison/UK/IBM on 2000-11-15 11:35\nAM ---------------------------\n\nTim Ellison\n2000-11-10 10:45 AM\n\nTo:   ietf-dav-versioning@w3.org\ncc:\nFrom: Tim Ellison/UK/IBM@IBMGB\nSubject:  Working collections\n\n\nIt seems a long time since this was last discussed -- well I've forgotten\nthe explanation so here goes:\n\nWe agreed that URLs to versions exist outside the normal DAV namespace.\nThis is concept is variously reflected in the spec as virtually hosted URLs\n(http://repo.webdav.org/his/23/ver/42) and 'stolen' parts of the root\ncollection namespace (e.g. http://www.webdav.org/repo/wr-157.html).\n\nClients should not, therefore, expect to be able to construct new URLs\nbased on these server maintained URLs (i.e. removing / adding segments to\nreach other resources).\n\nQ1:\nWe know that a versioned collection is a mapping from names to version\nhistories.  So when you check out a versioned collection what can you do\nwith the resulting working collection?  Are you constrained to creating\nmembers that bind to histories only?  Are you prevented from creating new\nbindings at all?\n\nQ2:\nCan you delete bindings from a working collection -- presumably yes since\nif you can't change a working collection's members you can only use them to\nchange properties? (There is clearly a good case for checked out collection\nversion selectors).\n\nWhen the server sees a URL to a working collection, say of the form\nhttp://repo.webdav.org/vr/9/wr/1/foo it can 'know' about the form of these\nURLs to determine that everything up to 'foo' is the URL to the working\ncollection and 'foo' is the member of that collection, but there would be\n(typically) no relationship between that URL and the URL of the history\nresource that 'foo' is currently bound to; so it would not be possible to\nslash-through 'foo' to reach other resources.\n\nTim\n\n\n\n", "id": "lists-005-12374599"}, {"subject": "mkworkspac", "content": "In the marshaling section of 16.2 the body is described as <!ELEMENT\nmkworkspace EMPTY> to hold implementation specific arguments.  I would have\nthought that ANY would be more appropriate.\n\nTim\n\n\n\n", "id": "lists-005-12384162"}, {"subject": "DAV:supported-*-se", "content": "The DAV:supported-*-set properties in sections 4.4, 4.5, and 4. should be\nmarked (protected) -- I doubt you could convince a server to support\nsomething by patching these properties<g>\n\n\nTim Ellison\nJava Technology Centre, MP146\nIBM UK Laboratory, Hursley Park, Winchester, UK.\ntel: +44 (0)1962 819872  internal: 249872  MOBx: 270452\n\n\n\n", "id": "lists-005-12391080"}, {"subject": "error element", "content": "In the latest draft, it demonstrates how to respond with an error element in\nsection 7.1.1. However, the XML usage is incorrect. The body looks like:\n\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<DAV:must-not-be-checked-out/>\n\n\nBut DAV: is an XML Namespace prefix, and it must be defined. The body should\nlook something like:\n\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<D:must-not-be-checked-out xmlns:D=\"DAV:\" />\n\n\nCheers,\n-g\n\n-- \nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-12398168"}, {"subject": "VERSION-CONTROL on an existing resourc", "content": "Section 9.1.1 shows the use of a VERSION-CONTROL on an existing resource.\nHowever, it responds with a 201 (Created). I'm thinking that it should be a\n200 (OK) or a 204 (No Content) since it is not creating the Request-URI.\n\nRFC 2616, 10.2.2 states that the created resource should be returned in a\nLocation: header (presuming it is different from the Request-URI). As I read\nit, it may even mandate a Location: header for the 201 (Created) response.\n\nI think it might be a bit whacky for VERSION-CONTROL to return the location\nof the version history, so I'd recommend changing the response (for an\nexisting, versionable) resource to one of:\n\n1) 200 (OK) with a body that specifies the URIs of the initial version and\n   the version history.\n\n2) 204 (No Content)\n\n\nThe first is certainly more informative for smart clients.\n\nCheers,\n-g\n\n-- \nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-12405224"}, {"subject": "Re: Working collection", "content": "We need to be able to do a CHECKOUT on a collection version so that we can\nperform operations within the collection and on the collection itself.\n\nIn Subversion, I've been planning to do a CHECKOUT on a parent collection\nversion resource, which will return a location such as:\n\n    http://host.name/repo/$svn/wrk/100.3\n\nI can then do the following:\n\n    PUT http://host.name/repo/$svn/wrk/100.3/newfile.html\n\nor even:\n    COPY http://host.name/repo/somedir/foo.c\n    Destination: http://host.name/repo/$svn/wrk/100.3/foo.c\n    \n    (or a MOVE if the source's parent is checked out)\n\nThe working resource for the collection is also handy for deleting or for\nreplacing the collection:\n\n    DELETE http://host.name/repo/$svn/wrk/100.3\n    (note that this request also requires a checked-out parent)\n\n    COPY http://host.name/repo/somedir/\n    Destination: http://host.name/repo/$svn/wrk/100.3\n    Overwrite: T\n\nDELETE of a member is a CHECKOUT of two items: the thing to DELETE and the\nparent collection.\n\n\nWithout being able to do a CHECKOUT on a collection, there wouldn't be a way\nto do any of the above.\n\nCheers,\n-g\n\nOn Wed, Nov 15, 2000 at 11:37:56AM +0000, Tim_Ellison@uk.ibm.com wrote:\n> \n> \n> I propose that we disallow CHECKOUT of a collection version.\n> \n> Tim Ellison\n> Java Technology Centre, MP146\n> IBM UK Laboratory, Hursley Park, Winchester, UK.\n> tel: +44 (0)1962 819872  internal: 249872  MOBx: 270452\n> ---------------------- Forwarded by Tim Ellison/UK/IBM on 2000-11-15 11:35\n> AM ---------------------------\n> \n> Tim Ellison\n> 2000-11-10 10:45 AM\n> \n> To:   ietf-dav-versioning@w3.org\n> cc:\n> From: Tim Ellison/UK/IBM@IBMGB\n> Subject:  Working collections\n> \n> \n> It seems a long time since this was last discussed -- well I've forgotten\n> the explanation so here goes:\n> \n> We agreed that URLs to versions exist outside the normal DAV namespace.\n> This is concept is variously reflected in the spec as virtually hosted URLs\n> (http://repo.webdav.org/his/23/ver/42) and 'stolen' parts of the root\n> collection namespace (e.g. http://www.webdav.org/repo/wr-157.html).\n> \n> Clients should not, therefore, expect to be able to construct new URLs\n> based on these server maintained URLs (i.e. removing / adding segments to\n> reach other resources).\n> \n> Q1:\n> We know that a versioned collection is a mapping from names to version\n> histories.  So when you check out a versioned collection what can you do\n> with the resulting working collection?  Are you constrained to creating\n> members that bind to histories only?  Are you prevented from creating new\n> bindings at all?\n> \n> Q2:\n> Can you delete bindings from a working collection -- presumably yes since\n> if you can't change a working collection's members you can only use them to\n> change properties? (There is clearly a good case for checked out collection\n> version selectors).\n> \n> When the server sees a URL to a working collection, say of the form\n> http://repo.webdav.org/vr/9/wr/1/foo it can 'know' about the form of these\n> URLs to determine that everything up to 'foo' is the URL to the working\n> collection and 'foo' is the member of that collection, but there would be\n> (typically) no relationship between that URL and the URL of the history\n> resource that 'foo' is currently bound to; so it would not be possible to\n> slash-through 'foo' to reach other resources.\n> \n> Tim\n> \n> \n\n-- \nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-12413036"}, {"subject": "Re: Working collection", "content": "    <Greg>\n    We need to be able to do a CHECKOUT on a collection version so\n    that we can perform operations within the collection and on the\n    collection itself.\n\n\n    In Subversion, I've been planning to do a CHECKOUT on a parent\n    collection version resource, which will return a location such\n    as:\n\n        http://host.name/repo/$svn/wrk/100.3\n\n    I can then do the following:\n\n        PUT http://host.name/repo/$svn/wrk/100.3/newfile.html\n    </Greg>\n\n<tim>\nThis makes sense for a checked out collection version selector, but not a\nchecked out collection version.  A collection version only has bindings to\nversion histories (section 12.6).  In your example, the newly created\nresource (using PUT) would not be a version history, indeed it would not be\nversion controlled (unless the server version controlled _every_ resource).\n</tim>\n\n    <Greg>\n    or even:\n        COPY http://host.name/repo/somedir/foo.c\n        Destination: http://host.name/repo/$svn/wrk/100.3/foo.c\n\n        (or a MOVE if the source's parent is checked out)\n    </Greg>\n\n<tim>\nThis would also be a violation of the semantics of versioned collections\nsince the source is not a version history -- and even if you did attempt to\ncopy a version history over that would fail with </DAV:cannot-copy-history>\n(Section 15.7) <g>\n</tim>\n\n    <Greg>\n    The working resource for the collection is also handy for deleting\n    or for replacing the collection:\n\n        DELETE http://host.name/repo/$svn/wrk/100.3\n        (note that this request also requires a checked-out parent)\n\n        COPY http://host.name/repo/somedir/\n        Destination: http://host.name/repo/$svn/wrk/100.3\n        Overwrite: T\n    </Greg>\n\n<tim>\nI agree that DELETEing members would be possible.  COPYing would not for\nthe reasons given above.\n</tim>\n\n    <Greg>\n    DELETE of a member is a CHECKOUT of two items: the thing to DELETE\n    and the parent collection.\n    </Greg>\n\n<tim>\nIt is unnecessary to CHECKOUT the thing being DELETEd since it is not\nmodified by the DELETE method, only the parent collection is modified (by\nloosing an internal member).\n</tim>\n\n    <Greg>\n    Without being able to do a CHECKOUT on a collection, there wouldn't\n    be a way to do any of the above.\n    </Greg>\n\n<tim>\nThe operations you describe are more appropriate to a checked out\ncollection version selector; and I agree that they are essential.\n</tim>\n\nTim Ellison\nJava Technology Centre, MP146\nIBM UK Laboratory, Hursley Park, Winchester, UK.\ntel: +44 (0)1962 819872  internal: 249872  MOBx: 270452\n\n\n\n", "id": "lists-005-12424725"}, {"subject": "Re: VERSION-CONTROL on an existing resourc", "content": "    <Greg>\n    Section 9.1.1 shows the use of a VERSION-CONTROL on an\n    existing resource. However, it responds with a 201 (Created).\n    I'm thinking that it should be a 200 (OK) or a 204 (No Content)\n    since it is not creating the Request-URI.\n    </Greg>\n\n<tim>\nI agree that 200 (OK) is probably more appropriate now that I have read\nRFC2616 definitions again with this case in mind.\n</tim>\n\n    <Greg>\n    RFC 2616, 10.2.2 states that the created resource should be\n    returned in a Location: header (presuming it is different from\n    the Request-URI). As I read it, it may even mandate a Location:\n    header for the 201 (Created) response.\n    </Greg>\n\n<tim>\nhmm, the location header likely would not be different to the request-uri\nfor a vanilla PUT to a new location.\n</tim>\n\n    <Greg>\n    I think it might be a bit whacky for VERSION-CONTROL to return\n    the location of the version history, so I'd recommend changing\n    the response (for an existing, versionable) resource to one of:\n\n        1) 200 (OK) with a body that specifies the URIs of\n        the initial version and the version history.\n\n        2) 204 (No Content)\n\n\n    The first is certainly more informative for smart clients.\n    </Greg>\n\n<tim>\nI don't mind which of these are adopted.\n</tim>\n\nTim Ellison\nJava Technology Centre, MP146\nIBM UK Laboratory, Hursley Park, Winchester, UK.\ntel: +44 (0)1962 819872  internal: 249872  MOBx: 270452\n\n\n\n", "id": "lists-005-12435228"}, {"subject": "Re: Working collection", "content": "On Thu, Nov 16, 2000 at 10:00:41AM +0000, Tim_Ellison@uk.ibm.com wrote:\n>     <Greg>\n>     We need to be able to do a CHECKOUT on a collection version so\n>     that we can perform operations within the collection and on the\n>     collection itself.\n> \n>     In Subversion, I've been planning to do a CHECKOUT on a parent\n>     collection version resource, which will return a location such\n>     as:\n> \n>         http://host.name/repo/$svn/wrk/100.3\n> \n>     I can then do the following:\n> \n>         PUT http://host.name/repo/$svn/wrk/100.3/newfile.html\n>     </Greg>\n> \n> <tim>\n> This makes sense for a checked out collection version selector, but not a\n> checked out collection version.\n\nA checkout is supposed to work on *either* a version selector or the version\nitself. When I discussed/asked-for-clarification-on some of this on the list\na month or two ago, that was the point of view that I understood. And more\nspecifically, I didn't like some the semantics attached to checking out a\nversion selector, so I was making sure that a checkout on a version was\npossible, and that operations could be done that way.\n\n> A collection version only has bindings to\n> version histories (section 12.6).  In your example, the newly created\n> resource (using PUT) would not be a version history, indeed it would not be\n> version controlled (unless the server version controlled _every_ resource).\n> </tim>\n\n1) In my system above, the PUT creates a working resource within an\n   activity. I don't see anything in the spec that says it must be\n   otherwise.\n\n2) Yes, it becomes version-controlled, as that is the behavior that my\n   server imposes when a resource is PUT there. This is allowed by the spec.\n\n3) At MERGE time, a version history is created for the PUT'd resource and a\n   new collection version is created which references that.\n\nThis makes sense to me, and it works quite fine with a checkout of a version\nresource. The point is: checking out a collection (whether via a selector or\nthe version itself) will create a working resource for that collection. I\ncan then do whatever with it.\n\n>     <Greg>\n>     or even:\n>         COPY http://host.name/repo/somedir/foo.c\n>         Destination: http://host.name/repo/$svn/wrk/100.3/foo.c\n> \n>         (or a MOVE if the source's parent is checked out)\n>     </Greg>\n> \n> <tim>\n> This would also be a violation of the semantics of versioned collections\n> since the source is not a version history -- and even if you did attempt to\n> copy a version history over that would fail with </DAV:cannot-copy-history>\n> (Section 15.7) <g>\n> </tim>\n\nAah, bunk. I'm copying into a working resource for the versioned collection.\nI can do whatever I'd like at that point. And the source implicitly\nidentifies a version history, so the fancy wording / semantics about\n\"collections only containing versioned collections\" can easily be handled at\nMERGE time.\n\nHell, the model about a versioned collection only referring to version\nhistories is just so much baloney to me. I have a collection. I want to copy\nsomething into it. Great. I make it work.\n\nDescribe it how you want, but it is still going to work as any rational\nperson is going to expect: check out the collection, copy something in, then\nmerge that back.\n\n>     <Greg>\n>     The working resource for the collection is also handy for deleting\n>     or for replacing the collection:\n> \n>         DELETE http://host.name/repo/$svn/wrk/100.3\n>         (note that this request also requires a checked-out parent)\n> \n>         COPY http://host.name/repo/somedir/\n>         Destination: http://host.name/repo/$svn/wrk/100.3\n>         Overwrite: T\n>     </Greg>\n> \n> <tim>\n> I agree that DELETEing members would be possible.  COPYing would not for\n> the reasons given above.\n> </tim>\n\nBoth DELETE and COPY will work fine. The semantic about version histories is\neasily satisfied.\n\n>     <Greg>\n>     DELETE of a member is a CHECKOUT of two items: the thing to DELETE\n>     and the parent collection.\n>     </Greg>\n> \n> <tim>\n> It is unnecessary to CHECKOUT the thing being DELETEd since it is not\n> modified by the DELETE method, only the parent collection is modified (by\n> loosing an internal member).\n> </tim>\n\nThat may be strictly true, but if I check out a collection into a working\nresource, then I don't necessarily have each of the members defined to be\navailable below that working resource. Therefore, how would I identify which\nresource to delete, with respect to that checked out collection.\n\nI guess it would be possible to DELETE the version selector, have the server\nidentify the parent, see that a working resource is available, and then go\nand modify that working resource. Hrm. I'll have to think about that.\n\n>     <Greg>\n>     Without being able to do a CHECKOUT on a collection, there wouldn't\n>     be a way to do any of the above.\n>     </Greg>\n> \n> <tim>\n> The operations you describe are more appropriate to a checked out\n> collection version selector; and I agree that they are essential.\n> </tim>\n\nA working resource is a working resource. It shouldn't matter whether it\ncame from a checked out version selector or a checked out version.\n\nCheers,\n-g\n\n-- \nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-12443890"}, {"subject": "Re: Working collection", "content": "> Hell, the model about a versioned collection only referring\n> to version histories is just so much baloney to me.\n\nWell I guess until we can agree on this, the rest of the discussion is\nmoot.\n\nThe rationale and use case for this model are given in the protocol doc\ndescription of version-controlled collections.  I understand your position\ntoo and I'll think about how the two can co-exist.\n\nRegards,\nTim\n\n\nGreg Stein <gstein@lyra.org> on 2000-11-16 10:25:56 AM\n\nPlease respond to Greg Stein <gstein@lyra.org>\n\nTo:   Tim Ellison/UK/IBM@IBMGB\ncc:   ietf-dav-versioning@w3.org\nSubject:  Re: Working collections\n\n\n\n\nOn Thu, Nov 16, 2000 at 10:00:41AM +0000, Tim_Ellison@uk.ibm.com wrote:\n>     <Greg>\n>     We need to be able to do a CHECKOUT on a collection version so\n>     that we can perform operations within the collection and on the\n>     collection itself.\n>\n>     In Subversion, I've been planning to do a CHECKOUT on a parent\n>     collection version resource, which will return a location such\n>     as:\n>\n>         http://host.name/repo/$svn/wrk/100.3\n>\n>     I can then do the following:\n>\n>         PUT http://host.name/repo/$svn/wrk/100.3/newfile.html\n>     </Greg>\n>\n> <tim>\n> This makes sense for a checked out collection version selector, but not a\n> checked out collection version.\n\nA checkout is supposed to work on *either* a version selector or the\nversion\nitself. When I discussed/asked-for-clarification-on some of this on the\nlist\na month or two ago, that was the point of view that I understood. And more\nspecifically, I didn't like some the semantics attached to checking out a\nversion selector, so I was making sure that a checkout on a version was\npossible, and that operations could be done that way.\n\n> A collection version only has bindings to\n> version histories (section 12.6).  In your example, the newly created\n> resource (using PUT) would not be a version history, indeed it would not\nbe\n> version controlled (unless the server version controlled _every_\nresource).\n> </tim>\n\n1) In my system above, the PUT creates a working resource within an\n   activity. I don't see anything in the spec that says it must be\n   otherwise.\n\n2) Yes, it becomes version-controlled, as that is the behavior that my\n   server imposes when a resource is PUT there. This is allowed by the\nspec.\n\n3) At MERGE time, a version history is created for the PUT'd resource and a\n   new collection version is created which references that.\n\nThis makes sense to me, and it works quite fine with a checkout of a\nversion\nresource. The point is: checking out a collection (whether via a selector\nor\nthe version itself) will create a working resource for that collection. I\ncan then do whatever with it.\n\n>     <Greg>\n>     or even:\n>         COPY http://host.name/repo/somedir/foo.c\n>         Destination: http://host.name/repo/$svn/wrk/100.3/foo.c\n>\n>         (or a MOVE if the source's parent is checked out)\n>     </Greg>\n>\n> <tim>\n> This would also be a violation of the semantics of versioned collections\n> since the source is not a version history -- and even if you did attempt\nto\n> copy a version history over that would fail with\n</DAV:cannot-copy-history>\n> (Section 15.7) <g>\n> </tim>\n\nAah, bunk. I'm copying into a working resource for the versioned\ncollection.\nI can do whatever I'd like at that point. And the source implicitly\nidentifies a version history, so the fancy wording / semantics about\n\"collections only containing versioned collections\" can easily be handled\nat\nMERGE time.\n\nHell, the model about a versioned collection only referring to version\nhistories is just so much baloney to me. I have a collection. I want to\ncopy\nsomething into it. Great. I make it work.\n\nDescribe it how you want, but it is still going to work as any rational\nperson is going to expect: check out the collection, copy something in,\nthen\nmerge that back.\n\n>     <Greg>\n>     The working resource for the collection is also handy for deleting\n>     or for replacing the collection:\n>\n>         DELETE http://host.name/repo/$svn/wrk/100.3\n>         (note that this request also requires a checked-out parent)\n>\n>         COPY http://host.name/repo/somedir/\n>         Destination: http://host.name/repo/$svn/wrk/100.3\n>         Overwrite: T\n>     </Greg>\n>\n> <tim>\n> I agree that DELETEing members would be possible.  COPYing would not for\n> the reasons given above.\n> </tim>\n\nBoth DELETE and COPY will work fine. The semantic about version histories\nis\neasily satisfied.\n\n>     <Greg>\n>     DELETE of a member is a CHECKOUT of two items: the thing to DELETE\n>     and the parent collection.\n>     </Greg>\n>\n> <tim>\n> It is unnecessary to CHECKOUT the thing being DELETEd since it is not\n> modified by the DELETE method, only the parent collection is modified (by\n> loosing an internal member).\n> </tim>\n\nThat may be strictly true, but if I check out a collection into a working\nresource, then I don't necessarily have each of the members defined to be\navailable below that working resource. Therefore, how would I identify\nwhich\nresource to delete, with respect to that checked out collection.\n\nI guess it would be possible to DELETE the version selector, have the\nserver\nidentify the parent, see that a working resource is available, and then go\nand modify that working resource. Hrm. I'll have to think about that.\n\n>     <Greg>\n>     Without being able to do a CHECKOUT on a collection, there wouldn't\n>     be a way to do any of the above.\n>     </Greg>\n>\n> <tim>\n> The operations you describe are more appropriate to a checked out\n> collection version selector; and I agree that they are essential.\n> </tim>\n\nA working resource is a working resource. It shouldn't matter whether it\ncame from a checked out version selector or a checked out version.\n\nCheers,\n-g\n\n--\nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-12457262"}, {"subject": "Re: workspace", "content": "   From: Tim_Ellison@uk.ibm.com\n\n   The spec should say that workspaces cannot 'overlap', i.e., a workspace\n   cannot be a member of another workspace, and bindings cannot be made\n   outside the workspace.  Having multiple workpace 'parents' would confuse\n   many things, including current activity, and make workspace semantics for\n   single history selectors very time consuming to enforce.\n\nThis is a good point, but I think we can address it in a\nless draconian fashion.\n\nI think it is sufficient to state that a version selector is\ncontained by at most one workspace, namely, the one specified\nin its DAV:workspace property, and that when a resource is\nput under version control, its DAV:workspace property is set\nto be the DAV:workspace of its parent collection.\n\nThis does raise another question:\n\nShould we require a DAV:workspace property on *non-version-controlled*\nworkspace members?\n\nIf not, we need to modify the preceding statement to say:\n\n\"... the DAV:workspace of its nearest parent collection that has a\nDAV:workspace property.\"\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-12472008"}, {"subject": "Re: workspace", "content": "   From: Tim_Ellison@uk.ibm.com\n\n   I believe that the spec would have to be updated to deal with multiple\n   workspaces for a given resource.\n\nI agree, but I think that it is better to say that a resource is in\nat most one workspace, but that the workspace of a child does not have\nto be the workspace of its parent (such as when the child itself is\na workspace, or when the child is a binding to a resource that is in\nanother workspace.  This then avoids all the complications that Tim\n(correctly) indicates below.\n\n   For example,\n\n   - a version selector has a DAV:workspace property.  What would its value be\n   for a resource in a 'nested' workspace?  The resource would be a member of\n   multiple workspaces so this would have to be changed to a set.\n\n   - a workspace is expected to be able to report its checkout set\n   (DAV:workspace-checkout-set).  When performing a checkout a server would\n   have to nominally find all references to the resource and update all\n   workspaces with the additional checked out resource.\n\n   - same for current activity set of a workspace.  The server would\n   presumably be expected to make checkouts in the union of all current\n   activity sets of all workspaces that the resource is a member.  Servers\n   that restrict to single activities would have to be aware of enclosing\n   workspaces and disallow additional DAV:current-activity-set values for\n   nested workspaces, and disallow binding to reachable workspaces that\n   already have a current activity set defined.\n\n   - \"In order to ensure unambiguous merging and baselining semantics, a\n   workspace may contain at most one version selector for a given version\n   history.\"  A bind to an existing resource in another workspace would\n   require the server to determine if there are any version selectors in each\n   workspace that fail this precondition.\n\nThis last complication is one a server already must deal with,\nsince the VERSION-CONTROL request can be used to create a version selector\nwhose DAV:target refers to a version in an existing version history.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-12479929"}, {"subject": "Re: Working collection", "content": "   From: Tim_Ellison@uk.ibm.com\n\n   We agreed that URLs to versions exist outside the normal DAV namespace.\n   This is concept is variously reflected in the spec as virtually hosted URLs\n   (http://repo.webdav.org/his/23/ver/42) and 'stolen' parts of the root\n   collection namespace (e.g. http://www.webdav.org/repo/wr-157.html).\n   Clients should not, therefore, expect to be able to construct new URLs\n   based on these server maintained URLs (i.e. removing / adding segments to\n   reach other resources).\n\nYes.\n\n   Q1:\n   We know that a versioned collection is a mapping from names to version\n   histories.\n\nActually, we no longer use the ambiguous \"versioned collection\"\nterminology, so we actually don't know that (:-).  We do know that\na collection version is a mapping from names to version histories.\nWe also know that a collection version selector is a mapping from\nnames to other version selectors (and to resources that aren't under\nversion control).\n\n   So when you check out a versioned collection what can you do\n   with the resulting working collection?\n\nWorking on a checked out version selector for a collection is well\ndefined, so I assume you mean \"when you check out a collection\nversion, what can you do with the resulting working collection\"?\n\nYou are right that this is not defined, and does not follow from the\nsemantics of checked-out version selectors, so this needs to be fixed.\nMy first choice would be your subsequent answer, i.e. that \"you can\nonly check out a collection version selector, and not a collection\nversion\".  Greg doesn't like that answer, so it's probably worth exploring\nwhat a working collection might be (although I haven't given up hope\nin trying to get Greg to just use workspaces and checked out version\nselectors :-).\n \n   Are you constrained to creating members that bind to histories only?\n\nIf we allow it working collections, then being constrained to creating\nmembers that bind only to histories makes sense.\n\n   Are you prevented from creating new\n   bindings at all?\n\nI don't see any reason for this constraint.\n\n   Q2:\n   Can you delete bindings from a working collection -- presumably yes since\n   if you can't change a working collection's members you can only use them to\n   change properties? (There is clearly a good case for checked out collection\n   version selectors).\n\nYes.\n\n   When the server sees a URL to a working collection, say of the form\n   http://repo.webdav.org/vr/9/wr/1/foo it can 'know' about the form of these\n   URLs to determine that everything up to 'foo' is the URL to the working\n   collection and 'foo' is the member of that collection, but there would be\n   (typically) no relationship between that URL and the URL of the history\n   resource that 'foo' is currently bound to; so it would not be possible to\n   slash-through 'foo' to reach other resources.\n\nCorrect, which is why I find working collections of negligible value\n(compared to checked-out collection version selectors, which you can\nslash-through).\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-12488853"}, {"subject": "Re: Working collection", "content": "On Fri, Nov 17, 2000 at 03:00:35PM -0500, Geoffrey M. Clemm wrote:\n>...\n>    So when you check out a versioned collection what can you do\n>    with the resulting working collection?\n> \n> Working on a checked out version selector for a collection is well\n> defined, so I assume you mean \"when you check out a collection\n> version, what can you do with the resulting working collection\"?\n> \n> You are right that this is not defined, and does not follow from the\n> semantics of checked-out version selectors, so this needs to be fixed.\n> My first choice would be your subsequent answer, i.e. that \"you can\n> only check out a collection version selector, and not a collection\n> version\".  Greg doesn't like that answer, so it's probably worth exploring\n> what a working collection might be (although I haven't given up hope\n> in trying to get Greg to just use workspaces and checked out version\n> selectors :-).\n\nWhy would a checked-out version selector (of a member or a collection) ever\nbe any different from a working resource? What would be the justification\nfor such a difference?\n\n\nDoing a check-out in place does not work well for me. I want to construct an\nactivity, check out a bunch of things w.r.t. that activity, make the\nchanges, then merge the activity in one fell swoop. That model works great,\nand I don't see any incentive/benefit to using a different model.\n[ I will admit to not reading the latest incarnation of workspaces, but it\n  still seems moot if the activity model and working resources satisifies my\n  problems ]\n\n>    Are you constrained to creating members that bind to histories only?\n> \n> If we allow it working collections, then being constrained to creating\n> members that bind only to histories makes sense.\n\nIf I do a PUT into a working collection, then this constraint would be\nsatisfied at MERGE time. Anything PUT into the collection is automatically\nversioned, so the updated collection version would refer to the version\nhistory of the new resource.\n\n>    When the server sees a URL to a working collection, say of the form\n>    http://repo.webdav.org/vr/9/wr/1/foo it can 'know' about the form of these\n>    URLs to determine that everything up to 'foo' is the URL to the working\n>    collection and 'foo' is the member of that collection, but there would be\n>    (typically) no relationship between that URL and the URL of the history\n>    resource that 'foo' is currently bound to; so it would not be possible to\n>    slash-through 'foo' to reach other resources.\n> \n> Correct, which is why I find working collections of negligible value\n> (compared to checked-out collection version selectors, which you can\n> slash-through).\n\nIn the model that I'm going to use, I don't need to \"slash-through\" the\nworking collection. I just need it to establish a spot where I can create\nnew members/sub-collections. If I want to reach an existing child resource,\nthen I'll go through version selectors (to their versions, which I CHECKOUT,\nand then to their working resources).\n\n\nI think the point here is that I'm working in a transactional / change set\nmodel here. I get a bunch of working resources, change them, then check them\nin in one fell swoop. Navigation and management of checked out resources is\nminimal and short-lived. Give me a working resource, I'll tweak in, then\nmerge it back in (possibly with other changes).\n\nCheers,\n-g\n\n-- \nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-12499186"}, {"subject": "Re: Example - GET request with DAV:must-select-version response ??", "content": "   From: \"Oleg Sergeechev\" <olegs@tarzan.cr.cyco.com>\n\n   Example 7.1.1 (title) should read:\n\n   7.1.1 Example - CHECKOUT request with DAV:must-not-be-checked-out response\n\nIt sure should.  Thanks, Oleg!\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-12510069"}, {"subject": "Re: Version selector propertie", "content": "   From: Tim_Ellison@uk.ibm.com\n\n   From the versioning spec (section 2.2):\n\n   \"Although the content and dead properties of a checked-in version selector\n   are required to be the same as those of its current target, its live\n   properties may differ.\"\n\n   I would have thought that some live properties should(must?) not be\n   different.\n\nIf so, that should be determined from the definition of that live\nproperty, and should not be something that the versioning spec should\nneed to define.\n\n   Hopefully, we would agree that the DAV:getContentLength property must not\n   be different.\n\nThat would follow from the requirement that the content of\nthe version-selector be the same as that of the target version.\n\n   Ok, how about the DAV:resourcetype?  I think that that would most likely\n   not be different, but maybe it would (interpret the same content as\n   different types, editing url and execute url maybe?)  Comments?\n\nIt would seem natural for them to be the same, but as you indicate, a\nserver might come up with reasons for making them different, especially\nif DAV:resourcetype ends up with a structured value.\n\n   DAV:getlastmodified?\n   Well you probably do want that to be different to the version that was the\n   target of the SETTARGET.  I suspect that having the getlastmodified time go\n   'backwards' when setting the target to an earlier version would screw up\n   caching proxies, and clients that rely on If-Unmodified-Since: et al\n   headers.\n\nI agree.\n\n   I think we would agree that the DAV:getetag property should be different.\n\nWhy?  One reasonable form of getetag is to use some MD5 \"footprint\",\nand in that case, the DAV:getetag of the version and the version selector\nwhose target is that version will be the same.\n\n   A successful SETTARGET should result in new last modified and etag values\n   for a version selector.\n\nA new last modified, yes.  A new etag, not necessarily.\n\nBut back to my original point, that should be determined from the\ndefinition of that live property, and should not be something that the\nversioning spec should need to define.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-12517537"}, {"subject": "Re: 403&amp;409 status code", "content": "I agree that this list is useful information, but since it can be\nderived from the semantics defined in the protocol, I see it more as\ncommentary, rather than as something that should appear in the\nprotocol definition.\n\nNote that since a server might not support all actions that are\nallowed by the protocol, the two categories are: errors that are\nalways 403's, and errors that are either 403's or 409's, depending on\nthe server.\n\nCheers,\nGeoff\n\n\n   From: Tim_Ellison@uk.ibm.com\n\n   Section 7.1 of the spec describes how the server must answer a response\n   body for 403 & 409 responses with each method precondition that fails.\n\n   It seems to be an art to divide the preconditions between 403 and 409, but\n   seems like something we should agree upon.  There is usually some\n   combination of requests that the client can do to make a failing request\n   subsequently succeed.\n\n   My rule of thumb was \"assume it is a 409 unless the client cannot fix the\n   situation without destroying resources\".  For example, a client could make\n   one-version-selector-per-history-per-workspace succeed by deleting the\n   other version selector, but they can never make cannot-copy-history\n   succeed.\n\n   The sections where the preconditions appear in versioning-10.4 are in\n   parentheses after the name below.\n\n   403 Forbidden.\nThe server understood the request, but is refusing to fulfill it.\nAuthorization will not help and the request SHOULD NOT be repeated.\n   baseline-control-must-be-empty (16.4)\n   cannot-copy-history (15.7)\n   cannot-modify-protected-property (7.4)\n   cannot-modify-unsupported-property (7.4)\n   cannot-modify-version-content (7.3)\n   cannot-modify-version-property (7.4)\n   cannot-rename-resource (7.7, 15.8)\n   checkin-fork-forbidden (15.11)\n   checkout-of-checked-out-version-is-forbidden (15.10)\n   checkout-of-version-with-descendant-is-forbidden (15.10)\n   linear-activity (15.10, 15.11)\n   merge-destination-must-be-valid (16.5)\n   must-be-baseline (16.4)\n   must-be-collection (16.4)\n   must-be-checked-in-version-selector (9.5)\n   must-be-checked-out-version-selector (9.4)\n   must-be-version-or-version-selector (9.2, 16.1)\n   must-be-version-selector (15.10)\n   must-be-versionable (9.1)\n   must-have-no-members (16.4)\n   must-select-version (9.5, 15.2, 15.4, 15.7, 15.10, 15.12, 16.1, 16.5)\n   no-checkout-of-baseline-version (15.10)\n   no-unreserved-checkout-for-reserved-activity (15.10)\n   predecessor-in-checked-out-version-history (15.11)\n\n\n   409 Conflict\nThe request could not be completed due to a conflict with the current\nstate of the resource. This code is only allowed in situations where\nit is expected that the user might be able to resolve the conflict\nand resubmit the request.\n   cannot-add-to-existing-history (9.1)\n   cannot-merge-checked-out-resource (16.5)\n   cannot-modify-destination-parent-version-selector (15.8)\n   cannot-modify-version-selector-content (7.3)\n   cannot-modify-parent-version-selector (15.5, 15.8, 15.9)\n   cannot-modify-version-selector-property (7.4)\n   checkin-fork-discouraged (15.11)\n   checkin-requires-lock-token (9.3)\n   checkout-of-checked-out-version-is-discouraged (15.10)\n   checkout-of-version-with-descendant-is-discouraged (15.10)\n   checkout-required (16.5)\n   checkout-requires-lock-token (9.2)\n   initial-version-required (9.1)\n   label-must-exist (16.1)\n   merge-must-be-complete (15.11)\n   merge-requires-lock-token (16.5)\n   must-be-new-label (16.1)\n   must-be-version (9.1)\n   must-be-checked-out (9.3)\n   must-not-be-checked-out (9.2, 16.1)\n   no-checked-out-baselined-collection-members (15.11)\n   no-eclipsed-baselined-collection-members (15.11)\n   one-baseline-selector-per-history-per-workspace (16.4)\n   one-version-selector-per-history-per-workspace (15.9)\n   one-checkout-per-activity-per-history (15.10)\n   only-overwrite-mutable-version (15.11)\n   resource-must-be-null (16.2, 16.3)\n   set-target-requires-lock-token (9.5)\n   uncheckout-requires-lock-token (9.4)\n\n\n   Tim Ellison\n   Java Technology Centre, MP146\n   IBM UK Laboratory, Hursley Park, Winchester, UK.\n   tel: +44 (0)1962 819872  internal: 249872  MOBx: 270452\n\n\n\n", "id": "lists-005-12526851"}, {"subject": "Re: mkworkspac", "content": "   From: Tim_Ellison@uk.ibm.com\n\n   In the marshaling section of 16.2 the body is described as <!ELEMENT\n   mkworkspace EMPTY> to hold implementation specific arguments.  I would have\n   thought that ANY would be more appropriate.\n\nThat sounds right to me.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-12537805"}, {"subject": "Re: DAV:supported-*-se", "content": "   From: Tim_Ellison@uk.ibm.com\n\n   The DAV:supported-*-set properties in sections 4.4, 4.5, and 4. should be\n   marked (protected) -- I doubt you could convince a server to support\n   something by patching these properties<g>\n\nI agree (that was fixed in the 10.5 draft).\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-12544712"}, {"subject": "Re: error element", "content": "   Date: Wed, 15 Nov 2000 16:55:39 -0800\n   From: Greg Stein <gstein@lyra.org>\n\n   In the latest draft, it demonstrates how to respond with an error element in\n   section 7.1.1. However, the XML usage is incorrect. The body looks like:\n\n   <?xml version=\"1.0\" encoding=\"utf-8\" ?>\n   <DAV:must-not-be-checked-out/>\n\n\n   But DAV: is an XML Namespace prefix, and it must be defined. The body should\n   look something like:\n\n   <?xml version=\"1.0\" encoding=\"utf-8\" ?>\n   <D:must-not-be-checked-out xmlns:D=\"DAV:\" />\n\n\nThanks for catching that.  Will fix.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-12551685"}, {"subject": "Re: VERSION-CONTROL on an existing resourc", "content": "   From: Greg Stein <gstein@lyra.org>\n\n   Section 9.1.1 shows the use of a VERSION-CONTROL on an existing resource.\n   However, it responds with a 201 (Created). I'm thinking that it should be a\n   200 (OK) or a 204 (No Content) since it is not creating the Request-URI.\n\nI agree.  I'd prefer just the 200(OK).  I'll make this change if nobody\nobjects.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-12558981"}, {"subject": "Re: VERSION-CONTROL on an existing resourc", "content": "On Sat, Nov 18, 2000 at 10:38:49AM -0500, Geoffrey M. Clemm wrote:\n>    From: Greg Stein <gstein@lyra.org>\n> \n>    Section 9.1.1 shows the use of a VERSION-CONTROL on an existing resource.\n>    However, it responds with a 201 (Created). I'm thinking that it should be a\n>    200 (OK) or a 204 (No Content) since it is not creating the Request-URI.\n> \n> I agree.  I'd prefer just the 200(OK).  I'll make this change if nobody\n> objects.\n\nAre you interested in formalizing the response at all, to provide the\nrelevant URIs?\n\n(I'm just so-so on it, but others might want the extra feature)\n\nCheers,\n-g\n\n-- \nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-12566796"}, {"subject": "Re: Working collection", "content": "   From: Greg Stein <gstein@lyra.org>\n\n   We need to be able to do a CHECKOUT on a collection version so that we can\n   perform operations within the collection and on the collection itself.\n   In Subversion, I've been planning to do a CHECKOUT on a parent collection\n   version resource, which will return a location such as:\n       http://host.name/repo/$svn/wrk/100.3\n\nWe should first confirm that we agree on the semantics of a collection\nversion and a collection version selector, namely, that each member of\na collection version is a version history,  while each members of a\ncollection version selector is either an unversioned resource or a\nversion selector.\n\nAssuming we agree on that, then if we are going to allow a \"working\ncollection\" (i.e. the result of checking out a collection version),\nthen we need to decide what the members of a working collection would\nbe.\n\nBy analogy with collection versions, the members could be version\nhistories.  By analogy with collection version selectors, the members\ncould be unversioned resources or other working resources.  Or we\ncould make up completely different semantics for a working collection\nthat are distinct from those of either collection versions or\ncollection version selectors.  I'd like to avoid this third alternative,\nsince it is likely to cause additional complexity in what is already\nthe most complex part of the protocol.\n\n   I can then do the following:\n       PUT http://host.name/repo/$svn/wrk/100.3/newfile.html\n   or even:\n       COPY http://host.name/repo/somedir/foo.c\n       Destination: http://host.name/repo/$svn/wrk/100.3/foo.c\n\nIf working collections were like version selectors, then this\nwould be fine since then working collections could have \nunversioned members.\n\nIf working collections were like collection versions, then this\nwould be illegal since only version histories can be members.\n\n       (or a MOVE if the source's parent is checked out)\n\nA MOVE is fine, if the MOVE was from another working collection,\nbut if the MOVE was from a non-versioned collection, then you\nrun into the same problems as PUT.\n\n   The working resource for the collection is also handy for deleting or for\n   replacing the collection:\n\n       DELETE http://host.name/repo/$svn/wrk/100.3\n       (note that this request also requires a checked-out parent)\n\nThis is fine.\n\n       COPY http://host.name/repo/somedir/\n       Destination: http://host.name/repo/$svn/wrk/100.3\n       Overwrite: T\n\nThis wouldn't work, because deleting a working resource (as is done by\nan Overwrite:T) cancels the checkout.  You would need to use the new\n\"update\" value for the Overwrite header.\n\n   DELETE of a member is a CHECKOUT of two items: the thing to DELETE and the\n   parent collection.\n\nOnly the parent collection needs to be checked-out in order to\nDELETE a member of that collection.\n\n   Without being able to do a CHECKOUT on a collection, there wouldn't be a way\n   to do any of the above.\n\nYou could just use a VERSION-CONTROL request to create a new version\nselector whose target is the desired collection version.  Then you can\ndo all your operations on that version selector.  It is one extra round\ntrip, but if that really matters, we could easily add a \"DAV:keep-checked-out\"\noption to the VERSION-CONTROL request.  This would allow us to avoid\nall the extra complexity that would result from having two ways to manipulate\nversioned collections.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-12575249"}, {"subject": "Re: Working collection", "content": "   From: Greg Stein <gstein@lyra.org>\n\n   A checkout is supposed to work on *either* a version selector or the version\n   itself. When I discussed/asked-for-clarification-on some of this on the list\n   a month or two ago, that was the point of view that I understood.\n\nVersioned collections are significantly more complicated than other\nversioned resources because of the interactions between the collection\nversions and the collection member versions.  So although working\n(non-collection) resources are quite reasonable, working collections\nare quite problematic.  In particular, what kind of resources are members\nof a working collection, and especially, what kind of resources are\nthe members that themselves are collections?   Version selectors do\nnot have this problem, because you have a tree of version selectors\n(i.e. members of version selectors are other version selectors),\nunlike the \"free floating\" working collections, whose members are ???\n\n   And more\n   specifically, I didn't like some the semantics attached to checking out a\n   version selector, so I was making sure that a checkout on a version was\n   possible, and that operations could be done that way.\n\nAs I recall, the semantics you didn't like was that you'd have to have\nyour own tree of version selectors (since you can't check out somebody\nelse's version selector that is already checked out to them).  But if\nyou've got versioned collections, it's natural to get some kind of\ntree when you checkout the collection, so it might as well be a tree\nof version selectors.\n\n   > A collection version only has bindings to version histories\n   > (section 12.6).  In your example, the newly created resource\n   > (using PUT) would not be a version history, indeed it would not\n   > be version controlled (unless the server version controlled\n   > _every_ resource).\n   > </tim>\n\n   1) In my system above, the PUT creates a working resource within an\n      activity. I don't see anything in the spec that says it must be\n      otherwise.\n\nThe activity part is orthogonal.  It's the collection containing the\nrequest-URL of the PUT that is important.  If the collection is a \ncollection version, the PUT fails.  If the collection is a collection\nversion selector, the PUT succeeds and creates a new (non-versioned)\nresource (which your server can automatically put under version control\nif it wishes).\n\n   2) Yes, it becomes version-controlled, as that is the behavior that my\n      server imposes when a resource is PUT there. This is allowed by the spec.\n\nWhen something becomes version-controlled, it becomes a version\nselector.  If you were using version selectors, this would all be\nconsistent (i.e. you'd be creating a new version selector\nas a member of an existing version selector).  If you are using\nworking collections, we'd have to define the semantic interactions\nof version selectors nested within working collections.  This becomes\ncomplex because working resources are deleted when they are checked\nin, while version selectors are not.  So if you check in a working\ncollection, what happens to the possibly checked-out version selectors\ninside that working collection?  With collection version selectors,\nthis is not an issue because they are not deleted when you check them\nin so that nested version selectors do not get orphaned by checkin.\n\n   3) At MERGE time, a version history is created for the PUT'd resource and a\n      new collection version is created which references that.\n\nMERGE modifies the properties of existing version selectors\n(e.g. DAV:target and DAV:merge-predecessor-set), but\ndoes not create any new versions (only CHECKIN does that).\n\n   >     <Greg>\n   >     or even:\n   >         COPY http://host.name/repo/somedir/foo.c\n   >         Destination: http://host.name/repo/$svn/wrk/100.3/foo.c\n   >     </Greg>\n   > \n   > <tim>\n   > This would also be a violation of the semantics of versioned\n   > collections since the source is not a version history -- and even\n   > if you did attempt to copy a version history over that would fail\n   > with </DAV:cannot-copy-history> (Section 15.7) <g>\n   > </tim>\n\nYes, if working collections had version histories as members.\n\n   Aah, bunk. I'm copying into a working resource for the versioned\n   collection.  I can do whatever I'd like at that point.\n\nYes, if working collections are more like checked-out collection\nversion selectors, but in that case, we would have to decide what\nexactly can be members of working collections (e.g. version\nselectors?).  Because of the problems with checking in working\ncollections that have version selector members, it would be much\nsimpler to just use collection version selectors.\n\n   And the\n   source implicitly identifies a version history, so the fancy\n   wording / semantics about \"collections only containing versioned\n   collections\" can easily be handled at MERGE time.\n\nSince MERGE just modifies version selector properties, it doesn't give\nyou an opportunity to introduce version histories.\n\n   Hell, the model about a versioned collection only referring to version\n   histories is just so much baloney to me. I have a collection. I want to copy\n   something into it. Great. I make it work.\n\nWe need to avoid the ambiguous term \"versioned collection\" (I believe\nTim is the culprit in this instance :-).  In particular, it is baloney\nto say that a collection version selector only contain version histories,\nbut it is true that collection *versions* can only contain version\nhistories.\n\n   Describe it how you want, but it is still going to work as any rational\n   person is going to expect: check out the collection, copy something in, then\n   merge that back.\n\nI'm with you on the \"checkout\" and \"copy into\", but that needs to be\nfollowed by a \"checkin\", not a MERGE.\n\n   > <tim>\n   > It is unnecessary to CHECKOUT the thing being DELETEd since it is not\n   > modified by the DELETE method, only the parent collection is modified (by\n   > loosing an internal member).\n   > </tim>\n\n   That may be strictly true, but if I check out a collection into a working\n   resource, then I don't necessarily have each of the members defined to be\n   available below that working resource.\n\nI'm not sure what you mean by \"have\".  The collection knows its members.\nIf you delete one, the server knows what to delete, without you needing\nto have anything beyond the collection.\n\n   Therefore, how would I identify which\n   resource to delete, with respect to that checked out collection.\n\nThe name (URL) of the resource includes both the collection (lop off\nthe last segment of the URL) and which member of that collection is\nto be deleted (identified by the last segment of the URL).  That\nfully identifies the resource to be deleted.\n\n   I guess it would be possible to DELETE the version selector, have the server\n   identify the parent, see that a working resource is available, and then go\n   and modify that working resource. Hrm. I'll have to think about that.\n\nYou can only DELETE the version selector if it is checked out\n(which is what I'd want you to do, so actually I'm all for that :-).\nIf we are going to support working collections, the DELETE would have\nto be issued against the working collection member.  But that tells\nthe server all it needs to know.\n\n   > <tim>\n   > The operations you describe are more appropriate to a checked out\n   > collection version selector; and I agree that they are essential.\n   > </tim>\n\n   A working resource is a working resource. It shouldn't matter whether it\n   came from a checked out version selector or a checked out version.\n\nWell, to be precise, the result of checking out a version selector is a\nchecked out version selector, not a working resource (you only get a\nworking resource by checking out a version).  A working resource has\nsome very different behavior from a checked out version selector.\nIn particular, checking in a working resource deletes the working resource,\nwhile checking in a checked out version selector just changes its state\nfrom checked out to checked in.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-12586234"}, {"subject": "Re: Working collection", "content": "On Sat, Nov 18, 2000 at 04:47:56PM -0500, Geoffrey M. Clemm wrote:\n>    From: Greg Stein <gstein@lyra.org>\n> \n>    We need to be able to do a CHECKOUT on a collection version so that we can\n>    perform operations within the collection and on the collection itself.\n>    In Subversion, I've been planning to do a CHECKOUT on a parent collection\n>    version resource, which will return a location such as:\n>        http://host.name/repo/$svn/wrk/100.3\n> \n> We should first confirm that we agree on the semantics of a collection\n> version and a collection version selector, namely, that each member of\n> a collection version is a version history,  while each members of a\n> collection version selector is either an unversioned resource or a\n> version selector.\n\nSounds fine to me.\n\n>...\n> By analogy with collection versions, the members could be version\n> histories.  By analogy with collection version selectors, the members\n> could be unversioned resources or other working resources.\n\n... or version selectors.\n\nLet's call the first one, Model A. And the second one Model B.\n\n> Or we\n> could make up completely different semantics for a working collection\n> that are distinct from those of either collection versions or\n> collection version selectors.  I'd like to avoid this third alternative,\n> since it is likely to cause additional complexity in what is already\n> the most complex part of the protocol.\n\nOkay. I can tentatively agree with that. (read: avoid Model C)\n\n>    I can then do the following:\n>        PUT http://host.name/repo/$svn/wrk/100.3/newfile.html\n>    or even:\n>        COPY http://host.name/repo/somedir/foo.c\n>        Destination: http://host.name/repo/$svn/wrk/100.3/foo.c\n> \n> If working collections were like version selectors, then this\n> would be fine since then working collections could have \n> unversioned members.\n> \n> If working collections were like collection versions, then this\n> would be illegal since only version histories can be members.\n\nAgreed on both.\n\n>        (or a MOVE if the source's parent is checked out)\n> \n> A MOVE is fine, if the MOVE was from another working collection,\n> but if the MOVE was from a non-versioned collection, then you\n> run into the same problems as PUT.\n\nIf the MOVE source is:\n\n1) an unversioned resource: no problem under Model B. Illegal under Model A\n   since the source is not a version history.\n\n2) a version selector: same as (1), however the parent collection (if\n   versioned) must be checked out or auto-versioned.\n\n3) a working resource: same as (2)\n\n4) a version history: allowed under Model A, assuming the parent collection\n   is checked out or auto-versioned. Not allowed under Model B.\n\n\nOf these, I'd rather take the flexibility of Model B. I don't have to track\ndown the darn version history just to satisfy a MOVE. I also find it a bit\nweird to move a *history*. I'm really trying to move a version selector for\nthat history. Not to mention the fact that, typically, a version history is\nlocated in some server-controlled namespace; the semantics of that namespace\nwould probably disallow a version history to be moved from it, or for a\nversion history to exist outside of it (e.g. under the working resource).\n\nConcretely: Subversion has several server-defined namespaces. One each for\nactivities, working resources, versions, and histories. The history\nresources cannot be moved out of their space. And since a checked-out\ncollection (whether a checked-out version selector, or a working resource\ncorresponding to a checked-out selector or version) exists *outside* of the\nhistory namespace, then it is illegal to move a version history.\n\nIf any server uses server-defined namespaces for histories, then a MOVE\nwould be impossible if you tried to enforce \"working collections must\ncontain version histories.\"\n\n>    The working resource for the collection is also handy for deleting or for\n>    replacing the collection:\n> \n>        DELETE http://host.name/repo/$svn/wrk/100.3\n>        (note that this request also requires a checked-out parent)\n> \n> This is fine.\n\nNote that Tim also pointed out that we probably would not delete the working\ncollection itself, but delete the member from the parent collection. The\nabove request is ambiguous with \"do an UNCHECKOUT\".\n\nI'm still a bit woozy on deletion of resources, both in WebDAV and DeltaV.\nIn WebDAV, you lock and delete the target. In DeltaV, do we checkout the\ntarget to make sure we are allowed to delete it? (e.g. watch out for\nreserved checkouts and stuff)\n\nI'm tempted to just say \"check out both of them, then delete relative to the\nparent collection\".  (sigh... but checking out the target is probably\nredundant, then) ... Ideas, anyone?\n\n>        COPY http://host.name/repo/somedir/\n>        Destination: http://host.name/repo/$svn/wrk/100.3\n>        Overwrite: T\n> \n> This wouldn't work, because deleting a working resource (as is done by\n> an Overwrite:T) cancels the checkout.  You would need to use the new\n> \"update\" value for the Overwrite header.\n\nNits. You know what I meant, and the server really should, too. This is\nwhere people read the letter of the law too strictly and screw up clients\nbecause the client wasn't as anal as the server.\n\nBut for discussion. Sure... let's assume that I used \"update\" in there.\n\nThe point is that I need to check out the collection because I'm about to\nreplace its contents.\n\n>    DELETE of a member is a CHECKOUT of two items: the thing to DELETE and the\n>    parent collection.\n> \n> Only the parent collection needs to be checked-out in order to\n> DELETE a member of that collection.\n\nYah, this was my rambling above. What about reserved checkouts and stuff for\nthe member? e.g. is it possible to just delete the thing without having it\nchecked out?\n\n>    Without being able to do a CHECKOUT on a collection, there wouldn't be a way\n>    to do any of the above.\n> \n> You could just use a VERSION-CONTROL request to create a new version\n> selector whose target is the desired collection version.  Then you can\n> do all your operations on that version selector.  It is one extra round\n> trip, but if that really matters, we could easily add a \"DAV:keep-checked-out\"\n> option to the VERSION-CONTROL request.\n\nThat feels *way* bogus. Use VERSION-CONTRL? And just how do I get that to\nparticipate within an activity? Or to MERGE it? etc\n\n> This would allow us to avoid\n> all the extra complexity that would result from having two ways to manipulate\n> versioned collections.\n\nI'm not seeing the complexity. Check out a collection version; you get a\nworking collection; modify it at will; check it in.\n\nThe working collection operates just the same as a checked-out collection\nversion selector. And this is right: they're both representative of a\nchecked-out [collection] resource. Seemed pretty obvious to me.\n\nWhere's the problem? :-)\n\nCheers,\n-g\n\n-- \nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-12601719"}, {"subject": "Re: Working collection", "content": "On Sat, Nov 18, 2000 at 06:33:22PM -0500, Geoffrey M. Clemm wrote:\n> \n>    From: Greg Stein <gstein@lyra.org>\n> \n>    A checkout is supposed to work on *either* a version selector or the version\n>    itself. When I discussed/asked-for-clarification-on some of this on the list\n>    a month or two ago, that was the point of view that I understood.\n> \n> Versioned collections are significantly more complicated than other\n> versioned resources because of the interactions between the collection\n> versions and the collection member versions.  So although working\n> (non-collection) resources are quite reasonable, working collections\n> are quite problematic.  In particular, what kind of resources are members\n> of a working collection, and especially, what kind of resources are\n> the members that themselves are collections?   Version selectors do\n> not have this problem, because you have a tree of version selectors\n> (i.e. members of version selectors are other version selectors),\n> unlike the \"free floating\" working collections, whose members are ???\n\nCovered in the other note.\n\n>    And more\n>    specifically, I didn't like some the semantics attached to checking out a\n>    version selector, so I was making sure that a checkout on a version was\n>    possible, and that operations could be done that way.\n> \n> As I recall, the semantics you didn't like was that you'd have to have\n> your own tree of version selectors (since you can't check out somebody\n> else's version selector that is already checked out to them).\n\nRight. The modify-in-place would interfere with other users.\n\n> But if\n> you've got versioned collections, it's natural to get some kind of\n> tree when you checkout the collection, so it might as well be a tree\n> of version selectors.\n\nYes. I was going to make a collection's internal members available via a\nworking collection, but only for limited operations (namely: DELETE).\n\nI understand that the spec needs to be a bit more lucid than the hand-waving\nthat I'm doing with those internal members :-)\n\n>    > A collection version only has bindings to version histories\n>    > (section 12.6).  In your example, the newly created resource\n>    > (using PUT) would not be a version history, indeed it would not\n>    > be version controlled (unless the server version controlled\n>    > _every_ resource).\n>    > </tim>\n> \n>    1) In my system above, the PUT creates a working resource within an\n>       activity. I don't see anything in the spec that says it must be\n>       otherwise.\n> \n> The activity part is orthogonal.  It's the collection containing the\n> request-URL of the PUT that is important.  If the collection is a \n> collection version, the PUT fails.\n\nAgreed.\n\n> If the collection is a collection\n> version selector, the PUT succeeds and creates a new (non-versioned)\n> resource (which your server can automatically put under version control\n> if it wishes).\n\nAssuming the collection version selector supports auto-versioning, then yes:\nI agree. If it doesn't auto-version, then the above fails.\n\nIn my model, if the parent is a working collection, then the PUT succeeds\nand becomes a working resource. (and an analogous behavior for MKCOL)\n\n>    2) Yes, it becomes version-controlled, as that is the behavior that my\n>       server imposes when a resource is PUT there. This is allowed by the spec.\n> \n> When something becomes version-controlled, it becomes a version\n> selector. If you were using version selectors,\n\nI'm using version selectors. Kind of mandatory :-)\n\n> this would all be\n> consistent (i.e. you'd be creating a new version selector\n> as a member of an existing version selector).\n\nAssuming auto-versioning, then yes. The net result is a new version\nselector.\n\n> If you are using\n> working collections, we'd have to define the semantic interactions\n> of version selectors nested within working collections.\n\nUnless you state that a PUT/MKCOL creates a working resource within the\nworking collection.\n[ and thus: they also create a version history; not sure when a version\n  would be created, though ??? ]\n\n> This becomes\n> complex because working resources are deleted when they are checked\n> in, while version selectors are not.  So if you check in a working\n> collection, what happens to the possibly checked-out version selectors\n> inside that working collection?\n\nYes, this could be complicated :-). You could say that they just continue to\nhang out, but what does the parent collection (the working collection that\nyou checked in) become? You can't just get rid of it because of the\nnamespace consistency issue.\n\n> With collection version selectors,\n> this is not an issue because they are not deleted when you check them\n> in so that nested version selectors do not get orphaned by checkin.\n\nYup. But checked-out version selectors are not \"thread safe\" if you will :-)\n\n>    3) At MERGE time, a version history is created for the PUT'd resource and a\n>       new collection version is created which references that.\n> \n> MERGE modifies the properties of existing version selectors\n> (e.g. DAV:target and DAV:merge-predecessor-set), but\n> does not create any new versions (only CHECKIN does that).\n\nEuh... when did that happen? Damn.\n\nJust how is a transacted change set supposed to happen, then? Before, it was\n\"accumulate the changes into an activity, then merge the activity.\" What\nnow?\n\n>    >     <Greg>\n>    >     or even:\n>    >         COPY http://host.name/repo/somedir/foo.c\n>    >         Destination: http://host.name/repo/$svn/wrk/100.3/foo.c\n>    >     </Greg>\n>    > \n>    > <tim>\n>    > This would also be a violation of the semantics of versioned\n>    > collections since the source is not a version history -- and even\n>    > if you did attempt to copy a version history over that would fail\n>    > with </DAV:cannot-copy-history> (Section 15.7) <g>\n>    > </tim>\n> \n> Yes, if working collections had version histories as members.\n> \n>    Aah, bunk. I'm copying into a working resource for the versioned\n>    collection.  I can do whatever I'd like at that point.\n> \n> Yes, if working collections are more like checked-out collection\n> version selectors, but in that case, we would have to decide what\n> exactly can be members of working collections (e.g. version\n> selectors?).  Because of the problems with checking in working\n> collections that have version selector members, it would be much\n> simpler to just use collection version selectors.\n\nSo the issue isn't about \"what goes into a working collection\" as much as\n\"what happens when you check it in?\"\n\n>    And the\n>    source implicitly identifies a version history, so the fancy\n>    wording / semantics about \"collections only containing versioned\n>    collections\" can easily be handled at MERGE time.\n> \n> Since MERGE just modifies version selector properties, it doesn't give\n> you an opportunity to introduce version histories.\n\nGrr. See above.\n\n>    Hell, the model about a versioned collection only referring to version\n>    histories is just so much baloney to me. I have a collection. I want to copy\n>    something into it. Great. I make it work.\n> \n> We need to avoid the ambiguous term \"versioned collection\" (I believe\n> Tim is the culprit in this instance :-).  In particular, it is baloney\n> to say that a collection version selector only contain version histories,\n> but it is true that collection *versions* can only contain version\n> histories.\n\nAgreed.\n\nSo, I will restate:\n\n    Hell, the model about a collection version only referring to version\n    histories is just so much baloney to me. I have a collection. I want to copy\n    something into it. Great. I make it work.\n\nAnd in the sense of \"making it work\", I check out the collection version,\nadd the stuff, then check it in.\n[ I agree that you can't add stuff to a collection version ]\n\nGetting all academic with this-contains-that just peeves me. The goal is to\nmake things work, rather than have a pure model that doesn't work.\n\n>    Describe it how you want, but it is still going to work as any rational\n>    person is going to expect: check out the collection, copy something in, then\n>    merge that back.\n> \n> I'm with you on the \"checkout\" and \"copy into\", but that needs to be\n> followed by a \"checkin\", not a MERGE.\n\nCan I do a CHECKIN on an activity?\n\nI see no other way to create a transacted change set.\n\n>    > <tim>\n>    > It is unnecessary to CHECKOUT the thing being DELETEd since it is not\n>    > modified by the DELETE method, only the parent collection is modified (by\n>    > loosing an internal member).\n>    > </tim>\n> \n>    That may be strictly true, but if I check out a collection into a working\n>    resource, then I don't necessarily have each of the members defined to be\n>    available below that working resource.\n> \n> I'm not sure what you mean by \"have\".  The collection knows its members.\n> If you delete one, the server knows what to delete, without you needing\n> to have anything beyond the collection.\n\nI meant that you may not be able to construct a URL to refer to the members.\nIf you check out '/some/collection/' into a working collection, then\n/working/collection/foo.html' may not be available.\n\nIn truth, I'll probably make the URL available for DELETE, but nothing else.\nYou'd need to go to the version (selector) to refer to the contents.\n\n>    Therefore, how would I identify which\n>    resource to delete, with respect to that checked out collection.\n> \n> The name (URL) of the resource includes both the collection (lop off\n> the last segment of the URL) and which member of that collection is\n> to be deleted (identified by the last segment of the URL).  That\n> fully identifies the resource to be deleted.\n\nRight.\n\nMy question was whether the URL existed in the first place. As I've\nmentioned, I think it will exist for DELETE, but you can't GET or PROPFIND\nor PUT to the bugger.\n\n>    I guess it would be possible to DELETE the version selector, have the server\n>    identify the parent, see that a working resource is available, and then go\n>    and modify that working resource. Hrm. I'll have to think about that.\n> \n> You can only DELETE the version selector if it is checked out\n> (which is what I'd want you to do, so actually I'm all for that :-).\n\nWait a minute.\n\nPeople keep saying \"you only need to CHECKOUT the parent. you don't need to\nCHECKOUT the parent *and* the target.\" But now you're saying that I have to\ncheck out the version selector (the target) to delete it.\n\nSo which is it?\n\nAnd if I check out the target and DELETE that, then that is just an\nUNCHECKOUT, right?\n\nHmm. The spec is totally silent on deleting any of the new resource types.\nWhat happens when you delete an activity? a working resource? a workspace?\n\n> If we are going to support working collections, the DELETE would have\n> to be issued against the working collection member.  But that tells\n> the server all it needs to know.\n\nRight.\n\nThe question at hand is whether the (target) version that you want to delete\nmust be checked out first.\n\n>    > <tim>\n>    > The operations you describe are more appropriate to a checked out\n>    > collection version selector; and I agree that they are essential.\n>    > </tim>\n> \n>    A working resource is a working resource. It shouldn't matter whether it\n>    came from a checked out version selector or a checked out version.\n> \n> Well, to be precise, the result of checking out a version selector is a\n> checked out version selector, not a working resource (you only get a\n> working resource by checking out a version).  A working resource has\n> some very different behavior from a checked out version selector.\n> In particular, checking in a working resource deletes the working resource,\n> while checking in a checked out version selector just changes its state\n> from checked out to checked in.\n\nFine. But all other operations: PUT, PROPFIND, etc work the same for a\nchecked-out version selector and a working resource, right? You can still do\nall the same stuff to it. A CHECKIN treats them a bit different, but they\nseem pretty much the same otherwise.\n\nCheers,\n-g\n\n-- \nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-12616648"}, {"subject": "Re: Working collection", "content": "   From: Greg Stein <gstein@lyra.org>\n\n   Why would a checked-out version selector (of a member or a collection) ever\n   be any different from a working resource? What would be the justification\n   for such a difference?\n\nA checked-out (non-collection) version selector is very similar to\na (non-collection) working resource.  The main difference is that \nthe working resource is deleted when it is checked in, while the\nversion selector is not.  \n\nFor collection version selectors, the model is relatively simple ...\na collection version selector has as members other version selectors\n(possibly other collection version selectors), as well as non-versioned\nmembers.  So a collection version selector is the root of a tree of\nversion selectors (and possibly non-versioned resources).\n\nIn contrast, it sounds like you want a collection working resource\n(aka a \"working collection\") to not be a tree, which would make a\nworking collection very different from a checked out collection\nversion selector.\n\n   Doing a check-out in place does not work well for me. I want to construct an\n   activity, check out a bunch of things w.r.t. that activity, make the\n   changes, then merge the activity in one fell swoop. That model works great,\n   and I don't see any incentive/benefit to using a different model.\n   [ I will admit to not reading the latest incarnation of workspaces, but it\n     still seems moot if the activity model and working resources satisifies my\n     problems ]\n\nIf you only checkout leaf (i.e. non-collection) resources, that works\nfine, but as soon as you want to track the history of the collections,\nyou need to decide what kind of resource are the members of the checked\nout collections.  That's where I believe that the notion of a working\ncollection either falls apart, or at least, becomes quite complex.\n\nAll that the \"in-place\" checkout requires is that you precede your\nwork with a single MKWORKSPACE request, that simply tells the server\n\"this is the root of the tree of resources I'm going to be mucking with\".\nIf the client is going to be versioning collections, it needs to know\nthat anyway, and it seems reasonable to have it issue the single MKWORKSPACE\nrequest before it checks out its first collection.\n\n   In the model that I'm going to use, I don't need to \"slash-through\" the\n   working collection. I just need it to establish a spot where I can create\n   new members/sub-collections.\n\nIt's the semantics of those new members/sub-collections that is the\ntricky part.  What if you MOVE some existing version-controlled\nresources into the working collection, checkout some of the existing\nmembers of the working collection, and create new members.  All of\nthese have to be modeled in a way that allows the server at checkin\ntime to decide what version histories should be associated with what\nnames in the new version of the collection.\n\n   If I want to reach an existing child resource,\n   then I'll go through version selectors (to their versions, which I CHECKOUT,\n   and then to their working resources).\n\nSo when you checkout an existing child resource of a working collection,\nhow is this reflected in the state of that working collection?  What happens\nif you delete a  checked-out child of that working collection?  Does that\ndelete the working resource, or is it still around but invisible when\nyou check it in?  One can probably create answers to these things,\nbut it won't be simple.\n\n   I think the point here is that I'm working in a transactional / change set\n   model here. I get a bunch of working resources, change them, then check them\n   in in one fell swoop. Navigation and management of checked out resources is\n   minimal and short-lived. Give me a working resource, I'll tweak in, then\n   merge it back in (possibly with other changes).\n\nIt's capturing the namespace changes (i.e. the changes to the collections)\nthat is the challenge.  You need to distinguish between new members being\nadded, existing members being renamed, existing members being replaced\nby new members, and existing members being replaced by members from other\ncollections.  A tree of version selectors can handle this, and I would\nregret adding significant complexity to the protocol just to provide an\nalternative way of doing it.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-12636828"}, {"subject": "Re: VERSION-CONTROL on an existing resourc", "content": "   From: Greg Stein <gstein@lyra.org>\n\n   On Sat, Nov 18, 2000 at 10:38:49AM -0500, Geoffrey M. Clemm wrote:\n   >    From: Greg Stein <gstein@lyra.org>\n   > \n   >    Section 9.1.1 shows the use of a VERSION-CONTROL on an existing resource.\n   >    However, it responds with a 201 (Created). I'm thinking that it should be a\n   >    200 (OK) or a 204 (No Content) since it is not creating the Request-URI.\n   > \n   > I agree.  I'd prefer just the 200(OK).  I'll make this change if nobody\n   > objects.\n\n   Are you interested in formalizing the response at all, to provide the\n   relevant URIs?\n   (I'm just so-so on it, but others might want the extra feature)\n\nI'm medium to strongly against adding info like the version history\nor initial version URL to the VERSION-CONTROL response.  Many clients\nwon't need this information, and clients that do need it will often\nneed more than that, so they'll have to issue a PROPFIND or property\nreport request anyway.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-12648302"}, {"subject": "Re: Working collection", "content": "   From: Greg Stein <gstein@lyra.org>\n\n   On Sat, Nov 18, 2000 at 04:47:56PM -0500, Geoffrey M. Clemm wrote:\n   > We should first confirm that we agree on the semantics of a collection\n   > version and a collection version selector, namely, that each member of\n   > a collection version is a version history,  while each members of a\n   > collection version selector is either an unversioned resource or a\n   > version selector.\n\n   Sounds fine to me.\n\nGreat!  Then we're at least reading the same book, although perhaps not\nquite yet on the same page (:-).\n\n   > By analogy with collection versions, the members could be version\n   > histories.  By analogy with collection version selectors, the members\n   > could be unversioned resources or other working resources.\n\n   ... or version selectors.\n\nEven better!\n\n   Let's call the first one, Model A. And the second one Model B.\n   ... (read: avoid Model C)\n   ... Of these, I'd rather take the flexibility of Model B.\n\nGreat, now we're on the same chapter of the same book (:-).\n\n   Concretely: Subversion has several server-defined namespaces. One each for\n   activities, working resources, versions, and histories.\n\nThat corresponds precisely to what is currently in the protocol.\nIn fact, the protocol has just one additional namespace: workspaces\n(where a workspace is really just a root for a tree of version selectors).\n\n   The history resources cannot be moved out of their space.\n\nThe protocol has this restriction as well.  Note that if you support\ncollection versions, that a history resource has multiple names\n(multiple bindings).  In particular, it has its name in the \"history\nnamespace\", but it also has names in the \"version namespace\".\nFor example, if http://gmc.repo/his/id73 identifies a history\nresource, and http://gmc.repo/ver/c23 is a collection version with\na member named \"foo.html\" that identifies this history resource,\nthen http://gmc.repo/his/id73 and http://gmc.repo/ver/c23/foo.html\nare two names for the same history resource, one in the history\nnamespace and the other in the version namespace.\n\n   If any server uses server-defined namespaces for histories, then a MOVE\n   would be impossible if you tried to enforce \"working collections must\n   contain version histories.\"\n\nI don't think working collections should contain version histories,\nbut I'll point out that you could allow version histories to be\nmoved around in the \"working collection\" namespace, even though you\ncan't move them around in the \"history\" namespace.\n\n   >    The working resource for the collection is also handy for\n   >    deleting or for replacing the collection:\n   > \n   >        DELETE http://host.name/repo/$svn/wrk/100.3\n   >        (note that this request also requires a checked-out parent)\n   > \n   Note that Tim also pointed out that we probably would not delete the working\n   collection itself, but delete the member from the parent collection. The\n   above request is ambiguous with \"do an UNCHECKOUT\".\n\nOops, I didn't read this carefully in my first response.  UNCHECKOUT\n(as currently defined) only applies to a checked out version selector.\nYou just DELETE a working resource if you don't want it any\nmore. (i.e. don't want to check it in).  So the above request is not\nambiguous with \"do an UNCHECKOUT\", but rather *is* the way you tell\nthe server that you no longer are interested in that working resource.\n(And the parent, \"http://host.name/repo/$svn/wrk\" is not under version\ncontrol, and therefore does not have to be checked out prior to the\ndeletion.\n\nOn the other hand, \n\n DELETE http://host.name/repo/$svn/wrk/100.3/foo.html\n\nis the way that you delete the member named \"foo.html\" from the\nchecked out collection.\n\n   I'm still a bit woozy on deletion of resources, both in WebDAV and DeltaV.\n   In WebDAV, you lock and delete the target.\n\nI don't see any reason to lock the target of a DELETE (the lock is\njust blown away by the DELETE).  I'd just issue the DELETE.\n\n   In DeltaV, do we checkout the\n   target to make sure we are allowed to delete it? (e.g. watch out for\n   reserved checkouts and stuff).\n\nThere's no reason to checkout a resource before deleting it.\nThe deletion is a modification to the collection containing\nthe resource, not to the resource itself.  A checkout of a\nresource (reserved or not) has no effect on whether or not\nyou can delete it.\n\n   I'm tempted to just say \"check out both of them, then delete relative to the\n   parent collection\".  (sigh... but checking out the target is probably\n   redundant, then) ... Ideas, anyone?\n\nJust repeat the mantra \"a delete is an operation on the parent collection\nof a resource\", and all will be well (:-).\n\n   >        COPY http://host.name/repo/somedir/\n   >        Destination: http://host.name/repo/$svn/wrk/100.3\n   >        Overwrite: T\n   > \n   > This wouldn't work, because deleting a working resource (as is done by\n   > an Overwrite:T) cancels the checkout.  You would need to use the new\n   > \"update\" value for the Overwrite header.\n\n   Nits. You know what I meant, and the server really should, too.\n   This is where people read the letter of the law too strictly and\n   screw up clients because the client wasn't as anal as the server.\n\nWell, the server knows what you said (i.e. \"get rid of the working\nresource thereby canceling the checkout\"), and it's really important\nthat the client and the server agree on this (or else the client will\nbe surprised by what the server ends up doing, because it will do what\nthe client said, not what it meant).\n\n   But for discussion. Sure... let's assume that I used \"update\" in there.\n   The point is that I need to check out the collection because I'm about to\n   replace its contents.\n\nIf you are going to modify it's contents (i.e. add/delete/change a\nmember), then sure, you need to check it out.  But if you are going\nto delete the collection, then you are operating on the *parent*\nof the collection, i.e. deleting a member of the parent of the\ncollection, so it is the *parent* that needs to be checked out for\nthe DELETE.\n\n   >    DELETE of a member is a CHECKOUT of two items: the thing to\n   >    DELETE and the parent collection.\n   > \n   > Only the parent collection needs to be checked-out in order to\n   > DELETE a member of that collection.\n\n   Yah, this was my rambling above. What about reserved checkouts and stuff for\n   the member? e.g. is it possible to just delete the thing without having it\n   checked out?\n\nYes.  Checking something out prior to deleting it is as unnecessary as\nlocking it before deleting it.  If you cared about the state of that resource,\nyou wouldn't be deleting it.\n\n   >    Without being able to do a CHECKOUT on a collection, there\n   >    wouldn't be a way to do any of the above.\n   > \n   > You could just use a VERSION-CONTROL request to create a new version\n   > selector whose target is the desired collection version.  Then you can\n   > do all your operations on that version selector.  It is one extra round\n   > trip, but if that really matters, we could easily add a \"DAV:keep-checked-out\"\n   > option to the VERSION-CONTROL request.\n\n   That feels *way* bogus. Use VERSION-CONTRL? And just how do I get that to\n   participate within an activity? Or to MERGE it? etc\n\nThe version selector created by VERSION-CONTROL has all the activity\nbehavior that a working resource has.  When you check it out, the\nDAV:activity-set of the version selector is set to be the specified\nactivity(s), and when you check it in, the new version is added to the\nDAV:version-set of the activity.\n\n   > This would allow us to avoid all the extra complexity that would\n   > result from having two ways to manipulate versioned collections.\n\n   I'm not seeing the complexity. Check out a collection version; you get a\n   working collection; modify it at will; check it in.\n   The working collection operates just the same as a checked-out collection\n   version selector. And this is right: they're both representative of a\n   checked-out [collection] resource. Seemed pretty obvious to me.\n\nIf we make working collections act like checked-out collection version\nselectors, then I agree that we can avoid the complexity.  It appears\nthat the main question we have to resolve is what precisely are the\nmembers of a working collection.  If they are version selectors, then\nwe are almost there, since the working collection then just becomes\nthe root of a tree of version selectors.  The only thing left to do\nto unify the models is to make the root *also* be a version selector,\nand then we have a uniform tree of version selectors.\n\nWhich is a good transition into your next message:\n\n   From: Greg Stein <gstein@lyra.org>\n\n   > But if you've got versioned collections, it's natural to get some\n   > kind of tree when you checkout the collection, so it might as\n   > well be a tree of version selectors.\n\n   Yes. I was going to make a collection's internal members available via a\n   working collection, but only for limited operations (namely: DELETE).\n   I understand that the spec needs to be a bit more lucid than the hand-waving\n   that I'm doing with those internal members :-)\n\nHow were you planning on enforcing this limitation?  Or perhaps more\nimportantly, why were you planning on introducing such a limitation?\nIf the working collection creates a tree of version selectors, why not\njust use those version selectors (which are local to you, and therefore\nwon't be checked out by anyone else) for versioning operations on those\nmembers?\n\nThe model then becomes: Check-out a collection (which then creates\na tree of version selectors), and then checkout one of those version\nselectors when you want to change that member of the tree.\n\n   In my model, if the parent is a working collection, then the PUT\n   [into the working collection] succeeds and becomes a working\n   resource. (and an analogous behavior for MKCOL)\n\nTo be careful about terminology, it becomes a version selector, not\na working resource, since auto-versioning creates version selectors,\nnot working resources.  (You indicate as much below, so this is just\nme being pedantic :-).\n\n   >    Yes, it becomes version-controlled, as that is the behavior\n   >    that my server imposes when a resource is PUT there. This is\n   >    allowed by the spec.\n\n   > When something becomes version-controlled, it becomes a version\n   > selector. If you were using version selectors,\n\n   I'm using version selectors. Kind of mandatory :-)\n\nWell, one could invent a new kind of resource for this, but using\nversion selectors would certainly keep the model simpler.\n\n   > this would all be\n   > consistent (i.e. you'd be creating a new version selector\n   > as a member of an existing version selector).\n\n   Assuming auto-versioning, then yes. The net result is a new version\n   selector.\n\nOK, we're in good shape then.\n\n   > If you are using\n   > working collections, we'd have to define the semantic interactions\n   > of version selectors nested within working collections.\n\n   Unless you state that a PUT/MKCOL creates a working resource within the\n   working collection.\n\nThat would not work very well, since when you checkin a working resource,\nit is deleted, which is not the behavior you would want (it would make\nit appear that you wanted to delete that member of the working collection).\n\n   [ and thus: they also create a version history; not sure when a version\n     would be created, though ??? ]\n\nWhen you first create a version history, it is given an initial version.\nWhen you put an existing (non-versioned) resource under version control,\nthe initial version is a copy of the state of the non-versioned resource.\n\n   > This becomes\n   > complex because working resources are deleted when they are checked\n   > in, while version selectors are not.  So if you check in a working\n   > collection, what happens to the possibly checked-out version selectors\n   > inside that working collection?\n\n   Yes, this could be complicated :-). You could say that they just continue to\n   hang out, but what does the parent collection (the working collection that\n   you checked in) become? You can't just get rid of it because of the\n   namespace consistency issue.\n\nYes.  This is why checked-out version selectors are preferable for\ncollections, because when you checkin a checked-out version selector,\nit just becomes a checked-in version selector, and all of its members\nare still visible and accessible.\n\n   > With collection version selectors,\n   > this is not an issue because they are not deleted when you check them\n   > in so that nested version selectors do not get orphaned by checkin.\n\n   Yup. But checked-out version selectors are not \"thread safe\" if you will :-)\n\nRemember that you got \"your own\" tree of version selectors when you\nchecked out the desired collection.  So nobody else is checking out\nyour version selectors (they'd be checking out *their* version selectors,\nthat were created when they did *their* checkout of the collection).\n\nSo the only constraint here is that you can't checkout the same resource\ntwice at the same time yourself, without first creating a new tree\nof version selectors, but that seems like a pretty reasonable\n(and perhaps even desireable) restriction.\n\n   >    3) At MERGE time, a version history is created for the PUT'd resource and a\n   >       new collection version is created which references that.\n   > \n   > MERGE modifies the properties of existing version selectors\n   > (e.g. DAV:target and DAV:merge-predecessor-set), but\n   > does not create any new versions (only CHECKIN does that).\n\n   Euh... when did that happen? Damn.\n\nWell, actually, it's always been that way.\n\n   Just how is a transacted change set supposed to happen, then?\n   Before, it was \"accumulate the changes into an activity, then merge\n   the activity.\" What now?\n\nI'd support the introduction of the ability to CHECKIN an activity,\nto mean \"atomically checkin all checked-out resources for that\nactivity\".  Does anyone object?  (pretty sneaky burying this\nquestion deep in this long message ... :-).\n\n   > ... Because of the problems with checking in working\n   > collections that have version selector members, it would be much\n   > simpler to just use collection version selectors.\n\n   So the issue isn't about \"what goes into a working collection\" as much as\n   \"what happens when you check it in?\"\n\nOr \"can we just use collection version selectors, since they already\nhave the appropriate behavior on checkin?\"\n\n   Getting all academic with this-contains-that just peeves me. The\n   goal is to make things work, rather than have a pure model that\n   doesn't work.\n\nWell, collections are all about what contains what, so I believe that\n\"making things work\" for version-controlled collections hinges on\ngetting the \"what contains what\" questions answered rigorously.\n\n   >    Describe it how you want, but it is still going to work as any\n   >    rational person is going to expect: check out the collection,\n   >    copy something in, then merge that back.\n\n   > I'm with you on the \"checkout\" and \"copy into\", but that needs to be\n   > followed by a \"checkin\", not a MERGE.\n\n   Can I do a CHECKIN on an activity?\n   I see no other way to create a transacted change set.\n\nI agree that having a transacted change set is an important\ncapability, and that doing a CHECKIN on an activity is the\nright way to model it.  I'll raise this in a separate mail\nmessage (for those that didn't make it all the way into\nthis one :-).\n\n   If you check out '/some/collection/' into a working collection, then\n   /working/collection/foo.html' may not be available.\n   In truth, I'll probably make the URL available for DELETE, but nothing else.\n   You'd need to go to the version (selector) to refer to the contents.\n\nThat seems like an unnecessary complication to the model ... you can\nremove this restriction, and the model becomes simpler, and the clients\nlife becomes simpler as well.\n\n   >    I guess it would be possible to DELETE the version selector,\n   >    have the server identify the parent, see that a working\n   >    resource is available, and then go and modify that working\n   >    resource. Hrm. I'll have to think about that.\n   > \n   > You can only DELETE the version selector if it is checked out\n   > (which is what I'd want you to do, so actually I'm all for that :-).\n\n   Wait a minute.\n   People keep saying \"you only need to CHECKOUT the parent. you don't need to\n   CHECKOUT the parent *and* the target.\" But now you're saying that I have to\n   check out the version selector (the target) to delete it.\n   So which is it?\n\nMy apologies ... my comment was very poorly worded.  The \"it\" I was\nreferring to (that must be checked out) was the parent collection that\ncontains the version selector.\n\n   And if I check out the target and DELETE that, then that is just an\n   UNCHECKOUT, right?\n\nYes.\n\n   Hmm. The spec is totally silent on deleting any of the new resource types.\n   What happens when you delete an activity? a working resource? a workspace?\n\nGood point.  There are things that we should say here about what happens\nto references to those objects when you delete them.  I'll try to get\nsomething written up this week.\n\n   >    > <tim>\n   >    > The operations you describe are more appropriate to a checked out\n   >    > collection version selector; and I agree that they are essential.\n   >    > </tim>\n\n   >    A working resource is a working resource. It shouldn't matter\n   >    whether it came from a checked out version selector or a\n   >    checked out version.\n\n   > Well, to be precise, the result of checking out a version\n   > selector is a checked out version selector, not a working\n   > resource (you only get a working resource by checking out a\n   > version).  A working resource has some very different behavior\n   > from a checked out version selector.  In particular, checking in\n   > a working resource deletes the working resource, while checking\n   > in a checked out version selector just changes its state from\n   > checked out to checked in.\n\n   Fine. But all other operations: PUT, PROPFIND, etc work the same for a\n   checked-out version selector and a working resource, right? You can still do\n   all the same stuff to it. A CHECKIN treats them a bit different, but they\n   seem pretty much the same otherwise.\n\nThat would depend on how we are handling \"working collections\".\nEarlier, you were suggesting that we only allow DELETE on members\nof working collections, and not PROPFIND, CHECKOUT, etc.  If so,\na working collection would be very different from a checked out\ncollection version selector.  But I believe that the checked out\ncollection version selector semantics are the ones that we want,\nso we should use those.\n\nOne way to think about this is that I'm suggesting that checking\nout a collection version should create a workspace (i.e. a tree\nof version selectors), or in other words, that a working collection\nis a workspace.  In fact, I'd be happy to allow you to create a\nworkspace by issuing a checkout against a collection version.\n\nThe only difference between such a workspace and one that was created\nby a MKWORKSPACE is that the server selects the name for the workspace,\nwhile with a MKWORKSPACE, the client specifies the name for the workspace.\n\nSo, if we say that you can CHECKOUT a collection version to create\na workspace, and you can CHECKIN an activity to get transactioning,\nwould you have what you need?\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-12657178"}, {"subject": "Atomic CHECKIN of all checkouts of an activit", "content": "Greg has asked for the ability to tell the server that he wants\nall checkouts against an activity to be checked in atomically.\n\nA natural way to marshall this would be to allow CHECKIN to be\napplied to an activity (since activities cannot be versioned,\nthis is unambiguous).  Or we could introduce a CHECKIN-ACTIVITY\nmethod.\n\nAny preferences (or objections)?\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-12685106"}, {"subject": "Deletion semantics for versioning metadat", "content": "Greg has asked that we clarify the results of deleting things\nlike working resources, versions, version histories, etc.\n\nI believe it is sufficient for us to say that if a server allows you\nto delete such a resource, that all the versioning properties of other\nresources that refer to that resource should be updated to no longer\nrefer to the deleted resource (I'd probably enumerate those properties\nto make sure there is no misunderstanding).\n\nAny objections?\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-12693045"}, {"subject": "RE: Working collection", "content": "> From: Geoffrey M. Clemm [mailto:geoffrey.clemm@rational.com]\n\n> One way to think about this is that I'm suggesting that checking\n> out a collection version should create a workspace (i.e. a tree\n> of version selectors), or in other words, that a working collection\n> is a workspace.\n\nSomething I blithely glossed over with this proposal was the fact\nthat a version selector needs a target, and checking out a collection\nversion gives you the target for a version selector for that collection,\nbut does *not* give you targets for version selectors for members of\nthat collection.  This would have to be done by the client, with\neither a SET-TARGET (e.g. with a Depth header and a label)\nor a MERGE (e.g. with a baseline).  So the sequence would be:\n\n- create a new workspace by checking out a collection version\n- set the targets of the version selectors in that workspace\n  with either a SET-TARGET or MERGE request\n- do whatever CHECKOUT's, PUT's, DELETE's, CHECKIN's etc. you\n  want to version selectors in that workspace.\n- DELETE the workspace when you are done (or leave it around if\n  you think you might be doing more work in that collection later.\n\nThis does require two extra requests (the SET-TARGET or MERGE to\nget started and the DELETE when you are done), but that does not\nseem like an unreasonable amount of overhead.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-12701498"}, {"subject": "Re: workspace", "content": ">   From: Tim_Ellison@uk.ibm.com\n\n>   The spec should say that workspaces cannot 'overlap',\n>   i.e., a workspace cannot be a member of another workspace,\n>   and bindings cannot be made outside the workspace.\n>   Having multiple workpace 'parents' would confuse\n>   many things, including current activity, and make\n>   workspace semantics for single history selectors very\n>   time consuming to enforce.\n>\n> This is a good point, but I think we can address it in a\n> less draconian fashion.\n\n8-|\n\n> I think it is sufficient to state that a version selector\n> is contained by at most one workspace, namely, the one\n> specified in its DAV:workspace property, and that when a\n> resource is put under version control, its DAV:workspace\n> property is set to be the DAV:workspace of its parent\n> collection.\n\nOk.\n\n> This does raise another question:\n>\n> Should we require a DAV:workspace property on *non-version-\n> controlled* workspace members?\n\nYes.\n\n> If not, we need to modify the preceding statement to say:\n>\n> \"... the DAV:workspace of its nearest parent collection\n> that has a DAV:workspace property.\"\n\n\n\n", "id": "lists-005-12710194"}, {"subject": "Re: workspace", "content": "    <tim>\n    - \"In order to ensure unambiguous merging and baselining\n    semantics, a workspace may contain at most one version\n    selector for a given version history.\"  A bind to an\n    existing resource in another workspace would require the\n    server to determine if there are any version selectors\n    in each workspace that fail this precondition.\n    </tim>\n\n  <Geoff>\n  This last complication is one a server already must\n  deal with, since the VERSION-CONTROL request can be\n  used to create a version selector whose DAV:target\n  refers to a version in an existing version history.\n  </Geoff>\n\nThe difference being that the search space for a VERSION_CONTROL request is\nthe history of an existing versioned resource, whereas the seach space for\na bind to a workspace is the entire workspace.\n\nTim\n\n\n\n", "id": "lists-005-12718729"}, {"subject": "Re: Working collection", "content": "For each \"versioned collection\" I meant to say \"collection version\", thanks\nfor picking that up.\n\nTim Ellison\nJava Technology Centre, MP146\nIBM UK Laboratory, Hursley Park, Winchester, UK.\ntel: +44 (0)1962 819872  internal: 249872  MOBx: 270452\n\n\n\"Geoffrey M. Clemm\" <geoffrey.clemm@rational.com> on 2000-11-17 08:00:35 PM\n\nPlease respond to \"Geoffrey M. Clemm\" <geoffrey.clemm@rational.com>\n\nTo:   ietf-dav-versioning@w3.org\ncc:\nSubject:  Re: Working collections\n\n\n\n\n   From: Tim_Ellison@uk.ibm.com\n\n   We agreed that URLs to versions exist outside the normal DAV namespace.\n   This is concept is variously reflected in the spec as virtually hosted\nURLs\n   (http://repo.webdav.org/his/23/ver/42) and 'stolen' parts of the root\n   collection namespace (e.g. http://www.webdav.org/repo/wr-157.html).\n   Clients should not, therefore, expect to be able to construct new URLs\n   based on these server maintained URLs (i.e. removing / adding segments\nto\n   reach other resources).\n\nYes.\n\n   Q1:\n   We know that a versioned collection is a mapping from names to version\n   histories.\n\nActually, we no longer use the ambiguous \"versioned collection\"\nterminology, so we actually don't know that (:-).  We do know that\na collection version is a mapping from names to version histories.\nWe also know that a collection version selector is a mapping from\nnames to other version selectors (and to resources that aren't under\nversion control).\n\n   So when you check out a versioned collection what can you do\n   with the resulting working collection?\n\nWorking on a checked out version selector for a collection is well\ndefined, so I assume you mean \"when you check out a collection\nversion, what can you do with the resulting working collection\"?\n\nYou are right that this is not defined, and does not follow from the\nsemantics of checked-out version selectors, so this needs to be fixed.\nMy first choice would be your subsequent answer, i.e. that \"you can\nonly check out a collection version selector, and not a collection\nversion\".  Greg doesn't like that answer, so it's probably worth exploring\nwhat a working collection might be (although I haven't given up hope\nin trying to get Greg to just use workspaces and checked out version\nselectors :-).\n\n   Are you constrained to creating members that bind to histories only?\n\nIf we allow it working collections, then being constrained to creating\nmembers that bind only to histories makes sense.\n\n   Are you prevented from creating new\n   bindings at all?\n\nI don't see any reason for this constraint.\n\n   Q2:\n   Can you delete bindings from a working collection -- presumably yes\nsince\n   if you can't change a working collection's members you can only use them\nto\n   change properties? (There is clearly a good case for checked out\ncollection\n   version selectors).\n\nYes.\n\n   When the server sees a URL to a working collection, say of the form\n   http://repo.webdav.org/vr/9/wr/1/foo it can 'know' about the form of\nthese\n   URLs to determine that everything up to 'foo' is the URL to the working\n   collection and 'foo' is the member of that collection, but there would\nbe\n   (typically) no relationship between that URL and the URL of the history\n   resource that 'foo' is currently bound to; so it would not be possible\nto\n   slash-through 'foo' to reach other resources.\n\nCorrect, which is why I find working collections of negligible value\n(compared to checked-out collection version selectors, which you can\nslash-through).\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-12726562"}, {"subject": "Re: Version selector propertie", "content": "> But back to my original point, that should be determined\n> from the definition of that live property, and should\n> not be something that the versioning spec should need\n> to define.\n\nYou've been so successful at mindreading thus far, that I figured you know\nthat I wasn't suggesting a definition in the spec (we couldn't enumerate\nall the possible live props even if we wanted to) -- but was looking for\nconcensus on a few key live props that we know about already.\n\n> Why?  One reasonable form of getetag is to use some MD5\n> \"footprint\", and in that case, the DAV:getetag of the\n> version and the version selector whose target is that\n> version will be the same.\n\nI agree.\n\nTim Ellison\nJava Technology Centre, MP146\nIBM UK Laboratory, Hursley Park, Winchester, UK.\ntel: +44 (0)1962 819872  internal: 249872  MOBx: 270452\n\n\n\"Geoffrey M. Clemm\" <geoffrey.clemm@rational.com> on 2000-11-17 09:54:13 PM\n\nPlease respond to \"Geoffrey M. Clemm\" <geoffrey.clemm@rational.com>\n\nTo:   ietf-dav-versioning@w3.org\ncc:\nSubject:  Re: Version selector properties\n\n\n\n\n\n   From: Tim_Ellison@uk.ibm.com\n\n   From the versioning spec (section 2.2):\n\n   \"Although the content and dead properties of a checked-in version\nselector\n   are required to be the same as those of its current target, its live\n   properties may differ.\"\n\n   I would have thought that some live properties should(must?) not be\n   different.\n\nIf so, that should be determined from the definition of that live\nproperty, and should not be something that the versioning spec should\nneed to define.\n\n   Hopefully, we would agree that the DAV:getContentLength property must\nnot\n   be different.\n\nThat would follow from the requirement that the content of\nthe version-selector be the same as that of the target version.\n\n   Ok, how about the DAV:resourcetype?  I think that that would most likely\n   not be different, but maybe it would (interpret the same content as\n   different types, editing url and execute url maybe?)  Comments?\n\nIt would seem natural for them to be the same, but as you indicate, a\nserver might come up with reasons for making them different, especially\nif DAV:resourcetype ends up with a structured value.\n\n   DAV:getlastmodified?\n   Well you probably do want that to be different to the version that was\nthe\n   target of the SETTARGET.  I suspect that having the getlastmodified time\ngo\n   'backwards' when setting the target to an earlier version would screw up\n   caching proxies, and clients that rely on If-Unmodified-Since: et al\n   headers.\n\nI agree.\n\n   I think we would agree that the DAV:getetag property should be\ndifferent.\n\nWhy?  One reasonable form of getetag is to use some MD5 \"footprint\",\nand in that case, the DAV:getetag of the version and the version selector\nwhose target is that version will be the same.\n\n   A successful SETTARGET should result in new last modified and etag\nvalues\n   for a version selector.\n\nA new last modified, yes.  A new etag, not necessarily.\n\nBut back to my original point, that should be determined from the\ndefinition of that live property, and should not be something that the\nversioning spec should need to define.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-12738204"}, {"subject": "CHECKIN an activit", "content": ">   Just how is a transacted change set supposed to\n>    happen, then? Before, it was \"accumulate the changes\n>    into an activity, then merge the activity.\" What now?\n>\n> I'd support the introduction of the ability to CHECKIN\n> an activity, to mean \"atomically checkin all checked-out\n> resources for that activity\".  Does anyone object?  (pretty\n> sneaky burying this question deep in this long message ...\n> :-).\n\nJust to show that people do read these long threads -- I think this is a\nfine idea.\n\nTim\n\n\n\n", "id": "lists-005-12749229"}, {"subject": "Re: Working collection", "content": "Oohh, that was a painful labour, but here is the punch line.  It was buried\ndeep at the end of a very long thread, so I'm restating Geoff's words.\n\n> One way to think about this is that I'm suggesting that\n> checking out a collection version should create a workspace\n> (i.e. a tree of version selectors), or in other words, that\n> a working collection is a workspace.  In fact, I'd be happy\n> to allow you to create a workspace by issuing a checkout\n> against a collection version.\n>\n> The only difference between such a workspace and one that\n> was created by a MKWORKSPACE is that the server selects the\n> name for the workspace, while with a MKWORKSPACE, the client\n> specifies the name for the workspace.\n\nI'll happily change my recommendation from disallow CHECKOUT of a\ncollection version to this proposal if it satisfies Greg's requirements.\n\nTim\n\n\n\n", "id": "lists-005-12756154"}, {"subject": "Re: Atomic CHECKIN of all checkouts of an activit", "content": "CHECKIN to an activity.\n\nTim Ellison\nJava Technology Centre, MP146\nIBM UK Laboratory, Hursley Park, Winchester, UK.\ntel: +44 (0)1962 819872  internal: 249872  MOBx: 270452\n\n\n\"Geoffrey M. Clemm\" <geoffrey.clemm@rational.com> on 2000-11-19 06:05:06 PM\n\nPlease respond to \"Geoffrey M. Clemm\" <geoffrey.clemm@rational.com>\n\nTo:   ietf-dav-versioning@w3.org\ncc:\nSubject:  Atomic CHECKIN of all checkouts of an activity\n\n\n\n\n\nGreg has asked for the ability to tell the server that he wants\nall checkouts against an activity to be checked in atomically.\n\nA natural way to marshall this would be to allow CHECKIN to be\napplied to an activity (since activities cannot be versioned,\nthis is unambiguous).  Or we could introduce a CHECKIN-ACTIVITY\nmethod.\n\nAny preferences (or objections)?\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-12764001"}, {"subject": "Re: Deletion semantics for versioning metadat", "content": "Is that 'should' a SHOULD or a MUST?\n\nThere are likely servers that cannot achieve an 'atomic delete with\nmultiple resource property updates'.\n\nTim\n\n\n\"Geoffrey M. Clemm\" <geoffrey.clemm@rational.com> on 2000-11-19 06:08:03 PM\n\nPlease respond to \"Geoffrey M. Clemm\" <geoffrey.clemm@rational.com>\n\nTo:   ietf-dav-versioning@w3.org\ncc:\nSubject:  Deletion semantics for versioning metadata\n\n\n\n\n\nGreg has asked that we clarify the results of deleting things\nlike working resources, versions, version histories, etc.\n\nI believe it is sufficient for us to say that if a server allows you\nto delete such a resource, that all the versioning properties of other\nresources that refer to that resource should be updated to no longer\nrefer to the deleted resource (I'd probably enumerate those properties\nto make sure there is no misunderstanding).\n\nAny objections?\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-12773269"}, {"subject": "Re: Deletion semantics for versioning metadat", "content": "I believe it should be a SHOULD.  There are a variety of versioning\nrepositories that do not provide atomic group checkin behavior, and\nit is a reasonable server value-add to guarantee atomic behavior.\nA client can simply report the error, so it doesn't significantly\ncomplicate client implementations.\n\nCheers,\nGeoff\n\n   From: Tim_Ellison@uk.ibm.com\n   Date: Mon, 20 Nov 2000 11:30:16 +0000\n\n\n\n   Is that 'should' a SHOULD or a MUST?\n\n   There are likely servers that cannot achieve an 'atomic delete with\n   multiple resource property updates'.\n\n   Tim\n\n\n   \"Geoffrey M. Clemm\" <geoffrey.clemm@rational.com> on 2000-11-19 06:08:03 PM\n\n   Please respond to \"Geoffrey M. Clemm\" <geoffrey.clemm@rational.com>\n\n   To:   ietf-dav-versioning@w3.org\n   cc:\n   Subject:  Deletion semantics for versioning metadata\n\n\n\n\n\n   Greg has asked that we clarify the results of deleting things\n   like working resources, versions, version histories, etc.\n\n   I believe it is sufficient for us to say that if a server allows you\n   to delete such a resource, that all the versioning properties of other\n   resources that refer to that resource should be updated to no longer\n   refer to the deleted resource (I'd probably enumerate those properties\n   to make sure there is no misunderstanding).\n\n   Any objections?\n\n   Cheers,\n   Geoff\n\n\n\n", "id": "lists-005-12782566"}, {"subject": "Re: workspace", "content": "   From: Tim_Ellison@uk.ibm.com\n\n       <tim> \"In order to ensure unambiguous merging and baselining\n       semantics, a workspace may contain at most one version selector\n       for a given version history.\"  A bind to an existing resource\n       in another workspace would require the server to determine if\n       there are any version selectors in each workspace that fail\n       this precondition.  </tim>\n\n     <Geoff> This last complication is one a server already must deal\n     with, since the VERSION-CONTROL request can be used to create a\n     version selector whose DAV:target refers to a version in an\n     existing version history.  </Geoff>\n\n   The difference being that the search space for a VERSION_CONTROL\n   request is the history of an existing versioned resource, whereas\n   the seach space for a bind to a workspace is the entire workspace.\n\nAh yes, of course, if you were to bind to a collection in another\nworkspace.  Good point.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-12792020"}, {"subject": "Re: workspace", "content": "    <tim>\n    I believe that the spec would have to be updated to deal\n    with multiple workspaces for a given resource.\n    </tim>\n\n  <Geoff>\n  I agree, but I think that it is better to say that a resource\n  is in at most one workspace,\n  </Geoff>\n\nAgreed.\n\n  <Geoff>\n  but that the workspace of a child does not have to be the\n  workspace of its parent (such as when the child itself is\n  a workspace,\n  </Geoff>\n\nI don't mind dropping this strict hierarchical containment notion (since I\ndon't rely on it :-).  Other people can raise their own objections.\n\n  <Geoff>\n  or when the child is a binding to a resource that is in another\n  workspace.\n  </Geoff>\n\nSo when I have two workspaces A and B both with bindings to a resource C,\nin which workspace is C?\n\nTim\n\n\n\n", "id": "lists-005-12799927"}, {"subject": "Re: workspace", "content": "Actually, this was discussed earlier and it was agreed that \nversion selectors could be shared amongst multiple workspaces\nbut that this would be done through the binding protocol.\n\nThe use for this was to insure consistent versions across\nseveral workig teams without requiring either each team to\npoll for changes, or each checkin to poll for and update\nall affected workspaces.\n\nPutting such a limitation in the spec would invalidate this.\n\nThe spec should either be extended to handle such cases at\nthe current time, or it should be defined in such a way that\nthis can be added without violating the current spec when\nbind functionality is defined. Defining the spec with a \nspecific exclusion for this should be considered unacceptable.\n\nCheers,\nRossW\n=====\n\nTim_Ellison@uk.ibm.com wrote:\n> \n> >   From: Tim_Ellison@uk.ibm.com\n> \n> >   The spec should say that workspaces cannot 'overlap',\n> >   i.e., a workspace cannot be a member of another workspace,\n> >   and bindings cannot be made outside the workspace.\n> >   Having multiple workpace 'parents' would confuse\n> >   many things, including current activity, and make\n> >   workspace semantics for single history selectors very\n> >   time consuming to enforce.\n> >\n> > This is a good point, but I think we can address it in a\n> > less draconian fashion.\n> \n> 8-|\n> \n> > I think it is sufficient to state that a version selector\n> > is contained by at most one workspace, namely, the one\n> > specified in its DAV:workspace property, and that when a\n> > resource is put under version control, its DAV:workspace\n> > property is set to be the DAV:workspace of its parent\n> > collection.\n> \n> Ok.\n> \n> > This does raise another question:\n> >\n> > Should we require a DAV:workspace property on *non-version-\n> > controlled* workspace members?\n> \n> Yes.\n> \n> > If not, we need to modify the preceding statement to say:\n> >\n> > \"... the DAV:workspace of its nearest parent collection\n> > that has a DAV:workspace property.\"\n\n\n\n", "id": "lists-005-12807683"}, {"subject": "Re: workspace", "content": "My earlier point was that the versioning protocol should be mindful of\nsituations that can arise from advanced collections operations, and we\nshould not knowlingly screw them over.  However, since advanced collections\nis currently a draft we can only refer to it as 'work in progress'.  In the\nfinal analysis, if versioning gets RFC status before advanced collections,\nthen advanced collections has to address the problems of BIND and\nversioning (not that I'm suggesting we adopt that tone).\n\nI did not agree that version selectors could be shared (successfully)\namongst multiple workspaces.\n\n> The use for this was to insure consistent versions\n> across several workig teams without requiring either\n> each team to poll for changes, or each checkin to poll\n> for and update all affected workspaces.\n\nWould it be possible for all teams to share a common workspace containing\nresources that must be kept consistent?\n\nRegards,\n\nTim\n\n\nRoss Wetmore <rwetmore@verticalsky.com> on 2000-11-20 02:45:57 PM\n\nPlease respond to Ross Wetmore <rwetmore@verticalsky.com>\n\nTo:   Tim Ellison/UK/IBM@IBMGB\ncc:   ietf-dav-versioning@w3.org\nSubject:  Re: workspaces\n\n\n\n\nActually, this was discussed earlier and it was agreed that\nversion selectors could be shared amongst multiple workspaces\nbut that this would be done through the binding protocol.\n\nThe use for this was to insure consistent versions across\nseveral workig teams without requiring either each team to\npoll for changes, or each checkin to poll for and update\nall affected workspaces.\n\nPutting such a limitation in the spec would invalidate this.\n\nThe spec should either be extended to handle such cases at\nthe current time, or it should be defined in such a way that\nthis can be added without violating the current spec when\nbind functionality is defined. Defining the spec with a\nspecific exclusion for this should be considered unacceptable.\n\nCheers,\nRossW\n=====\n\nTim_Ellison@uk.ibm.com wrote:\n>\n> >   From: Tim_Ellison@uk.ibm.com\n>\n> >   The spec should say that workspaces cannot 'overlap',\n> >   i.e., a workspace cannot be a member of another workspace,\n> >   and bindings cannot be made outside the workspace.\n> >   Having multiple workpace 'parents' would confuse\n> >   many things, including current activity, and make\n> >   workspace semantics for single history selectors very\n> >   time consuming to enforce.\n> >\n> > This is a good point, but I think we can address it in a\n> > less draconian fashion.\n>\n> 8-|\n>\n> > I think it is sufficient to state that a version selector\n> > is contained by at most one workspace, namely, the one\n> > specified in its DAV:workspace property, and that when a\n> > resource is put under version control, its DAV:workspace\n> > property is set to be the DAV:workspace of its parent\n> > collection.\n>\n> Ok.\n>\n> > This does raise another question:\n> >\n> > Should we require a DAV:workspace property on *non-version-\n> > controlled* workspace members?\n>\n> Yes.\n>\n> > If not, we need to modify the preceding statement to say:\n> >\n> > \"... the DAV:workspace of its nearest parent collection\n> > that has a DAV:workspace property.\"\n\n\n\n", "id": "lists-005-12817323"}, {"subject": "RE: Deletion semantics for versioning metadat", "content": "Ooops.  I answered a totally different question than Tim asked.\nIn particular, I answered the question \"Is atomic checkin of the\ncheckouts against an activity a SHOULD or a MUST\".  For that, I\nsaid \"SHOULD\".\n\nBut the question he *asked* was, \"Should the property updates be\natomic with the delete\".  For that I say MUST.\nA dangling reference introduces the possibility that\nthe reference will mistakenly be later bound to a different resource,\nwhich violates the semantics of those properties.  Internally,\nan implementation can create dangling references, but the protocol\nshould require that it detect such dangling references and strip\nthem out before returning the property value.\n\nCheers,\nGeoff\n\n-----Original Message-----\nFrom: Geoffrey M. Clemm [mailto:geoffrey.clemm@rational.com]\nSent: Monday, November 20, 2000 8:48 AM\nTo: ietf-dav-versioning@w3.org\nSubject: Re: Deletion semantics for versioning metadata\n\n\n\nI believe it should be a SHOULD.  There are a variety of versioning\nrepositories that do not provide atomic group checkin behavior, and\nit is a reasonable server value-add to guarantee atomic behavior.\nA client can simply report the error, so it doesn't significantly\ncomplicate client implementations.\n\nCheers,\nGeoff\n\n   From: Tim_Ellison@uk.ibm.com\n   Date: Mon, 20 Nov 2000 11:30:16 +0000\n\n\n\n   Is that 'should' a SHOULD or a MUST?\n\n   There are likely servers that cannot achieve an 'atomic delete with\n   multiple resource property updates'.\n\n   Tim\n\n\n   \"Geoffrey M. Clemm\" <geoffrey.clemm@rational.com> on 2000-11-19 06:08:03\nPM\n\n   Please respond to \"Geoffrey M. Clemm\" <geoffrey.clemm@rational.com>\n\n   To:   ietf-dav-versioning@w3.org\n   cc:\n   Subject:  Deletion semantics for versioning metadata\n\n\n\n\n\n   Greg has asked that we clarify the results of deleting things\n   like working resources, versions, version histories, etc.\n\n   I believe it is sufficient for us to say that if a server allows you\n   to delete such a resource, that all the versioning properties of other\n   resources that refer to that resource should be updated to no longer\n   refer to the deleted resource (I'd probably enumerate those properties\n   to make sure there is no misunderstanding).\n\n   Any objections?\n\n   Cheers,\n   Geoff\n\n\n\n", "id": "lists-005-12828805"}, {"subject": "RE: Deletion semantics for versioning metadat", "content": "I'd suggest that an implementation \"MUST NOT return invalid pointers to\ndeleted working resources or other dangling pointers\".\n\nThis leaves the implementation free to clean up on delete, or to clean up on\nrequest, or in a background process, whatever the implementors prefer.  This\nisn't quite \"atomic\", but it gets the desired behaviour.\n\nLisa\n\n> -----Original Message-----\n> From: ietf-dav-versioning-request@w3.org\n> [mailto:ietf-dav-versioning-request@w3.org]On Behalf Of Clemm, Geoff\n> Sent: Monday, November 20, 2000 9:36 AM\n> To: ietf-dav-versioning@w3.org\n> Subject: RE: Deletion semantics for versioning metadata\n>\n>\n> Ooops.  I answered a totally different question than Tim asked.\n> In particular, I answered the question \"Is atomic checkin of the\n> checkouts against an activity a SHOULD or a MUST\".  For that, I\n> said \"SHOULD\".\n>\n> But the question he *asked* was, \"Should the property updates be\n> atomic with the delete\".  For that I say MUST.\n> A dangling reference introduces the possibility that\n> the reference will mistakenly be later bound to a different resource,\n> which violates the semantics of those properties.  Internally,\n> an implementation can create dangling references, but the protocol\n> should require that it detect such dangling references and strip\n> them out before returning the property value.\n>\n> Cheers,\n> Geoff\n>\n> -----Original Message-----\n> From: Geoffrey M. Clemm [mailto:geoffrey.clemm@rational.com]\n> Sent: Monday, November 20, 2000 8:48 AM\n> To: ietf-dav-versioning@w3.org\n> Subject: Re: Deletion semantics for versioning metadata\n>\n>\n>\n> I believe it should be a SHOULD.  There are a variety of versioning\n> repositories that do not provide atomic group checkin behavior, and\n> it is a reasonable server value-add to guarantee atomic behavior.\n> A client can simply report the error, so it doesn't significantly\n> complicate client implementations.\n>\n> Cheers,\n> Geoff\n>\n>    From: Tim_Ellison@uk.ibm.com\n>    Date: Mon, 20 Nov 2000 11:30:16 +0000\n>\n>\n>\n>    Is that 'should' a SHOULD or a MUST?\n>\n>    There are likely servers that cannot achieve an 'atomic delete with\n>    multiple resource property updates'.\n>\n>    Tim\n>\n>\n>    \"Geoffrey M. Clemm\" <geoffrey.clemm@rational.com> on\n> 2000-11-19 06:08:03\n> PM\n>\n>    Please respond to \"Geoffrey M. Clemm\" <geoffrey.clemm@rational.com>\n>\n>    To:   ietf-dav-versioning@w3.org\n>    cc:\n>    Subject:  Deletion semantics for versioning metadata\n>\n>\n>\n>\n>\n>    Greg has asked that we clarify the results of deleting things\n>    like working resources, versions, version histories, etc.\n>\n>    I believe it is sufficient for us to say that if a server allows you\n>    to delete such a resource, that all the versioning properties of other\n>    resources that refer to that resource should be updated to no longer\n>    refer to the deleted resource (I'd probably enumerate those properties\n>    to make sure there is no misunderstanding).\n>\n>    Any objections?\n>\n>    Cheers,\n>    Geoff\n>\n>\n\n\n\n", "id": "lists-005-12840086"}, {"subject": "Re: workspace", "content": "   From: Ross Wetmore <rwetmore@verticalsky.com>\n\n   Actually, this was discussed earlier and it was agreed that \n   version selectors could be shared amongst multiple workspaces\n   but that this would be done through the binding protocol.\n\nWe should distinguish two different concepts.\nThe first concept is the standard 2518 concept\nof collection membership.  Since a workspace is\na collection, it has members, like any other collection.\nThe second concept is that each resource can identify\na single workspace in its DAV:workspace property.\nLet's call the first concept \"member of a workspace\"\nand the second concept \"owned by a workspace\".\n\nI think that Tim and I would be willing for a resource\nto be a member of more than one workspace (e.g. from\nnesting a workspace inside another workspace), but\nnot for a resource to be owned by more than one workspace.\n\n   The use for this was to insure consistent versions across\n   several workig teams without requiring either each team to\n   poll for changes, or each checkin to poll for and update\n   all affected workspaces.\n\nFor reasons like access control and locking, it is important\nto identify a single \"owner\", but I think shared membership\nis all that you need for the purposes you describe above.\n\n   Putting such a limitation in the spec would invalidate this.\n\n   The spec should either be extended to handle such cases at\n   the current time, or it should be defined in such a way that\n   this can be added without violating the current spec when\n   bind functionality is defined. Defining the spec with a \n   specific exclusion for this should be considered unacceptable.\n\nIf we may it clear in the protocol that multiple membership is\nacceptable, but that multiple ownership is not, does that satisfy\nyour requirements?\n\nTim: Am I correct in assuming that this would be OK with you?\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-12853219"}, {"subject": "Re: workspace", "content": "   From: Tim_Ellison@uk.ibm.com\n\n   So when I have two workspaces A and B both with bindings to a resource C,\n   in which workspace is C?\n\nI'd just leave that up to the server.  I'd suggest the following\nconstraint: \"the DAV:workspace of a resource MUST be the same as the\nDAV:workspace of one of its parents, unless the resource itself is a\nworkspace, in which case the DAV:workspace MUST identify the resource\nitself.\"\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-12862001"}, {"subject": "Re: Atomic CHECKIN of all checkouts of an activit", "content": "Agreed. There doesn't seem to be any need for a new method.\n\nCheers,\n-g\n\nOn Mon, Nov 20, 2000 at 11:27:38AM +0000, Tim_Ellison@uk.ibm.com wrote:\n> \n> \n> CHECKIN to an activity.\n> \n> Tim Ellison\n> Java Technology Centre, MP146\n> IBM UK Laboratory, Hursley Park, Winchester, UK.\n> tel: +44 (0)1962 819872  internal: 249872  MOBx: 270452\n> \n> \n> \"Geoffrey M. Clemm\" <geoffrey.clemm@rational.com> on 2000-11-19 06:05:06 PM\n> \n> Please respond to \"Geoffrey M. Clemm\" <geoffrey.clemm@rational.com>\n> \n> To:   ietf-dav-versioning@w3.org\n> cc:\n> Subject:  Atomic CHECKIN of all checkouts of an activity\n> \n> \n> \n> \n> \n> Greg has asked for the ability to tell the server that he wants\n> all checkouts against an activity to be checked in atomically.\n> \n> A natural way to marshall this would be to allow CHECKIN to be\n> applied to an activity (since activities cannot be versioned,\n> this is unambiguous).  Or we could introduce a CHECKIN-ACTIVITY\n> method.\n> \n> Any preferences (or objections)?\n> \n> Cheers,\n> Geoff\n> \n> \n> \n\n-- \nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-12869333"}, {"subject": "DAV:workspace property (was: Re: workspaces", "content": "On Mon, Nov 20, 2000 at 09:34:14AM +0000, Tim_Ellison@uk.ibm.com wrote:\n>...\n> > This does raise another question:\n> >\n> > Should we require a DAV:workspace property on *non-version-\n> > controlled* workspace members?\n> \n> Yes.\n\nHrm. The DAV:workspace property is *only* needed for things that occur\nunderneath a workspace, right? In other words, this isn't trying to imply\nthat any DAV resource must define this property? Or further: if the\nworkspace feature does not exist, thus workspace members do not exist, then\nI won't have to worry about this property?\n\nCheers,\n-g\n\n-- \nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-12878609"}, {"subject": "Re: Deletion semantics for versioning metadat", "content": "On Sun, Nov 19, 2000 at 01:08:03PM -0500, Geoffrey M. Clemm wrote:\n> \n> Greg has asked that we clarify the results of deleting things\n> like working resources, versions, version histories, etc.\n> \n> I believe it is sufficient for us to say that if a server allows you\n> to delete such a resource, that all the versioning properties of other\n> resources that refer to that resource should be updated to no longer\n> refer to the deleted resource (I'd probably enumerate those properties\n> to make sure there is no misunderstanding).\n\nIt seems a bit more complicated than that. If you delete a version history,\nthen I'd expect the corresponding selectors and versions to become\nnon-controlled resources.\n\nBut even then, it seems that you could lose all the information on how to\ntrack down the available versions for a given resource.\n\n(of course, I'd expect most servers to just refuse deletion of versions and\n version histories, but the spec may not be able to make that assumption;\n hmm. I guess it could say \"server defined\")\n\nMostly, I'm concerned with what deletion of a working resource and an\nactivity means. For the former, I'd expect something like an UNCHECKOUT. For\nan activity, I'd expect a full rollback of all associated checked-out\nresources. Specifically, let's say that I have an activity with 10 working\nresources associated with it; I'd like to do one of two things to that\nactivity: CHECKIN or DELETE, corresponding to \"commit\" or \"rollback\". After\neither of those operations, the activity and all working resources are gone.\n\nCheers,\n-g\n\n-- \nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-12886742"}, {"subject": "Re: DAV:workspace property (was: Re: workspaces", "content": "   From: Greg Stein <gstein@lyra.org>\n\n   On Mon, Nov 20, 2000 at 09:34:14AM +0000, Tim_Ellison@uk.ibm.com wrote:\n   > >\n   > > Should we require a DAV:workspace property on *non-version-\n   > > controlled* workspace members?\n   > \n   > Yes.\n\n   Hrm. The DAV:workspace property is *only* needed for things that\n   occur underneath a workspace, right?  In other words, this isn't\n   trying to imply that any DAV resource must define this property? Or\n   further: if the workspace feature does not exist, thus workspace\n   members do not exist, then I won't have to worry about this\n   property?\n\nCorrect.  Of course, if we end up deciding that checking out a\ncollection version creates a workspace, then you would have to worry\nabout it (:-).\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-12895686"}, {"subject": "Re: Deletion semantics for versioning metadat", "content": "   From: Greg Stein <gstein@lyra.org>\n\n   On Sun, Nov 19, 2000 at 01:08:03PM -0500, Geoffrey M. Clemm wrote:\n   > \n   > Greg has asked that we clarify the results of deleting things\n   > like working resources, versions, version histories, etc.\n   > \n   > I believe it is sufficient for us to say that if a server allows you\n   > to delete such a resource, that all the versioning properties of other\n   > resources that refer to that resource should be updated to no longer\n   > refer to the deleted resource (I'd probably enumerate those properties\n   > to make sure there is no misunderstanding).\n\n   It seems a bit more complicated than that. If you delete a version history,\n   then I'd expect the corresponding selectors and versions to become\n   non-controlled resources.\n\nI think that's something we need to leave up to the server implementor,\nsince I don't think we will be able to agree on this.\n\n   But even then, it seems that you could lose all the information on how to\n   track down the available versions for a given resource.\n   (of course, I'd expect most servers to just refuse deletion of versions and\n    version histories, but the spec may not be able to make that assumption;\n    hmm. I guess it could say \"server defined\")\n\nYes, that would be my choice.   I agree that most servers will simply\nrefuse to do it, so I wouldn't want to add any complexity to the spec\njust to define something that is unlikely to be implemented.\n\n   Mostly, I'm concerned with what deletion of a working resource and an\n   activity means. For the former, I'd expect something like an UNCHECKOUT.\n\nYes.  I think you'll find that this follows from the rule that all\nproperty references must be deleted, but I'll make it explicit just\nto make sure there is no confusion.\n\n   For\n   an activity, I'd expect a full rollback of all associated checked-out\n   resources. Specifically, let's say that I have an activity with 10 working\n   resources associated with it; I'd like to do one of two things to that\n   activity: CHECKIN or DELETE, corresponding to \"commit\" or \"rollback\". After\n   either of those operations, the activity and all working resources are gone.\n\nWe'll probably get some pushback there from repositories for which\nactivities are optional.  For them, deleting an activity would just\nmean that you have checkouts that are not against an activity.\nSo I'd leave anything beyond \"removing all references to the deleted\nresource\" as a server choice.  I certainly agree that we should *allow*\na server to delete associated working resources.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-12904021"}, {"subject": "operational model (was: Re: Working collections", "content": "On Sun, Nov 19, 2000 at 11:40:38PM -0500, Clemm, Geoff wrote:\n> > From: Geoffrey M. Clemm [mailto:geoffrey.clemm@rational.com]\n> \n> > One way to think about this is that I'm suggesting that checking\n> > out a collection version should create a workspace (i.e. a tree\n> > of version selectors), or in other words, that a working collection\n> > is a workspace.\n> \n> Something I blithely glossed over with this proposal was the fact\n> that a version selector needs a target, and checking out a collection\n> version gives you the target for a version selector for that collection,\n> but does *not* give you targets for version selectors for members of\n> that collection.  This would have to be done by the client, with\n> either a SET-TARGET (e.g. with a Depth header and a label)\n> or a MERGE (e.g. with a baseline).  So the sequence would be:\n> \n> - create a new workspace by checking out a collection version\n> - set the targets of the version selectors in that workspace\n>   with either a SET-TARGET or MERGE request\n> - do whatever CHECKOUT's, PUT's, DELETE's, CHECKIN's etc. you\n>   want to version selectors in that workspace.\n> - DELETE the workspace when you are done (or leave it around if\n>   you think you might be doing more work in that collection later.\n> \n> This does require two extra requests (the SET-TARGET or MERGE to\n> get started and the DELETE when you are done), but that does not\n> seem like an unreasonable amount of overhead.\n\nThe above model doesn't correspond very nicely with the Subversion (SVN)\noperational model.\n\nSpecifically, a number of version resources will be checked out, and then\nmodified. Those versions are not (necessarily) associated with a particular\ntarget or a baseline. This means that we cannot issue a simple SET-TARGET or\nMERGE or anything to prepare the working collection (or workspace, if you\nwill).\n\nInstead, the model will be:\n\n    CHECKOUT /repo/$svn/ver/5/some/collection\n    (modify the thing)\n    \n    CHECKOUT /repo/$svn/ver/7/some/collection/some-file\n    (modify the thing)\n\n[ the URLs above are not representative of SVN's actual URLs, but changed to\n  make their intent clear ]\n\nThus, I would be working with two unrelated working resources, rather than\nin children of the working collection.\n\nAt another point, I had stated that I didn't want to create a \"tree\"\nunderneath the working collection, and how I was thinking of accomplishing\nthat. Pretty simple: return 404 for resources under the working collection.\nOnly a DELETE would be allowed for immediate members of a working\ncollection.\n\nIf you do a PUT or a MKCOL to a member of a working collection, then a new\nworking resource will be created, and that URL will be returned in the 201\n(Created) response's Location: header. This allows me to avoid nesting the\nworking resources by effectively redirecting to the created working\nresource.\n\nI'm not sure how a PROPFIND on a working collection would operate, if it had\na non-zero depth. I might refuse them to avoid the implication that other\nresources exist under the working collection.\n\nCheers,\n-g\n\n-- \nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-12914016"}, {"subject": "Re: Working collection", "content": "On Sat, Nov 18, 2000 at 11:11:07PM -0500, Geoffrey M. Clemm wrote:\n>    From: Greg Stein <gstein@lyra.org>\n> \n>    Why would a checked-out version selector (of a member or a collection) ever\n>    be any different from a working resource? What would be the justification\n>    for such a difference?\n> \n> A checked-out (non-collection) version selector is very similar to\n> a (non-collection) working resource.  The main difference is that \n> the working resource is deleted when it is checked in, while the\n> version selector is not.  \n> \n> For collection version selectors, the model is relatively simple ...\n> a collection version selector has as members other version selectors\n> (possibly other collection version selectors), as well as non-versioned\n> members.  So a collection version selector is the root of a tree of\n> version selectors (and possibly non-versioned resources).\n\nAgreed/understood on both paragraphs.\n\n> In contrast, it sounds like you want a collection working resource\n> (aka a \"working collection\") to not be a tree, which would make a\n> working collection very different from a checked out collection\n> version selector.\n\nRight!\n\nPer my \"operational model\" note, the SVN client will never attempt to deal\nwith any resources under the working collection, so I don't want to worry\nabout making them present.\n\n[ since we've defined DELETE of a collection member as an operation on the\n  collection, the above statement still holds for \"not dealing\" with\n  collection member resources; I just mildly refer to it :-) ]\n\n>    Doing a check-out in place does not work well for me. I want to construct an\n>    activity, check out a bunch of things w.r.t. that activity, make the\n>    changes, then merge the activity in one fell swoop. That model works great,\n>    and I don't see any incentive/benefit to using a different model.\n>    [ I will admit to not reading the latest incarnation of workspaces, but it\n>      still seems moot if the activity model and working resources satisifies my\n>      problems ]\n> \n> If you only checkout leaf (i.e. non-collection) resources, that works\n> fine, but as soon as you want to track the history of the collections,\n> you need to decide what kind of resource are the members of the checked\n> out collections.  That's where I believe that the notion of a working\n> collection either falls apart, or at least, becomes quite complex.\n\nOr simply state that the members are not present :-)\n\nI do understand that this introduces the dreaded \"Model C\" for what a\nworking collection is.\n\n> All that the \"in-place\" checkout requires is that you precede your\n> work with a single MKWORKSPACE request, that simply tells the server\n> \"this is the root of the tree of resources I'm going to be mucking with\".\n> If the client is going to be versioning collections, it needs to know\n> that anyway, and it seems reasonable to have it issue the single MKWORKSPACE\n> request before it checks out its first collection.\n\nUm. After you create a workspace, then it must get populated with the\nresources that you want to work with. So wouldn't that be something like:\n\n    MKWORKSPACE /some/whwere\n    COPY /repos  -> /some/where/repos\n\nAnd then you start working with /some/where/repos ? Ooh, and the client also\nhas to make sure the result of the COPY actually creates version selectors,\ndoesn't it?\n\nHmm. I guess you could use VERSION-CONTROL instead of COPY to set up the\nworkspace contents. But... it isn't a simple matter of \"just create a\nworkspace\".\n\n>    In the model that I'm going to use, I don't need to \"slash-through\" the\n>    working collection. I just need it to establish a spot where I can create\n>    new members/sub-collections.\n> \n> It's the semantics of those new members/sub-collections that is the\n> tricky part.  What if you MOVE some existing version-controlled\n> resources into the working collection, checkout some of the existing\n> members of the working collection, and create new members.  All of\n> these have to be modeled in a way that allows the server at checkin\n> time to decide what version histories should be associated with what\n> names in the new version of the collection.\n\nPer my other note, each creation of a resource within the working collection\n(via PUT, MKCOL, COPY, or MOVE) will return a 201 (Created) response. Per\nRFC 2616, I must return a Location: header with \"the most specific URI for\nthe resource\". That URI will refer to the new working resource, and will\n*NOT* be a child of the working collection.\n\n>    If I want to reach an existing child resource,\n>    then I'll go through version selectors (to their versions, which I CHECKOUT,\n>    and then to their working resources).\n> \n> So when you checkout an existing child resource of a working collection,\n> how is this reflected in the state of that working collection?\n\nThe child resource isn't present in the working collection, so a change is\nnot required.\n\n> What happens\n> if you delete a  checked-out child of that working collection?  Does that\n> delete the working resource, or is it still around but invisible when\n> you check it in?\n\nIf a CHECKOUT is done on a \"leaf\" version (thus creating a working\nresource), and then somebody does a DELETE within that resource's parent's\nworking collection, then you have a \"merge conflict\".\n\n1) a working resource exists, possibly with changes\n2) the resource has been marked for deletion\n\nWhen you commit, the above two conditions are incompatible since the server\ncannot know which takes precedence. So, the commit would fail.\n\n[ commit meaning a CHECKIN of the related activity, workspace, whatever ]\n\n> One can probably create answers to these things,\n> but it won't be simple.\n\nWell, the hardest part is whether it is reasonable to say that a working\ncollection does not report any members. Or maybe it does, but when you try\nto access them, you get a redirect. Or the working collection reports them\nin a PROPFIND (but returns a 409 (Conflict) if you try to fetch any\nproperties) but the resource returns a 404.\n\nIf the \"no member\" working collection is possible, then we may be okay.\n\n>    I think the point here is that I'm working in a transactional / change set\n>    model here. I get a bunch of working resources, change them, then check them\n>    in in one fell swoop. Navigation and management of checked out resources is\n>    minimal and short-lived. Give me a working resource, I'll tweak in, then\n>    merge it back in (possibly with other changes).\n> \n> It's capturing the namespace changes (i.e. the changes to the collections)\n> that is the challenge.  You need to distinguish between new members being\n> added, existing members being renamed, existing members being replaced\n> by new members, and existing members being replaced by members from other\n> collections.  A tree of version selectors can handle this, and I would\n> regret adding significant complexity to the protocol just to provide an\n> alternative way of doing it.\n\nI think the only change to the spec would be to state that \"members of a\nworking collection are undefined\" or some such. If it can be defined\nfurther, then okay.\n\nA tree of version selectors is rather difficult to maintain on the server,\ncompared to a set of working resources. At any point in the tree, you would\nneed to figure out which is checked out, which is not. If something is\nchecked out, then what version? And as you pointed out in another note, what\nis the target of each version selector? In Subversion, I need to work with\nspecific version resources (much easier than trying to prep a version\nselector to point at the version that I'm concerned with).\n\nCheers,\n-g\n\n-- \nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-12924445"}, {"subject": "long... Re: Working collection", "content": "On Sun, Nov 19, 2000 at 12:59:12PM -0500, Geoffrey M. Clemm wrote:\n> \n>    From: Greg Stein <gstein@lyra.org>\n> \n>    On Sat, Nov 18, 2000 at 04:47:56PM -0500, Geoffrey M. Clemm wrote:\n>...\n> Great, now we're on the same chapter of the same book (:-).\n\nhehe... :-)\n\nWe definitely are at the point of similar terminology. But I think we aren't\nquite at the same end point. \n\n>    Concretely: Subversion has several server-defined namespaces. One each for\n>    activities, working resources, versions, and histories.\n> \n> That corresponds precisely to what is currently in the protocol.\n> In fact, the protocol has just one additional namespace: workspaces\n> (where a workspace is really just a root for a tree of version selectors).\n\nRight. I didn't list these because I'd like to ignore them :-)\n\n>    The history resources cannot be moved out of their space.\n> \n> The protocol has this restriction as well.  Note that if you support\n> collection versions, that a history resource has multiple names\n> (multiple bindings).  In particular, it has its name in the \"history\n> namespace\", but it also has names in the \"version namespace\".\n> For example, if http://gmc.repo/his/id73 identifies a history\n> resource, and http://gmc.repo/ver/c23 is a collection version with\n> a member named \"foo.html\" that identifies this history resource,\n> then http://gmc.repo/his/id73 and http://gmc.repo/ver/c23/foo.html\n> are two names for the same history resource, one in the history\n> namespace and the other in the version namespace.\n\nAgreed.  (and yes, I have collection versions; I doubt I'll allow slashing\nthrough them, tho)\n\nI'm still a bit unclear in my head what is actually *at* a history resource.\nIs something there, or is it just a logical entity named by a URI?\n\n>...\n>    >    The working resource for the collection is also handy for\n>    >    deleting or for replacing the collection:\n>    > \n>    >        DELETE http://host.name/repo/$svn/wrk/100.3\n>    >        (note that this request also requires a checked-out parent)\n>    > \n>    Note that Tim also pointed out that we probably would not delete the working\n>    collection itself, but delete the member from the parent collection. The\n>    above request is ambiguous with \"do an UNCHECKOUT\".\n> \n> Oops, I didn't read this carefully in my first response.  UNCHECKOUT\n> (as currently defined) only applies to a checked out version selector.\n> You just DELETE a working resource if you don't want it any\n> more. (i.e. don't want to check it in).  So the above request is not\n> ambiguous with \"do an UNCHECKOUT\", but rather *is* the way you tell\n> the server that you no longer are interested in that working resource.\n> (And the parent, \"http://host.name/repo/$svn/wrk\" is not under version\n> control, and therefore does not have to be checked out prior to the\n> deletion.\n\nRight, right... calling it an \"uncheckout\" is a simple way of saying \"go\naway\". You just want to get all technical on me :-)\n\nBut we agree on all the semantics above, so no big deal.\n\n> On the other hand, \n> \n>  DELETE http://host.name/repo/$svn/wrk/100.3/foo.html\n> \n> is the way that you delete the member named \"foo.html\" from the\n> checked out collection.\n\nAgreed.\n\nAnd further, I'd like to state that foo.html doesn't respond to any other\nmethods besides DELETE. (well, maybe OPTIONS).\n\nAnd yes... I recognize that this \"nebulous resource\" is hard to\nmodel/explain in the spec. I'm just trying to avoid the complexity that\narises if that bugger truly exists. If it *only* exists as a name that can\nbe referenced for deletion, then things can be simplified and much of the\nopen questions/discussion can be closed up.\n\n>... discussion about DELETE ...\n>...\n>    >        COPY http://host.name/repo/somedir/\n>    >        Destination: http://host.name/repo/$svn/wrk/100.3\n>    >        Overwrite: T\n>    > \n>    > This wouldn't work, because deleting a working resource (as is done by\n>    > an Overwrite:T) cancels the checkout.  You would need to use the new\n>    > \"update\" value for the Overwrite header.\n> \n>    Nits. You know what I meant, and the server really should, too.\n>    This is where people read the letter of the law too strictly and\n>    screw up clients because the client wasn't as anal as the server.\n> \n> Well, the server knows what you said (i.e. \"get rid of the working\n> resource thereby canceling the checkout\"), and it's really important\n> that the client and the server agree on this (or else the client will\n> be surprised by what the server ends up doing, because it will do what\n> the client said, not what it meant).\n\nBah :-) ... I read the Overwrite as \"it is okay if the destination already\nexists; just put the source contents there.\" All the hullabaloo about\n\"delete then copy/move\" is a bit overdone in my mind :-)\n\nBack to the question at hand:\n\n>    But for discussion. Sure... let's assume that I used \"update\" in there.\n>    The point is that I need to check out the collection because I'm about to\n>    replace its contents.\n> \n> If you are going to modify it's contents (i.e. add/delete/change a\n> member), then sure, you need to check it out.  But if you are going\n> to delete the collection, then you are operating on the *parent*\n> of the collection, i.e. deleting a member of the parent of the\n> collection, so it is the *parent* that needs to be checked out for\n> the DELETE.\n\nAgreed.\n\n>... more DELETE stuff ...\n>...\n>    >    Without being able to do a CHECKOUT on a collection, there\n>    >    wouldn't be a way to do any of the above.\n>    > \n>    > You could just use a VERSION-CONTROL request to create a new version\n>    > selector whose target is the desired collection version.  Then you can\n>    > do all your operations on that version selector.  It is one extra round\n>    > trip, but if that really matters, we could easily add a \"DAV:keep-checked-out\"\n>    > option to the VERSION-CONTROL request.\n> \n>    That feels *way* bogus. Use VERSION-CONTRL? And just how do I get that to\n>    participate within an activity? Or to MERGE it? etc\n> \n> The version selector created by VERSION-CONTROL has all the activity\n> behavior that a working resource has.  When you check it out, the\n> DAV:activity-set of the version selector is set to be the specified\n> activity(s), and when you check it in, the new version is added to the\n> DAV:version-set of the activity.\n\nI'll grant that all the above might be possible. It just seems a bit\ncomplicated, and I'd still need a \"per activity\" place for invoking the\nVERSION-CONTROL request. And yes... I hear it now: create a workspace. :-)\n\nBut we still have the various problems of setting the targets of the\nselectors in the members. SVN never really deals with targets, it wants to\nwork mostly with version resources. Why? Because it copies all the resources\nto the local disk and you edit them there. When you go to do a commit, it\nneeds to work against what it copied (rather than the current target). Thus,\nit refers to the specific version resource that was copied to the client. It\nchecks that thing out, makes the changes, and checks it in.\n\n[ possibly getting errors if the checkout of the version resource indicates\n  the version is no longer the \"tip\" of the line of descent in question ]\n\n>    > This would allow us to avoid all the extra complexity that would\n>    > result from having two ways to manipulate versioned collections.\n> \n>    I'm not seeing the complexity. Check out a collection version; you get a\n>    working collection; modify it at will; check it in.\n>    The working collection operates just the same as a checked-out collection\n>    version selector. And this is right: they're both representative of a\n>    checked-out [collection] resource. Seemed pretty obvious to me.\n> \n> If we make working collections act like checked-out collection version\n> selectors, then I agree that we can avoid the complexity.  It appears\n> that the main question we have to resolve is what precisely are the\n> members of a working collection.  If they are version selectors, then\n> we are almost there, since the working collection then just becomes\n> the root of a tree of version selectors.  The only thing left to do\n> to unify the models is to make the root *also* be a version selector,\n> and then we have a uniform tree of version selectors.\n\nCan we make the members phantoms?\n\n> Which is a good transition into your next message:\n> \n>    From: Greg Stein <gstein@lyra.org>\n> \n>    > But if you've got versioned collections, it's natural to get some\n>    > kind of tree when you checkout the collection, so it might as\n>    > well be a tree of version selectors.\n> \n>    Yes. I was going to make a collection's internal members available via a\n>    working collection, but only for limited operations (namely: DELETE).\n>    I understand that the spec needs to be a bit more lucid than the hand-waving\n>    that I'm doing with those internal members :-)\n> \n> How were you planning on enforcing this limitation?  Or perhaps more\n> importantly, why were you planning on introducing such a limitation?\n> If the working collection creates a tree of version selectors, why not\n> just use those version selectors (which are local to you, and therefore\n> won't be checked out by anyone else) for versioning operations on those\n> members?\n> \n> The model then becomes: Check-out a collection (which then creates\n> a tree of version selectors), and then checkout one of those version\n> selectors when you want to change that member of the tree.\n\nSee my \"operational model\" note for this. Also your followup response about\nhow to deal with the targets of all of those new version selectors.\n\n>    In my model, if the parent is a working collection, then the PUT\n>    [into the working collection] succeeds and becomes a working\n>    resource. (and an analogous behavior for MKCOL)\n> \n> To be careful about terminology, it becomes a version selector, not\n> a working resource, since auto-versioning creates version selectors,\n> not working resources.  (You indicate as much below, so this is just\n> me being pedantic :-).\n\nEh? Auto-versioning is related to an automatic CHECKOUT/CHECKIN. I was\nreferring to automatically making the new resource version-controlled.\nFurther, I create a working resource for the new resource. In the 201\n(Created), I state where the new resource's working resource is located.\n\n>    >    Yes, it becomes version-controlled, as that is the behavior\n>    >    that my server imposes when a resource is PUT there. This is\n>    >    allowed by the spec.\n> \n>    > When something becomes version-controlled, it becomes a version\n>    > selector. If you were using version selectors,\n> \n>    I'm using version selectors. Kind of mandatory :-)\n> \n> Well, one could invent a new kind of resource for this, but using\n> version selectors would certainly keep the model simpler.\n\nHmm. Two points in the above.\n\n1) \"When something becomes version-controlled, it becomes a version\n   selector.\" Where is that stated? VERSION-CONTROL creates one, sure. But\n   why can't my PUT create a working resource? (which implies an eventual\n   creation of a version, a version history, and a version selector as a\n   member of the collection version's extent version selectors)\n\n2) I stated that I use version selectors elsewhere. But the point at hand\n   really seems to refer to what is inside the working collection.\n\n>...\n>    > If you are using\n>    > working collections, we'd have to define the semantic interactions\n>    > of version selectors nested within working collections.\n> \n>    Unless you state that a PUT/MKCOL creates a working resource within the\n>    working collection.\n> \n> That would not work very well, since when you checkin a working resource,\n> it is deleted, which is not the behavior you would want (it would make\n> it appear that you wanted to delete that member of the working collection).\n\nAgreed.\n\nI resolved this problem when I realized (last night) that I could use the\nLocation: header in the 201 response to put the new working resources\nanywhere I want (rather than under the working collection).\n\n>    [ and thus: they also create a version history; not sure when a version\n>      would be created, though ??? ]\n> \n> When you first create a version history, it is given an initial version.\n> When you put an existing (non-versioned) resource under version control,\n> the initial version is a copy of the state of the non-versioned resource.\n\nThat doesn't fully answer the question. The second sentence assumes that I\nhave a non-versioned resource. That step isn't possible. I must be able to\ngo from the null state to a versioned resource.\n\nI believe the answer is that a working resource might not have a\nDAV:checked-out property.\n\nHow were other people thinking of modelling the creation of a versioned\nresource? Are people assuming that this is a non-atomic creation? (check out\nthe parent, put a resource, version-control it, check in the parent; and\ndeal with the race between the PUT and the VERSION-CONTROL when the resource\nmay not be version-controlled?)\n\n>    > This becomes\n>    > complex because working resources are deleted when they are checked\n>    > in, while version selectors are not.  So if you check in a working\n>    > collection, what happens to the possibly checked-out version selectors\n>    > inside that working collection?\n> \n>    Yes, this could be complicated :-). You could say that they just continue to\n>    hang out, but what does the parent collection (the working collection that\n>    you checked in) become? You can't just get rid of it because of the\n>    namespace consistency issue.\n> \n> Yes.  This is why checked-out version selectors are preferable for\n> collections, because when you checkin a checked-out version selector,\n> it just becomes a checked-in version selector, and all of its members\n> are still visible and accessible.\n\nThey may be preferable from that standpoint, but they are not preferable\nbecause of the \"people stepping on each other\" problem.\n\nYes, if you go and build a workspace for each user, then this problem\nwouldn't exist. But as we've discovered, there is a problem with setting the\ntargets for all the version selectors within the workspace.\n\n>    > With collection version selectors,\n>    > this is not an issue because they are not deleted when you check them\n>    > in so that nested version selectors do not get orphaned by checkin.\n> \n>    Yup. But checked-out version selectors are not \"thread safe\" if you will :-)\n> \n> Remember that you got \"your own\" tree of version selectors when you\n> checked out the desired collection.  So nobody else is checking out\n\n[ the \"working collection is a workspace\" model ]\n\n> your version selectors (they'd be checking out *their* version selectors,\n> that were created when they did *their* checkout of the collection).\n> \n> So the only constraint here is that you can't checkout the same resource\n> twice at the same time yourself, without first creating a new tree\n> of version selectors, but that seems like a pretty reasonable\n> (and perhaps even desireable) restriction.\n\nTotally reasonable restriction. But we still have the \"target\" problem with\nthis model.\n\n>... MERGE of an activitiy is not a transacted commit ...\n>...\n>    > ... Because of the problems with checking in working\n>    > collections that have version selector members, it would be much\n>    > simpler to just use collection version selectors.\n> \n>    So the issue isn't about \"what goes into a working collection\" as much as\n>    \"what happens when you check it in?\"\n> \n> Or \"can we just use collection version selectors, since they already\n> have the appropriate behavior on checkin?\"\n\nNope. Target problems. I still need to check out version resources rather\nthan operate through (a tree of) version selectors.\n\n>... CHECKIN on an activity ...\n>...\n>    If you check out '/some/collection/' into a working collection, then\n>    /working/collection/foo.html' may not be available.\n>    In truth, I'll probably make the URL available for DELETE, but nothing else.\n>    You'd need to go to the version (selector) to refer to the contents.\n> \n> That seems like an unnecessary complication to the model ... you can\n> remove this restriction, and the model becomes simpler, and the clients\n> life becomes simpler as well.\n\nI don't see a way yet.\n\nAnd I also have to disclaim that my client (the SVN client) isn't going to\ntry to \"slash through\" a working collection, so I actually don't have to\nworry about what those members are :-)  Thus, my request for a \"phantom\nmember\" in there.\n\n>... more DELETE stuff ...\n>...\n>    >    > <tim>\n>    >    > The operations you describe are more appropriate to a checked out\n>    >    > collection version selector; and I agree that they are essential.\n>    >    > </tim>\n> \n>    >    A working resource is a working resource. It shouldn't matter\n>    >    whether it came from a checked out version selector or a\n>    >    checked out version.\n> \n>    > Well, to be precise, the result of checking out a version\n>    > selector is a checked out version selector, not a working\n>    > resource (you only get a working resource by checking out a\n>    > version).  A working resource has some very different behavior\n>    > from a checked out version selector.  In particular, checking in\n>    > a working resource deletes the working resource, while checking\n>    > in a checked out version selector just changes its state from\n>    > checked out to checked in.\n> \n>    Fine. But all other operations: PUT, PROPFIND, etc work the same for a\n>    checked-out version selector and a working resource, right? You can still do\n>    all the same stuff to it. A CHECKIN treats them a bit different, but they\n>    seem pretty much the same otherwise.\n> \n> That would depend on how we are handling \"working collections\".\n> Earlier, you were suggesting that we only allow DELETE on members\n> of working collections, and not PROPFIND, CHECKOUT, etc.  If so,\n> a working collection would be very different from a checked out\n> collection version selector.  But I believe that the checked out\n> collection version selector semantics are the ones that we want,\n> so we should use those.\n\nWe may be at a critical point here. The target issue complicates creating a\ntree of version selectors.\n\n> One way to think about this is that I'm suggesting that checking\n> out a collection version should create a workspace (i.e. a tree\n> of version selectors), or in other words, that a working collection\n> is a workspace.  In fact, I'd be happy to allow you to create a\n> workspace by issuing a checkout against a collection version.\n> \n> The only difference between such a workspace and one that was created\n> by a MKWORKSPACE is that the server selects the name for the workspace,\n> while with a MKWORKSPACE, the client specifies the name for the workspace.\n\nThis is a great model based on the discussion above. But the target issue\nthat you raised still creates problems. The whole reason that I checked out\na collection version in the first place was to avoid target selectors that\nmight not be targeted the way that I need them to be :-)\n\n> So, if we say that you can CHECKOUT a collection version to create\n> a workspace, and you can CHECKIN an activity to get transactioning,\n> would you have what you need?\n\nWell, in the above scenario, I'd suggest that you could do a CHECKIN on the\nworking collection (a workspace) and also get a transacted checkin. But if a\nworking collection is simply a checked-out version selector (in a funny\nlocation), then a CHECKIN on that selector would have very different\nsemantics.\n\nWhat that means is: yes, checking in an activity is a good way to model a\ntransacted checkin. And as Tim points out, it SHOULD be transacted (rather\nthan MUST).\n\nCheers,\n-g\n\n-- \nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-12939746"}, {"subject": "RE: Deletion semantics for versioning metadat", "content": "I agree that this is a viable implementation trick, and the client would\nthereby never see 'invalid pointers' so it would satisfy the MUST protocol.\n(I equate it to the protocol saying a resource MUST have a property, and\nthe server choosing to calculate it on the fly when requested.)\nIf it looks like a duck, ...\n\nTim\n\n\"Lisa Dusseault\" <lisa@xythos.com> on 2000-11-20 05:57:55 PM\n\nPlease respond to \"Lisa Dusseault\" <lisa@xythos.com>\n\nTo:   \"Clemm, Geoff\" <gclemm@rational.com>, ietf-dav-versioning@w3.org\ncc:\nSubject:  RE: Deletion semantics for versioning metadata\n\nI'd suggest that an implementation \"MUST NOT return invalid pointers to\ndeleted working resources or other dangling pointers\".\n\nThis leaves the implementation free to clean up on delete, or to clean up\non\nrequest, or in a background process, whatever the implementors prefer.\nThis\nisn't quite \"atomic\", but it gets the desired behaviour.\n\nLisa\n\n> -----Original Message-----\n> From: ietf-dav-versioning-request@w3.org\n> [mailto:ietf-dav-versioning-request@w3.org]On Behalf Of Clemm, Geoff\n> Sent: Monday, November 20, 2000 9:36 AM\n> To: ietf-dav-versioning@w3.org\n> Subject: RE: Deletion semantics for versioning metadata\n>\n>\n> Ooops.  I answered a totally different question than Tim asked.\n> In particular, I answered the question \"Is atomic checkin of the\n> checkouts against an activity a SHOULD or a MUST\".  For that, I\n> said \"SHOULD\".\n>\n> But the question he *asked* was, \"Should the property updates be\n> atomic with the delete\".  For that I say MUST.\n> A dangling reference introduces the possibility that\n> the reference will mistakenly be later bound to a different resource,\n> which violates the semantics of those properties.  Internally,\n> an implementation can create dangling references, but the protocol\n> should require that it detect such dangling references and strip\n> them out before returning the property value.\n>\n> Cheers,\n> Geoff\n>\n> -----Original Message-----\n> From: Geoffrey M. Clemm [mailto:geoffrey.clemm@rational.com]\n> Sent: Monday, November 20, 2000 8:48 AM\n> To: ietf-dav-versioning@w3.org\n> Subject: Re: Deletion semantics for versioning metadata\n>\n>\n>\n> I believe it should be a SHOULD.  There are a variety of versioning\n> repositories that do not provide atomic group checkin behavior, and\n> it is a reasonable server value-add to guarantee atomic behavior.\n> A client can simply report the error, so it doesn't significantly\n> complicate client implementations.\n>\n> Cheers,\n> Geoff\n>\n>    From: Tim_Ellison@uk.ibm.com\n>    Date: Mon, 20 Nov 2000 11:30:16 +0000\n>\n>\n>\n>    Is that 'should' a SHOULD or a MUST?\n>\n>    There are likely servers that cannot achieve an 'atomic delete with\n>    multiple resource property updates'.\n>\n>    Tim\n>\n>\n>    \"Geoffrey M. Clemm\" <geoffrey.clemm@rational.com> on\n> 2000-11-19 06:08:03\n> PM\n>\n>    Please respond to \"Geoffrey M. Clemm\" <geoffrey.clemm@rational.com>\n>\n>    To:   ietf-dav-versioning@w3.org\n>    cc:\n>    Subject:  Deletion semantics for versioning metadata\n>\n>\n>    Greg has asked that we clarify the results of deleting things\n>    like working resources, versions, version histories, etc.\n>\n>    I believe it is sufficient for us to say that if a server allows you\n>    to delete such a resource, that all the versioning properties of other\n>    resources that refer to that resource should be updated to no longer\n>    refer to the deleted resource (I'd probably enumerate those properties\n>    to make sure there is no misunderstanding).\n>\n>    Any objections?\n>\n>    Cheers,\n>    Geoff\n\n\n\n", "id": "lists-005-12968810"}, {"subject": "Re: workspace", "content": "The answer was, \"no,  not really\". \n\nThe example was the three overlapping circles, and 7 different\nworkspace combinations. If a member was added or dropped from\none team, then everyone's workspaces might need to be updated\nwhich is as complicated a process as either of the checkin or\nrefresh examples.\n\nI think it is necessary to consider a many-to-one relationship\nbetween workspaces and version selectors, even though I admit\nit would be a lot simpler in some implementations to just have \na one-to-one. However, it is a lot better to do the implementation\nright, than complicate every end-user scenario with cumbersome\nor impractical workarounds.\n\nThe key point is that the current protocol should not build in \nelements which prohibit this and will require a complete reversal\nof the spec at some point in the future, such as a requirement \nthat a DAV:workspace property in a version selector be single \nvalued. The current spec should allow extension to many-to-one \nin cases like this even if it does not currently define/require \nthe extension.\n\nCheers,\nRossW\n\nTim_Ellison@uk.ibm.com wrote:\n> > The use for this was to insure consistent versions\n> > across several workig teams without requiring either\n> > each team to poll for changes, or each checkin to poll\n> > for and update all affected workspaces.\n> \n> Would it be possible for all teams to share a common workspace containing\n> resources that must be kept consistent?\n> \n> Regards,\n> \n> Tim\n\n\n\n", "id": "lists-005-12983485"}, {"subject": "Re: workspace", "content": ">    From: \"Geoffrey M. Clemm\" <geoffrey.clemm@rational.com>\n>    If we may it clear in the protocol that multiple\n>    membership is acceptable, but that multiple ownership\n>    is not, does that satisfy your requirements?\n>\n>    Tim: Am I correct in assuming that this would be OK with you?\n\nSeparating the workspace 'ownership' from the workspace 'membership' would\nresolve this issue.  It certainly has the potential to mess up some\nworkspace optimizations.  Would you allow version selectors to change\nworkspace ownership?\n\n>   From: Tim_Ellison@uk.ibm.com\n>\n>   So when I have two workspaces A and B both with bindings\n>   to a resource C, in which workspace is C?\n>\n> I'd just leave that up to the server.  I'd suggest the following\n> constraint: \"the DAV:workspace of a resource MUST be the same as\n> the DAV:workspace of one of its parents, unless the resource\n> itself is a workspace, in which case the DAV:workspace MUST\n> identify the resource itself.\"\n\nConceptually, why would you add this constraint if ownership and membership\nare orthogonal concepts?\n\nSo a reserved 'yes', provided the constraint was made (for efficient\nimplementation reasons), and clients cannot change a resource's workspace\nownership.\n\nTim\n\n\n\n", "id": "lists-005-12992144"}, {"subject": "Re: Atomic CHECKIN of all checkouts of an activit", "content": "This would go a long way to implementing the batch operation that I was\nrequesting (it seems like a long time ago) that got rejected.  I would\nwelcome this.\n\nDavid Goodenough\n\n\n\n\n\nGreg Stein <gstein@lyra.org> on 21-11-2000 12:17:29 AM\n\nTo:   ietf-dav-versioning@w3.org\ncc:    (bcc: David Goodenough/DGA/GB)\nSubject:  Re: Atomic CHECKIN of all checkouts of an activity\n\n\n\n\nAgreed. There doesn't seem to be any need for a new method.\n\nCheers,\n-g\n\nOn Mon, Nov 20, 2000 at 11:27:38AM +0000, Tim_Ellison@uk.ibm.com wrote:\n>\n>\n> CHECKIN to an activity.\n>\n> Tim Ellison\n> Java Technology Centre, MP146\n> IBM UK Laboratory, Hursley Park, Winchester, UK.\n> tel: +44 (0)1962 819872  internal: 249872  MOBx: 270452\n>\n>\n> \"Geoffrey M. Clemm\" <geoffrey.clemm@rational.com> on 2000-11-19 06:05:06\nPM\n>\n> Please respond to \"Geoffrey M. Clemm\" <geoffrey.clemm@rational.com>\n>\n> To:   ietf-dav-versioning@w3.org\n> cc:\n> Subject:  Atomic CHECKIN of all checkouts of an activity\n>\n>\n>\n>\n>\n> Greg has asked for the ability to tell the server that he wants\n> all checkouts against an activity to be checked in atomically.\n>\n> A natural way to marshall this would be to allow CHECKIN to be\n> applied to an activity (since activities cannot be versioned,\n> this is unambiguous).  Or we could introduce a CHECKIN-ACTIVITY\n> method.\n>\n> Any preferences (or objections)?\n>\n> Cheers,\n> Geoff\n>\n>\n>\n\n--\nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-13000946"}, {"subject": "Re: Atomic CHECKIN of all checkouts of an activit", "content": "   From: David.Goodenough@dga.co.uk\n\n   This would go a long way to implementing the batch operation that I was\n   requesting (it seems like a long time ago) that got rejected.  I would\n   welcome this.\n\nGreat!  (Always good to have at least two customers for a new feature).\n\nNote that at the time the generic batch operation was rejected, we\nsaid that we'd be happy to consider an aggregate request (i.e. a\nrequest that batches a specific set of other requests).  It was\nthe generic batching mechanism that was rejected.  So we may not\nbe right, but we are consistent (:-).\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-13011821"}, {"subject": "Re: workspace", "content": "   From: Tim_Ellison@uk.ibm.com\n\n   Separating the workspace 'ownership' from the workspace 'membership' would\n   resolve this issue.  It certainly has the potential to mess up some\n   workspace optimizations.  Would you allow version selectors to change\n   workspace ownership?\n\nNot in my server (:-).\n\n   >   From: Tim_Ellison@uk.ibm.com\n   >\n   >   So when I have two workspaces A and B both with bindings\n   >   to a resource C, in which workspace is C?\n   >\n   > I'd just leave that up to the server.  I'd suggest the following\n   > constraint: \"the DAV:workspace of a resource MUST be the same as\n   > the DAV:workspace of one of its parents, unless the resource\n   > itself is a workspace, in which case the DAV:workspace MUST\n   > identify the resource itself.\"\n\n   Conceptually, why would you add this constraint if ownership and membership\n   are orthogonal concepts?\n   So a reserved 'yes', provided the constraint was made (for efficient\n   implementation reasons), and clients cannot change a resource's workspace\n   ownership.\n\nYes, I would have this constraint (to allow efficient distributed\nworkspace implementation), and would not provide a mechanism for the\nclient to change a resource's workspace.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-13019839"}, {"subject": "Re: Working collection", "content": "   From: Greg Stein <gstein@lyra.org>\n\n   At another point, I had stated that I didn't want to create a \"tree\"\n   underneath the working collection, and how I was thinking of accomplishing\n   that. Pretty simple: return 404 for resources under the working collection.\n   Only a DELETE would be allowed for immediate members of a working\n   collection.\n\nOK, it looks like I haven't convinced you that you really want to\ncreate a logical tree on the server (aka workspace) for each user (:-).\n\nSo if we are plunging into dreaded choice C (:-), let's see if\nwe can make it as close to A or B as we can.  Since you don't want\nto create a tree of version selectors, that eliminates choice B.\nChoice A (analagous to versions) says that version controlled members\nof the collection are version histories.  This actually looks pretty\ngood, since you can't slash through version histories, they don't\ncreate a tree of version selectors, but you could delete them from\nthe working collection (you can't delete them from the version history\nnamespace, but there's nothing to stop you from deleting them from\nthe working collection namespace).\n\n   If you do a PUT or a MKCOL to a member of a working collection, then a new\n   working resource will be created, and that URL will be returned in the 201\n   (Created) response's Location: header. This allows me to avoid nesting the\n   working resources by effectively redirecting to the created working\n   resource.\n\nI have what I believe is a simpler proposal.  You can create as many\nnon-versioned resources as you want in a working collection.  When\nyou checkin a working collection, all non-versioned resources are put\nunder version control, and are replaced by their (newly created)\nversion history resource.  The \"put under version control\" works\nleafs up, so you can create trees of non-versioned resources inside\nof a working collection before checking it in.  The working collection\nis deleted on checkin, as a working resource is, but all your work is\nsaved in the standard form of versions and version histories.\n\nIf you want to subsequently checkout any of those newly versioned\nresources, you would just CHECKOUT the desired version, and get a\nworking resource just as usual.\n\n   I'm not sure how a PROPFIND on a working collection would operate, if it had\n   a non-zero depth. I might refuse them to avoid the implication that other\n   resources exist under the working collection.\n\nIf the members of a working collection are either version histories or\nnon-version-controlled resources, PROPFIND behavior would be well defined.\n\nHow's all this sound?\n\nCheers,\nGeoff\n\np.s. (I still think you should just create a workspace\non the server for each client :-).\n\n\n\n", "id": "lists-005-13027991"}, {"subject": "Re: Working collection", "content": "   From: Greg Stein <gstein@lyra.org>\n\n   After you create a workspace, then it must get populated with the\n   resources that you want to work with. So wouldn't that be something like:\n\n       MKWORKSPACE /some/whwere\n       COPY /repos  -> /some/where/repos\n\n   And then you start working with /some/where/repos ? Ooh, and the client also\n   has to make sure the result of the COPY actually creates version selectors,\n   doesn't it?\n\nActually, it would be a SET-TARGET (with a label or a baseline).\n(The COPY would just create non-versioned resources).\n\nThe SET-TARGET is required by definition to create the appropriate\nversion selectors, so the client would have to make sure of anything\n(assuming the server implemented the protocol correctly).\n\n   Hmm. I guess you could use VERSION-CONTROL instead of COPY to set up the\n   workspace contents. But... it isn't a simple matter of \"just create a\n   workspace\".\n\nA single SET-TARGET call would do it (with a Depth header, for the label\ncase), so I think it's reasonable to call it \"simple\".  The client is going\nto have to tell the server what versions it wants to \"checkout\", so it\nis just as easy for it to tell the server to do a SET-TARGET for each CHECKOUT\nso that the workspace is targeted appropriately.\n\n   > What happens\n   > if you delete a  checked-out child of that working collection?  Does that\n   > delete the working resource, or is it still around but invisible when\n   > you check it in?\n\n   If a CHECKOUT is done on a \"leaf\" version (thus creating a working\n   resource), and then somebody does a DELETE within that resource's parent's\n   working collection, then you have a \"merge conflict\".\n\n   1) a working resource exists, possibly with changes\n   2) the resource has been marked for deletion\n\nYou don't \"mark a resource for deletion\", you just update the membership\nof the checked-out collection (remember the mantra: \"a deletion is\na modification to the collection containing the object, not to the\nobject being deleted :-).\n\n   When you commit, the above two conditions are incompatible since the server\n   cannot know which takes precedence. So, the commit would fail.\n   [ commit meaning a CHECKIN of the related activity, workspace, whatever ]\n\nThe removal of a resource from a collection is not incompatible with\nthe creation of a new version of that resource, so there is no incompatibility\nand the commit (CHECKIN) will succeed.\n\nNote that this is not a problem ... the fact that your new version is\nnot visible in the new version of the collection presents no logical\nproblems, so I just mention this to avoid any misunderstandings about\nwhat a deletion is and what a merge conflict is.\n\n   A tree of version selectors is rather difficult to maintain on the server,\n   compared to a set of working resources. At any point in the tree, you would\n   need to figure out which is checked out, which is not. If something is\n   checked out, then what version? And as you pointed out in another note, what\n   is the target of each version selector? In Subversion, I need to work with\n   specific version resources (much easier than trying to prep a version\n   selector to point at the version that I'm concerned with).\n\nIf you implement a workspace as a label and a set of working\nresources, then you just move the label whenever someone says\nSET-TARGET, and check to see if you have a working resource for that\nversion history before returning the labeled version.  You do have the\ncost of setting the labels for each workspace, but you now have all\nthe robustness/recoverability benefits of the server knowing the state\nof the client.\n\nBut I probably can live with adding the notion of a \"working collection\"\nto the protocol, if you remain unconvinced (:-).\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-13037831"}, {"subject": "DeltaV BOFs in San Dieg", "content": "In addition to the official DeltaV meeting slot on Thursday, at 3:30PM, are\nthere any DeltaV BOF meetings being planned?  While I won't be in San Diego,\nI think there will be a lot of WebDAV people there, and they might be\ninterested in attending a DeltaV BOF.  I'll announce it on the WebDAV WG\nlist if there is one.\n\n- Jim\n\n\n\n", "id": "lists-005-13048800"}, {"subject": "Re: long... Re: Working collection", "content": "   From: Greg Stein <gstein@lyra.org>\n\n   I'm still a bit unclear in my head what is actually *at* a history resource.\n   Is something there, or is it just a logical entity named by a URI?\n\nWell, that of course is up to the server.  Some implementions will be\nan RCS ,v file or and SCCS s. file, and others be records in some database,\nprobably supplemented with one or more files containing some (possibly\ncompressed and deltified) representation of the versions' content.\n\n   Bah :-) ... I read the Overwrite as \"it is okay if the destination already\n   exists; just put the source contents there.\" All the hullabaloo about\n   \"delete then copy/move\" is a bit overdone in my mind :-)\n\nWell, if you have hard links to that file, you probably will care\na great deal whether or not it was a delete followed by the creation\nof a new resource, or just an update of the content of the existing\nresource.  And depending on whether or not the parent collection is\nchecked out (or writeable), one will succeed where the other will fail.\n\n   Back to the question at hand:\n\nYes, that's always a good thing to get back to eventually (:-).\n\n   But we still have the various problems of setting the targets of the\n   selectors in the members. SVN never really deals with targets, it wants to\n   work mostly with version resources. Why? Because it copies all the resources\n   to the local disk and you edit them there.\n\nIf it is going to copy all of the resources to the local disk, it has\nto (at least indirectly) tell the server what versions of each resource\nit is interested in.  If it just tells the server this via a \"SET-TARGET\",\nthen the server knows everything it needs to set up the workspace for that\nclient.\n\n   When you go to do a commit, it\n   needs to work against what it copied (rather than the current target). Thus,\n   it refers to the specific version resource that was copied to the client. It\n   checks that thing out, makes the changes, and checks it in.\n\nYes!  Which is one way a workspace is useful, since it keeps track of\nwhat versions the client has downloaded, as opposed to what is currently\nin the shared \"team\" area.\n\n   > To be careful about terminology, it becomes a version selector, not\n   > a working resource, since auto-versioning creates version selectors,\n   > not working resources.\n\n   Eh? Auto-versioning is related to an automatic CHECKOUT/CHECKIN. I was\n   referring to automatically making the new resource version-controlled.\n   Further, I create a working resource for the new resource. In the 201\n   (Created), I state where the new resource's working resource is located.\n\nPoor choice of words on my part.  I was referring to the \"automatic\nputting under version control by the server\", not the \"having the\nDAV:auto-version property set\" concept.  I'll try to remember to call\nthe former \"auto-version-controlling\", and the latter\n\"auto-versioning\".\n\n   1) \"When something becomes version-controlled, it becomes a version\n      selector.\" Where is that stated? VERSION-CONTROL creates one, sure.\n\nThat's what I meant by \"becomes version-controlled\", namely, has had\nthe VERSION-CONTROL operation applied to it.  Auto-version-controlling\nbehavior by the server is defined to be identical to having the\nserver apply VERSION-CONTROL to the new resource immediately after\nit has been created.\n\n      But\n      why can't my PUT create a working resource? (which implies an eventual\n      creation of a version, a version history, and a version selector as a\n      member of the collection version's extent version selectors)\n\nThat would be a significant change to the current definition of PUT and\nthe definition of a working resource (a working resource just checks out\na version which must be in a version history).  But I think we're OK\nthere with the \"working collection can contain non-versioned resources\"\napproach, described in my prior message.\n\n   > When you first create a version history, it is given an initial version.\n   > When you put an existing (non-versioned) resource under version control,\n   > the initial version is a copy of the state of the non-versioned resource.\n\n   That doesn't fully answer the question. The second sentence assumes that I\n   have a non-versioned resource. That step isn't possible. I must be able to\n   go from the null state to a versioned resource.\n\nIf non-version-controlled members of working collections are put under\nversion control when the working collection is checked in, I believe\nthat you get what you need (and don't have to go from the null state\nto a versioned resource).\n\n   I believe the answer is that a working resource might not have a\n   DAV:checked-out property.\n\nThat significantly complicates the semantics of a working resource, which\nI'd like to avoid.\n\n   How were other people thinking of modelling the creation of a versioned\n   resource? Are people assuming that this is a non-atomic creation? (check out\n   the parent, put a resource, version-control it, check in the parent; and\n   deal with the race between the PUT and the VERSION-CONTROL when the resource\n   may not be version-controlled?)\n\nYou can just lock the resource to make sure nobody messes with it between\nthe PUT and the VERSION-CONTROL.  One reason not to allow you to version\ncontrol a \"null resource\" is that servers will often have a very different\nway of versioning things like collections from things like files, and\nwon't let you change from one to the other, and with a null resource,\na server can't guess which one it's going to be.\n\n   ...\n   This is a great model based on the discussion above. But the target issue\n   that you raised still creates problems. The whole reason that I checked out\n   a collection version in the first place was to avoid target selectors that\n   might not be targeted the way that I need them to be :-)\n\nRemember that a collection version says nothing about the targets\nof its members (it just tells you the names and version history of\neach member).  So if a target selector is not targeted the way you\nwant, you just modify the target selector ... checking out and\nchecking in the collection or any of its members\nis independent of what target is selected by a target selector.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-13055963"}, {"subject": "Re: DeltaV BOFs in San Dieg", "content": "Jim,\n\nThe only announcement that I noticed is\n\nhttp://lists.w3.org/Archives/Public/ietf-dav-versioning/2000OctDec/0157.html\n\nRegards,\n\nTim Ellison\nJava Technology Centre, MP146\nIBM UK Laboratory, Hursley Park, Winchester, UK.\ntel: +44 (0)1962 819872  internal: 249872  MOBx: 270452\n\n\n\"Jim Whitehead\" <ejw@cse.ucsc.edu> on 2000-11-22 09:06:24 PM\n\nPlease respond to \"Jim Whitehead\" <ejw@cse.ucsc.edu>\n\nTo:   ietf-dav-versioning@w3.org\ncc:\nSubject:  DeltaV BOFs in San Diego\n\n\n\n\nIn addition to the official DeltaV meeting slot on Thursday, at 3:30PM, are\nthere any DeltaV BOF meetings being planned?  While I won't be in San\nDiego,\nI think there will be a lot of WebDAV people there, and they might be\ninterested in attending a DeltaV BOF.  I'll announce it on the WebDAV WG\nlist if there is one.\n\n- Jim\n\n\n\n", "id": "lists-005-13069639"}, {"subject": "Typo in PROPPATCH section in core versionin", "content": "There seems to be a typo in the PROPPATCH section in core versioning\n(section 8.6 in the 10 draft, 7.4 in the 10.5 draft).  Shouldn't it be\n\"checked-in version selector\", not \"checked-out version selector\"?  The\ncorrected sentence would read:\n\n\"If the request-URL identifies a checked-in version selector, an attempt to\nmodify a dead property MUST fail unless DAV:auto-version is set for that\nversion selector.\"\n\n--Chuck Fay, FileNET Corporation\n\n\n\n", "id": "lists-005-13078081"}, {"subject": "RE: Typo in PROPPATCH section in core versionin", "content": "Yes, you are of course correct.  Thanks for catching that!\n\nCheers,\nGeoff\n\n-----Original Message-----\nFrom: Fay, Chuck [mailto:CFay@filenet.com]\nSent: Monday, November 27, 2000 5:10 PM\nTo: ietf-dav-versioning@w3.org\nSubject: Typo in PROPPATCH section in core versioning\n\n\nThere seems to be a typo in the PROPPATCH section in core versioning\n(section 8.6 in the 10 draft, 7.4 in the 10.5 draft).  Shouldn't it be\n\"checked-in version selector\", not \"checked-out version selector\"?  The\ncorrected sentence would read:\n\n\"If the request-URL identifies a checked-in version selector, an attempt to\nmodify a dead property MUST fail unless DAV:auto-version is set for that\nversion selector.\"\n\n--Chuck Fay, FileNET Corporation\n\n\n\n", "id": "lists-005-13085668"}, {"subject": "Difference", "content": "I'm just reading the documnentation of both groups ...\n\nI didn't understand what is the difference of the two working groups.\nSomeone could tell me something ... \n\nCan I consider deltav as the continuation of webdav ?\nIf so, why webdav is still working ?\n\nThanks\n\nSimone Pensa\n\n\n\n", "id": "lists-005-13093757"}, {"subject": "RE: Difference", "content": "deltav is responsible for adding full(?) versioning capabilities to webdav.\n\nA client implementation of Source Code Management system can be easily built\nto work with webdav server with deltav extensions, something not possible\nwith just webdav impl.\n\nHope that helps,\nAngsuman\n-----Original Message-----\nFrom: Simone Pensa [mailto:simone.pensa@icn.siemens.it]\nSent: Tuesday, November 28, 2000 6:29 AM\nTo: Mailing list DELTAV; Mailing list WEBDAV\nSubject: Differences\n\n\nI'm just reading the documnentation of both groups ...\n\nI didn't understand what is the difference of the two working groups.\nSomeone could tell me something ... \n\nCan I consider deltav as the continuation of webdav ?\nIf so, why webdav is still working ?\n\nThanks\n\nSimone Pensa\n\n\n\n", "id": "lists-005-13100994"}, {"subject": "Re: Difference", "content": "Simone,\nThe IETF area directors don't like to see a working group go on forever. \nThey prefer to see it specify a charter, execute on the charter, publish \nstandards, and disband. This keeps the work fresh, encourages completion \nof deliverables, and allows new working groups to be created with new \nmembers. The DeltaV working group is a new working group whose charter is \nto provide versioning extensions to WebDAV. If this work was done in the \nWebDAV working group, it would take a lot longer to get RFC2518 done which \nwould result in fewer WebDAV implementations. By separating these \nconcerns, we encourage development of WebDAV servers which are useful now, \nand get a new set of working group members who are more experienced in \nversioning and document management systems.\n\nSo you can consider DeltaV as a continuation of WebDAV for versioning and \nconfiguration management extensions. However, the WebDAV working group is \nstill active as RFC2518 is not yet an Internet Standard.\n\n\n\n\nI'm just reading the documnentation of both groups ...\n\nI didn't understand what is the difference of the two working groups.\nSomeone could tell me something ...\n\nCan I consider deltav as the continuation of webdav ?\nIf so, why webdav is still working ?\n\nThanks\n\nSimone Pensa\n\n\n\n", "id": "lists-005-13109456"}, {"subject": "Simplifying CHECKOUT behavior for core versioning client", "content": "Note: The following message does *not* propose any changes to either the\nsemantics or the marshalling of the versioning protocol, but rather\njust suggests making some current core semantics optional.\n\nCurrently, a core versioning client must check to see whether the\nserver supports version selector or version checkout, before it can\noperate against a server.  This is because there are some servers that\nonly support \"server side workspace\" semantics for parallel\ndevelopment (i.e. only support checking out a version selector), and\nothers only support \"client side workspace\" semantics for parallel\ndevelopment (i.e. only support checking out a version).\n\nI believe we can address this issue by making branching an optional\nfeature (i.e. move it from core to optional).  Since \"merging\" is an\noptional feature, and since branching is of limited value without\nmerging, it probably makes more sense make branch/merge a unified\noptional feature, instead of the way it is now, where branch support\nis required but merge support is optional.\n\nI am periodically asked why core versioning requires support for\nbranching (parallel development) when many useful versioning servers\n(primarily for document management) only support linear versioning.\nThis is another motivation to make support for parallel development\noptional.\n\nIf branching is not in core, then there is no need for a resource to\nbe checked out twice at the same time.  This means that neither\nworkspaces nor working resources are required, and just the ability to\ncheck-out and check-in a version selector is sufficient.  Note that a\nserver that is \"working resource\" based can easily implement this\nbehavior by associating a working resource with the version selector\nwhile it is \"checked out\", and direct all operations on the version\nselector to this working resource.\n\nWe would then define two alternative forms of optional parallel\ndevelopment, \"client side workspaces\" (with working resources) and\n\"server side workspaces\" (with working resources).\n\nComments?\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-13117916"}, {"subject": "Versioning TeleConf Agenda, 12/1/00 (Friday) 12-1pm ES", "content": "phone: 888 819 8909  pass-code#97985\n\nAgenda:\n\n- Moving branching support from core to optional (Geoff)\n\n- Working collections (Greg)\n\n- CHECKIN of an activity (Greg)\n\n- Nested workspaces (Tim)\n\n- Replacing DAV:must-support attribute with If tokens (Yaron)\n\n- Moving DAV:supported-xxx and DAV:collection/workspace-collection-set\n  properties to be OPTION request/response items (Yaron).\n\n- Replace F and T with false and true (to allign with XML schema) (Yaron).\n\n- Move DAV:checkin-fork and DAV:checkout-fork to core (Yaron).\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-13127494"}, {"subject": "Re: Draft IETF DeltaV Versionin", "content": "Hi all,\n\n> Dear Colleges,\n>\n> >From the experience we have gathered trying to implement the DeltaV\n> protocol, we have some basic comments and suggestions to make before the\n> end of the last call period for the DeltaV protocol.  We regard these\n> issues to be important for the future development of DeltaV and WebDAV.\n> This message is cross posted to the WebDAV mailing list because the main\n> points pertain as much to WebDAV as to DeltaV.\n>\n> Valid XML should be used in WebDAV instead of simply well formed XML\n> ====================================================================\n>\n> Using simply well formed XML misses half the benefit of XML: the\n> automatic detection of syntactic errors.  This is the best way to insure\n> that a protocol stays open and correct.  Any client or server can be\n> easily tested for at least syntactic conformance.  This does not means\n> that every transaction must be validated, but ensuring that it can is\n> important.\n\nI totally agree! If you look, for example, at implementations of RFC2518 you will\ncome to the conclusion that a lot of problems of the \"realworld\" WebDAV client\nserver communication are caused by the fact that a lot of clients and servers do\n*not*  implement the DTD of RFC 2518 exactly because they don't have to. To my mind\na protocol should define a precise language which every client and server has to\nspeak in order to guarantee a perfect client server communication. Moreover clients\nand servers are easier to implement if they are based on  strict rules to which\nthey have to obey.\n\nBest, Hartmut\n\n\n\n", "id": "lists-005-13135573"}, {"subject": "Draft IETF DeltaV Versionin", "content": "[freed from spam trap - rrs]\n\nDate: Thu, 30 Nov 2000 20:30:23 -0500 (EST)\nFrom: \"James J. Hunt\" <jjh@ira.uka.de>\nTo: ietf-dav-versioning@w3.org\nCC: w3c-dist-auth@w3.org, reuterj@ira.uka.de\nMessage-ID: <\"i41fs3.ira.0039901:001201.012827\"@ira.uka.de>\n\nDear Colleges,\n\n>From the experience we have gathered trying to implement the DeltaV\nprotocol, we have some basic comments and suggestions to make before the\nend of the last call period for the DeltaV protocol.  We regard these\nissues to be important for the future development of DeltaV and WebDAV.\nThis message is cross posted to the WebDAV mailing list because the main\npoints pertain as much to WebDAV as to DeltaV.\n\nValid XML should be used in WebDAV instead of simply well formed XML\n====================================================================\n\nUsing simply well formed XML misses half the benefit of XML: the\nautomatic detection of syntactic errors.  This is the best way to insure\nthat a protocol stays open and correct.  Any client or server can be\neasily tested for at least syntactic conformance.  This does not means\nthat every transaction must be validated, but ensuring that it can is\nimportant.\n\nOn the WebDAV list, there has been some discussion about validating XML\nfor WebDAV, for example, see\nhttp://lists.w3.org/Archives/Public/w3c-dist-auth/1999OctDec/0242.html.\nThere seemed to be some agreement that the current WebDAV specification\nuses a syntax that is well-formed, but is not suitable for XML\nvalidation, and that it would not be too hard to make WebDAV to conform\nto XML validation rules.  However, some participants did not agree on\nthe advantages of validation.\n\nInteroperability is one of the key requirement on Internet protocols for\nsupporting a heterogeneous network.  This holds true for the WWW and its\nprotocols including HTTP, WebDAV, and DeltaV.  As WebDAV matures several\nextension protocols are emerging, among them the bindings and\nredirect-reference protocols, DeltaV, the access control lists\nspecification, and the advanced collections protocol.  All these\nextension protocols contribute to the XML syntax of WebDAV.  Moreover,\nit is quite likely that vendors will introduce proprietary extensions to\nthe XML syntax.  For an idea of the extent to which this can occur, one\njust need look at the source code of the DeltaV specification at\nhttp://www.webdav.org/deltav/protocol/draft-ietf-deltav-versioning-10.5.htm\nand notice all the tags inserted by Word that are not part of the HTML\nspecification.\n\nAll in all, the XML syntax of WebDAV can no longer be viewed as being\nsimple.  Validation can help us to identify bugs in WebDAV applications.\nActually, this has already help us to find some bugs in the WebDAV\nspecification itself (e.g. WebDAV issues DTD_BOOBOO, MISSING_NS_SPEC,\ncp. http://www.ics.uci.edu/pub/ietf/webdav/protocol/issues.html).\nValidation may also force implementors to handle XML more carefully and\nthus improve reliability.\n\nNote that we do not want to force a WebDAV implementation to validate\nXML.  We only suggest letting the implementor decide if and when to use\nvalidation.  Currently, this is not possible without modifying an\nexisting XML parser or writing a non-conforming XML parser.  Therefore,\nwe strongly suggest to fix the WebDAV specification and its extension\nprotocols like DeltaV to conform to the XML specification--including\nXML validation.  Then an implementor may choose when to apply\nvalidation.\n\nAnother problem is to track version information about the protocols.\nThe DAV header as returned from an OPTIONS request (e.g.: \"DAV: 1, 2,\nversion-selector-checkout\") does not help at all.  However, when using\na DTD, the client and the server could agree on a protocol revision\n(or otherwise stop communication with an appropriate error message or\nlog) by using the DTD's header information.\n\n\nMaking WebDAV properties suitable for XML validation\n====================================================\n\nWebDAV currently expresses resource properties through a variety of\ntags, for example:\n\n<D:displayname xmlns:D=\"DAV:\">Hello, world!</D:displayname>\n\nIn this example, the name of the property is \"DAV:displayname\", and its\nvalue is \"Hello, world!\".  This approach has some disadvantages.\nFirst of all, if you want to list property names only, you currently\nhave to do something like:\n\n<D:displayname xmlns:D=\"DAV:\"/>\n\nBut, in an XML DTD, an element can not be defined to have empty\ncontent and non-empty content at the same time.  Hence, the way WebDAV\ncurrently handles properties is not suitable for validating XML.\nThis problem has already been discussed as anomaly in the DAV:prop\nelement usage (see\nhttp://lists.w3.org/Archives/Public/w3c-dist-auth/2000JanMar/0029.html).\n\nThe simple solution here is to model the property name as an element\nattribute value or as PCDATA of a generic tag for all properties:\n\nSolution using XML attributes:\n- ------------------------------\n\n<!ELEMENT property (property-name | property-value)* >\n<!ELEMENT property-name EMPTY>\n<!ELEMENT property-value ANY>\n<!ATTLIST property-name\n          name  CDATA   #REQUIRED>\n<!ATTLIST property-value\n          name  CDATA   #REQUIRED>\n\nExample:\n\n<D:property xmlns:D=\"DAV:\">\n  <D:property-name name=\"displayname\"/> <!--specifying property name only-->\n  <D:property-value name=\"source\">      <!--specifying property name &\nvalue-->\n    <D:href>http://www.foo.bar</D:href>\n  </D:property-value>\n</D:property>\n\nAlternative solution without use of XML attributes:\n- ---------------------------------------------------\n\n<!ELEMENT property (property-name, property-value?)* >\n<!ELEMENT property-name (#PCDATA)>\n<!ELEMENT property-value ANY>\n\nExample:\n\n<D:property xmlns:D=\"DAV:\">\n  <D:property-name>displayname</D:property-name> <!--property name only-->\n  <D:property-name>source</D:property-name>      <!--property name & value-->\n  <D:property-value>\n    <D:href>http://www.foo.bar</D:href>\n  </D:property-value>\n</D:property>\n\n\nDTD for DeltaV\n==============\n\nHaving all of the above said, DeltaV should, similarly to WebDAV, of\ncourse specify an adequate DTD for all elements introduced in DeltaV.\nThe DTD need not be sent with every message.  A reference to a URL at\nwww.webdav.org would be sufficient.\n\nLabels in DeltaV\n================\n\nOne of the recent changes in DeltaV was to remove labels from the core\nversioning part and put them into the options part of the protocol.\nWe strongly suggest to undo this change.  Even if there exist two or\nthree revision control systems that do not use labels, labels are\nessential for identifying sets of associated files in a repository of\nversions.  And, actually, they are really easy to implement\n(especially on top of a WebDAV implementation that requires built-in\nmechanisms for property storage).\n\nSincerely,\nJames J. Hunt\nJ?rgen Reuter\n\nP.S. I will be at the IETF meeting in San Diego from the evening of the\n     10th to the early morning of the 15th to discuss these issues.\n     --- JJHunt\n\nP.P.S I will send a second mail pertaining to smaller points we have\n      discussed here that concern only DeltaV.\n      --- J?rgen Reuter\n\n\n\n", "id": "lists-005-13144708"}, {"subject": "Re: Simplifying CHECKOUT behavior for core versioning client", "content": "Ooops.  Correction to the last sentence :\n\n   From: \"Geoffrey M. Clemm\" <geoffrey.clemm@rational.com>\n\n   We would then define two alternative forms of optional parallel\n   development, \"client side workspaces\" (with working resources) and\n   \"server side workspaces\" (with working resources).\n\nThat should have been:\n\n   We would then define two alternative forms of optional parallel\n   development, \"client side workspaces\" (with working resources) and\n   \"server side workspaces\" (with workspaces).\n\nThis proposal effectively says that the current server choice\n(client side workspaces vs. server side workspaces) should be\nreflected in the optional category, so that all of \"core\" is\nrequired.  Leaving it the way it is now is misleading, since\nthe form of checkout is a server option but we have that functionality\ndefined in the \"required\" section of the protocol.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-13160313"}, {"subject": "Re: Simplifying CHECKOUT behavior for core versioning client", "content": "> Currently, a core versioning client must check to see whether the\n> server supports version selector or version checkout, before it can\n> operate against a server.  This is because there are some servers that\n> only support \"server side workspace\" semantics for parallel\n> development (i.e. only support checking out a version selector), and\n> others only support \"client side workspace\" semantics for parallel\n> development (i.e. only support checking out a version).\n\nNote that both \"server side private workspaces\" and \"client side workspace\nsemantics\" allow users to make changes that are not seen by other users.\nIf core clients check out in place, their changes will be seen by other\nusers. This is true even in the case of simple linear histories, so the\nfollowing scenario would not be supported: update both contents and\nproperties on a privately checked out resource, followed by a CHECKIN\nand a SET-TARGET which updates content and properties atomically for\nother users.\n\n> I believe we can address this issue by making branching an optional\n> feature (i.e. move it from core to optional).  Since \"merging\" is an\n> optional feature, and since branching is of limited value without\n> merging, it probably makes more sense make branch/merge a unified\n> optional feature, instead of the way it is now, where branch support\n> is required but merge support is optional.\n\nThe MERGE method is optional, but a client can merge \"by hand\" using\nonly core features (merging content and properties as appropriate,\non a checked out resource, and then setting the DAV:predecessor-set\nproperty before the CHECKIN).\n\n> I am periodically asked why core versioning requires support for\n> branching (parallel development) when many useful versioning servers\n> (primarily for document management) only support linear versioning.\n> This is another motivation to make support for parallel development\n> optional.\n> \n> If branching is not in core, then there is no need for a resource to\n> be checked out twice at the same time.\n\nI could agree on this, but what about the need for checking out a\nresource privately (see above)?\n\n> This means that neither\n> workspaces nor working resources are required, and just the ability to\n> check-out and check-in a version selector is sufficient.  Note that a\n> server that is \"working resource\" based can easily implement this\n> behavior by associating a working resource with the version selector\n> while it is \"checked out\", and direct all operations on the version\n> selector to this working resource.\n\nOn a \"working resource\" based server, version selectors would never\nbe checked out, and it would always be possible to SET-TARGET them\n(or MERGE). This is no longer true in the model you propose.\n\n> We would then define two alternative forms of optional parallel\n> development, \"client side workspaces\" (with working resources) and\n> \"server side workspaces\" (with working resources).\n\nBoris.\n\n\n\n", "id": "lists-005-13168874"}, {"subject": "Labelling support optiona", "content": "> -----Original Message-----\n> From: \"James J. Hunt\" <jjh@ira.uka.de>\n> To: ietf-dav-versioning@w3.org\n>\n> Labels in DeltaV\n> ================\n>\n> One of the recent changes in DeltaV was to remove labels from the core\n> versioning part and put them into the options part of the protocol.\n> We strongly suggest to undo this change.  Even if there exist two or\n> three revision control systems that do not use labels, labels are\n> essential for identifying sets of associated files in a repository of\n> versions.  And, actually, they are really easy to implement\n> (especially on top of a WebDAV implementation that requires built-in\n> mechanisms for property storage).\n\nYour assumption here is that there ARE associated files in a repository of\nversions.  Why need there be?  There are repositories of documents -- like\nmine at http://www.sharemation.com/~milele/public -- which have versions but\naren't associated with each other.\n\nAre you implementing a revision control system for source code?  That could\nbe the disconnect between us.  When repositories are not intended for source\ncontrol, but just for ordinary documents, they require far fewer features.\nhttp://lists.w3.org/Archives/Public/ietf-dav-versioning/2000OctDec/0062.html\n\nIf LABEL was a simple property, I wouldn't care, but since it's a complex\nproperty plus a new method to modify the set of labels, I'd rather it be\noptional.\n\nLet me put it this way.  What would you like to accomplish that can't be\naccomplished if labeling is in the optional part of the protocol?\n\nLisa\n\n\n\n", "id": "lists-005-13179783"}, {"subject": "XML Validity vs Extensibilit", "content": "Changing the syntax of the PROPFIND and PROPPATCH in the manner you suggest\nwould break current implementations.  This would change the bits on the wire\nfor all PROP* messages, even for ones which include no extensions.\n\nWhile it's arguable that it would be nice to have required valid XML when\nRFC 2818 was written, changing the bits on the wire for Proposed Standard\nprotocols isn't done except for worse problems (or much smaller changes)\nthan this.\n\nAs far as validating XML to check interoperability, feel free:  RFC2518\nincludes a DTD, and implementors are welcome to check their implementation\nagainst the DTD by validating XML bodies.\n\nThe cat's already out of the bag and can't be put back in.\n\nLisa\n\n> -----Original Message-----\n> From: \"James J. Hunt\" <jjh@ira.uka.de>\n> To: ietf-dav-versioning@w3.org\n> CC: w3c-dist-auth@w3.org, reuterj@ira.uka.de\n> Message-ID: <\"i41fs3.ira.0039901:001201.012827\"@ira.uka.de>\n>\n> Dear Colleges,\n>\n> >From the experience we have gathered trying to implement the DeltaV\n> protocol, we have some basic comments and suggestions to make before the\n> end of the last call period for the DeltaV protocol.  We regard these\n> issues to be important for the future development of DeltaV and WebDAV.\n> This message is cross posted to the WebDAV mailing list because the main\n> points pertain as much to WebDAV as to DeltaV.\n>\n> Valid XML should be used in WebDAV instead of simply well formed XML\n> ====================================================================\n>\n> Using simply well formed XML misses half the benefit of XML: the\n> automatic detection of syntactic errors.  This is the best way to insure\n> that a protocol stays open and correct.  Any client or server can be\n> easily tested for at least syntactic conformance.  This does not means\n> that every transaction must be validated, but ensuring that it can is\n> important.\n>\n> On the WebDAV list, there has been some discussion about validating XML\n> for WebDAV, for example, see\n> http://lists.w3.org/Archives/Public/w3c-dist-auth/1999OctDec/0242.html.\n> There seemed to be some agreement that the current WebDAV specification\n> uses a syntax that is well-formed, but is not suitable for XML\n> validation, and that it would not be too hard to make WebDAV to conform\n> to XML validation rules.  However, some participants did not agree on\n> the advantages of validation.\n>\n> Interoperability is one of the key requirement on Internet protocols for\n> supporting a heterogeneous network.  This holds true for the WWW and its\n> protocols including HTTP, WebDAV, and DeltaV.  As WebDAV matures several\n> extension protocols are emerging, among them the bindings and\n> redirect-reference protocols, DeltaV, the access control lists\n> specification, and the advanced collections protocol.  All these\n> extension protocols contribute to the XML syntax of WebDAV.  Moreover,\n> it is quite likely that vendors will introduce proprietary extensions to\n> the XML syntax.  For an idea of the extent to which this can occur, one\n> just need look at the source code of the DeltaV specification at\n> http://www.webdav.org/deltav/protocol/draft-ietf-deltav-versioning\n> -10.5.htm\n> and notice all the tags inserted by Word that are not part of the HTML\n> specification.\n>\n> All in all, the XML syntax of WebDAV can no longer be viewed as being\n> simple.  Validation can help us to identify bugs in WebDAV applications.\n> Actually, this has already help us to find some bugs in the WebDAV\n> specification itself (e.g. WebDAV issues DTD_BOOBOO, MISSING_NS_SPEC,\n> cp. http://www.ics.uci.edu/pub/ietf/webdav/protocol/issues.html).\n> Validation may also force implementors to handle XML more carefully and\n> thus improve reliability.\n>\n> Note that we do not want to force a WebDAV implementation to validate\n> XML.  We only suggest letting the implementor decide if and when to use\n> validation.  Currently, this is not possible without modifying an\n> existing XML parser or writing a non-conforming XML parser.  Therefore,\n> we strongly suggest to fix the WebDAV specification and its extension\n> protocols like DeltaV to conform to the XML specification--including\n> XML validation.  Then an implementor may choose when to apply\n> validation.\n>\n> Another problem is to track version information about the protocols.\n> The DAV header as returned from an OPTIONS request (e.g.: \"DAV: 1, 2,\n> version-selector-checkout\") does not help at all.  However, when using\n> a DTD, the client and the server could agree on a protocol revision\n> (or otherwise stop communication with an appropriate error message or\n> log) by using the DTD's header information.\n>\n>\n> Making WebDAV properties suitable for XML validation\n> ====================================================\n>\n> WebDAV currently expresses resource properties through a variety of\n> tags, for example:\n>\n> <D:displayname xmlns:D=\"DAV:\">Hello, world!</D:displayname>\n>\n> In this example, the name of the property is \"DAV:displayname\", and its\n> value is \"Hello, world!\".  This approach has some disadvantages.\n> First of all, if you want to list property names only, you currently\n> have to do something like:\n>\n> <D:displayname xmlns:D=\"DAV:\"/>\n>\n> But, in an XML DTD, an element can not be defined to have empty\n> content and non-empty content at the same time.  Hence, the way WebDAV\n> currently handles properties is not suitable for validating XML.\n> This problem has already been discussed as anomaly in the DAV:prop\n> element usage (see\n> http://lists.w3.org/Archives/Public/w3c-dist-auth/2000JanMar/0029.html).\n>\n> The simple solution here is to model the property name as an element\n> attribute value or as PCDATA of a generic tag for all properties:\n>\n> Solution using XML attributes:\n> - ------------------------------\n>\n> <!ELEMENT property (property-name | property-value)* >\n> <!ELEMENT property-name EMPTY>\n> <!ELEMENT property-value ANY>\n> <!ATTLIST property-name\n>           name  CDATA   #REQUIRED>\n> <!ATTLIST property-value\n>           name  CDATA   #REQUIRED>\n>\n> Example:\n>\n> <D:property xmlns:D=\"DAV:\">\n>   <D:property-name name=\"displayname\"/> <!--specifying property\n> name only-->\n>   <D:property-value name=\"source\">      <!--specifying property name &\n> value-->\n>     <D:href>http://www.foo.bar</D:href>\n>   </D:property-value>\n> </D:property>\n>\n> Alternative solution without use of XML attributes:\n> - ---------------------------------------------------\n>\n> <!ELEMENT property (property-name, property-value?)* >\n> <!ELEMENT property-name (#PCDATA)>\n> <!ELEMENT property-value ANY>\n>\n> Example:\n>\n> <D:property xmlns:D=\"DAV:\">\n>   <D:property-name>displayname</D:property-name> <!--property name only-->\n>   <D:property-name>source</D:property-name>      <!--property\n> name & value-->\n>   <D:property-value>\n>     <D:href>http://www.foo.bar</D:href>\n>   </D:property-value>\n> </D:property>\n>\n>\n> DTD for DeltaV\n> ==============\n>\n> Having all of the above said, DeltaV should, similarly to WebDAV, of\n> course specify an adequate DTD for all elements introduced in DeltaV.\n> The DTD need not be sent with every message.  A reference to a URL at\n> www.webdav.org would be sufficient.\n>\n> Labels in DeltaV\n> ================\n>\n> One of the recent changes in DeltaV was to remove labels from the core\n> versioning part and put them into the options part of the protocol.\n> We strongly suggest to undo this change.  Even if there exist two or\n> three revision control systems that do not use labels, labels are\n> essential for identifying sets of associated files in a repository of\n> versions.  And, actually, they are really easy to implement\n> (especially on top of a WebDAV implementation that requires built-in\n> mechanisms for property storage).\n>\n> Sincerely,\n> James J. Hunt\n> J?rgen Reuter\n>\n> P.S. I will be at the IETF meeting in San Diego from the evening of the\n>      10th to the early morning of the 15th to discuss these issues.\n>      --- JJHunt\n>\n> P.P.S I will send a second mail pertaining to smaller points we have\n>       discussed here that concern only DeltaV.\n>       --- J?rgen Reuter\n>\n\n\n\n", "id": "lists-005-13189749"}, {"subject": "Review of draft-ietf-deltav-versioning-10.4/", "content": "Hello, all!\n\nThis is a review of the core versioning part and label option of the\ndraft-ietf-deltav-versioning-10.4 (with updates for 10.5).\n\nGeneral Comments\n- --------------\n\nI am not very happy with the current structure of the document which\ndivides all features into core WebDAV versioning and optional WebDAV\nversioning.  Currently, the core part is getting smaller and smaller,\nwhile the optional part continuously grows.  The problem I see is that\nserver implementors will either implement the core part only, or, in\npractice, they will have to implement also the full optional part.\nIf, instead, a server implements the core part and only some features\nof the optional part, the client will have to figure out the server's\ncapabilities through all those DAV:supported-*-set properties.  I\nthink only very few clients will be so smart to adapt to the server's\nindividual capabilities.  Most clients probably will either rely only\non the core part or will require the full optional part.  Or, even\nworse, implementors will start to create client/server pairs with\nbuilt-in features of the optional part as needed in the specific\npair.  In either case, interoperability will tremendously suffer.\n\nI think the original idea of core/optional versioning was to separate\ncore versioning semantics from advanced semantics (mostly\nconfiguration management).  So, maybe you could reintroduce this idea\ninto the protocol by defining three levels:\n\n- core versioning: minimally required features\n\n- versioning: fully fledged versiong including labels and branches\n  (and maybe merging)\n\n- advanced versioning: configuration management and all remaining\n  optional features\n\nThis would lower the gap between the currently defined two levels und\nthus help to preserve interoperability.\n\nSection 1.3\n- ---------\n\nVersion Selector/Working Resource:\n\nThe definition of the term \"Working Resource\" as opposed to that of\n\"Version Selector\" seems confusing to me.  The pure fact that the\nCHECKOUT method is defined to be applicable on both types of\nresources, does not make them suitable for a direct comparison.  I\nthink it would be better to characterize the term \"working resource\"\nindependently from \"checking out a version selector\".  Maybe when\ndefining the term \"version selector\" you might want to add a note\nabout checking out version selectors.  To summarize, I would like to\nsuggest the following wording:\n\nVersion Selector:\nWhen an existing resource is put under version control, it becomes a\n\"version selector\" resource.  A new version history resource is\nallocated, whose initial version contains the content and dead\nproperties of the existing resource.\nA checkout may be applied to version selector.  This will make a copy\nof an existing version of the version history accessible for editing.\nA subsequent checkin will create a new version in the version history.\nChecking out a version selector is useful for environments where only\na single user accesses the version selector.\n\nWorking resource:\nIf multiple users concurrently try to check out the same version\nselector, they will interfere each other.  To avoid this, a checkout\ncan also be directly applied to a version.  This will create a new\nresource, called \"working resource\".  The working resource can be\nmodified and is automatically deleted when it is checked in.  The\nserver allocates a distinct new URL for each new working resource.\n\nSection 2: WebDAV Versioning Semantics\n- ------------------------------------\nThis section discusses rather concepts than semantics, right?\n\nSection 3: New WebDAV XML Element Attributes\n- ------------------------------------------\nAs both, the headline itself and the introductory statement to this\nsection suggest, this section should be moved to (a new revision of)\nthe WebDAV protocol.\n\nSection 4: New WebDAV Properties\n- ------------------------------\nAgain, move this to WebDAV.  Note that 4.1.3 and 4.1.4 do *not*\nintroduce new WebDAV properties, as the headline claims.\n\nSection 4.4: DAV:supported-method-set\n- -----------------------------------\n> method-name type: a type in the DAV://METHODS/ namespace\n\nIn general, this does not work.\n\nRFC 2616 says:\n\n       Method         = \"OPTIONS\"                ; Section 9.2\n                      | \"GET\"                    ; Section 9.3\n                      | \"HEAD\"                   ; Section 9.4\n                      | \"POST\"                   ; Section 9.5\n                      | \"PUT\"                    ; Section 9.6\n                      | \"DELETE\"                 ; Section 9.7\n                      | \"TRACE\"                  ; Section 9.8\n                      | \"CONNECT\"                ; Section 9.9\n                      | extension-method\n       extension-method = token\n       token          = 1*<any CHAR except CTLs or separators>\n       separators     = \"(\" | \")\" | \"<\" | \">\" | \"@\"\n                      | \",\" | \";\" | \":\" | \"\\\" | <\">\n                      | \"/\" | \"[\" | \"]\" | \"?\" | \"=\"\n                      | \"{\" | \"}\" | SP | HT\n\n\nHence, the token %XYZ& is a valid HTTP method name (even if it is\nunlikely to be ever used; but anyway...).  However,\nhttp://www.w3.org/TR/2000/REC-xml-20001006 says:\n\n[4]   NameChar     ::=  Letter | Digit | '.' | '-' | '_' | ':' | CombiningChar | Extender\n[5]   Name         ::=  (Letter | '_' | ':') (NameChar)*\n[44]  EmptyElemTag ::= '<' Name (S Attribute)* S? '/>' [WFC: Unique Att Spec]\n\nThus, the Name M:%XYZ& is not a valid name for an XML tag.\n\nPersonally, I would prefer a syntax like:\n\n<D:supported-method-set xmlns:D=\"DAV:\">\n  <D:method-name>GET</D:method-name>\n  <D:method-name>PUT</D:method-name>\n  <D:method-name>DELETE</D:method-name>\n  <D:method-name>%XYZ&amp;</D:method-name>\n</D:supported-method-set>\n\nThis would also contribute to a clean DTD.  I think, only if you have\na very small, definitely fixed set of tokens, it may be appropriate to\ncreate tag names from the elements of this set.  But the set of HTTP\nmethod names is neither small, nor fixed.\n\nAnother important point here is that the above syntax leaves it open\nto you to add new method related features in future versions of DeltaV\nor WebDAV, e.g. something like this:\n\n<D:method-property xmlns:D=\"DAV:\">\n  <D:method-name>PROPFIND</D:method-name>\n  <D:property-name>maximum-supported-depth</D:property-name>\n  <D:property-value>infinity</D:property-value>\n</D:method-property>\n\nSection 4.5: DAV:supported-live-property-set\n- ------------------------------------------\nThis is another example for the anomaly in the DAV:prop element usage\n(compare\nhttp://lists.w3.org/Archives/Public/w3c-dist-auth/2000JanMar/0029.html).\nThough, to correct this, WebDAV itself needs to be revised. :-(\n\nSection 4.6: DAV:supported-report-set\n- -----------------------------------\nSame problem as in section 4.5.  However, this is currently\nindependent from WebDAV and hence can and should be fixed, e.g.:\n\n<D:supported-report-set xmlns:D=\"DAV:\">\n  <D:report-name>version-tree-report</D:report-name>\n  <D:report-name>property-report</D:report-name>\n</D:supported-report-set>\n\nThe syntax for the request body and repsonse body for the REPORT\nmethod should be properly adapted.\n\nSection 5.1.2: DAV:predecessor-set (protected),\nSection 5.1.3: DAV:successor-set (protected)\n- ---------------------------------------------\nIt is very important that the server really maintains the order of the\nDAV:href elements, as noted for the predecessor set.  But the\nsuccessor set should also be maintained.  Think for example of\ngraphically displaying a revision graph.  You really do not want the\nbranches of the revision graph to be aligned differently each time the\ngraph is re-displayed.  Moreover, an application might want to\ndesignate the first DAV:href element of the successor set to continue\nthe main development branch.\n\nTo make the wording even clearer, I would like to suggest to change it\nas follows:\n\n  This property is an ordered set that contains a URL for each\n  predecessor of this version.\n  ...\n\n(And the same for the DAV:successor-set property.)\n\nSection 5.1.4: DAV:checkout-set (protected)\n- -------------------------------------------\nThis should also be an ordered set maintained by the server.  For\nexample, think of a client that chooses to graphically display working\nresources and checked-out version selectors as part of a revision\ngraph.  Or, to give another example, depending on the underlying\nrevision control system, the first element in the set may be a\ndesignated candidate to continue the main development branch.\n\nSection 5.1.5: DAV:checkin-date (protected)\n- -----------------------------------------\nI still vote for giving a rationale for the term \"reasonable\napproximation\".  What is the idea here?  Do you fear trouble when a\nclient checks in a revision, then reads the date, compares it to its\nlocal time and detects a clock skew?  But, anyway, why should a client\ndo that?  Or are you thinking of a distributed repository of versioned\nresources that is made accessible through an HTTP port of a single\nhost/domainname?  Checking if revision X of resource A was checked in\nlater than revision Y of resource B might become a problem if A and B\nare hosted on different machines.  Anaway, what is the rationale here?\n\nSection 5.2.3: DAV:predecessor-set\n- --------------------------------\nSame as section 5.1.2.\n\nSection 6: WebDAV Versioning and Existing Headers\n- -----------------------------------------------\nI think this headline does not express what is following.  Personally,\nI would prefer a wording like:\n\n\"Versioning Vis-a-Vis WevDAV Headers\" or\n\"Impact of Versioning on WebDAV Headers\".\n\nSection 7.1.1: Example - GET request with DAV:must-not-be-checked-out response\n- ----------------------------------------------------------------------------\nThe example contains a CHECKOUT request, not a GET request.\n\n> In this example, the request to CHECKOUT /foo.html fails because\n> /foo.html is already checked out\n\n... and /foo.html is a version selector, or because the server chooses\nnot to branch off a new version.\n\nSection 7.2: OPTIONS\n- ------------------\n> If the server supports checking out a version selector\n\ni.e. checking out a version selector is an optional feature and should\nbe moved to Optional WebDAV Versioning?\n\nSection 7.3: PUT\n- --------------\nIn the preconditions section, you use the format\n\"<DAV:some-error-tag/>: Error condition\".  To be kind,\nyou should introduce the reader to this format or use a more\nself-explanatory format.\n\nSection 7.4: PROPPATCH\n- --------------------\n> <DAV:cannot-modify-protected-property/>: An attempt to use PROPPATCH\n> to modify a property (either core or optional) defined by this\n> document as being protected MUST fail.\n\n> <DAV:cannot-modify-unsupported-property/>: An attempt to modify a\n> property defined by this document (either core or optional) whose\n> semantics are not enforced by the server MUST fail.  This helps ensure\n> that a client will be notified when it is trying to use a property\n> whose semantics are not supported by the server.\n\nWhat about moving these features to WebDAV?  They are probably of\ngeneric interest and not versioning specific (assuming that the\ndefinition of the term \"protected property\" also could be moved to\nWebDAV).\n\nSection 8: New WebDAV Methods\n- ---------------------------\nAs both, the headline itself and the introductory statement to this\nsection suggest, this section should be moved to (a new revision of)\nthe WebDAV protocol.\n\nSection 9.1: VERSION_CONTROL\n- --------------------------\nThe logical structure of the rules in this section seems rather weird\nto me.\n\nThe section contains the following precondition:\n\n> <DAV:must-be-versionable/>: The request-URL MUST identify a\n> versionable resource, a null resource, or a version selector.\n\nAccordingly, I would expect three paragraphs in the beginning of this\nsection:\n\n\"If the request-URL identifies a versionable resource, then ...\"\n\"If the request-URL identifies a null resource, then ...\"\n\"If the request-URL identifies a version selector, then ...\"\n\nA classification into disjunctive sets of cases also is probably\nless error prone.\n\nActually, in section 9.1 currently there is only a paragraph about\nversionable resources.  The second paragraph talks about the case when\nthe request *body* identifies a version.\n\nThe postconditions section, on the other hand, classifies cases\nthoroughly.  Still, I wonder which rules apply when the request-URL\nidentifies a version selector.  Section 9.1 only says that\n\n> the DAV:version-control request\n> body element MUST NOT contain a DAV:version element.\"\n(precondition)\n\nand:\n\n> If the request-URL identified a version selector at the time of the\n> request, the VERSION-CONTROL request MUST NOT change the state of that\n> version selector.\n(postcondition)\n\nBut then, what does a VERSION-CONTROL do at all if the request-URL is\na version selector?\n\nSection 9.2: CHECKOUT\n- -------------------\n> A versioning server MUST support either version selector CHECKOUT or\n> version CHECKOUT, and MAY support both.\n\nThese two concepts should be explained somewhere (e.g. in the terms\nsection or in the introductory section).  As far as I understand,\nversion selector CHECKOUT is appropriate only when a single user\naccesses a versioned resource?  And as soon as two or more users want\nto access it, you need working resources and hence have to apply\nversion CHECKOUT?  If so, this should be somewhere explained (e.g. as\nrationale or concepts, for example in the introduction).\n\nPossible you might choose leaving version selector CHECKOUT as\ncore versioning feature, but moving version CHECKOUT to optional\nversioning (preferably as part of the fully fledged versioning as\nproposed in the beginning of this mail).\n\n> The content and dead properties of the working resource MUST be the\n> same as the content and dead properties of the DAV:checked-out\n> version.\n\nI would prefer the following wording:\n\n\"The content and dead properties of the working resource MUST be\ninitialized with the content and dead properties of the\nDAV:checked-out version.\"\n\n> If DAV:apply-to-target is specified in the request body, the CHECKOUT\n> is applied to the version identified by the DAV:target of the version\n> selector, and not the version selector itself.\n\nFor better understanding, I would suggest the following wording:\n\n> If the request-URL contains a version selector and DAV:apply-to-target\n> is specified in the request body, the CHECKOUT is applied to the\n> version identified by the DAV:target of the version selector, and not\n> the version selector itself.\n\nSection 9.3: CHECKIN\n- ------------------\nThe meaning of DAV:keep-checked-out is not just to keep a checked out\nresource when applying a CHECKIN, but also to perform a subsequent\nupdate of the checked out resource's DAV:checked-out property.  As far\nas I understand, this results in a behaviour that is the same as that\nof a CHECKIN immediately followed by a CHECKOUT (except that in the\ncase of a working resource its URL is recycled).  Hence, I would\nsuggest to name this XML element e.g. \"DAV:checkpoint\" rather than\n\"DAV:keep-checked-out\".\n\nSection 9.4: UNCHECKOUT\n- ---------------------\n> An UNCHECKOUT request can be applied to a checked-out version selector\n> to cancel the CHECKOUT.\n\nThis probably should read:\n\n\"An UNCHECKOUT request can be applied to a checked-out version selector\nor working resource to cancel the CHECKOUT.\"\n\nOr should I use DELETE to cancel a version CHECKOUT (though I\npersonally would prefer UNCHECKOUT)?  If so, an appropriate note for\nthe reader should be added.\n\nSection 9.5: SET_TARGET\n- ---------------------\nTypo: \"Preconditions:\" has a boldface colon.  This occurs also in some\nother sections (e.g. 15.12, 16.1).\n\nSection 10.1: DAV:version-tree-report\n- -----------------------------------\n\n> The DAV:version-tree-report describes all the versions of the version\n> history of a version in the form of a nested tree of versions.\n\nI would prefer the following wording:\n\nThe DAV:version-tree-report describes all the descendant versions for a\ngiven version in a version history in the form of a nested tree\nof versions.\n\n> ANY value: zero or more property-name elements\n>\n> property-name type: a property type\n>\n> property-name value: none\n\nThis should be explained more verbosely.\n\n> <!ELEMENT prop (see [RFC2518], section 12.11)>\n\nArgh!  This is definitely not a valid element definition.\n\nSection 10.1.1: Example - DAV:version-tree-report\n- -----------------------------------------------\n\n>     <D:creator-displayname/>\n>\n>     <D:predecessor-set>\n>\n>   </D:version-tree-report xmlns:D=\"DAV:\">\n\nTypo: should be <D:predecessor-set/>\n\nSection: 16.1 LABEL\n- -----------------\n> When comparing two label names to decide if they match or not, a\n> server SHOULD use a case-sensitive octet-by-octet comparison of the\n> two label names.\n\nI propose to replace \"SHOULD\" with \"MUST\".  Otherwise, a client can\nnot be sure, what the server actually does and has to assume the worst\ncase, i.e. case-insensitive match.\n\n> <!ELEMENT add (label-name)>\n>\n> <!ELEMENT set (label-name)>\n\nI still think that the difference between these two elements and their\nsemantics does not get clear.\n\n> <DAV:must-be-version-or-version-selector/>: The request-URL MUST\n> identify a version or a version selector.\n\nThis probably should read:\n\n\"<DAV:must-be-version-or-version-selector-or-collection/>: The\nrequest-URL MUST identify a version or a version selector or a\ncollection.\"\n\n> <DAV:must-not-be-checked-out/>: If LABEL is being applied to a version\n> selector, it MUST NOT be checked out.\n\nThe phrase \"it MUST NOT be checked out\" is ambigous\n(noun/verb/adjective phrase or passive voice).  For clearity, what\nabout the following:\n\n\"<DAV:must-not-be-checked-out/>: Applying LABEL to a version selector\nMUST fail, if the DAV:checked-out property appears on that version\nselector.\"\n\n- ------------------------------------------------------------------------\n\nBye,\n     Juergen\n\n\n\n", "id": "lists-005-13207573"}, {"subject": "Re: Versioning TeleConf Agenda, 12/1/00 (Friday) 12-1pm ES", "content": "Minutes:\n\n   - Moving branching support from core to optional (Geoff)\n\nWe agreed that since version-checkout and version-selector-checkout\nis currently optional, it would expose a client to no more optionality\nthan is in the current protocol (but rather would make the current\noptionality more evident).  Hopefully there will be further discussion\nof this topic in the email thread that was started yesterday  (i.e.\n\"Simplifying CHECKOUT behavior for core clients\").\n\n   - Working collections (Greg)\n\nWe agreed that the latest working collection proposal was technically\nconsistent (i.e. where the members are version histories and\nunversioned resources that are put under version control when the\nworking collection is checked in).  But it is still not clear that the\nbenefits of supporting a working collection construct are worth the\ninteroperability costs of having two ways of versioning collections.\n\n   - CHECKIN of an activity (Greg)\n\nThis just provides a shorthand for checking in all the checked out\nresources associated with that activity.  It appears that the only\nbenefit is in decreasing the number of round trips.  If anyone\nbelieves there is a semantic benefit to this operation, please\nexplain it to the list.\n\n   - Nested workspaces (Tim)\n\nThe motivation for nested workspaces is the desire to allow one to\nversion the root of the URL space on a host, and also support\nmultiple workspaces on that host.  We agreed that this is reasonable,\nas long as a resource behaves as if it is a member of exactly one\nresource.\n\nAnd that's as far as we got.\n\n   - Replacing DAV:must-support attribute with If tokens (Yaron)\n\n   - Moving DAV:supported-xxx and DAV:collection/workspace-collection-set\n     properties to be OPTION request/response items (Yaron).\n\n   - Replace F and T with false and true (to allign with XML schema) (Yaron).\n\n   - Move DAV:checkin-fork and DAV:checkout-fork to core (Yaron).\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-13234775"}, {"subject": "Splitting the document", "content": "Juergen Reuter writes:\n> I am not very happy with the current structure of the document which\n> divides all features into core WebDAV versioning and optional WebDAV\n> versioning.  Currently, the core part is getting smaller and smaller,\n> while the optional part continuously grows.  The problem I see is that\n> server implementors will either implement the core part only, or, in\n> practice, they will have to implement also the full optional part\n\nThis is an excellent segue into an issue I wanted to bring up.  The\npackaging of the protocol specification into one or more documents has been\nconsidered several times by the design team.\n\nThere are two primary options that have been discussed:\n\n1) Status-quo: describe the entire protocol, both core and advanced, in one\ndocument.\n\nAdvantages:\n* Possible increase in number of full server implementations (core +\nadvanced) of protocol\n* Reduced document overhead for boilerplate text, definitions,\nintroductions, etc.\n* Increased consistency, since all text is within a single document\n\nDisadvantages:\n* A single document is larger, and there is a perception that large protocol\nspecifications are complex.\n* A single document hides the inherent simplicity of the core versioning\nfeatures.  The simple core may be viewed as complex by its inclusion in a\nlong document.\n* Possible decrease in implementations of core features in authoring clients\n(due to perceived complexity)\n* Possible decrease in implementations of core versioning in document\nmanagement servers.\n\n2) Divide the specification into two documents, one for Core, one for\nAdvanced.\n\nAdvantages:\n* Possible increase in number of authoring client implementations, due to\nthe easily seen simplicity of the Core.\n* Possible increase in number of document management servers that implement\nCore versioning\n* It is likely Core versioning could be sent for IESG approval before the\nAdvanced document was entirely completed.\n* If interoperability problems are discovered in the Advanced features, they\ncould be fixed without impacting the specification of Core features. This\ncould lead to increased confidence in the Core features by implementors, and\nhence greater early adoption of Core features.\n\nDisadvantages:\n* Possible decrease in number of server implementations of Advanced\nfeatures.\n* Possible decrease in number of client implementations of Advanced\nfeatures.\n* Possible increase in inter-document inconsistency.\n* Repetition of defintions of terms, boilerplate text, etc.\n* Need for a document roadmap explaining subdivision of documents.\n\n\nI have long favored keeping the document together, as a whole (option #1).\nHowever, I am starting to lean towards subdividing the document (option #2).\nMy rationale is as follows:\n\n* Due to the relatively large number of optional Advanced features, there is\nsignificantly increased risk of interoperability problems in the Advanced\nportion of the specification. Since there has not yet been an\ninteroperability demonstration of an Advanced client working against\nmultiple Advanced servers, there is currently no evidence that can be used\nto effectively assess this risk.  As a result, it seems prudent to examine\nwhat would happen in a worst-case scenario where interoperability problems\nin Advanced features lead to a recycle at Proposed Standard.\n\nRe-issuing an RFC at Proposed can happen when there need to be such\nsubstantial modifications to a document that they transcend the \"minor\nchanges\" threshold for going to Draft Standard.  Alternately, it could be\nthat two interoperable implementations of each feature cannot be\ndemonstrated. If this were to happen to the DeltaV protocol, and the\nprotocol were specified in one document, it would require modifying the\nentire document, Core plus Advanced.  This would have the effect of adding\nsubstantial implementation risk even to vendors implementing just the Core\nfeatures.  This risk might lead to implementation being postponed, and a\nmuch slower adoption of the protocol. In contrast, if Core were kept in a\nseparate document, and Advanced features needed to be revised, it is likely\nthey would not impact the Core, and hence would not increase its\nimplementation risk.\n\n* A small Core document would be easier to \"sell\".  It would be much easier\nto convince implementors that a small Core versioning document is compact,\nand easy to implement, than Core in a large document.  Even though Core only\ntakes a small portion of the current document, an implementor still needs to\nread through the entire document, for sections like i18n, security, etc., to\nensure nothing has been missed.  For a small document, this work has already\nbeen performed, by the act of creating a smaller document.\n\n* The downside risk of separating the documents appears to be small.  The\nmajor downside risks of separating the documents appears to be that there\nwill be few client or server implementations of the Advanced features, and\nhence the Advanced features will be marginalized.  While there have not been\nany product announcements that I am aware of, it seems reasonable to assume\nthat the participation of top engineering talent from several significant CM\nvendors in this effort implies a willingness to implement all of the\nstandard, Core and Advanced.  Additionally, the Subversion open source\nproject is currently implementing a very full-featured CM client based on\nDeltaV.  So, I am not concerned about implementations of the Advanced\nfeatures -- I think this will happen.\n\nI am more concerned about authoring tools implementing the standard,\nprimarily due to concerns about the complexity of the protocol, based on\nCore being packaged with Advanced features.  A smaller Core document would\nallay some of these concerns, since authoring tools will primary just use\nthe Core features.\n\nBut, this said, I also recognize that development orgaizations interested in\nimplementing the protocol will perform a thorough engineering analysis\nanyway, and will quickly see through superficial issues such as document\nlength.  Furthermore, in the annals of engineering specifications, the\ncurrent DeltaV spec. is nowhere near the upper end of the scale for\ncomplexity, and length.  Far more complex interoperability specifications\nhave been implemented over time.\n\nAs a result, while I find myself somewhat in support of splitting the\ncurrent document, I am not 100% convinced.  I would appreciate hearing other\nviews on the matter.\n\n- Jim\n\n\n\n", "id": "lists-005-13244173"}, {"subject": "RE: Labelling support optiona", "content": "FileNET is a vendor of web content management and document management\nproducts, but not software source code management products.  We agree that\nthe LABEL feature in DeltaV should be optional, not core, because our\ncustomers don't require such a feature in every system.\n\nOur products allow customers to configure custom properties that could\ninclude a label-like string property, but it would have only limited\nserver-side semantics such as string data typing and, optionally, a\nconstrained set of value choices.  It would not be appropriate to require it\nin every FileNET system.\n\n--Chuck Fay \nFileNET Corporation, 3565 Harbor Blvd., Costa Mesa, CA 92626 \nphone:  (714) 327-3513, fax:  (714) 327-5076, email:  cfay@filenet.com\n\n> -----Original Message-----\n> From: Lisa Dusseault [mailto:lisa@xythos.com]\n> Sent: Friday, December 01, 2000 8:57 AM\n> To: James J. Hunt (by way of \"Ralph R. Swick\" <swick@w3.org>);\n> ietf-dav-versioning@w3.org\n> Subject: Labelling support optional\n> \n> \n> \n> \n> > -----Original Message-----\n> > From: \"James J. Hunt\" <jjh@ira.uka.de>\n> > To: ietf-dav-versioning@w3.org\n> >\n> > Labels in DeltaV\n> > ================\n> >\n> > One of the recent changes in DeltaV was to remove labels \n> from the core\n> > versioning part and put them into the options part of the protocol.\n> > We strongly suggest to undo this change.  Even if there exist two or\n> > three revision control systems that do not use labels, labels are\n> > essential for identifying sets of associated files in a \n> repository of\n> > versions.  And, actually, they are really easy to implement\n> > (especially on top of a WebDAV implementation that requires built-in\n> > mechanisms for property storage).\n> \n> Your assumption here is that there ARE associated files in a \n> repository of\n> versions.  Why need there be?  There are repositories of \n> documents -- like\n> mine at http://www.sharemation.com/~milele/public -- which \n> have versions but\n> aren't associated with each other.\n> \n> Are you implementing a revision control system for source \n> code?  That could\n> be the disconnect between us.  When repositories are not \n> intended for source\n> control, but just for ordinary documents, they require far \n> fewer features.\n> http://lists.w3.org/Archives/Public/ietf-dav-versioning/2000Oc\n> tDec/0062.html\n>\n> If LABEL was a simple property, I wouldn't care, but since it's a complex\n> property plus a new method to modify the set of labels, I'd rather it be\n> optional.\n> \n> Let me put it this way.  What would you like to accomplish that can't be\n> accomplished if labeling is in the optional part of the protocol?\n> \n> Lisa\n> \n> \n> \n\n\n\n", "id": "lists-005-13258156"}, {"subject": "Re: Draft IETF DeltaV Versionin", "content": "   From: \"James J. Hunt\" <jjh@ira.uka.de>\n\n   Valid XML should be used in WebDAV instead of simply well formed XML\n\nI believe that the benefits of XML validation is minimal at best.  It\nreally doesn't matter all that much if the errors are found by the XML\nparser or by the semantic routine that actually does the work\nfollowing parsing.  DTD's are just not a good way of defining the\nsyntax of XML elements that are intended to be extended by later\nversions of the protocol.\n\n   Another problem is to track version information about the protocols.\n   The DAV header as returned from an OPTIONS request (e.g.: \"DAV: 1, 2,\n   version-selector-checkout\") does not help at all.  However, when using\n   a DTD, the client and the server could agree on a protocol revision\n   (or otherwise stop communication with an appropriate error message or\n   log) by using the DTD's header information.\n\nSince any new XML element MUST (according to 2518) be ignorable,\na client should not stop communication when it encounters a different\nprotocol revision, but rather should just ignore elements that it\ndoes not understand ... that's what gets you interoperability.\n\n   Labels in DeltaV\n   ================\n\n   One of the recent changes in DeltaV was to remove labels from the core\n   versioning part and put them into the options part of the protocol.\n   We strongly suggest to undo this change.  Even if there exist two or\n   three revision control systems that do not use labels, labels are\n   essential for identifying sets of associated files in a repository of\n   versions.  And, actually, they are really easy to implement\n   (especially on top of a WebDAV implementation that requires built-in\n   mechanisms for property storage).\n\nI agree with Lisa that identifying sets of associated files in a\nrepository is not a required feature of versioning in a document\nmanagement system.\n\nIn addition, labels are not a \"good\" way of indentifying associated\nfiles in a repository because they require write access to the\nversion, when you should only need read access to generate a\nreference.  Furthermore, they are even worse in a distributed\nrepository, since they require you have access to all the versions of a\nversion history, which makes a distributed implementation of the\nversion history infeasible (one of the versioning goals was to\ndefine a protocol that was not incompatible with a distributed\nimplementation).\n\nA significantly better way to identify sets of associated files is with\nbaselines.  A baseline has references to versions, and therefore\nonly read access to the version is required to create a baseline,\nand unlike a label, a baseline does not require scanning all other\nversions of that version history and therefore supports a distributed\nimplementation.\n\nSince labels are a common implementation in non-distributed software\nversioning systems, it is reasonable to define a standard way to\nmanipulate them, but since they are not required by document\nmanagement versioning, and are incompatible with distributed\nversioning systems, I do not believe it is appropriate to make\nsupport for them be mandantory.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-13270663"}, {"subject": "Re: Simplifying CHECKOUT behavior for core versioning client", "content": "On Fri, Dec 01, 2000 at 12:23:38AM -0500, Geoffrey M. Clemm wrote:\n>...\n> Currently, a core versioning client must check to see whether the\n> server supports version selector or version checkout, before it can\n> operate against a server.  This is because there are some servers that\n> only support \"server side workspace\" semantics for parallel\n> development (i.e. only support checking out a version selector), and\n> others only support \"client side workspace\" semantics for parallel\n> development (i.e. only support checking out a version).\n\nThis is a good way to distinguish these. Cool.\n\n[ and yes... I still owe some responses to the messages from last week\n  regarding checking out collection versions and what that means... ]\n\n> I believe we can address this issue by making branching an optional\n> feature (i.e. move it from core to optional).\n\nThis is fine with me.\n\n> Since \"merging\" is an\n> optional feature, and since branching is of limited value without\n> merging,\n\nNot so sure that I agree with this, but that disagreement doesn't bother me\nat all :-)\n\n>...\n> I am periodically asked why core versioning requires support for\n> branching (parallel development) when many useful versioning servers\n> (primarily for document management) only support linear versioning.\n> This is another motivation to make support for parallel development\n> optional.\n\nAs Boris has pointed out, parallel development does not imply branching. It\nreally implies \"making changes in private.\" This is an important\ndistinction.\n\nThat said: it is also reasonable to assume there are versioning systems that\ndo not provide a way to keep changes private until \"formal check-in.\" (a\nfileserver kind of operates this way)\n\n> If branching is not in core, then there is no need for a resource to\n> be checked out twice at the same time.  This means that neither\n> workspaces nor working resources are required, and just the ability to\n> check-out and check-in a version selector is sufficient.\n\nI'm not sure that I followed this logic.\n\nWithout branching, there is no multiple checkout. [typically; you might\nstill allow it, but only one person can check-in; the other will need to\nundo/cancel their checkout]\n\nThe second statement about version selectors doesn't seem to follow from the\nmultiple checkout thing.\n\n> Note that a\n> server that is \"working resource\" based can easily implement this\n> behavior by associating a working resource with the version selector\n> while it is \"checked out\", and direct all operations on the version\n> selector to this working resource.\n\nThis is dangerous behavior to tell clients to use. For a server that *wants*\nprivate changes to be possible, and wants the client to use the working\nresource, then clients using the above behavior will choke. If they do a\nCHECKOUT on a v-selector, then do a PUT to it (even if the server gave them\na w-resource), then the PUT will fail.\n\nIf the server returns a working resource, the client must use it.\n\n> We would then define two alternative forms of optional parallel\n> development, \"client side workspaces\" (with working resources) and\n> \"server side workspaces\" (with working resources).\n                           (with workspaces)  [per your followup]\n\nI like the distinction of server types. However, I'm not sure that we can\nmake a simplification as you suggest (e.g. only use v-selectors).\n\nMoving branching to optional is fine/good, however.\n\nCheers,\n-g\n\n-- \nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-13280730"}, {"subject": "Re: Splitting the document", "content": "On Fri, Dec 01, 2000 at 02:32:47PM -0800, Jim Whitehead wrote:\n>...\n> As a result, while I find myself somewhat in support of splitting the\n> current document, I am not 100% convinced.  I would appreciate hearing other\n> views on the matter.\n\nSplit it.\n\nAs Jim said, we're doing the \"optional\" features, so I can guarantee that\n(at least one) more advanced server will be out there. We aren't doing\nworkspaces (much to Geoff's dismay :-), but it will have activities, labels,\nand some of the advanced reports.\n\nCheers,\n-g\n\n-- \nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-13292173"}, {"subject": "Re: Versioning TeleConf Agenda, 12/1/00 (Friday) 12-1pm ES", "content": "On Fri, Dec 01, 2000 at 03:10:51PM -0500, Geoffrey M. Clemm wrote:\n>...\n>    - CHECKIN of an activity (Greg)\n> \n> This just provides a shorthand for checking in all the checked out\n> resources associated with that activity.  It appears that the only\n> benefit is in decreasing the number of round trips.  If anyone\n> believes there is a semantic benefit to this operation, please\n> explain it to the list.\n\nIt is not about decreasing round trips... not a bit. It is about\nestablishing a change set. All of the changes get checked in as a single\nunit and assigned a version number.\n\nI see no way to do a change set if the resources must be checked in\nindividually. Not to mention the transactional problems with that. For\nexample, if checkout-fork is true (\"allow multiple checkouts\"), but\ncheckin-fork is false (\"can't check in if the checked out version is not the\nlatest\"), then I need to cancel the *entire* checkin if *any* of the\ncheckins would create a fork.\n\nCheers,\n-g\n\n-- \nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-13299621"}, {"subject": "Re: Versioning TeleConf Agenda, 12/1/00 (Friday) 12-1pm ES", "content": "   From: Greg Stein <gstein@lyra.org>\n\n   On Fri, Dec 01, 2000 at 03:10:51PM -0500, Geoffrey M. Clemm wrote:\n   > This just provides a shorthand for checking in all the checked out\n   > resources associated with that activity.  It appears that the only\n   > benefit is in decreasing the number of round trips.  If anyone\n   > believes there is a semantic benefit to this operation, please\n   > explain it to the list.\n\n   It is not about decreasing round trips... not a bit. It is about\n   establishing a change set. All of the changes get checked in as a single\n   unit and assigned a version number.\n\nI agree that supporting change sets is essential, but why does it matter\nwhether or not (from the protocol perspective) that the change set be\ncreated atomically?\n\n   I see no way to do a change set if the resources must be checked in\n   individually.\n\nWhen you CHECKIN the first member of an activity, the version number\ncan be assigned (to the activity).  Subsequent CHECKIN's against that\nactivity get the same version number.\n\n   Not to mention the transactional problems with that.   For\n   example, if checkout-fork is true (\"allow multiple checkouts\"), but\n   checkin-fork is false (\"can't check in if the checked out version is not the\n   latest\"), then I need to cancel the *entire* checkin if *any* of the\n   checkins would create a fork.\n\nWhen there is a problem with checking in some element of a change set,\nusers doesn't want you to throw away their changes ... they are going\nto keep fixing things (i.e. merging, whatever) until the problem\nelement can be checked in.  Why not allow intermediate states of that\nchange set to be manifested on the server?  In particular, if you've\ngot a huge change set, and you've got a \"checkin-fork forbidden\" server,\nyou may never get your change set accepted because by the time you've\ndone a merge for some work, someone else has created a descendent of\nanother of your changes, and you get another checkin conflict.  If you\nallow intermediate states to be stored on the server, you can at least\nget most of your changes in (so the other guy has to do the merge :-).\n\nNote: I'm happy to have the protocol support activity checkin, so\nI just want to make sure I understand the motivation (in case I am\ncalled upon to defend it's addition to the protocol :-).\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-13308513"}, {"subject": "Re: Simplifying CHECKOUT behavior for core versioning client", "content": "   From: \"Boris Bokowski/OTT/OTI\" <Boris_Bokowski@oti.com>\n\n   > Currently, a core versioning client must check to see whether the\n   > server supports version selector or version checkout, before it can\n   > operate against a server.  This is because there are some servers that\n   > only support \"server side workspace\" semantics for parallel\n   > development (i.e. only support checking out a version selector), and\n   > others only support \"client side workspace\" semantics for parallel\n   > development (i.e. only support checking out a version).\n\n   Note that both \"server side private workspaces\" and \"client side workspace\n   semantics\" allow users to make changes that are not seen by other users.\n   If core clients check out in place, their changes will be seen by other\n   users. This is true even in the case of simple linear histories, so the\n   following scenario would not be supported: update both contents and\n   properties on a privately checked out resource, followed by a CHECKIN\n   and a SET-TARGET which updates content and properties atomically for\n   other users.\n\nA client can effectively achieve the same effect by not doing the\nPUT/PROPPATCH until it has changes it wants to make visible\nand then locking the resource for the duration of the PUT/PROPPATCH.\nThe fact that there is a small window between the PUT and the PROPPATCH\nduring which another client could get the old properties and the new\ncontent is not really an issue, because a client always has to get\nthe content and properties separately (GET/PROPFIND) so there always\nis a window for such a skew (i.e. another client could do a PROPPATCH\nbetween the GET and PROPFIND).\n\n   > I believe we can address this issue by making branching an optional\n   > feature (i.e. move it from core to optional).  Since \"merging\" is an\n   > optional feature, and since branching is of limited value without\n   > merging, it probably makes more sense make branch/merge a unified\n   > optional feature, instead of the way it is now, where branch support\n   > is required but merge support is optional.\n\n   The MERGE method is optional, but a client can merge \"by hand\" using\n   only core features (merging content and properties as appropriate,\n   on a checked out resource, and then setting the DAV:predecessor-set\n   property before the CHECKIN).\n\nI agree.  My point about making branching optional is bogus anyway,\nsince branching is provided by the ability to do a SET-TARGET, not\nby working resources or workspaces.  And the point is even more\nbogus because branching is in fact useful without merging (as Greg\nmentioned), so please forget I ever brought the point up (:-).\n\n   > I am periodically asked why core versioning requires support for\n   > parallel development when many useful versioning servers\n   > (primarily for document management) only support linear versioning.\n   > This is another motivation to make support for parallel development\n   > optional.\n   > \n   > If parallel development is not in core, then there is no need for\n   > a resource to be checked out twice at the same time.\n\n   I could agree on this, but what about the need for checking out a\n   resource privately (see above)?\n\nI believe that keeping authoring state on the client gives you most of\nwhat clients want for this ... the only thing you lose is the ability\nto create a version that *never* is visible to other clients under the\nversion selector URL.  This is a valid use case, but I believe it is\nnot nearly as important as the \"don't make my changes visible until\nI'm done\" use case (which you can do in the new model).\n\nNote that currently, a core client has to ask the server which form of\ncheckout the server supports, and then be prepared to either create\nworkspaces or keep track of working resources, depending on what the\nserver comes back with.  I predict that most clients will be designed\nto work with one model or the other, which means most clients will not\nbenefit from saying that \"a server must support one or the other\".\n\nBut a core client will benefit from us instead saying a server \"MUST\nsupport in place checkout for version creation\" and \"MAY support\nworking resources or workspaces for hidden/parallel development\".\n\n   > This means that neither\n   > workspaces nor working resources are required, and just the ability to\n   > check-out and check-in a version selector is sufficient.  Note that a\n   > server that is \"working resource\" based can easily implement this\n   > behavior by associating a working resource with the version selector\n   > while it is \"checked out\", and direct all operations on the version\n   > selector to this working resource.\n\n   On a \"working resource\" based server, version selectors would never\n   be checked out, and it would always be possible to SET-TARGET them\n   (or MERGE). This is no longer true in the model you propose.\n\nThis was never true for a core client, since the core protocol did not\nrequire support for creating working resources.  So the new model only\nadds things that a core client can count on, compared to the\nexisting model.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-13318704"}, {"subject": "Re: Versioning TeleConf Agenda, 12/1/00 (Friday) 12-1pm ES", "content": "On Sat, Dec 02, 2000 at 08:22:58AM -0500, Geoffrey M. Clemm wrote:\n>...\n> I agree that supporting change sets is essential, but why does it matter\n> whether or not (from the protocol perspective) that the change set be\n> created atomically?\n\nSee below.\n\n>    I see no way to do a change set if the resources must be checked in\n>    individually.\n> \n> When you CHECKIN the first member of an activity, the version number\n> can be assigned (to the activity).  Subsequent CHECKIN's against that\n> activity get the same version number.\n\nNope. If you get a conflict partway through, then the \"assigned number\" is\nincorrect. The number can only be assigned once the full change set has been\ncomitted (they are sequential).\n\nConsider: Joe begins the CHECKIN on the resources and the server gave him\nversion number 7. Nancy begins her checkin and the server gives her 8.\nOops... Joe's checkin has failed. Now what?\n\nYou've got all kinds of race conditions and stuff going in there to try and\ndeal with the problem. Sure, the server knows all of the files that Joe is\ngoing to checkin (through examination of the activity), but it can't do\nanything about it until all the files are checked in. Does it say \"well,\nthere is a v7 for this file, but I can't give it to you right now.\" What if\nJoe never comes back? Nancy should have got v7 in that case. Oh, and what\nhappens with rollback for Joe's failed checkin? Or is that first resource\nsupposed to fail on checkin because some *other* resource in the activity is\ngoing to fail in the future.\n\nI don't see it working well at all.\n\n>    Not to mention the transactional problems with that.   For\n>    example, if checkout-fork is true (\"allow multiple checkouts\"), but\n>    checkin-fork is false (\"can't check in if the checked out version is not the\n>    latest\"), then I need to cancel the *entire* checkin if *any* of the\n>    checkins would create a fork.\n> \n> When there is a problem with checking in some element of a change set,\n> users doesn't want you to throw away their changes ...\n\nWe haven't. All the changes are still residing on the user's machine.\n\n> they are going\n> to keep fixing things (i.e. merging, whatever) until the problem\n> element can be checked in.  Why not allow intermediate states of that\n> change set to be manifested on the server?\n\nBecause the whole shebang is transacted. You either have a change set, or\nyou don't. You don't get a version number until the change set is committed.\nThere is no way to do a partial change set.\n\n> In particular, if you've\n> got a huge change set, and you've got a \"checkin-fork forbidden\" server,\n> you may never get your change set accepted because by the time you've\n> done a merge for some work, someone else has created a descendent of\n> another of your changes, and you get another checkin conflict.\n\nTrue, but that isn't your problem.\n\n> If you\n> allow intermediate states to be stored on the server, you can at least\n> get most of your changes in (so the other guy has to do the merge :-).\n\nAgain: can't do. The whole change set goes in, or it doesn't.\n\nThe intermediate states *do* get stored into the working resources (but they\nare not and *cannot* be visible to others). When everything is ready, a\ncommit is performed. That commit corresponds to checking in the activity.\n\n> Note: I'm happy to have the protocol support activity checkin, so\n> I just want to make sure I understand the motivation (in case I am\n> called upon to defend it's addition to the protocol :-).\n\nSure.\n\nCheers,\n-g\n\n-- \nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-13331666"}, {"subject": "Re: Simplifying CHECKOUT behavior for core versioning client", "content": "   From: Greg Stein <gstein@lyra.org>\n\n   On Fri, Dec 01, 2000 at 12:23:38AM -0500, Geoffrey M. Clemm wrote:\n\n   > I believe we can address this issue by making branching an optional\n   > feature (i.e. move it from core to optional).\n\n   This is fine with me.\n\nAs Boris pointed out, I'm really proposing that we move \"concurrent\ndevelopment on a single resource\" to core, not branching (just wanted\nto verify that phrasing it that way, it's still fine with you that\nwe make it optional ).\n\n   > Since \"merging\" is an\n   > optional feature, and since branching is of limited value without\n   > merging,\n\n   Not so sure that I agree with this, but that disagreement doesn't bother me\n   at all :-)\n\nI don't agree with it either, so let's just forget I ever used\nthe term \"branching\" in this context (:-).\n\n   That said: it is also reasonable to assume there are versioning\n   systems that do not provide a way to keep changes private until\n   \"formal check-in.\" (a fileserver kind of operates this way)\n\nYes, that's a key point.  \n\nIn addition, since a client can keep its authoring state on the client\nmachine until it's ready to publish it, it's not clear how many\nclients need additional support for private development from\nversioning anyway (unless they also want parallel development).\n\n   > Note that a\n   > server that is \"working resource\" based can easily implement this\n   > behavior by associating a working resource with the version selector\n   > while it is \"checked out\", and direct all operations on the version\n   > selector to this working resource.\n\n   This is dangerous behavior to tell clients to use. For a server that *wants*\n   private changes to be possible, and wants the client to use the working\n   resource, then clients using the above behavior will choke.\n\nIt's fine for a server to want private changes to be possible, but that's\ndifferent from it wanting the client to use the working resource (if\na client doesn't want to make its changes private, why would a server\ncare whether it uses working resources or not?).\n\nAs for a client choking, that's what will happen with the current protocol\nif a client tries to use a working resource model against a workspace server.\nSo the modified model doesn't add any more client choking than is in the\nprotocol already.  (That's not quite true, since with the current protocol,\nif you designed a client that worked with both the working resource and the\nworkspace models, you could avoid choking, but I believe there will be\nvery few such clients).\n\n   If they do a CHECKOUT on a v-selector, then do a PUT to it (even if\n   the server gave them a w-resource), then the PUT will fail.\n\nI don't follow you here.  I've got a server whose implementation is\nbased on working resources.  The server simulates a checked-out\nversion selector by secretly associating a working resource with the\nversion selector when it is checked out.  The server redirects all\nrequest to that checked-out version selector to that working resource.\nWhen a client issues a PUT, the PUT gets redirected by the server to\nthe working resource, and the PUT succeeds.  When the checked-out\nversion selector is checked in, the server checks in the secret working\nresource and sets the target of the version selector to be the newly\ncreated version.\n\n   If the server returns a working resource, the client must use it.\n\nIf the server redirects requests on a checked out version selector to\nan associated working resource, the client must use it (the working\nresource) as well ... it just doesn't have to know that it is.\n\n   > We would then define two alternative forms of optional parallel\n   > development, \"client side workspaces\" (with working resources) and\n   > \"server side workspaces\" (with workspaces).\n\n   I like the distinction of server types. However, I'm not sure that we can\n   make a simplification as you suggest (e.g. only use v-selectors).\n\nDid the above clarify how I believe a working resource based\nimplementation would provide v-selector checkout?\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-13343266"}, {"subject": "Re: Simplifying CHECKOUT behavior for core versioning client", "content": "On Sat, Dec 02, 2000 at 10:03:22AM -0500, Geoffrey M. Clemm wrote:\n>\n>    From: Greg Stein <gstein@lyra.org>\n>...\n>    > Note that a\n>    > server that is \"working resource\" based can easily implement this\n>    > behavior by associating a working resource with the version selector\n>    > while it is \"checked out\", and direct all operations on the version\n>    > selector to this working resource.\n> \n>    This is dangerous behavior to tell clients to use. For a server that *wants*\n>    private changes to be possible, and wants the client to use the working\n>    resource, then clients using the above behavior will choke.\n> \n> It's fine for a server to want private changes to be possible, but that's\n> different from it wanting the client to use the working resource\n\nAgreed the difference exists.\n\n> (if\n> a client doesn't want to make its changes private, why would a server\n> care whether it uses working resources or not?).\n\nThe server cares because the working resource is the \"point of entry\", if\nyou will, for modifying the resource.\n\n> As for a client choking, that's what will happen with the current protocol\n> if a client tries to use a working resource model against a workspace server.\n\nNope. When you do a CHECKOUT, the server will do one of two things:\n\n1) it is a workspace, so it checks out in place. the client continues to\n   work with that resource\n\n2) it returns 201 (Created) with a Location: header pointing to the working\n   resource.\n\nThe point is: the response may or may not provide a Location: header to tell\nthe client what to do. The client should always respect that.\n\nYou said the client would choke if it expected the working resource model\nagainst a workspace server. Not at all... it would not see a Location: come\nback, so it wouldn't alter the URL to use for modifying the resource.\n\n> So the modified model doesn't add any more client choking than is in the\n> protocol already.  (That's not quite true, since with the current protocol,\n> if you designed a client that worked with both the working resource and the\n> workspace models, you could avoid choking, but I believe there will be\n> very few such clients).\n\nSimple examination of the Location: header. I would expect most clients to\nbe able to work with both.\n\n>    If they do a CHECKOUT on a v-selector, then do a PUT to it (even if\n>    the server gave them a w-resource), then the PUT will fail.\n> \n> I don't follow you here.  I've got a server whose implementation is\n> based on working resources.  The server simulates a checked-out\n> version selector by secretly associating a working resource with the\n> version selector when it is checked out.\n\nAh! See... that isn't in the specification. You're asking for more behavior\non version selectors than exists today.\n\nI disagree with this addition. Again: you're trying to swing everything\ntowards something like a checked-out version selector model.\n\nThe client should simply use the Location: header.\n\n> The server redirects all\n> request to that checked-out version selector to that working resource.\n> When a client issues a PUT, the PUT gets redirected by the server to\n> the working resource, and the PUT succeeds.  When the checked-out\n> version selector is checked in, the server checks in the secret working\n> resource and sets the target of the version selector to be the newly\n> created version.\n\nDisagree... strongly. That is quite different from today's spec, and I don't\nsee a basis for this except to allow clients to ignore the Location header\nand continue working with the same request-URI.\n\n>...\n>    > We would then define two alternative forms of optional parallel\n>    > development, \"client side workspaces\" (with working resources) and\n>    > \"server side workspaces\" (with workspaces).\n> \n>    I like the distinction of server types. However, I'm not sure that we can\n>    make a simplification as you suggest (e.g. only use v-selectors).\n> \n> Did the above clarify how I believe a working resource based\n> implementation would provide v-selector checkout?\n\nClear, yes, and I don't think that it works well.\n\nClients that ignore the Location header will break when you have an advanced\nserver which provides for parallel development. That server cannot allow\nclients to continue working from the v-selector. The clients *must* work\nfrom the working resource.\n\nBut the cool point is: you can still have the same dumb client talking to\nthis advanced server, as the client talking to the dumb no-parallel server.\nThe model the client sees is the same.\n\nCheers,\n-g\n\n-- \nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-13355244"}, {"subject": "Re: Working collection", "content": "Okay... I'm responding to this one to knock off a few items and (hopefully)\nclose up discussion on these lines of thought. I think the \"unversioned\nresources in a working collection\" model might work. But that'll go into a\ndifferent thread.\n\nOn Wed, Nov 22, 2000 at 04:03:32PM -0500, Geoffrey M. Clemm wrote:\n>    From: Greg Stein <gstein@lyra.org>\n> \n>    After you create a workspace, then it must get populated with the\n>    resources that you want to work with. So wouldn't that be something like:\n> \n>        MKWORKSPACE /some/whwere\n>        COPY /repos  -> /some/where/repos\n> \n>    And then you start working with /some/where/repos ? Ooh, and the client also\n>    has to make sure the result of the COPY actually creates version selectors,\n>    doesn't it?\n> \n> Actually, it would be a SET-TARGET (with a label or a baseline).\n\nWe don't have a label or baseline that corresponds to what resides on the\nclient machine. We would use a SET-TARGET to the appropriate collection\nversion. If I understand this stuff properly, this would set up the version\nselector at /some/where which would implicitly create a tree of version\nselectors (via slash-through on /some/where).\n\n> (The COPY would just create non-versioned resources).\n\nThey could automatically be placed under version control.\n\nHowever, that wouldn't work well for my situation since I'd want to \"hold\nthem back\" until the person committed the change set. As a result, versions\nand version histories shouldn't be created until that point. This, of\ncourse, means that the COPY would create non-versioned resources :-)\n\n[ but this is where we're going in the other thread, and that doesn't need\n  workspaces, so I'm not going to explore this further... ]\n\n>....\n>    Hmm. I guess you could use VERSION-CONTROL instead of COPY to set up the\n>    workspace contents. But... it isn't a simple matter of \"just create a\n>    workspace\".\n> \n> A single SET-TARGET call would do it (with a Depth header, for the label\n> case), so I think it's reasonable to call it \"simple\".\n\nSET-TARGET with a version. Yes, that would be simple (for the client).\n\n> The client is going\n> to have to tell the server what versions it wants to \"checkout\", so it\n> is just as easy for it to tell the server to do a SET-TARGET for each CHECKOUT\n> so that the workspace is targeted appropriately.\n\nRight. Each checkout would be a pair of requests.\n\n>...\n>    A tree of version selectors is rather difficult to maintain on the server,\n>    compared to a set of working resources. At any point in the tree, you would\n>    need to figure out which is checked out, which is not. If something is\n>    checked out, then what version? And as you pointed out in another note, what\n>    is the target of each version selector? In Subversion, I need to work with\n>    specific version resources (much easier than trying to prep a version\n>    selector to point at the version that I'm concerned with).\n> \n> If you implement a workspace as a label and a set of working\n> resources, then you just move the label whenever someone says\n> SET-TARGET, and check to see if you have a working resource for that\n> version history before returning the labeled version.  You do have the\n> cost of setting the labels for each workspace, but you now have all\n> the robustness/recoverability benefits of the server knowing the state\n> of the client.\n\nThe labels are a big cost, and I also don't want to maintain that much\nstate. It is *incredibly* simpler for Subversion to establish a working\nresource for a particular version resource(*), than it is to maintain a set\nof mappings of version selectors to specific version resources. (the main\nview of the repository are simply version selectors to the \"latest\" version\nresource which means the mapping is quite simple)\n\n(*) each version resource is identified by a dotted sequence of numbers. We\njust include that sequence in the working resource URL to identify the\nversion resource the w-resource corresponds to. Simple :-)\n\n> But I probably can live with adding the notion of a \"working collection\"\n> to the protocol, if you remain unconvinced (:-).\n\n:-) ... yes, I think the working collection is the appropriate path.\n\nCheers,\n-g\n\n-- \nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-13368145"}, {"subject": "Re: long... Re: Working collection", "content": "On Wed, Nov 22, 2000 at 04:36:29PM -0500, Geoffrey M. Clemm wrote:\n>    From: Greg Stein <gstein@lyra.org>\n>\n>... version histories, overwrites ...\n>...\n\n>    But we still have the various problems of setting the targets of the\n>    selectors in the members. SVN never really deals with targets, it wants to\n>    work mostly with version resources. Why? Because it copies all the resources\n>    to the local disk and you edit them there.\n> \n> If it is going to copy all of the resources to the local disk, it has\n> to (at least indirectly) tell the server what versions of each resource\n> it is interested in.  If it just tells the server this via a \"SET-TARGET\",\n> then the server knows everything it needs to set up the workspace for that\n> client.\n\nIt is preferable to just talk to the version resource directly, rather than\npoint another resource (a v-selector) at the v-resource and work thru that.\n\nAnd when we copy files to the client, we don't leave any information on the\nserver. That information will only arrive at change/commit time.\n\n>    When you go to do a commit, it\n>    needs to work against what it copied (rather than the current target). Thus,\n>    it refers to the specific version resource that was copied to the client. It\n>    checks that thing out, makes the changes, and checks it in.\n> \n> Yes!  Which is one way a workspace is useful, since it keeps track of\n> what versions the client has downloaded, as opposed to what is currently\n> in the shared \"team\" area.\n\nAs I mentioned... we don't track what was downloaded. There could easily be\nthousands of people that have downloaded copies.\n\n[ consider that SVN is intended to replace CVS, and then consider the scale\n  of people working against a particular repository (and that most of them\n  are simply readers getting copies) ]\n\n>...\n>       But\n>       why can't my PUT create a working resource? (which implies an eventual\n>       creation of a version, a version history, and a version selector as a\n>       member of the collection version's extent version selectors)\n> \n> That would be a significant change to the current definition of PUT and\n\nIt seems that a PUT can create anything on the server. Where does it say\nthat it cannot create a working resource?\n\n> the definition of a working resource (a working resource just checks out\n> a version which must be in a version history).\n\nAs mentioned later... the point about a working resource without an actual\nversion resource does seem a bit whacky, so I'll relent on the \"PUT creates\na working resource\" model :-)\n\n>...\n>    > When you first create a version history, it is given an initial version.\n>    > When you put an existing (non-versioned) resource under version control,\n>    > the initial version is a copy of the state of the non-versioned resource.\n> \n>    That doesn't fully answer the question. The second sentence assumes that I\n>    have a non-versioned resource. That step isn't possible. I must be able to\n>    go from the null state to a versioned resource.\n> \n> If non-version-controlled members of working collections are put under\n> version control when the working collection is checked in, I believe\n> that you get what you need (and don't have to go from the null state\n> to a versioned resource).\n\nAgreed.\n\n>    I believe the answer is that a working resource might not have a\n>    DAV:checked-out property.\n> \n> That significantly complicates the semantics of a working resource, which\n> I'd like to avoid.\n\nAgreed.\n\n>    How were other people thinking of modelling the creation of a versioned\n>    resource? Are people assuming that this is a non-atomic creation? (check out\n>    the parent, put a resource, version-control it, check in the parent; and\n>    deal with the race between the PUT and the VERSION-CONTROL when the resource\n>    may not be version-controlled?)\n> \n> You can just lock the resource to make sure nobody messes with it between\n> the PUT and the VERSION-CONTROL.\n\nThere is also a read-consistency race in that situation. I'm thinking that\nwill apply to anybody using the checked-out version selector model.\n\n[ which, thankfully, means I don't have to deal with it :-) ]\n\n> One reason not to allow you to version\n> control a \"null resource\" is that servers will often have a very different\n> way of versioning things like collections from things like files, and\n> won't let you change from one to the other, and with a null resource,\n> a server can't guess which one it's going to be.\n\nGood point.\n\n>    ...\n>    This is a great model based on the discussion above. But the target issue\n>    that you raised still creates problems. The whole reason that I checked out\n>    a collection version in the first place was to avoid target selectors that\n>    might not be targeted the way that I need them to be :-)\n> \n> Remember that a collection version says nothing about the targets\n> of its members (it just tells you the names and version history of\n> each member).  So if a target selector is not targeted the way you\n> want, you just modify the target selector ... checking out and\n> checking in the collection or any of its members\n> is independent of what target is selected by a target selector.\n\nAgreed. But the point was that I can't go and modify the version selector\nbecause it is the \"visible\" resource. I would need a workspace to keep the\nrepointing private. And we've discussed that already :-)\n\nCheers,\n-g\n\n-- \nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-13379841"}, {"subject": "Re: Working collection", "content": "Okay... I've had plenty of time to ponder the implications. Finally time to\ndiscuss :-)\n\nOn Wed, Nov 22, 2000 at 03:39:25PM -0500, Geoffrey M. Clemm wrote:\n> \n>    From: Greg Stein <gstein@lyra.org>\n> \n>    At another point, I had stated that I didn't want to create a \"tree\"\n>    underneath the working collection, and how I was thinking of accomplishing\n>    that. Pretty simple: return 404 for resources under the working collection.\n>    Only a DELETE would be allowed for immediate members of a working\n>    collection.\n> \n> OK, it looks like I haven't convinced you that you really want to\n> create a logical tree on the server (aka workspace) for each user (:-).\n\nYup. As I pointed out elsewhere, it is dramatically easier for us to create\nworking resources that reference a particular version resource, than it is\nto create a workspace that can reference arbitrary resource versions. And\nour \"public view\" just references the \"head\", so we don't need to track\nversion data... just the correspondence between hierarchies.\n\n> So if we are plunging into dreaded choice C (:-), let's see if\n> we can make it as close to A or B as we can.  Since you don't want\n> to create a tree of version selectors, that eliminates choice B.\n> Choice A (analagous to versions) says that version controlled members\n> of the collection are version histories.  This actually looks pretty\n> good, since you can't slash through version histories, they don't\n> create a tree of version selectors, but you could delete them from\n> the working collection (you can't delete them from the version history\n> namespace, but there's nothing to stop you from deleting them from\n> the working collection namespace).\n\nAgreed on all counts.\n\n>    If you do a PUT or a MKCOL to a member of a working collection, then a new\n>    working resource will be created, and that URL will be returned in the 201\n>    (Created) response's Location: header. This allows me to avoid nesting the\n>    working resources by effectively redirecting to the created working\n>    resource.\n> \n> I have what I believe is a simpler proposal.  You can create as many\n> non-versioned resources as you want in a working collection.  When\n> you checkin a working collection, all non-versioned resources are put\n> under version control, and are replaced by their (newly created)\n> version history resource.  The \"put under version control\" works\n> leafs up, so you can create trees of non-versioned resources inside\n> of a working collection before checking it in.  The working collection\n> is deleted on checkin, as a working resource is, but all your work is\n> saved in the standard form of versions and version histories.\n\nAgreed.\n\nNote that, in my particular case, I can avoid the \"replaced by...\" part\nsince the creation of version histories, the checkin of the working\ncollection, and the final deletion of the working collection are completely\natomic. e.g. the replaced resource gets deleted, so there isn't a need to\nmodel that semantic (in my case).\n\n> If you want to subsequently checkout any of those newly versioned\n> resources, you would just CHECKOUT the desired version, and get a\n> working resource just as usual.\n\nRight... they're just normal version resources.\n\n>    I'm not sure how a PROPFIND on a working collection would operate, if it had\n>    a non-zero depth. I might refuse them to avoid the implication that other\n>    resources exist under the working collection.\n> \n> If the members of a working collection are either version histories or\n> non-version-controlled resources, PROPFIND behavior would be well defined.\n\nRight!\n\n> How's all this sound?\n\nSounds terrific, and it shouldn't be too hard to model code-wise.\n\n>...\n> p.s. (I still think you should just create a workspace\n> on the server for each client :-).\n\nYou just never quit, do you? :-)\n\nCheers,\n-g\n\n-- \nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-13392917"}, {"subject": "RE: Splitting the document", "content": "I am happy to produce a stripped down copy of the versioning\ndocument, call it \"versioning core\", and maintain both the \"versioning core\"\nand \"full versioning\" documents.  From my perspective, this allows us to\nseparate the substantive question of what the semantics of the protocol\nto be (for which I believe we have now reached consensus) from the more\npolitical question of \"what is in core\".\n\nNote: My agreement is based on the assumption that we will not delay\nsubmission of the \"full versioning\" document for debate over \"what should\ngo into core\".  In particular, this means that we may end up submitting\nthe \"full versioning protocol\" to the IESG before we have reached consensus\non a \"core versioning protocol\".\n\nCheers,\nGeoff\n\n-----Original Message-----\nFrom: Jim Whitehead [mailto:ejw@cse.ucsc.edu]\nSent: Friday, December 01, 2000 5:33 PM\nTo: ietf-dav-versioning\nSubject: Splitting the document?\n\n\nJuergen Reuter writes:\n> I am not very happy with the current structure of the document which\n> divides all features into core WebDAV versioning and optional WebDAV\n> versioning.  Currently, the core part is getting smaller and smaller,\n> while the optional part continuously grows.  The problem I see is that\n> server implementors will either implement the core part only, or, in\n> practice, they will have to implement also the full optional part\n\nThis is an excellent segue into an issue I wanted to bring up.  The\npackaging of the protocol specification into one or more documents has been\nconsidered several times by the design team.\n\nThere are two primary options that have been discussed:\n\n1) Status-quo: describe the entire protocol, both core and advanced, in one\ndocument.\n\nAdvantages:\n* Possible increase in number of full server implementations (core +\nadvanced) of protocol\n* Reduced document overhead for boilerplate text, definitions,\nintroductions, etc.\n* Increased consistency, since all text is within a single document\n\nDisadvantages:\n* A single document is larger, and there is a perception that large protocol\nspecifications are complex.\n* A single document hides the inherent simplicity of the core versioning\nfeatures.  The simple core may be viewed as complex by its inclusion in a\nlong document.\n* Possible decrease in implementations of core features in authoring clients\n(due to perceived complexity)\n* Possible decrease in implementations of core versioning in document\nmanagement servers.\n\n2) Divide the specification into two documents, one for Core, one for\nAdvanced.\n\nAdvantages:\n* Possible increase in number of authoring client implementations, due to\nthe easily seen simplicity of the Core.\n* Possible increase in number of document management servers that implement\nCore versioning\n* It is likely Core versioning could be sent for IESG approval before the\nAdvanced document was entirely completed.\n* If interoperability problems are discovered in the Advanced features, they\ncould be fixed without impacting the specification of Core features. This\ncould lead to increased confidence in the Core features by implementors, and\nhence greater early adoption of Core features.\n\nDisadvantages:\n* Possible decrease in number of server implementations of Advanced\nfeatures.\n* Possible decrease in number of client implementations of Advanced\nfeatures.\n* Possible increase in inter-document inconsistency.\n* Repetition of defintions of terms, boilerplate text, etc.\n* Need for a document roadmap explaining subdivision of documents.\n\n\nI have long favored keeping the document together, as a whole (option #1).\nHowever, I am starting to lean towards subdividing the document (option #2).\nMy rationale is as follows:\n\n* Due to the relatively large number of optional Advanced features, there is\nsignificantly increased risk of interoperability problems in the Advanced\nportion of the specification. Since there has not yet been an\ninteroperability demonstration of an Advanced client working against\nmultiple Advanced servers, there is currently no evidence that can be used\nto effectively assess this risk.  As a result, it seems prudent to examine\nwhat would happen in a worst-case scenario where interoperability problems\nin Advanced features lead to a recycle at Proposed Standard.\n\nRe-issuing an RFC at Proposed can happen when there need to be such\nsubstantial modifications to a document that they transcend the \"minor\nchanges\" threshold for going to Draft Standard.  Alternately, it could be\nthat two interoperable implementations of each feature cannot be\ndemonstrated. If this were to happen to the DeltaV protocol, and the\nprotocol were specified in one document, it would require modifying the\nentire document, Core plus Advanced.  This would have the effect of adding\nsubstantial implementation risk even to vendors implementing just the Core\nfeatures.  This risk might lead to implementation being postponed, and a\nmuch slower adoption of the protocol. In contrast, if Core were kept in a\nseparate document, and Advanced features needed to be revised, it is likely\nthey would not impact the Core, and hence would not increase its\nimplementation risk.\n\n* A small Core document would be easier to \"sell\".  It would be much easier\nto convince implementors that a small Core versioning document is compact,\nand easy to implement, than Core in a large document.  Even though Core only\ntakes a small portion of the current document, an implementor still needs to\nread through the entire document, for sections like i18n, security, etc., to\nensure nothing has been missed.  For a small document, this work has already\nbeen performed, by the act of creating a smaller document.\n\n* The downside risk of separating the documents appears to be small.  The\nmajor downside risks of separating the documents appears to be that there\nwill be few client or server implementations of the Advanced features, and\nhence the Advanced features will be marginalized.  While there have not been\nany product announcements that I am aware of, it seems reasonable to assume\nthat the participation of top engineering talent from several significant CM\nvendors in this effort implies a willingness to implement all of the\nstandard, Core and Advanced.  Additionally, the Subversion open source\nproject is currently implementing a very full-featured CM client based on\nDeltaV.  So, I am not concerned about implementations of the Advanced\nfeatures -- I think this will happen.\n\nI am more concerned about authoring tools implementing the standard,\nprimarily due to concerns about the complexity of the protocol, based on\nCore being packaged with Advanced features.  A smaller Core document would\nallay some of these concerns, since authoring tools will primary just use\nthe Core features.\n\nBut, this said, I also recognize that development orgaizations interested in\nimplementing the protocol will perform a thorough engineering analysis\nanyway, and will quickly see through superficial issues such as document\nlength.  Furthermore, in the annals of engineering specifications, the\ncurrent DeltaV spec. is nowhere near the upper end of the scale for\ncomplexity, and length.  Far more complex interoperability specifications\nhave been implemented over time.\n\nAs a result, while I find myself somewhat in support of splitting the\ncurrent document, I am not 100% convinced.  I would appreciate hearing other\nviews on the matter.\n\n- Jim\n\n\n\n", "id": "lists-005-13404409"}, {"subject": "Re: Splitting the document", "content": "> > I am not very happy with the current structure of the document which\n> > divides all features into core WebDAV versioning and optional WebDAV\n> > versioning.  Currently, the core part is getting smaller and smaller,\n> > while the optional part continuously grows.  The problem I see is that\n> > server implementors will either implement the core part only, or, in\n> > practice, they will have to implement also the full optional part\n>\n> This is an excellent segue into an issue I wanted to bring up.  The\n> packaging of the protocol specification into one or more documents has\n> been considered several times by the design team.  \n\nActually, my point was to introduce just a new level or layer within the\nprotocol rather than splitting it into separate RFCs.  But, of course, I\nhave no objections against it, if splitting the document helps improving\nthe structure of the protocol.\n\nHowever, if you want to split the document, I would suggest splitting it\nin a slightly different way:\n\n* Versioning protocol:\n\n  everything that deals with versioning of individual (unrelated) files\n\n  Level 1: mandatory features (what is currently called core versioning)\n  Level 2: optional features (optional versioning reports, mutable\n           versions, labels, MERGE for individual files and collections)\n\n* Configuration management protocol:\n\n  everything that deals with versioning of sets of associated (related)\n  files\n\n  Basically, everything that is left should go here (including baselines,\n  activities, working spaces, MERGE for baselines and activities, etc.).\n\nAnd those features that have nothing at all to do with versioning (e.g.\nnew WebDAV properties, REPORT method framework, property report) should\nbe moved to (a revised edition of) WebDAV.\n\nBye,\n     Juergen\n\n\n\n", "id": "lists-005-13419064"}, {"subject": "version-selector =&gt; version-controlled-resourc", "content": "At a recent deltav presentation I was giving, someone suggested\nthat \"version selector\" was not a very good term, since a checked\nout version selector doesn't really select a version.  I believe\nthis is a very good point, and would like to consider selecting\na less misleading term.\n\nMy favorite would be \"version controlled resource\", which we\ncould shorten to just \"controlled resource\" in contexts where\nit is unambiguous.\n\nWe can then say that the VERSION-CONTROL request creates a\nversion controlled resource at the request URL.  It also then\nis very natural to refer to a checked-in version controlled\nresource and a checked-out version controlled resource.\n\nI'm going to make a pass through the document to see how\nthis works out in practice, and then if this goes smoothly,\nI'd like to post it for general comment.  Any objections?\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-13428747"}, {"subject": "Re: version-selector =&gt; version-controlled-resourc", "content": "Seems fine... but don't we already use \"version controlled resource\" to\nrefer to any of the resources managed by DeltaV? (hrm; maybe not ; do we\nneed/want one?)\n\nCheers,\n-g\n\nOn Mon, Dec 04, 2000 at 12:57:46PM -0500, Geoffrey M. Clemm wrote:\n> \n> At a recent deltav presentation I was giving, someone suggested\n> that \"version selector\" was not a very good term, since a checked\n> out version selector doesn't really select a version.  I believe\n> this is a very good point, and would like to consider selecting\n> a less misleading term.\n> \n> My favorite would be \"version controlled resource\", which we\n> could shorten to just \"controlled resource\" in contexts where\n> it is unambiguous.\n> \n> We can then say that the VERSION-CONTROL request creates a\n> version controlled resource at the request URL.  It also then\n> is very natural to refer to a checked-in version controlled\n> resource and a checked-out version controlled resource.\n> \n> I'm going to make a pass through the document to see how\n> this works out in practice, and then if this goes smoothly,\n> I'd like to post it for general comment.  Any objections?\n> \n> Cheers,\n> Geoff\n\n-- \nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-13437176"}, {"subject": "Re: version-selector =&gt; version-controlled-resourc", "content": "I just finished an editing pass over the protocol, and the only time\nwe used the term \"version-controlled\" was in reference to resources\nthat had already had the VERSION-CONTROL operation applied to them, so\ncurrent usage in the protocol is consistent with replacing the term\n\"version selector\" with \"version-controlled resource\".\n\nI've never encountered the need to have a term for \"any kind of\nresource managed by DeltaV\", so I don't think we need one (and even\nif we did, I don't think we'd want to use \"version-controlled for\nthat concept).\n\nI'll post the results of this editing pass as a 10.7 working draft,\nso folks can see what this really would look like.\n\nCheers,\nGeoff\n\n   Date: Mon, 4 Dec 2000 11:18:27 -0800\n   From: Greg Stein <gstein@lyra.org>\n\n   Seems fine... but don't we already use \"version controlled resource\" to\n   refer to any of the resources managed by DeltaV? (hrm; maybe not ; do we\n   need/want one?)\n\n   Cheers,\n   -g\n\n   On Mon, Dec 04, 2000 at 12:57:46PM -0500, Geoffrey M. Clemm wrote:\n   > \n   > At a recent deltav presentation I was giving, someone suggested\n   > that \"version selector\" was not a very good term, since a checked\n   > out version selector doesn't really select a version.  I believe\n   > this is a very good point, and would like to consider selecting\n   > a less misleading term.\n   > \n   > My favorite would be \"version controlled resource\", which we\n   > could shorten to just \"controlled resource\" in contexts where\n   > it is unambiguous.\n   > \n   > We can then say that the VERSION-CONTROL request creates a\n   > version controlled resource at the request URL.  It also then\n   > is very natural to refer to a checked-in version controlled\n   > resource and a checked-out version controlled resource.\n   > \n   > I'm going to make a pass through the document to see how\n   > this works out in practice, and then if this goes smoothly,\n   > I'd like to post it for general comment.  Any objections?\n   > \n   > Cheers,\n   > Geoff\n\n   -- \n   Greg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-13445892"}, {"subject": "RE: version-selector =&gt; version-controlled-resourc", "content": "The problem with the version selector is that it is a chameleon; its\nbehavior and semantics change dramatically during a\ncheckout--modify-in-place--checkin cycle.  Finding a single name that\nconveys all that may be difficult.\n\nNo matter what it's called, I believe a better definition for version\nselector (or version-controlled-resource) is needed beyond the current\noperational description in the Terms section of the specification.  It\nshould include the motivation for the concept, which has been requested\nseveral times on this list.\n\nThe part in the current definition about putting an existing resource under\nversion control is defined rigorously in the section on VERSION-CONTROL, so\nit seems like it should be removed from the definition of version selector.\nFrom a recent discussion with Geoff Clemm and my own reading of the\nspecification, I would define version selector this way, which may still be\ntoo operational:\n\n\"Version selector:  The concept of the version selector is to allow a single\nURL to track a resource through the checkout-modify-checkin cycle from one\nversion to the next.  It has a unique URL distinct from the URLs of both its\nassociated version history and the version which is its current target.  It\nis a resource that represents any of the saved states of a resource under\nversion control.  It is logically bound at any given instant to a copy of\nthe content and dead properties of one version in the version history from\nwhich it selects, or, when the version selector is checked out, to the\ncontent and dead properties of a version-to-be in progress.  On servers that\nsupport the CHECKOUT method on version selectors, after a version selector\nhas been checked out, the copy becomes a writable working copy and can be\nmodified 'in-place' with methods like PUT and PROPPATCH, without affecting\nthe selected version that was checked out.  On checkin, this working copy is\ncaptured as a new version in the associated version history, and the version\nselector is bound to the new version.\"\n\n--Chuck Fay \nFileNET Corporation, 3565 Harbor Blvd., Costa Mesa, CA 92626 \nphone:  (714) 327-3513, fax:  (714) 327-5076, email:  cfay@filenet.com\n\n\n\n", "id": "lists-005-13455556"}, {"subject": "Re: version-selector =&gt; version-controlled-resourc", "content": "Just a couple of comments (and a change to \"version-controlled\nresource\" :-)\n\n   From: \"Fay, Chuck\" <CFay@filenet.com>\n\n   \"Version-controlled resource: The concept of the version-controlled\n   resource is to allow a single URL to track a resource through the\n   checkout-modify-checkin cycle from one version to the next.  It has\n   a unique URL distinct from the URLs of both its associated version\n   history and the version which is its current target.\n\nNote that a version-controlled resource does not have a current target\nwhen it is checked-out.\n\n   It is a\n   resource that represents any of the saved states of a resource\n   under version control.\n\nThis is a correct statement, but I'd be a little concerned that folks\nmight confuse \"saved state\" with \"version\".\n\n   It is logically bound at any given instant\n   to a copy of the content and dead properties of one version in the\n   version history from which it selects,\n\nI'd probably avoid the term \"bound\" since it is not a binding in\nthe way we are using the term in the Binding protocol.  Probably\nI'd just say \"when it is checked-in, it's content and dead properties\nare a copy of those of a version in its version history\".\n\n   or, when the\n   version-controlled resource is checked out, to the content and dead\n   properties of a version-to-be in progress.\n\nI know what you mean, but \"version-to-be in progress\" is quite\na mouthful (:-).\n\n   On servers that support\n   the CHECKOUT method on version-controlled resources, after a\n   version-controlled resource has been checked out, the copy becomes\n   a writable working copy and can be modified 'in-place' with methods\n   like PUT and PROPPATCH, without affecting the selected version that\n   was checked out.  On checkin, this working copy is captured as a\n   new version in the associated version history, and the version-\n   controlled resource is bound to the new version.\"\n\nI definitely don't want to say that it \"is bound to the new version\".\nIt continues to be a completely separate resource (with its own live\nproperties), even when it is checked in.  A checkin just changes the\nstate of the version-controlled resource (to be \"checked-in\"), and\ncreates a new version whose content and dead properties are a copy\nof that of the version-controlled resource.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-13466042"}, {"subject": "DAV:checkin-dat", "content": "> Section 5.1.5: DAV:checkin-date (protected)\n> - -----------------------------------------\n> I still vote for giving a rationale for the term\n> \"reasonable approximation\".  What is the idea here?\n\nThe term was taken from RFC2616 regarding the requirements for an HTTP/1.1\nserver to provide a Date: header if the server can provide a \"resonale\napproximation of the current time\"\n(http://andrew2.andrew.cmu.edu/rfc/rfc2616.html#sec-14.18).\n\nIt seemed reasonable to only require the same level of time keeping\naccuracy for the checkin date property.\n\nRegards,\n\nTim Ellison\nJava Technology Centre, MP146\nIBM UK Laboratory, Hursley Park, Winchester, UK.\ntel: +44 (0)1962 819872  internal: 249872  MOBx: 270452\n\n\n\n", "id": "lists-005-13475870"}, {"subject": "Re: Working collection", "content": "   From: Greg Stein <gstein@lyra.org>\n\n   On Wed, Nov 22, 2000 at 03:39:25PM -0500, Geoffrey M. Clemm wrote:\n   > ...\n   > I have what I believe is a simpler proposal.  You can create as many\n   > non-versioned resources as you want in a working collection.  When\n   > you checkin a working collection, all non-versioned resources are put\n   > under version control, and are replaced by their (newly created)\n   > version history resource.  The \"put under version control\" works\n   > leafs up, so you can create trees of non-versioned resources inside\n   > of a working collection before checking it in.  The working collection\n   > is deleted on checkin, as a working resource is, but all your work is\n   > saved in the standard form of versions and version histories.\n   > ...\n   > How's all this sound?\n\n   Sounds terrific, and it shouldn't be too hard to model code-wise.\n\nExcellent.  I'll write up this working collection proposal up for\ngeneral review.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-13483037"}, {"subject": "Activity CHECKIN (was: Versioning TeleConf Agenda ...", "content": "Some more questions just to make sure I understand the motivation\nfor activity CHECKIN.\n\n   From: Greg Stein <gstein@lyra.org>\n\n   On Sat, Dec 02, 2000 at 08:22:58AM -0500, Geoffrey M. Clemm wrote:\n\n   > When you CHECKIN the first member of an activity, the version number\n   > can be assigned (to the activity).  Subsequent CHECKIN's against that\n   > activity get the same version number.\n\n   Nope. If you get a conflict partway through, then the \"assigned number\" is\n   incorrect. The number can only be assigned once the full change set has been\n   comitted (they are sequential).\n\n   Consider: Joe begins the CHECKIN on the resources and the server gave him\n   version number 7. Nancy begins her checkin and the server gives her 8.\n   Oops... Joe's checkin has failed. Now what?\n\nWhy can't Joe's subsequent checkin's (against his #7 activity) be marked\nas being part of version #7, i.e. what harm would it do to have the\npartial change set #7 be completed at a future time?\n\n   You've got all kinds of race conditions and stuff going in there to try and\n   deal with the problem. Sure, the server knows all of the files that Joe is\n   going to checkin (through examination of the activity), but it can't do\n   anything about it until all the files are checked in. Does it say \"well,\n   there is a v7 for this file, but I can't give it to you right now.\"\n\nSounds reasonable.  Where would this cause a problem?\n\n   What if\n   Joe never comes back? Nancy should have got v7 in that case.\n\nWhy does Nancy care whether she gets the string \"v7\" or the string\n\"v8\" to identify her change set?  If you're going to support branching,\nyou're going to have people getting non-sequential numbers anyway\n(i.e. I'm based on version v7 but my next version I create will be\nv11 because v8, v9, and v10 have been created on another branch).\nAnd even if you're not supporting branching, why would Nancy care?\n\n   Oh, and what\n   happens with rollback for Joe's failed checkin?\n\nWhat are you rolling back?  The checkin's that succeeded have created new\nversions (which stay) and the checkin's that failed still are checked-out\nresources.  Or do you mean, if you decide just to cancel the whole activity?\nJust leave it \"uncompleted\" (you often end up wanting to look at partial\nwork like this), or delete those versions if you want to recover space.\n\n   Or is that first resource\n   supposed to fail on checkin because some *other* resource in the activity is\n   going to fail in the future.\n\nIf each checkin can succeed or fail independently, there's no need\nto have the checkin of one resource depend on the success or failure\nof the checkin of another resource.  \n\n   > Why not allow intermediate states of that\n   > change set to be manifested on the server?\n\n   Because the whole shebang is transacted. You either have a change set, or\n   you don't. You don't get a version number until the change set is committed.\n   There is no way to do a partial change set.\n\nI understand that is the way you're implementing it, but I'm wondering\nwhy you implemented it that way.\n\nAnd as before:\n\n   > Note: I'm happy to have the protocol support activity checkin, so\n   > I just want to make sure I understand the motivation (in case I am\n   > called upon to defend it's addition to the protocol :-).\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-13491242"}, {"subject": "Re: Simplifying CHECKOUT behavior for core versioning client", "content": "The current protocol assumes that there are two kinds of clients:\n- clients that have no local persistent state\n- clients that have local persistent state\n\nA client that has no local persistent state cannot easily use working\nresources, because it has no interoperable place to \"store\" working\nresource URL's between sessions, but a user often has to terminate a\nsession before he is ready to checkin his work.\n\nI agree that some users want \"hidden\" checkouts, and for this they\nwill either need a client with local persistent state or a server\nthat supports workspaces.   But there also are users that are\nhappy with public checkouts (and use locking for overwrite\nprotection).\n\nI believe it is very important that the protocol support clients\nwith no local persistent state, both because some clients in fact\nhave no local persistent state, and because it is often simpler\nto write such clients (thus increasing the adoption rate for the\nversioning protocol).\n\nSince making public checkouts mandantory allows you to write\nsimple clients with no local persistent state, I'd like to see\nthis in the protocol unless there are demonstrable implementation\nproblems.\n\nWith that background, some specific comments to Greg's message:\n\n   From: Greg Stein <gstein@lyra.org>\n\n   When you do a CHECKOUT, the server will do one of two things:\n\n   1) it is a workspace, so it checks out in place. the client continues to\n      work with that resource\n\n   2) it returns 201 (Created) with a Location: header pointing to the working\n      resource.\n\nIn the current protocol, whether or not a version-controlled resource\nis in a workspace has no affect on this aspect of the CHECKOUT\nbehavior.  If the CHECKOUT is applied to a version-controlled resource\nand it does not have a DAV:apply-to-target argument, it MUST do #1 (it\ncannot do #2).  if a CHECKOUT is applied to a version or has a\nDAV:apply-to-target argument, it MUST do #2 (it cannot do #1).\n\n   The point is: the response may or may not provide a Location: header to tell\n   the client what to do. The client should always respect that.\n\nThe current protocol is designed so that the client controls\nwhether or not it needs to use/remember the Location header value.\nIf it always had to use the Location header value, a client\nwithout local persistent state would be in trouble if a session\nended without the working resources being checked in.\n\n   You said the client would choke if it expected the working resource model\n   against a workspace server. Not at all... it would not see a Location: come\n   back, so it wouldn't alter the URL to use for modifying the resource.\n\nIf it expected the working resource model, in the current protocol it\nwould have to either use the DAV:apply-to-target parameter or checkout\na version, and a workspace-based server that does not support working\nresources would choke (since it is not able to issue free-standing\nworking resources, but can only checkout \"in-place\").\n\n   Simple examination of the Location: header. I would expect most clients to\n   be able to work with both.\n\nA client that has no local persistent storage would not work well with\na server that expected it to remember working resource URL's.\n\n   >    If they do a CHECKOUT on a v-selector, then do a PUT to it (even if\n   >    the server gave them a w-resource), then the PUT will fail.\n   > \n   > I don't follow you here.  I've got a server whose implementation is\n   > based on working resources.  The server simulates a checked-out\n   > version selector by secretly associating a working resource with the\n   > version selector when it is checked out.\n\n   Ah! See... that isn't in the specification. You're asking for more behavior\n   on version selectors than exists today.\n\nI was just describing an implementation technique, to show that it is\neasy for a working resource based implementation to simulate an\nin-place checkout protocol.\n\n   I disagree with this addition. Again: you're trying to swing everything\n   towards something like a checked-out version selector model.\n   The client should simply use the Location: header.\n\nI'm just trying to make sure that you can write clients that don't\nhave a local persistent store, and that don't require a user to\ncheckin everything at the end of an editing session.\n\n   > The server redirects all\n   > request to that checked-out version selector to that working resource.\n   > When a client issues a PUT, the PUT gets redirected by the server to\n   > the working resource, and the PUT succeeds.  When the checked-out\n   > version selector is checked in, the server checks in the secret working\n   > resource and sets the target of the version selector to be the newly\n   > created version.\n\n   Disagree... strongly. That is quite different from today's spec,\n\nThis wasn't anything about the spec ...  I was just describing a\nsimple implementation of in-place checkout behavior by a server that\nhas a working-resource based implementation.\n\n   and I don't see a basis for this except to allow clients to ignore\n   the Location header and continue working with the same request-URI.\n\nI believe that is what is required to support clients without local\npersistent state.\n\n   > Did the above clarify how I believe a working resource based\n   > implementation would provide v-selector checkout?\n\n   Clear, yes, and I don't think that it works well.\n\nI understand that your cient wouldn't use it, but why doesn't it work\nwell?  It allows a client to be written without local persistent state,\nand is easy for a server to implement.\n\n   Clients that ignore the Location header will break when you have an advanced\n   server which provides for parallel development. That server cannot allow\n   clients to continue working from the v-selector. The clients *must* work\n   from the working resource.\n\nThere are two ways of providing parallel development: server side\nworkspaces and client side workspaces (with working resources).\nSome servers will only support server-side workspaces for parallel\ndevelopment, and others will only support client side workspaces\nfor parallel development.  Clients that use only client side\nworkspaces will only work against servers that support client side\nworkspaces, and clients that use only server side workspaces\nwill only work against servers that support server side workspaces.\n\nMaking in-place checkout mandantory has no effect (either positive\nor negative) on this.\n\n   But the cool point is: you can still have the same dumb client talking to\n   this advanced server, as the client talking to the dumb no-parallel server.\n   The model the client sees is the same.\n\nI believe most users will care whether or not their checkouts are\npublic or private, and I believe most clients will care whether or not\nthey have to remember working resource URLs between sessions, so I\ndon't think a form of CHECKOUT that takes these choices out of the\nhands of the client is of much utility.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-13502341"}, {"subject": "Newcome", "content": "I have just started to get envolved with WebDAV and I would really\nappreciate it if someone could point to me some useful (and easy to\nunderstand) links or information for versioning(What can be versioned how \ne.t.c)\n\nThanx\nStamaths\n\nPS:Sorry if the mail seems kind of stupid but I have never before \nworked neither with http nor with any kind of versioning(CVS).\n\n\n\n", "id": "lists-005-13517107"}, {"subject": "Re: Review of draft-ietf-deltav-versioning-10.4/", "content": "       From: Juergen Reuter [mailto:reuterj@ira.uka.de]\n\n   I am not very happy with the current structure of the document\n   which divides all features into core WebDAV versioning and optional\n   WebDAV versioning.  Currently, the core part is getting smaller and\n   smaller, while the optional part continuously grows.  The problem I\n   see is that server implementors will either implement the core part\n   only, or, in practice, they will have to implement also the full\n   optional part.\n\nNote that the options are divided 6 packages, which are identified in\nthe DAV header response from an OPTIONS request.  These are \"label\",\n\"workspace\", \"baseline\", \"activity\", \"merge\", and\n\"versioned-collection\".  Clients are expected to look for these option\npackages via the OPTIONS request.\n\nWe could restructure the document into one section per option package.\nWhat do others think? \n\n   I think the original idea of core/optional versioning was to\n   separate core versioning semantics from advanced semantics (mostly\n   configuration management).  So, maybe you could reintroduce this\n   idea into the protocol by defining three levels:\n\n   - core versioning: minimally required features\n\n   - versioning: fully fledged versiong including labels and branches\n   (and maybe merging)\n\n   - advanced versioning: configuration management and all remaining\n   optional features\n\nWhat is in the \"versioning\" level varies widely from server to server.\nI believe the current division into orthogonal option sets is what is\nrequired to achieve consensus.\n\n   Section 1.3\n   - ---------\n\n   Version Selector/Working Resource:\n\n   The definition of the term \"Working Resource\" as opposed to that of\n   \"Version Selector\" seems confusing to me.  The pure fact that the\n   CHECKOUT method is defined to be applicable on both types of\n   resources, does not make them suitable for a direct comparison.\n\nNote that the things that can be checked out are version-controlled\nresources and versions.  The result of the checkout is either a\nchecked-out version-controlled resource, or a working resource,\nrespectively.\n\n   I think it would be better to characterize the term \"working\n   resource\" independently from \"checking out a version selector\".\n\nI agree.  I'll see what I can work up (this is connected to some\npoints you make below).\n\n   Maybe when defining the term \"version selector\" you might want to\n   add a note about checking out version selectors.  To summarize, I\n   would like to suggest the following wording:\n\n   Version Selector:\n   When an existing resource is put under version control, it becomes a\n   \"version selector\" resource.  A new version history resource is\n   allocated, whose initial version contains the content and dead\n   properties of the existing resource.\n   A checkout may be applied to version selector.  This will make a copy\n   of an existing version of the version history accessible for editing.\n\nThis might be a bit misleading since a checkout applied to a version\nselector does not make a copy of anything ...  it just changes the\nstate of the version selector from checked-in to checked-out.\nChecking out a version does make a copy (the working resource).\n\n   A subsequent checkin will create a new version in the version history.\n   Checking out a version selector is useful for environments where only\n   a single user accesses the version selector.\n\nNote though that multiple users can access a shared checked out\nversion selector by using the locking protocol.  Also, you need to be\ncareful to not mislead the reader into thinking that checking out a\nversion selector is useful only when a single user is doing\ndevelopment (when workspaces are supported, multiple users each check\nout their own version selector for a shared version history).\n\n   Working resource:\n   If multiple users concurrently try to check out the same version\n   selector, they will interfere each other.  To avoid this, a checkout\n   can also be directly applied to a version.  This will create a new\n   resource, called \"working resource\".  The working resource can be\n   modified and is automatically deleted when it is checked in.  The\n   server allocates a distinct new URL for each new working resource.\n\nNote that in general, we try not to go into this much detail in the\n\"terminology\" section, but rather do so in the \"semantics\" or\n\"concepts\" section.\n\n   Section 2: WebDAV Versioning Semantics\n   - ------------------------------------\n   This section discusses rather concepts than semantics, right?\n\nI'm happy with either word ... just for interest's sake, why don't you\nthink \"semantics\" are being described in this section?\n\n   Section 3: New WebDAV XML Element Attributes\n   - ------------------------------------------\n   As both, the headline itself and the introductory statement to this\n   section suggest, this section should be moved to (a new revision of)\n   the WebDAV protocol.\n\nI agree, but unless we defer the versioning protocol until such a new\nrevision is created, we are stuck with defining WebDAV extensions in\nthe versioning protocol when we find they are needed.  So as soon as\nthe WebDAV extension is defined, I'm happy to strip this kind of thing\nfrom the versioning protocol.\n\nI've recently received a suggestion from Yaron that we replace this with\ntokens for the If header.  I think he's right, so it's likely that we'll\nbe killing this section anyway.\n\n   Section 4: New WebDAV Properties\n   - ------------------------------\n   Again, move this to WebDAV.  Note that 4.1.3 and 4.1.4 do *not*\n   introduce new WebDAV properties, as the headline claims.\n\nYes, 4.1.3 and 4.1.4 just got put there because there seemed to be no\nplace better to put them.\n\n   Section 4.4: DAV:supported-method-set\n   - -----------------------------------\n   > method-name type: a type in the DAV://METHODS/ namespace\n\n   In general, this does not work. ...\n   Personally, I would prefer a syntax like:\n\n     <D:supported-method-set xmlns:D=\"DAV:\">\n       <D:method-name>GET</D:method-name>\n       </D:supported-method-set>\n\nThis would be fine with me.  I'll make that change if nobody objects.\n\n   Section 4.6: DAV:supported-report-set\n   - -----------------------------------\n   Same problem as in section 4.5.  However, this is currently\n   independent from WebDAV and hence can and should be fixed, e.g.:\n\n   <D:supported-report-set xmlns:D=\"DAV:\">\n     <D:report-name>version-tree-report</D:report-name>\n     <D:report-name>property-report</D:report-name>\n   </D:supported-report-set>\n\nOne reason DeltaV (and WebDAV) use this approach is that it\nallows for consistent use of namespaces, i.e. so you can have\nyour XML parser to namespace resolution of these report names.\nIf one made the change you suggest, it would have to be\nsomething like:\n\n   <D:supported-report-set xmlns:D=\"DAV:\">\n     <D:report-name>DAV:version-tree-report</D:report-name>\n     <D:report-name>DAV:property-report</D:report-name>\n   </D:supported-report-set>\n\n   Section 5.1.2: DAV:predecessor-set (protected),\n   Section 5.1.3: DAV:successor-set (protected)\n   - ---------------------------------------------\n   It is very important that the server really maintains the order of the\n   DAV:href elements, as noted for the predecessor set.  But the\n   successor set should also be maintained.  Think for example of\n   graphically displaying a revision graph.  You really do not want the\n   branches of the revision graph to be aligned differently each time the\n   graph is re-displayed.  Moreover, an application might want to\n   designate the first DAV:href element of the successor set to continue\n   the main development branch.\n\nUnlike the DAV:predecessor-set (which is set by the client),\nthe DAV:successor-set is a query (the inverse of DAV:predecessor-set)\ncomputed by the server, and constraining\nthe order of the results of this computation would place an (in my view)\nunacceptable constraint on server implementations.\n\nIf a server wants to interoperate with multiple clients, it should\nuse an activity to capture the \"main branch\", and not depend upon\nsome server dependent predecessor set ordering.\n\n   Section 5.1.4: DAV:checkout-set (protected)\n   - -------------------------------------------\n   This should also be an ordered set maintained by the server.  For\n   example, think of a client that chooses to graphically display working\n   resources and checked-out version selectors as part of a revision\n   graph.  Or, to give another example, depending on the underlying\n   revision control system, the first element in the set may be a\n   designated candidate to continue the main development branch.\n\nSame response as for DAV:successor-set.  This is not a client specified\nproperty, it is a server computation/query.\n\n   Section 6: WebDAV Versioning and Existing Headers\n   - -----------------------------------------------\n   I think this headline does not express what is following.  Personally,\n   I would prefer a wording like:\n\n   \"Versioning Vis-a-Vis WevDAV Headers\" or\n   \"Impact of Versioning on WebDAV Headers\".\n\nThe new versioning header is still a WebDAV header, so I personally\nprefer the current title.  Anyone else have a preference?\n\n   Section 7.1.1: Example - GET request with DAV:must-not-be-checked-out\n   response\n   -\n   ------------------------------------------------------------------------\n   ----\n   The example contains a CHECKOUT request, not a GET request.\n\nOops!  Thanks for catching that.\n\n   > In this example, the request to CHECKOUT /foo.html fails because\n   > /foo.html is already checked out\n\n   ... and /foo.html is a version selector, or because the server chooses\n   not to branch off a new version.\n\nIf it were those other things, it would have returned a different\ntoken in the response body.\n\n   Section 7.2: OPTIONS\n   - ------------------\n   > If the server supports checking out a version selector\n\n   i.e. checking out a version selector is an optional feature and should\n   be moved to Optional WebDAV Versioning?\n\nWe're currently addressing this in a separate thread.  My proposal\nis that support for checking out a version-controlled resource be\nmandantory (since it is easy for both client-workspace and server-workspace\nservers to implement).\n\n   Section 7.3: PUT\n   - --------------\n   In the preconditions section, you use the format\n   \"<DAV:some-error-tag/>: Error condition\".  To be kind,\n   you should introduce the reader to this format or use a more\n   self-explanatory format.\n\nOK, what would the more self-explanatory format be?  (:-).\n\nBut more seriously, I agree this needs explanation.  I'll add it to\nthe \"notational conventions\" section.\n\n   Section 7.4: PROPPATCH\n   - --------------------\n   > <DAV:cannot-modify-protected-property/>: An attempt to use PROPPATCH\n   > to modify a property (either core or optional) defined by this\n   > document as being protected MUST fail.\n\n   > <DAV:cannot-modify-unsupported-property/>: An attempt to modify a\n   > property defined by this document (either core or optional) whose\n   > semantics are not enforced by the server MUST fail.  This helps ensure\n   > that a client will be notified when it is trying to use a property\n   > whose semantics are not supported by the server.\n\n   What about moving these features to WebDAV?  They are probably of\n   generic interest and not versioning specific (assuming that the\n   definition of the term \"protected property\" also could be moved to\n   WebDAV).\n\nWhen there is a new version of the WebDAV protocol open for editing, I\nagree we should move it there.\n\n   Section 9.1: VERSION_CONTROL\n   - --------------------------\n   The logical structure of the rules in this section seems rather weird\n   to me.\n\n   The section contains the following precondition:\n\n   > <DAV:must-be-versionable/>: The request-URL MUST identify a\n   > versionable resource, a null resource, or a version selector.\n\n   Accordingly, I would expect three paragraphs in the beginning of this\n   section:\n\n   \"If the request-URL identifies a versionable resource, then ...\"\n   \"If the request-URL identifies a null resource, then ...\"\n   \"If the request-URL identifies a version selector, then ...\"\n\n   A classification into disjunctive sets of cases also is probably\n   less error prone.\n\nSome of these conditions apply to more than one of these cases,\nso with a disjunctive set of cases, we would have to repeat preconditions\nappearing in other cases, which seems error prone.\n\nOn the other hand, there are two preconditions that only apply to\nversion controlling a null resource, and those should be grouped\ntogether (and currently are not).  I'll fix that.\n\n   Actually, in section 9.1 currently there is only a paragraph about\n   versionable resources.  The second paragraph talks about the case when\n   the request *body* identifies a version.\n\n   The postconditions section, on the other hand, classifies cases\n   thoroughly.  Still, I wonder which rules apply when the request-URL\n   identifies a version selector.  Section 9.1 only says that\n\n   > the DAV:version-control request\n   > body element MUST NOT contain a DAV:version element.\"\n   (precondition)\n\n   and:\n\n   > If the request-URL identified a version selector at the time of the\n   > request, the VERSION-CONTROL request MUST NOT change the state of that\n   > version selector.\n   (postcondition)\n\n   But then, what does a VERSION-CONTROL do at all if the request-URL is\n   a version selector?\n\nNothing.  This is here to let a client use the same protocol sequence\nto put a resource under version control, whether or not the server\nautomatically puts all new resources under version control (which a\nserver is allowed to do).  I'll add a sentence to this effect, since\nI've had that question before.\n\n   Section 9.2: CHECKOUT\n   - -------------------\n   > A versioning server MUST support either version selector CHECKOUT or\n   > version CHECKOUT, and MAY support both.\n\n   These two concepts should be explained somewhere (e.g. in the terms\n   section or in the introductory section).  As far as I understand,\n   version selector CHECKOUT is appropriate only when a single user\n   accesses a versioned resource?  And as soon as two or more users want\n   to access it, you need working resources and hence have to apply\n   version CHECKOUT?  If so, this should be somewhere explained (e.g. as\n   rationale or concepts, for example in the introduction).\n\nI agree that these variants need to be better explained and contrasted.\n\nI believe that we should break this up into three categories:\npublic checkouts (in place checkouts, must be supported)\nclient workspaces (working resources, optional)\nserver workspaces (server side workspaces, optional).\n\n   Possible you might choose leaving version selector CHECKOUT as\n   core versioning feature, but moving version CHECKOUT to optional\n   versioning (preferably as part of the fully fledged versioning as\n   proposed in the beginning of this mail).\n\nI agree.  This would give us required functionality (public checkouts)\nand the two options for private checkouts: client workspaces (working\nresources) and server workspaces\n\n   > The content and dead properties of the working resource MUST be the\n   > same as the content and dead properties of the DAV:checked-out\n   > version.\n\n   I would prefer the following wording:\n\n   \"The content and dead properties of the working resource MUST be\n   initialized with the content and dead properties of the\n   DAV:checked-out version.\"\n\nOne could phrase postconditions in the form of \"this is the state\nfollowing the successful execution of the request\" or \"this is what\nthe server must do to successfully execute this request.  Either one\nworks, but we should be consistent, and currently the postconditions\nare in the first form.  I also believe the first form is simpler.\n\n   > If DAV:apply-to-target is specified in the request body, the CHECKOUT\n   > is applied to the version identified by the DAV:target of the version\n   > selector, and not the version selector itself.\n\n   For better understanding, I would suggest the following wording:\n\n   > If the request-URL contains a version selector and DAV:apply-to-target\n   > is specified in the request body, the CHECKOUT is applied to the\n   > version identified by the DAV:target of the version selector, and not\n   > the version selector itself.\n\nFine by me.  I'll add that in.\n\n   Section 9.3: CHECKIN\n   - ------------------\n   The meaning of DAV:keep-checked-out is not just to keep a checked out\n   resource when applying a CHECKIN, but also to perform a subsequent\n   update of the checked out resource's DAV:checked-out property.  As far\n   as I understand, this results in a behaviour that is the same as that\n   of a CHECKIN immediately followed by a CHECKOUT (except that in the\n   case of a working resource its URL is recycled).  Hence, I would\n   suggest to name this XML element e.g. \"DAV:checkpoint\" rather than\n   \"DAV:keep-checked-out\".\n\nThe term \"checkpoint\" is used by several CM systems to mean something\nlike a \"baseline\", so I think DAV:keep-checked-out is less likely to\nconfuse people.\n\n   Section 9.4: UNCHECKOUT\n   - ---------------------\n   > An UNCHECKOUT request can be applied to a checked-out version selector\n   > to cancel the CHECKOUT.\n\n   This probably should read:\n\n   \"An UNCHECKOUT request can be applied to a checked-out version selector\n   or working resource to cancel the CHECKOUT.\"\n\n   Or should I use DELETE to cancel a version CHECKOUT (though I\n   personally would prefer UNCHECKOUT)?  If so, an appropriate note for\n   the reader should be added.\n\nI'll add that note.  UNCHECKOUT is there primarily to reset the\ncontent and dead properties of a checked-out version-controlled\nresource.  For a working resource, a simple DELETE will suffice (there\nis no modified version-controlled state to reset in that case).\n\n   Section 9.5: SET_TARGET\n   - ---------------------\n   Typo: \"Preconditions:\" has a boldface colon.  This occurs also in some\n   other sections (e.g. 15.12, 16.1).\n\nThanks for noticing that!  I'll get rid of those.\n\n   Section 10.1: DAV:version-tree-report\n   - -----------------------------------\n\n   > The DAV:version-tree-report describes all the versions of the version\n   > history of a version in the form of a nested tree of versions.\n\n   I would prefer the following wording:\n\n   The DAV:version-tree-report describes all the descendant versions for a\n   given version in a version history in the form of a nested tree\n   of versions.\n\nThat would be a functional change, rather than a wording change.\nCurrently DAV:version-tree-report gives you the full report for\nall versions in the history (i.e. a report rooted at the initial\nversion rather than one at the specified version).\n\nDo folks think we want to make that change?  We could make\nthis report on version selector be the whole tree, while this\nreport on a version be rooted at that version.\n\n   > ANY value: zero or more property-name elements\n   >\n   > property-name type: a property type\n   >\n   > property-name value: none\n\n   This should be explained more verbosely.\n\n   > <!ELEMENT prop (see [RFC2518], section 12.11)>\n\n   Argh!  This is definitely not a valid element definition.\n\nSince the spec is being read by humans and not XML parsers,\nwe should be OK (:-).  But I'm happy to replace the !ELEMENT\nwith English text.\n\n   Section 10.1.1: Example - DAV:version-tree-report\n   - -----------------------------------------------\n\n   >     <D:creator-displayname/>\n   >\n   >     <D:predecessor-set>\n   >\n   >   </D:version-tree-report xmlns:D=\"DAV:\">\n\n   Typo: should be <D:predecessor-set/>\n\nThanks for catching that!\n\n   Section: 16.1 LABEL\n   - -----------------\n   > When comparing two label names to decide if they match or not, a\n   > server SHOULD use a case-sensitive octet-by-octet comparison of the\n   > two label names.\n\n   I propose to replace \"SHOULD\" with \"MUST\".  Otherwise, a client can\n   not be sure, what the server actually does and has to assume the worst\n   case, i.e. case-insensitive match.\n\nYeah, I'd prefer that too, but this was the compromise after a long\nand 'vigorous' (:-) debate.  One hates to say \"SHOULD\" except as a\nlast resort, and this was one of those cases.\n\n   > <!ELEMENT add (label-name)>\n   >\n   > <!ELEMENT set (label-name)>\n\n   I still think that the difference between these two elements and their\n   semantics does not get clear.\n\nHmm.  Can you identify what mistake a reader could make based\non the current definitions?\n\n   > <DAV:must-be-version-or-version-selector/>: The request-URL MUST\n   > identify a version or a version selector.\n\n   This probably should read:\n\n   \"<DAV:must-be-version-or-version-selector-or-collection/>: The\n   request-URL MUST identify a version or a version selector or a\n   collection.\"\n\nIn general, we consider a Depth:n request to be just a macro for\na set of Depth:0 (or non-Depth) requests, whose responses appear\nseparately in a 207.  If one of the collections is not a version\nselector, it MUST return this error token in the 207 response\nfor this particular collection.\n\n   > <DAV:must-not-be-checked-out/>: If LABEL is being applied to a version\n   > selector, it MUST NOT be checked out.\n\n   The phrase \"it MUST NOT be checked out\" is ambigous\n   (noun/verb/adjective phrase or passive voice).  For clearity, what\n   about the following:\n\n   \"<DAV:must-not-be-checked-out/>: Applying LABEL to a version selector\n   MUST fail, if the DAV:checked-out property appears on that version\n   selector.\"\n\nI have tried to consistently use \"checked-out\" as an adjective and\n\"checked out\" as a verb.  In this case, I erred (I should have said\n\"checked-out\").  I'll fix that.\n\nThanks for the great detailed review!!\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-13523951"}, {"subject": "Re: Working collection", "content": "On Tue, Dec 05, 2000 at 10:05:15AM -0500, Geoffrey M. Clemm wrote:\n>...\n> Excellent.  I'll write up this working collection proposal up for\n> general review.\n\nThanks for all your efforts on the drafts!\n\nCheers,\n-g\n\n-- \nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-13554154"}, {"subject": "RE: version-selector =&gt; version-controlled-resourc", "content": "Here's another cut at a definition of version-controlled resource, taking\ninto account Geoff's comments, and trying to pare it down to the essential\nelements:\n\n\"Version-controlled resource:  The concept of the version-controlled\nresource is to allow a single URL to track a resource through the\ncheckout-modify-checkin cycle from one version to the next.  It is a\nresource with a unique URL distinct from the URLs of both its associated\nversion history and any of the versions in that version history.  At any\ngiven instant when it is in a checked-in state, it has a copy of the content\nand dead properties of one version from its associated version history.\nImmediately after it is checked out, it has a writable working copy of the\ncontent and dead properties of the version targeted when it was checked out.\nThis working copy can be modified 'in-place' with methods like PUT and\nPROPPATCH, without affecting the selected version that was checked out.  A\ncheckin changes the state of the version-controlled resource back to\n'checked-in', and creates a new version in its associated version history\nwhose content and dead properties are a copy of that of the\nversion-controlled resource at the time of checkin.\"\n\nIncidentally, I find \"version-controlled resource\" to be a bit of a mouthful\nalso (:-).  I think something like \"version handle\" would be better, since\nit's designed to be the handle by which a version is taken through the\ncheckout-modify-checkin cycle.  It shifts from object to object in the\nprocess, just as a handle might in a program.  For your consideration,\nhere's the same definition with \"version handle\" instead of VCR:\n\n\"Version handle:  The concept of the version handle is to allow a single URL\nto track a resource through the checkout-modify-checkin cycle from one\nversion to the next.  It is a resource with a unique URL distinct from the\nURLs of both its associated version history and any of the versions in that\nversion history.  At any given instant when it is in a checked-in state, it\nhas a copy of the content and dead properties of one version from its\nassociated version history.  Immediately after it is checked out, it has a\nwritable working copy of the content and dead properties of the version\ntargeted when it was checked out.  This working copy can be modified\n'in-place' with methods like PUT and PROPPATCH, without affecting the\nselected version that was checked out.  A checkin changes the state of the\nversion handle back to 'checked-in', and creates a new version in its\nassociated version history whose content and dead properties are a copy of\nthat of the version handle at the time of checkin.\"\n\n--Chuck Fay \nFileNET Corporation, 3565 Harbor Blvd., Costa Mesa, CA 92626 \nphone:  (714) 327-3513, fax:  (714) 327-5076, email:  cfay@filenet.com\n\n> -----Original Message-----\n> From: Geoffrey M. Clemm [mailto:geoffrey.clemm@rational.com]\n> Sent: Monday, December 04, 2000 8:26 PM\n> To: ietf-dav-versioning@w3.org\n> Subject: Re: version-selector => version-controlled-resource\n> \n> \n> \n> Just a couple of comments (and a change to \"version-controlled\n> resource\" :-)\n> \n>    From: \"Fay, Chuck\" <CFay@filenet.com>\n> \n>    \"Version-controlled resource: The concept of the version-controlled\n>    resource is to allow a single URL to track a resource through the\n>    checkout-modify-checkin cycle from one version to the next.  It has\n>    a unique URL distinct from the URLs of both its associated version\n>    history and the version which is its current target.\n> \n> Note that a version-controlled resource does not have a current target\n> when it is checked-out.\n> \n>    It is a\n>    resource that represents any of the saved states of a resource\n>    under version control.\n> \n> This is a correct statement, but I'd be a little concerned that folks\n> might confuse \"saved state\" with \"version\".\n> \n>    It is logically bound at any given instant\n>    to a copy of the content and dead properties of one version in the\n>    version history from which it selects,\n> \n> I'd probably avoid the term \"bound\" since it is not a binding in\n> the way we are using the term in the Binding protocol.  Probably\n> I'd just say \"when it is checked-in, it's content and dead properties\n> are a copy of those of a version in its version history\".\n> \n>    or, when the\n>    version-controlled resource is checked out, to the content and dead\n>    properties of a version-to-be in progress.\n> \n> I know what you mean, but \"version-to-be in progress\" is quite\n> a mouthful (:-).\n> \n>    On servers that support\n>    the CHECKOUT method on version-controlled resources, after a\n>    version-controlled resource has been checked out, the copy becomes\n>    a writable working copy and can be modified 'in-place' with methods\n>    like PUT and PROPPATCH, without affecting the selected version that\n>    was checked out.  On checkin, this working copy is captured as a\n>    new version in the associated version history, and the version-\n>    controlled resource is bound to the new version.\"\n> \n> I definitely don't want to say that it \"is bound to the new version\".\n> It continues to be a completely separate resource (with its own live\n> properties), even when it is checked in.  A checkin just changes the\n> state of the version-controlled resource (to be \"checked-in\"), and\n> creates a new version whose content and dead properties are a copy\n> of that of the version-controlled resource.\n> \n> Cheers,\n> Geoff\n> \n> \n> \n\n\n\n", "id": "lists-005-13561514"}, {"subject": "RE: version-selector =&gt; version-controlled-resourc", "content": "Sure by this definition rather than Versioning Handle, why not Version URL.\n\nFrom the call a spade a spade school of thought.\n\n\n\n\n\n\"Fay, Chuck\" <CFay@filenet.com> on 05-12-2000 08:51:37 PM\n\nTo:   \"Geoffrey M. Clemm\" <geoffrey.clemm@rational.com>,\n      ietf-dav-versioning@w3.org\ncc:    (bcc: David Goodenough/DGA/GB)\nSubject:  RE: version-selector => version-controlled-resource\n\n\n\n\nHere's another cut at a definition of version-controlled resource, taking\ninto account Geoff's comments, and trying to pare it down to the essential\nelements:\n\n\"Version-controlled resource:  The concept of the version-controlled\nresource is to allow a single URL to track a resource through the\ncheckout-modify-checkin cycle from one version to the next.  It is a\nresource with a unique URL distinct from the URLs of both its associated\nversion history and any of the versions in that version history.  At any\ngiven instant when it is in a checked-in state, it has a copy of the\ncontent\nand dead properties of one version from its associated version history.\nImmediately after it is checked out, it has a writable working copy of the\ncontent and dead properties of the version targeted when it was checked\nout.\nThis working copy can be modified 'in-place' with methods like PUT and\nPROPPATCH, without affecting the selected version that was checked out.  A\ncheckin changes the state of the version-controlled resource back to\n'checked-in', and creates a new version in its associated version history\nwhose content and dead properties are a copy of that of the\nversion-controlled resource at the time of checkin.\"\n\nIncidentally, I find \"version-controlled resource\" to be a bit of a\nmouthful\nalso (:-).  I think something like \"version handle\" would be better, since\nit's designed to be the handle by which a version is taken through the\ncheckout-modify-checkin cycle.  It shifts from object to object in the\nprocess, just as a handle might in a program.  For your consideration,\nhere's the same definition with \"version handle\" instead of VCR:\n\n\"Version handle:  The concept of the version handle is to allow a single\nURL\nto track a resource through the checkout-modify-checkin cycle from one\nversion to the next.  It is a resource with a unique URL distinct from the\nURLs of both its associated version history and any of the versions in that\nversion history.  At any given instant when it is in a checked-in state, it\nhas a copy of the content and dead properties of one version from its\nassociated version history.  Immediately after it is checked out, it has a\nwritable working copy of the content and dead properties of the version\ntargeted when it was checked out.  This working copy can be modified\n'in-place' with methods like PUT and PROPPATCH, without affecting the\nselected version that was checked out.  A checkin changes the state of the\nversion handle back to 'checked-in', and creates a new version in its\nassociated version history whose content and dead properties are a copy of\nthat of the version handle at the time of checkin.\"\n\n--Chuck Fay\nFileNET Corporation, 3565 Harbor Blvd., Costa Mesa, CA 92626\nphone:  (714) 327-3513, fax:  (714) 327-5076, email:  cfay@filenet.com\n\n> -----Original Message-----\n> From: Geoffrey M. Clemm [mailto:geoffrey.clemm@rational.com]\n> Sent: Monday, December 04, 2000 8:26 PM\n> To: ietf-dav-versioning@w3.org\n> Subject: Re: version-selector => version-controlled-resource\n>\n>\n>\n> Just a couple of comments (and a change to \"version-controlled\n> resource\" :-)\n>\n>    From: \"Fay, Chuck\" <CFay@filenet.com>\n>\n>    \"Version-controlled resource: The concept of the version-controlled\n>    resource is to allow a single URL to track a resource through the\n>    checkout-modify-checkin cycle from one version to the next.  It has\n>    a unique URL distinct from the URLs of both its associated version\n>    history and the version which is its current target.\n>\n> Note that a version-controlled resource does not have a current target\n> when it is checked-out.\n>\n>    It is a\n>    resource that represents any of the saved states of a resource\n>    under version control.\n>\n> This is a correct statement, but I'd be a little concerned that folks\n> might confuse \"saved state\" with \"version\".\n>\n>    It is logically bound at any given instant\n>    to a copy of the content and dead properties of one version in the\n>    version history from which it selects,\n>\n> I'd probably avoid the term \"bound\" since it is not a binding in\n> the way we are using the term in the Binding protocol.  Probably\n> I'd just say \"when it is checked-in, it's content and dead properties\n> are a copy of those of a version in its version history\".\n>\n>    or, when the\n>    version-controlled resource is checked out, to the content and dead\n>    properties of a version-to-be in progress.\n>\n> I know what you mean, but \"version-to-be in progress\" is quite\n> a mouthful (:-).\n>\n>    On servers that support\n>    the CHECKOUT method on version-controlled resources, after a\n>    version-controlled resource has been checked out, the copy becomes\n>    a writable working copy and can be modified 'in-place' with methods\n>    like PUT and PROPPATCH, without affecting the selected version that\n>    was checked out.  On checkin, this working copy is captured as a\n>    new version in the associated version history, and the version-\n>    controlled resource is bound to the new version.\"\n>\n> I definitely don't want to say that it \"is bound to the new version\".\n> It continues to be a completely separate resource (with its own live\n> properties), even when it is checked in.  A checkin just changes the\n> state of the version-controlled resource (to be \"checked-in\"), and\n> creates a new version whose content and dead properties are a copy\n> of that of the version-controlled resource.\n>\n> Cheers,\n> Geoff\n>\n>\n>\n\n\n\n", "id": "lists-005-13576250"}, {"subject": "RE: Review of draft-ietf-deltav-versioning-10.4/", "content": "> We could restructure the document into one section per option package.\n> What do others think?\n\nMy concern is that this might lead to the document not being useful as a\nreference.  For example, if all of the header definitions are spread\nthroughout the document, it is hard to find the one place where all the\nheader definitions are located. But, I can see the attraction to having\nfunctional groupings by option package. Perhaps some hybrid would work.\nAlternatively, a good index (or appendix listing all of the headers, and the\nsection that defines them) might fix the reference problem.\n\n- Jim\n\n\n\n", "id": "lists-005-13591158"}, {"subject": "RE: Review of draft-ietf-deltav-versioning-10.4/", "content": "Agree with these statements, and particularly that indexing/appendixing is\nthe way to deal with the problem.  The nice thing about separating the doc\ninto discrete \"packages\" is that it's easier to make sure each package is a\nconsistent set of features by itself, or to know what other package is\nrelied upon.\n\nLisa\n\n> -----Original Message-----\n> From: ietf-dav-versioning-request@w3.org\n> [mailto:ietf-dav-versioning-request@w3.org]On Behalf Of Jim Whitehead\n> Sent: Tuesday, December 05, 2000 3:41 PM\n> To: Geoffrey M. Clemm; ietf-dav-versioning@w3.org\n> Subject: RE: Review of draft-ietf-deltav-versioning-10.4/5\n>\n>\n> > We could restructure the document into one section per option package.\n> > What do others think?\n>\n> My concern is that this might lead to the document not being useful as a\n> reference.  For example, if all of the header definitions are spread\n> throughout the document, it is hard to find the one place where all the\n> header definitions are located. But, I can see the attraction to having\n> functional groupings by option package. Perhaps some hybrid would work.\n> Alternatively, a good index (or appendix listing all of the\n> headers, and the\n> section that defines them) might fix the reference problem.\n>\n> - Jim\n\n\n\n", "id": "lists-005-13599600"}, {"subject": "Re: Review of draft-ietf-deltav-versioning-10.4/", "content": "OK, that makes it 3 votes in favor of partitioning the doc into\ndiscrete packages, and none against.  If I have a chance, I'll give it\na try and see how it looks.  Not sure if I'll be able to get to this\nbefore I leave for San Diego though.\n\nCheers,\nGeoff\n\n   From: \"Lisa Dusseault\" <lisa@xythos.com>\n   Date: Tue, 5 Dec 2000 16:00:26 -0800\n\n   Agree with these statements, and particularly that indexing/appendixing is\n   the way to deal with the problem.  The nice thing about separating the doc\n   into discrete \"packages\" is that it's easier to make sure each package is a\n   consistent set of features by itself, or to know what other package is\n   relied upon.\n\n   Lisa\n\n   > -----Original Message-----\n   > From: ietf-dav-versioning-request@w3.org\n   > [mailto:ietf-dav-versioning-request@w3.org]On Behalf Of Jim Whitehead\n   > Sent: Tuesday, December 05, 2000 3:41 PM\n   > To: Geoffrey M. Clemm; ietf-dav-versioning@w3.org\n   > Subject: RE: Review of draft-ietf-deltav-versioning-10.4/5\n   >\n   >\n   > > We could restructure the document into one section per option package.\n   > > What do others think?\n   >\n   > My concern is that this might lead to the document not being useful as a\n   > reference.  For example, if all of the header definitions are spread\n   > throughout the document, it is hard to find the one place where all the\n   > header definitions are located. But, I can see the attraction to having\n   > functional groupings by option package. Perhaps some hybrid would work.\n   > Alternatively, a good index (or appendix listing all of the\n   > headers, and the\n   > section that defines them) might fix the reference problem.\n   >\n   > - Jim\n\n\n\n", "id": "lists-005-13609827"}, {"subject": "Re: Review of draft-ietf-deltav-versioning-10.4/", "content": "Since we're trying to take the DeltaV spec to last call shortly after the \nDec IETF working group meeting, it may be too late to split it up now. I \nsuggest we leave it alone for the working group meeting and see what the \ngroup wants to do and what effect it might have on our ability to go last \ncall.\n\n\n\n", "id": "lists-005-13619733"}, {"subject": "IETF 49 DeltaV Meeting times and location", "content": "I'd like to remind you ath the next DeltaV working group\nmeeting will be held at the 49th IETF meeting on\nDecember 14th from 1:00PM to 3:00PM. I hope to see\nmany of you there. This is an important meeting as\nwe want to take the versioning specification to\nIETF last call sometime in January. So bring your\nissues and lets get this done!\n\nAlthough all official work happens in the mailing\nlist and at the Delta-V working group meetings, it is\noften beneficial to have additional \"high bandwidth\"\ndiscussions to facilitate design discussions between\nworking group meetings.  We try to have these design\nteam meetings between and during the regularly scheduled\nIETF meetings to help make progress on our specification.\nThe next of these design team meetings will be held at\nduring IETF 49 on Wedensday. Dec 13 and Thursday, \nDec 14. The design team meetings will be held in the \nSymphony Bay 3 room of the San Diego Marriott Suites,\n701 A Street, San Diego, CA. (619)696-9800.\n\nPlease note that meeting minutes will be issued to the\nmailing list and all decisions made at the meeting are\ntentative until reviewed on mailing list. Any member of\nthe DeltaV working group is welcome to attend, but be\nprepared to get into the details!\n\n\n\n", "id": "lists-005-13627563"}, {"subject": "RE: Review of draft-ietf-deltav-versioning-10.4/", "content": "Just to make sure there is no confusion, I would not be removing anything\nfrom the current document, but rather creating a new document (called\ndeltav-versioning-core) that had the subset of the versioning protocol\nthat was mandantory.  The main impact this would have on the current\ndocument is that it would allow us to unify the terminology section\n(since there would be a separate document for folks only interested\nin \"core\").\n\nI won't have time to create this subset document before the meeting,\nso I'll create it only if we decide at the working group meeting that\nthis is the right thing to do.\n\nCheers,\nGeoff\n\n-----Original Message-----\nFrom: Jim Amsden [mailto:jamsden@us.ibm.com]\nSent: Wednesday, December 06, 2000 10:02 AM\nTo: ietf-dav-versioning@w3.org\nSubject: Re: Review of draft-ietf-deltav-versioning-10.4/5\n\n\n\nSince we're trying to take the DeltaV spec to last call shortly after the\nDec IETF working group meeting, it may be too late to split it up now. I\nsuggest we leave it alone for the working group meeting and see what the\ngroup wants to do and what effect it might have on our ability to go last\ncall. \n\n\n\n", "id": "lists-005-13635428"}, {"subject": "DAV:activity-se", "content": "Is there any way to determine the set of activities for a working\nresource as was specified in a preceding CHECKOUT?  Probably, somewhere\nin section 13, there should be a DAV:activity-set defined for working\nresources.  And in section 13.9, there should be a DAV:checkout-set\nproperty (as in section 5.1.4) defined on activity resources, right?\n\nBye,\n    Juergen\n\n\n\n", "id": "lists-005-13643895"}, {"subject": "DAVers guide to the San Diego IET", "content": "For the WebDAV afficionado, the following is the ultimate guide to WebDAV\nand DeltaV meetings being held at the San Diego IETF meeting next week.  For\nlocation, registration, and hotel information, please see:\nhttp://www.ietf.org/meetings/IETF-49.html\n\nWedensday, Dec 13\n-----------------\n\n9AM - 5PM :: DeltaV design team meeting, Symphony Bay 3,\n             San Diego Marriott Suites\n\n1PM - 3PM :: Access Control BOF meeting, location TBD,\n             look on announcement board near IETF\n             registration desk (or find Eric Sedlar,\n             Geoff Clemm, or Anne Hopkins, since they all\n             said this was an OK time, but none of them has\n             yet volunteered to post a message on the\n             announcement board. :-)\n\n3:30PM - 5:30PM :: WebDAV working group meeting,\n             Marina 5, Sheraton San Diego (IETF)\n             Agenda: http://www.ietf.org/ietf/00dec/webdav-agenda.txt\n\n\nThursday, Dec 14\n----------------\n\n9AM - 12noon :: DeltaV design team meeting, Symphony Bay 3,\n             San Diego Marriott Suites\n\n1PM - 3PM :: DeltaV working group meeting,\n             Marina 5, Sheraton San Diego (IETF)\n\n3:30PM - 5PM :: DeltaV design team meeting, Symphony Bay 3,\n             San Diego Marriott Suites\n             (It might be wise to stop by the DeltaV WG meeting\n              to make sure this one will be held).\n\nFor the latest access control draft:\nhttp://www.webdav.org/acl/\nhttp://www.webdav.org/acl/protocol/draft-ietf-webdav-acl-03.txt\n\nFor the latest DeltaV protocol draft:\nhttp://www.webdav.org/deltav/\nhttp://www.webdav.org/deltav/protocol/draft-ietf-deltav-versioning-10.7.htm\n\n\n\n", "id": "lists-005-13651534"}, {"subject": "RE: DAVers guide to the San Diego IET", "content": "Why is the DeltaV design meeting overlapping the Access Control and\nWebDAV meetings?  There are a lot of people (like Geoff and me) interested\nin both.\n\nAlso, I'm not sure that an access control BOF before the WebDAV meeting\nmakes sense, as I don't know of a lot of open issues at this point.\n\n--Eric\n\n-----Original Message-----\nFrom: ietf-dav-versioning-request@w3.org\n[mailto:ietf-dav-versioning-request@w3.org]On Behalf Of Jim Whitehead\nSent: Wednesday, December 06, 2000 5:14 PM\nTo: WebDAV WG; ietf-dav-versioning@w3.org\nSubject: DAVers guide to the San Diego IETF\n\n\nFor the WebDAV afficionado, the following is the ultimate guide to WebDAV\nand DeltaV meetings being held at the San Diego IETF meeting next week.  For\nlocation, registration, and hotel information, please see:\nhttp://www.ietf.org/meetings/IETF-49.html\n\nWedensday, Dec 13\n-----------------\n\n9AM - 5PM :: DeltaV design team meeting, Symphony Bay 3,\n             San Diego Marriott Suites\n\n1PM - 3PM :: Access Control BOF meeting, location TBD,\n             look on announcement board near IETF\n             registration desk (or find Eric Sedlar,\n             Geoff Clemm, or Anne Hopkins, since they all\n             said this was an OK time, but none of them has\n             yet volunteered to post a message on the\n             announcement board. :-)\n\n3:30PM - 5:30PM :: WebDAV working group meeting,\n             Marina 5, Sheraton San Diego (IETF)\n             Agenda: http://www.ietf.org/ietf/00dec/webdav-agenda.txt\n\n\nThursday, Dec 14\n----------------\n\n9AM - 12noon :: DeltaV design team meeting, Symphony Bay 3,\n             San Diego Marriott Suites\n\n1PM - 3PM :: DeltaV working group meeting,\n             Marina 5, Sheraton San Diego (IETF)\n\n3:30PM - 5PM :: DeltaV design team meeting, Symphony Bay 3,\n             San Diego Marriott Suites\n             (It might be wise to stop by the DeltaV WG meeting\n              to make sure this one will be held).\n\nFor the latest access control draft:\nhttp://www.webdav.org/acl/\nhttp://www.webdav.org/acl/protocol/draft-ietf-webdav-acl-03.txt\n\nFor the latest DeltaV protocol draft:\nhttp://www.webdav.org/deltav/\nhttp://www.webdav.org/deltav/protocol/draft-ietf-deltav-versioning-10.7.htm\n\n\n\n", "id": "lists-005-13661221"}, {"subject": "RE: DAVers guide to the San Diego IET", "content": "Actually, I suspect the DeltaV meeting probably won't overlap the WebDAV WG\nmeeting. Upon a closer look, there were actually no times specified in Jim\nAmsden's message announcing the DeltaV design team meetings.  I just assumed\nthey were from 9 to 5.  In the past the DeltaV design team hasn't met during\nthe WebDAV WG meeting.\n\nAs for the ACL BOF, I think a useful meeting would be to have a design\nwalkthrough of the current specification.  I'm not convinced that everyone\nhas given the latest draft a thorough examination.\n\n- Jim\n\n> -----Original Message-----\n> From: Eric Sedlar [mailto:eric.sedlar@oracle.com]\n> Sent: Wednesday, December 06, 2000 5:43 PM\n> To: Jim Whitehead; WebDAV WG; ietf-dav-versioning@w3.org\n> Subject: RE: DAVers guide to the San Diego IETF\n>\n>\n> Why is the DeltaV design meeting overlapping the Access Control and\n> WebDAV meetings?  There are a lot of people (like Geoff and me) interested\n> in both.\n>\n> Also, I'm not sure that an access control BOF before the WebDAV meeting\n> makes sense, as I don't know of a lot of open issues at this point.\n>\n> --Eric\n>\n> -----Original Message-----\n> From: ietf-dav-versioning-request@w3.org\n> [mailto:ietf-dav-versioning-request@w3.org]On Behalf Of Jim Whitehead\n> Sent: Wednesday, December 06, 2000 5:14 PM\n> To: WebDAV WG; ietf-dav-versioning@w3.org\n> Subject: DAVers guide to the San Diego IETF\n>\n>\n> For the WebDAV afficionado, the following is the ultimate guide to WebDAV\n> and DeltaV meetings being held at the San Diego IETF meeting next\n> week.  For\n> location, registration, and hotel information, please see:\n> http://www.ietf.org/meetings/IETF-49.html\n>\n> Wedensday, Dec 13\n> -----------------\n>\n> 9AM - 5PM :: DeltaV design team meeting, Symphony Bay 3,\n>              San Diego Marriott Suites\n>\n> 1PM - 3PM :: Access Control BOF meeting, location TBD,\n>              look on announcement board near IETF\n>              registration desk (or find Eric Sedlar,\n>              Geoff Clemm, or Anne Hopkins, since they all\n>              said this was an OK time, but none of them has\n>              yet volunteered to post a message on the\n>              announcement board. :-)\n>\n> 3:30PM - 5:30PM :: WebDAV working group meeting,\n>              Marina 5, Sheraton San Diego (IETF)\n>              Agenda: http://www.ietf.org/ietf/00dec/webdav-agenda.txt\n>\n>\n> Thursday, Dec 14\n> ----------------\n>\n> 9AM - 12noon :: DeltaV design team meeting, Symphony Bay 3,\n>              San Diego Marriott Suites\n>\n> 1PM - 3PM :: DeltaV working group meeting,\n>              Marina 5, Sheraton San Diego (IETF)\n>\n> 3:30PM - 5PM :: DeltaV design team meeting, Symphony Bay 3,\n>              San Diego Marriott Suites\n>              (It might be wise to stop by the DeltaV WG meeting\n>               to make sure this one will be held).\n>\n> For the latest access control draft:\n> http://www.webdav.org/acl/\n> http://www.webdav.org/acl/protocol/draft-ietf-webdav-acl-03.txt\n>\n> For the latest DeltaV protocol draft:\n> http://www.webdav.org/deltav/\n> http://www.webdav.org/deltav/protocol/draft-ietf-deltav-versioning\n-10.7.htm\n\n\n\n", "id": "lists-005-13672639"}, {"subject": "RE: DAVers guide to the San Diego IET", "content": "Yes, the DeltaV meeting will definitely not overlap the WebDAV WG,\nso the Wed DeltaV meeting will be 9-3:15 rather than 9-5:00.\nBTW, I definitely will be at the 3:30-5pm DeltaV design meeting\non Thursday, so there will be at least one person there (:-).\n\nI agree with Eric that since there are no open issues with the ACL\ndraft, that a ACL BOF is not needed (we can walk through the ACL\nprotocol in the WebDAV WG time slot ... it's a very short protocol).\nEspecially with DeltaV going to last call, I personally would\nrather put that time into DeltaV.\n\nSo I propose we not have an ACL BOF on Wed.\n\nCheers,\nGeoff\n\n-----Original Message-----\nFrom: Jim Whitehead [mailto:ejw@cse.ucsc.edu]\nSent: Wednesday, December 06, 2000 8:50 PM\nTo: WebDAV WG; ietf-dav-versioning@w3.org\nSubject: RE: DAVers guide to the San Diego IETF\n\n\nActually, I suspect the DeltaV meeting probably won't overlap the WebDAV WG\nmeeting. Upon a closer look, there were actually no times specified in Jim\nAmsden's message announcing the DeltaV design team meetings.  I just assumed\nthey were from 9 to 5.  In the past the DeltaV design team hasn't met during\nthe WebDAV WG meeting.\n\nAs for the ACL BOF, I think a useful meeting would be to have a design\nwalkthrough of the current specification.  I'm not convinced that everyone\nhas given the latest draft a thorough examination.\n\n- Jim\n\n> -----Original Message-----\n> From: Eric Sedlar [mailto:eric.sedlar@oracle.com]\n> Sent: Wednesday, December 06, 2000 5:43 PM\n> To: Jim Whitehead; WebDAV WG; ietf-dav-versioning@w3.org\n> Subject: RE: DAVers guide to the San Diego IETF\n>\n>\n> Why is the DeltaV design meeting overlapping the Access Control and\n> WebDAV meetings?  There are a lot of people (like Geoff and me) interested\n> in both.\n>\n> Also, I'm not sure that an access control BOF before the WebDAV meeting\n> makes sense, as I don't know of a lot of open issues at this point.\n>\n> --Eric\n>\n> -----Original Message-----\n> From: ietf-dav-versioning-request@w3.org\n> [mailto:ietf-dav-versioning-request@w3.org]On Behalf Of Jim Whitehead\n> Sent: Wednesday, December 06, 2000 5:14 PM\n> To: WebDAV WG; ietf-dav-versioning@w3.org\n> Subject: DAVers guide to the San Diego IETF\n>\n>\n> For the WebDAV afficionado, the following is the ultimate guide to WebDAV\n> and DeltaV meetings being held at the San Diego IETF meeting next\n> week.  For\n> location, registration, and hotel information, please see:\n> http://www.ietf.org/meetings/IETF-49.html\n>\n> Wedensday, Dec 13\n> -----------------\n>\n> 9AM - 5PM :: DeltaV design team meeting, Symphony Bay 3,\n>              San Diego Marriott Suites\n>\n> 1PM - 3PM :: Access Control BOF meeting, location TBD,\n>              look on announcement board near IETF\n>              registration desk (or find Eric Sedlar,\n>              Geoff Clemm, or Anne Hopkins, since they all\n>              said this was an OK time, but none of them has\n>              yet volunteered to post a message on the\n>              announcement board. :-)\n>\n> 3:30PM - 5:30PM :: WebDAV working group meeting,\n>              Marina 5, Sheraton San Diego (IETF)\n>              Agenda: http://www.ietf.org/ietf/00dec/webdav-agenda.txt\n>\n>\n> Thursday, Dec 14\n> ----------------\n>\n> 9AM - 12noon :: DeltaV design team meeting, Symphony Bay 3,\n>              San Diego Marriott Suites\n>\n> 1PM - 3PM :: DeltaV working group meeting,\n>              Marina 5, Sheraton San Diego (IETF)\n>\n> 3:30PM - 5PM :: DeltaV design team meeting, Symphony Bay 3,\n>              San Diego Marriott Suites\n>              (It might be wise to stop by the DeltaV WG meeting\n>               to make sure this one will be held).\n>\n> For the latest access control draft:\n> http://www.webdav.org/acl/\n> http://www.webdav.org/acl/protocol/draft-ietf-webdav-acl-03.txt\n>\n> For the latest DeltaV protocol draft:\n> http://www.webdav.org/deltav/\n> http://www.webdav.org/deltav/protocol/draft-ietf-deltav-versioning\n-10.7.htm\n\n\n\n", "id": "lists-005-13685005"}, {"subject": "RE: DAVers guide to the San Diego IET", "content": "We can recess the design team meeting for all working group meetings and \nthe ACL BOF. B.T.W., ACLs had a BOF a couple of years ago. Shouldn't this \nwork be done in a working group by now?\n\n\n\n\nWhy is the DeltaV design meeting overlapping the Access Control and\nWebDAV meetings?  There are a lot of people (like Geoff and me) interested\nin both.\n\nAlso, I'm not sure that an access control BOF before the WebDAV meeting\nmakes sense, as I don't know of a lot of open issues at this point.\n\n--Eric\n\n-----Original Message-----\nFrom: ietf-dav-versioning-request@w3.org\n[mailto:ietf-dav-versioning-request@w3.org]On Behalf Of Jim Whitehead\nSent: Wednesday, December 06, 2000 5:14 PM\nTo: WebDAV WG; ietf-dav-versioning@w3.org\nSubject: DAVers guide to the San Diego IETF\n\n\nFor the WebDAV afficionado, the following is the ultimate guide to WebDAV\nand DeltaV meetings being held at the San Diego IETF meeting next week. \nFor\nlocation, registration, and hotel information, please see:\nhttp://www.ietf.org/meetings/IETF-49.html\n\nWedensday, Dec 13\n-----------------\n\n9AM - 5PM :: DeltaV design team meeting, Symphony Bay 3,\n             San Diego Marriott Suites\n\n1PM - 3PM :: Access Control BOF meeting, location TBD,\n             look on announcement board near IETF\n             registration desk (or find Eric Sedlar,\n             Geoff Clemm, or Anne Hopkins, since they all\n             said this was an OK time, but none of them has\n             yet volunteered to post a message on the\n             announcement board. :-)\n\n3:30PM - 5:30PM :: WebDAV working group meeting,\n             Marina 5, Sheraton San Diego (IETF)\n             Agenda: http://www.ietf.org/ietf/00dec/webdav-agenda.txt\n\n\nThursday, Dec 14\n----------------\n\n9AM - 12noon :: DeltaV design team meeting, Symphony Bay 3,\n             San Diego Marriott Suites\n\n1PM - 3PM :: DeltaV working group meeting,\n             Marina 5, Sheraton San Diego (IETF)\n\n3:30PM - 5PM :: DeltaV design team meeting, Symphony Bay 3,\n             San Diego Marriott Suites\n             (It might be wise to stop by the DeltaV WG meeting\n              to make sure this one will be held).\n\nFor the latest access control draft:\nhttp://www.webdav.org/acl/\nhttp://www.webdav.org/acl/protocol/draft-ietf-webdav-acl-03.txt\n\nFor the latest DeltaV protocol draft:\nhttp://www.webdav.org/deltav/\nhttp://www.webdav.org/deltav/protocol/draft-ietf-deltav-versioning-10.7.htm\n\n\n\n", "id": "lists-005-13698547"}, {"subject": "RE: DAVers guide to the San Diego IET", "content": "The ACL work is being done in a working group meeting ...\nthe WebDAV working group meeting (:-). (The ACL spec is a WebDAV\nworking group document).\n\nJimW's use of the word \"BOF\" was misleading here.  The Wed 1-3\nmeeting would be better described as a \"WebDAV working group\nACL design meeting\". \n\nCheers,\nGeoff\n\n-----Original Message-----\nFrom: Jim Amsden [mailto:jamsden@us.ibm.com]\nSent: Thursday, December 07, 2000 9:59 AM\nTo: ietf-dav-versioning@w3.org; w3c-dist-auth@w3c.org\nSubject: RE: DAVers guide to the San Diego IETF\n\n\nWe can recess the design team meeting for all working group meetings and\nthe ACL BOF. B.T.W., ACLs had a BOF a couple of years ago. Shouldn't this\nwork be done in a working group by now?\n\n\n\n\nWhy is the DeltaV design meeting overlapping the Access Control and\nWebDAV meetings?  There are a lot of people (like Geoff and me) interested\nin both.\n\nAlso, I'm not sure that an access control BOF before the WebDAV meeting\nmakes sense, as I don't know of a lot of open issues at this point.\n\n--Eric\n\n-----Original Message-----\nFrom: ietf-dav-versioning-request@w3.org\n[mailto:ietf-dav-versioning-request@w3.org]On Behalf Of Jim Whitehead\nSent: Wednesday, December 06, 2000 5:14 PM\nTo: WebDAV WG; ietf-dav-versioning@w3.org\nSubject: DAVers guide to the San Diego IETF\n\n\nFor the WebDAV afficionado, the following is the ultimate guide to WebDAV\nand DeltaV meetings being held at the San Diego IETF meeting next week.\nFor\nlocation, registration, and hotel information, please see:\nhttp://www.ietf.org/meetings/IETF-49.html\n\nWedensday, Dec 13\n-----------------\n\n9AM - 5PM :: DeltaV design team meeting, Symphony Bay 3,\n             San Diego Marriott Suites\n\n1PM - 3PM :: Access Control BOF meeting, location TBD,\n             look on announcement board near IETF\n             registration desk (or find Eric Sedlar,\n             Geoff Clemm, or Anne Hopkins, since they all\n             said this was an OK time, but none of them has\n             yet volunteered to post a message on the\n             announcement board. :-)\n\n3:30PM - 5:30PM :: WebDAV working group meeting,\n             Marina 5, Sheraton San Diego (IETF)\n             Agenda: http://www.ietf.org/ietf/00dec/webdav-agenda.txt\n\n\nThursday, Dec 14\n----------------\n\n9AM - 12noon :: DeltaV design team meeting, Symphony Bay 3,\n             San Diego Marriott Suites\n\n1PM - 3PM :: DeltaV working group meeting,\n             Marina 5, Sheraton San Diego (IETF)\n\n3:30PM - 5PM :: DeltaV design team meeting, Symphony Bay 3,\n             San Diego Marriott Suites\n             (It might be wise to stop by the DeltaV WG meeting\n              to make sure this one will be held).\n\nFor the latest access control draft:\nhttp://www.webdav.org/acl/\nhttp://www.webdav.org/acl/protocol/draft-ietf-webdav-acl-03.txt\n\nFor the latest DeltaV protocol draft:\nhttp://www.webdav.org/deltav/\nhttp://www.webdav.org/deltav/protocol/draft-ietf-deltav-versioning-10.7.htm\n\n\n\n", "id": "lists-005-13709627"}, {"subject": "comments on deltav-10.5 from Yaron Goland, Act On", "content": "Yaron has reviewed the core versioning parts of the protocol and had\nthe following set of comments.  His current work responsibilities did\nnot provide enough time for him to produce an email review, but as he\nwas a co-author of RFC-2518, I particularly wanted his feedback, so I\ncalled him to get his comments, and agreed to post them to the mailing\nlist.  Note that this will be my interpretation of Yaron's points, so\nif I misunderstood or misrepresent them, Yaron will try to follow-up\nhimself.\n\nOK, enough prologue ... on with the show.  In Act I, we have the\npoints that I agree with and that I believe will be\nnon-controversial. I propose that I just make these suggested change\nunless someone disagrees.\n\nIn Act II (a separate message), I'll enumerate the changes that either\nI agree with or don't care, but which I think might be controversial.\nIf you only have time to review Act I or Act II, Act II is probably\nmore interesting.\n\nIn the final Act (another separate message), I'll enumerate the\nchanges that I do not agree with, but which Yaron would like to\npropose.  It's not clear yet whether there is anything in Act III\n... I haven't thought through all of Yaron's suggestions.\n\n\n------- Act I --------------\n\n(I.1) Get rid of DAV:must-support attribute, and instead define tokens\n      for use in an If header.\n\n(I.2) Add an intermediate node above any list of property names in a\n      report request or response, so that the report can be extended\n      with additional XML markup.\n\n(I.3) Add an \"unknown\" value for checkin-date.\n\n(I.4) Require that the 403/409 response body token appear as the top\n      level element \"unless explicitly negotiated otherwise\", so that\n      clients get predictable behavior, but later specs can allow\n      clients to request other behavior.\n\n(I.5) Need to define the precondition for when cannot place a resource\n      at this place. (one per resource type).\n\n(I.6) Have an example show additional elements in request body being\n      ignored by the request.\n\n(I.7) Add a response body to VERSION-CONTROL, so that can indicate whether\n      it is a no-op or not.  <DAV:already-under-control/>\n\n(I.8) Whenever a statement of the form \"the xxx specified in the yyy\n      element\" refers to an element in the request body, it should\n      explicitly say \"the xxx specified in the yyy element in the\n      request body\".\n\n(I.9) Indicate which live properties are controlled by a lock.\n\n\n\n", "id": "lists-005-13721627"}, {"subject": "comments on deltav-10.5 from Yaron Goland, Act Tw", "content": "These are the comments that I think may be more controversial.\n\n\n(II.1) F and T should be false and true to allign the direction of the\n       XML Schema look of allignment with XML schema wherever we can\n       (at least by value).\n\n(II.2) Require the value of DAV:comment to be XML, for internationalization.\n\n(II.3) Don't constrain the value of DAV:creator-displayname to be a string.\n\n(II.4) Require version-name to be XML, for internationalization.\n\n(II.5) Move all DAV:supported-xxx properties to the OPTIONS response.\n       Move all DAV:xxx-collection-set properties to the OPTIONS\n       response.\n\n(II.6) Require that a version URL never be re-used after a version is\n       deleted.\n\n(II.7) Add tokens for If header that check whether specific\n       checkout/checkin forking behavior is supported by the server.\n\n(II.8) Allow \"ancestor\", \"descendant\", (or both), and \"all\" as options\n       to the DAV:version-tree report.\n\n(II.9) Require that a PUT to a locked auto-versioned resource be just\n       CHECKOUT/update (i.e. omit the CHECKIN).  Then have an UNLOCK\n       of an auto-checked-out versioned resource be a CHECKIN.\n\n\n\n", "id": "lists-005-13731374"}, {"subject": "DAVers guide to the San Diego IETF v.", "content": "For the WebDAV afficionado, the following *really* is the ultimate guide \nto WebDAV and DeltaV meetings being held at the San Diego IETF meeting \nnext week.  For location, registration, and hotel information, please \nsee: http://www.ietf.org/meetings/IETF-49.html\n\nNote that the ACL BOF meeting has been canceled, due to lack of interest,\nand the DeltaV working group meeting has been moved to its correct time,\n3:30 - 5:30 on Thursday.\n\nWedensday, Dec 13\n-----------------\n\n9AM - 3PM :: DeltaV design team meeting, Symphony Bay 3,\n             San Diego Marriott Suites\n\n*** Note ACL BOF has been canceled ***\n\n3:30PM - 5:30PM :: WebDAV working group meeting,\n             Marina 5, Sheraton San Diego (IETF)\n             Agenda: http://www.ietf.org/ietf/00dec/webdav-agenda.txt\n\n\nThursday, Dec 14\n----------------\n\n9AM - 3PM :: DeltaV design team meeting, Symphony Bay 3,\n             San Diego Marriott Suites\n\n3:30PM - 5:30PM :: DeltaV working group meeting,\n             Marina 5, Sheraton San Deigo (IETF)\n             *** Note this is a different time from \n                 the v.1 DAVers guide ***\n\nFor the latest access control draft:\nhttp://www.webdav.org/acl/\nhttp://www.webdav.org/acl/protocol/draft-ietf-webdav-acl-03.txt\n\nFor the latest DeltaV protocol draft:\nhttp://www.webdav.org/deltav/\nhttp://www.webdav.org/deltav/protocol/draft-ietf-deltav-versioning-10.7.htm\n\n\n\n", "id": "lists-005-13740331"}, {"subject": "Re: Activity CHECKIN (was: Versioning TeleConf Agenda ...", "content": "On Tue, Dec 05, 2000 at 10:23:26AM -0500, Geoffrey M. Clemm wrote:\n>...\n>    From: Greg Stein <gstein@lyra.org>\n> \n>    On Sat, Dec 02, 2000 at 08:22:58AM -0500, Geoffrey M. Clemm wrote:\n> \n>    > When you CHECKIN the first member of an activity, the version number\n>    > can be assigned (to the activity).  Subsequent CHECKIN's against that\n>    > activity get the same version number.\n> \n>    Nope. If you get a conflict partway through, then the \"assigned number\" is\n>    incorrect. The number can only be assigned once the full change set has been\n>    comitted (they are sequential).\n> \n>    Consider: Joe begins the CHECKIN on the resources and the server gave him\n>    version number 7. Nancy begins her checkin and the server gives her 8.\n>    Oops... Joe's checkin has failed. Now what?\n> \n> Why can't Joe's subsequent checkin's (against his #7 activity) be marked\n> as being part of version #7, i.e. what harm would it do to have the\n> partial change set #7 be completed at a future time?\n\nBecause the repository does not provide for partial checkin of change sets.\n\n>    You've got all kinds of race conditions and stuff going in there to try and\n>    deal with the problem. Sure, the server knows all of the files that Joe is\n>    going to checkin (through examination of the activity), but it can't do\n>    anything about it until all the files are checked in. Does it say \"well,\n>    there is a v7 for this file, but I can't give it to you right now.\"\n> \n> Sounds reasonable.  Where would this cause a problem?\n\nLet's say that Joe has foo.c checked out and it has a working resource as\npart of the activity -- due for checkin. That checkin will be v7. The server\nassigns v7 to Joe and waits for the individual checkins to arrive.\n\nJane comes along and wants to check in an update to foo.c also. She had v6\nand the server goes \"you can't check in your changes. you can only check in\nrelative to the latest (v7).\" But Jane can't get the latest.\n\n>    What if\n>    Joe never comes back? Nancy should have got v7 in that case.\n> \n> Why does Nancy care whether she gets the string \"v7\" or the string\n> \"v8\" to identify her change set?\n\nI don't care what Nancy gets. I care that both v7 and v8 exist in the\nrepository.\n\n> If you're going to support branching,\n> you're going to have people getting non-sequential numbers anyway\n> (i.e. I'm based on version v7 but my next version I create will be\n> v11 because v8, v9, and v10 have been created on another branch).\n> And even if you're not supporting branching, why would Nancy care?\n\nNancy doesn't. The repository does.\n\n[ you are otherwise correct on the non-sequential numbers for deltas on a\n  particular file. the file could be the same for v1..10 and then change in\n  version v11. ]\n\n>    Oh, and what\n>    happens with rollback for Joe's failed checkin?\n> \n> What are you rolling back?  The checkin's that succeeded have created new\n> versions (which stay) and the checkin's that failed still are checked-out\n> resources.  Or do you mean, if you decide just to cancel the whole activity?\n> Just leave it \"uncompleted\" (you often end up wanting to look at partial\n> work like this), or delete those versions if you want to recover space.\n\nI mean rolling back the entire checkin/activity. As I mentioned, we cannot\nhave partial checkins in the repository.\n\n>    Or is that first resource\n>    supposed to fail on checkin because some *other* resource in the activity is\n>    going to fail in the future.\n> \n> If each checkin can succeed or fail independently, there's no need\n> to have the checkin of one resource depend on the success or failure\n> of the checkin of another resource.\n\nThe point is that all the checkins in an activity must succeed or fail in\ntotal. So they are /not/ independent. And since they aren't independent,\nHTTP's stateless nature creates problems if you attempt to check them in\npiecemeal.\n\n>    > Why not allow intermediate states of that\n>    > change set to be manifested on the server?\n> \n>    Because the whole shebang is transacted. You either have a change set, or\n>    you don't. You don't get a version number until the change set is committed.\n>    There is no way to do a partial change set.\n> \n> I understand that is the way you're implementing it, but I'm wondering\n> why you implemented it that way.\n\nBecause that is how we implemented it. That is enough for this forum. Unless\nyou are going to try and say that a transacted change is not in scope for\nthe DeltaV protocol.\n\nCheers,\n-g\n\n-- \nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-13748944"}, {"subject": "Re: Review of draft-ietf-deltav-versioning-10.4/", "content": "On Wed, Dec 06, 2000 at 10:01:46AM -0500, Jim Amsden wrote:\n> Since we're trying to take the DeltaV spec to last call shortly after the \n> Dec IETF working group meeting, it may be too late to split it up now. I \n> suggest we leave it alone for the working group meeting and see what the \n> group wants to do and what effect it might have on our ability to go last \n> call.\n\n\"what the group wants to do\" ... I think this has been pretty clear: split\nthe doc into core and optional/advanced.\n\nThe working group meeting isn't going to change that since it isn't\nauthoritative. This list is, and that has been the consensual decision so\nfar.\n\nCheers,\n-g\n\n-- \nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-13761203"}, {"subject": "Re: Review of draft-ietf-deltav-versioning-10.4/", "content": "On Tue, Dec 05, 2000 at 02:35:49PM -0500, Geoffrey M. Clemm wrote:\n>        From: Juergen Reuter [mailto:reuterj@ira.uka.de]\n>...\n>    Section 7.2: OPTIONS\n>    - ------------------\n>    > If the server supports checking out a version selector\n> \n>    i.e. checking out a version selector is an optional feature and should\n>    be moved to Optional WebDAV Versioning?\n> \n> We're currently addressing this in a separate thread.  My proposal\n> is that support for checking out a version-controlled resource be\n> mandantory (since it is easy for both client-workspace and server-workspace\n> servers to implement).\n>...\n>    Section 9.2: CHECKOUT\n>    - -------------------\n>    > A versioning server MUST support either version selector CHECKOUT or\n>    > version CHECKOUT, and MAY support both.\n> \n>    These two concepts should be explained somewhere (e.g. in the terms\n>    section or in the introductory section).  As far as I understand,\n>    version selector CHECKOUT is appropriate only when a single user\n>    accesses a versioned resource?  And as soon as two or more users want\n>    to access it, you need working resources and hence have to apply\n>    version CHECKOUT?  If so, this should be somewhere explained (e.g. as\n>    rationale or concepts, for example in the introduction).\n> \n> I agree that these variants need to be better explained and contrasted.\n> \n> I believe that we should break this up into three categories:\n> public checkouts (in place checkouts, must be supported)\n> client workspaces (working resources, optional)\n> server workspaces (server side workspaces, optional).\n\nAgain: I disagree with this position. Especially now that you're trying to\nattach a \"mandatory\" condition onto it.\n\nWhat *should* be mandatory is that the client obeys the Location: header if\nthe server returns one on a CHECKOUT.\n\nThis automatically provides for both \"public checkouts\" and \"client\nworkspaces\" (to use your terms). If the server does not return a Location,\nthen you have a \"public checkout.\" If the server returns a Location pointing\nat a working resource, then you have a \"client workspace.\"\n\nThis also satisfies your assumption that it is \"easy.\" I'll tell you right\nnow that a public checkout is NOT easy for me (i.e. you're assuming too\nmuch). Returning a Location header is cake.\n\nWhy do you suggest that a client should ignore a returned Location header?\n\nServer workspaces are set up by the client manually, and that support is\ndetectable through OPTIONS.\n\nCheers,\n-g\n\n-- \nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-13769311"}, {"subject": "Re: Simplifying CHECKOUT behavior for core versioning client", "content": "On Tue, Dec 05, 2000 at 11:26:46AM -0500, Geoffrey M. Clemm wrote:\n> \n> The current protocol assumes that there are two kinds of clients:\n> - clients that have no local persistent state\n> - clients that have local persistent state\n\nah... important clarification. Now I understand where you are going with\nthis stuff.\n\nOkay... I hereby retract most of my objections in this topic area :-)\n\nBut: I still would like to have a way to somehow tell a client \"I don't\nsupport public checkouts.\" In other words, the only model supported is the\n\"client workspace\" -- I need the client to remember the Location returned\nfrom a CHECKOUT.\n\n[ concretely: I'd support working resources, but not checked-out version\n  selectors ]\n\nCheers,\n-g\n\n-- \nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-13779667"}, {"subject": "version 10.8 of draft-ietf-deltav-versioning availabl", "content": "I did a pass through the protocol, grouping the optional protocol extensions\ninto the 6 buckets defined in the last call version (instead of having\neverything lumped into an \"optional\" section).\n\nIt's still a bit rough (cut/paste is still in evidence :-), but it\nshould give you an idea of what this new format should look like.\nPersonally, I think it has the potential of making the optional\nfunctionality significantly more understandable.  Let me know what\nyou think.  (I figure everyone will be downloading this weekend and\nreading it on the plane over, so I wanted to make a working draft\navailable now, rather than waiting for it to get more polished).\n\nUnfortunately, I haven't had time to get \"working collections\" written\nup, but it's next (:-).\n\n\nhttp://www.webdav.org/deltav/protocol/draft-ietf-deltav-versioning-10.8.htm\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-13787771"}, {"subject": "version 10.9 of draft-ietf-deltav-versioning availabl", "content": "I did a bit more cleanup on the repartioning of the optional section.\nSo don't reread if you've already started on the 10.8 version, but if\nyou haven't started yet, the 10.9 version is a bit cleaner.\n\n(Still  no \"working collections\" writeup yet :-).\n\nhttp://www.webdav.org/deltav/protocol/draft-ietf-deltav-versioning-10.9.htm\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-13795294"}, {"subject": "RE: comments on deltav-10.5 from Yaron Goland, Act Tw", "content": "Can somebody clarify what this would mean:\n\n> -----Original Message-----\n> From: ietf-dav-versioning-request@w3.org On Behalf Of Geoffrey M.\n> Clemm\n> Subject: comments on deltav-10.5 from Yaron Goland, Act Two\n>\n> These are the comments that I think may be more controversial.\n> ...\n> (II.6) Require that a version URL never be re-used after a version is\n>        deleted.\n\nWhether or not I agree with this, I find the phrase \"version URL\" to be\nambiguous enough that I'm not certain what this comment is supposed to mean,\nso I'll start with an example:\n - foo.doc is created\n - foo.doc is made versioned and \"foo.doc.__v1__\" is defined as the relative\nversion URL\n - All of foo.doc is deleted\n - foo.doc is created\n - foo.doc is made versioned, NOW, according to this suggestion, the current\nversion CANNOT be called foo.doc.__v1__ therefore is called foo.doc.__v2__\n\nIs that the intent?  if so, I'd have to disagree with this; although it\nmight be desirable for a server to avoid ever having a version URL re-used,\nit ought not to be part of the standard.  I don't actually think it's\nrelative to the standard, although it may be very relative to good server\ndesign.\n\nlisa\n\n\n\n", "id": "lists-005-13802363"}, {"subject": "RE: comments on deltav-10.5 from Yaron Goland, Act Tw", "content": "The term \"version URL\" simply means a URL that identifies a version.  In\nyour example I'm not sure what you mean by \"relative URL\".\n\nServers may support deleting individual versions (as well as the entire\nversioned resource).  It would be undesirable for servers to reuse version\nURLs since they represent a 'stable' reference to a particular state of the\nresource, and may be used as such by other persistent resources.  Clearly\nif the server reuses a URL that would be a bad thing in such circumstances.\n\nTim\n\n\n\"Lisa Dusseault\" <lisa@xythos.com> on 2000-12-12 08:56:57 PM\n\nPlease respond to \"Lisa Dusseault\" <lisa@xythos.com>\n\nTo:   \"Geoffrey M. Clemm\" <geoffrey.clemm@rational.com>,\n      ietf-dav-versioning@w3.org\ncc:\nSubject:  RE: comments on deltav-10.5 from Yaron Goland, Act Two\n\n\n\n\nCan somebody clarify what this would mean:\n\n> -----Original Message-----\n> From: ietf-dav-versioning-request@w3.org On Behalf Of Geoffrey M.\n> Clemm\n> Subject: comments on deltav-10.5 from Yaron Goland, Act Two\n>\n> These are the comments that I think may be more controversial.\n> ...\n> (II.6) Require that a version URL never be re-used after a version is\n>        deleted.\n\nWhether or not I agree with this, I find the phrase \"version URL\" to be\nambiguous enough that I'm not certain what this comment is supposed to\nmean,\nso I'll start with an example:\n - foo.doc is created\n - foo.doc is made versioned and \"foo.doc.__v1__\" is defined as the\nrelative\nversion URL\n - All of foo.doc is deleted\n - foo.doc is created\n - foo.doc is made versioned, NOW, according to this suggestion, the\ncurrent\nversion CANNOT be called foo.doc.__v1__ therefore is called foo.doc.__v2__\n\nIs that the intent?  if so, I'd have to disagree with this; although it\nmight be desirable for a server to avoid ever having a version URL re-used,\nit ought not to be part of the standard.  I don't actually think it's\nrelative to the standard, although it may be very relative to good server\ndesign.\n\nlisa\n\n\n\n", "id": "lists-005-13811581"}, {"subject": "Re: II.6, non-reusable version URLs (was: comments on deltav-10.5  from Yaron Goland, Act Two", "content": "Note that a server can implement non-reusable version URL's\nfairly easily by extending the version URL with a GUID (such\nas would be used for a lock token).  The non-GUID part of the\nURL would be used to locate the resource and the GUID part of\nthe URL would be stored as an implementation attribute on the resource.\nIf the resource currently located at the non-GUID part of the URL\ndoes not have the GUID part of the URL, then the server would return\na 404 on access to that URL.\n\nThe benefit to the client (as Tim describes below) is significant\nenough to warrant serious consideration for adding it to the protocol.\n\nLisa: does your server currently use GUID's for any other purpose\n(such as locking), and if so, would it be a problem to use them\nhere?\n\nCheers,\nGeoff\n\n-----Original Message-----\nFrom: Tim_Ellison@uk.ibm.com [mailto:Tim_Ellison@uk.ibm.com]\n\nThe term \"version URL\" simply means a URL that identifies a version.  In\nyour example I'm not sure what you mean by \"relative URL\".\n\nServers may support deleting individual versions (as well as the entire\nversioned resource).  It would be undesirable for servers to reuse version\nURLs since they represent a 'stable' reference to a particular state of the\nresource, and may be used as such by other persistent resources.  Clearly\nif the server reuses a URL that would be a bad thing in such circumstances.\n\nTim\n\n\n\"Lisa Dusseault\" <lisa@xythos.com> on 2000-12-12 08:56:57 PM\n\n\nCan somebody clarify what this would mean:\n\n> -----Original Message-----\n> From: ietf-dav-versioning-request@w3.org On Behalf Of Geoffrey M.\n> ...\n> (II.6) Require that a version URL never be re-used after a version is\n>        deleted.\n\nWhether or not I agree with this, I find the phrase \"version URL\" to be\nambiguous enough that I'm not certain what this comment is supposed to\nmean,\nso I'll start with an example:\n - foo.doc is created\n - foo.doc is made versioned and \"foo.doc.__v1__\" is defined as the\nrelative\nversion URL\n - All of foo.doc is deleted\n - foo.doc is created\n - foo.doc is made versioned, NOW, according to this suggestion, the\ncurrent\nversion CANNOT be called foo.doc.__v1__ therefore is called foo.doc.__v2__\n\nIs that the intent?  if so, I'd have to disagree with this; although it\nmight be desirable for a server to avoid ever having a version URL re-used,\nit ought not to be part of the standard.  I don't actually think it's\nrelative to the standard, although it may be very relative to good server\ndesign.\n\nlisa\n\n\n\n", "id": "lists-005-13822641"}, {"subject": "RE: II.6, non-reusable version URLs (was: comments on deltav-10.5  from Yaron Goland, Act Two", "content": "It would be easy code-wise to use GUIDs in creating version URLs.  However\nthat's not the issue.  I'm not arguing whether this can be implemented\neasily; it certainly can be.  I'm arguing whether it needs to be part of the\nprotocol specification.  Does it have any bearing on the protocol standard\nwhether or not a server reuses version URLs?  I think not.  Leave decisions\nup to the implementors when they do not affect interoperability.  Or, give\nme an argument why interoperability _suffers_ if the server reuses version\nURLs.\n\nlisa\n\n\n> -----Original Message-----\n> From: ietf-dav-versioning-request@w3.org\n> [mailto:ietf-dav-versioning-request@w3.org]On Behalf Of Clemm, Geoff\n> Sent: Tuesday, December 12, 2000 4:08 PM\n> To: ietf-dav-versioning@w3.org\n> Subject: Re: II.6, non-reusable version URLs (was: comments on\n> deltav-10.5 from Yaron Goland, Act Two)\n>\n>\n> Note that a server can implement non-reusable version URL's\n> fairly easily by extending the version URL with a GUID (such\n> as would be used for a lock token).  The non-GUID part of the\n> URL would be used to locate the resource and the GUID part of\n> the URL would be stored as an implementation attribute on the resource.\n> If the resource currently located at the non-GUID part of the URL\n> does not have the GUID part of the URL, then the server would return\n> a 404 on access to that URL.\n>\n> The benefit to the client (as Tim describes below) is significant\n> enough to warrant serious consideration for adding it to the protocol.\n>\n> Lisa: does your server currently use GUID's for any other purpose\n> (such as locking), and if so, would it be a problem to use them\n> here?\n>\n> Cheers,\n> Geoff\n>\n> -----Original Message-----\n> From: Tim_Ellison@uk.ibm.com [mailto:Tim_Ellison@uk.ibm.com]\n>\n> The term \"version URL\" simply means a URL that identifies a version.  In\n> your example I'm not sure what you mean by \"relative URL\".\n>\n> Servers may support deleting individual versions (as well as the entire\n> versioned resource).  It would be undesirable for servers to reuse version\n> URLs since they represent a 'stable' reference to a particular\n> state of the\n> resource, and may be used as such by other persistent resources.  Clearly\n> if the server reuses a URL that would be a bad thing in such\n> circumstances.\n>\n> Tim\n>\n>\n> \"Lisa Dusseault\" <lisa@xythos.com> on 2000-12-12 08:56:57 PM\n>\n>\n> Can somebody clarify what this would mean:\n>\n> > -----Original Message-----\n> > From: ietf-dav-versioning-request@w3.org On Behalf Of Geoffrey M.\n> > ...\n> > (II.6) Require that a version URL never be re-used after a version is\n> >        deleted.\n>\n> Whether or not I agree with this, I find the phrase \"version URL\" to be\n> ambiguous enough that I'm not certain what this comment is supposed to\n> mean,\n> so I'll start with an example:\n>  - foo.doc is created\n>  - foo.doc is made versioned and \"foo.doc.__v1__\" is defined as the\n> relative\n> version URL\n>  - All of foo.doc is deleted\n>  - foo.doc is created\n>  - foo.doc is made versioned, NOW, according to this suggestion, the\n> current\n> version CANNOT be called foo.doc.__v1__ therefore is called foo.doc.__v2__\n>\n> Is that the intent?  if so, I'd have to disagree with this; although it\n> might be desirable for a server to avoid ever having a version\n> URL re-used,\n> it ought not to be part of the standard.  I don't actually think it's\n> relative to the standard, although it may be very relative to good server\n> design.\n>\n> lisa\n\n\n\n", "id": "lists-005-13834452"}, {"subject": "RE: II.6, non-reusable version URLs (was: comments on deltav-10.5   from Yaron Goland, Act Two", "content": "A client will often care (very much) about whether it can store a\nURL somewhere (in a document, as a property, etc.), and be able to\ncount on it to always identifying exactly that version.  If the\nprotocol does not guarantee that this will be the case, it will have\nto use some additional info (etag, perhaps) for determining whether\nor not this URL still identifies the same version.  But there are\nmany situations where all you can store is a URL, and there's no\nway to say \"and check that the destination of this URL still has\nthis same etag value\".\n\nCheers,\nGeoff\n\n\n-----Original Message-----\nFrom: Lisa Dusseault [mailto:lisa@xythos.com]\n\nIt would be easy code-wise to use GUIDs in creating version URLs.  However\nthat's not the issue.  I'm not arguing whether this can be implemented\neasily; it certainly can be.  I'm arguing whether it needs to be part of the\nprotocol specification.  Does it have any bearing on the protocol standard\nwhether or not a server reuses version URLs?  I think not.  Leave decisions\nup to the implementors when they do not affect interoperability.  Or, give\nme an argument why interoperability _suffers_ if the server reuses version\nURLs.\n\nlisa\n\n\n> -----Original Message-----\n> From: ietf-dav-versioning-request@w3.org\n> [mailto:ietf-dav-versioning-request@w3.org]On Behalf Of Clemm, Geoff\n> Sent: Tuesday, December 12, 2000 4:08 PM\n> To: ietf-dav-versioning@w3.org\n> Subject: Re: II.6, non-reusable version URLs (was: comments on\n> deltav-10.5 from Yaron Goland, Act Two)\n>\n>\n> Note that a server can implement non-reusable version URL's\n> fairly easily by extending the version URL with a GUID (such\n> as would be used for a lock token).  The non-GUID part of the\n> URL would be used to locate the resource and the GUID part of\n> the URL would be stored as an implementation attribute on the resource.\n> If the resource currently located at the non-GUID part of the URL\n> does not have the GUID part of the URL, then the server would return\n> a 404 on access to that URL.\n>\n> The benefit to the client (as Tim describes below) is significant\n> enough to warrant serious consideration for adding it to the protocol.\n>\n> Lisa: does your server currently use GUID's for any other purpose\n> (such as locking), and if so, would it be a problem to use them\n> here?\n>\n> Cheers,\n> Geoff\n>\n> -----Original Message-----\n> From: Tim_Ellison@uk.ibm.com [mailto:Tim_Ellison@uk.ibm.com]\n>\n> The term \"version URL\" simply means a URL that identifies a version.  In\n> your example I'm not sure what you mean by \"relative URL\".\n>\n> Servers may support deleting individual versions (as well as the entire\n> versioned resource).  It would be undesirable for servers to reuse version\n> URLs since they represent a 'stable' reference to a particular\n> state of the\n> resource, and may be used as such by other persistent resources.  Clearly\n> if the server reuses a URL that would be a bad thing in such\n> circumstances.\n>\n> Tim\n>\n>\n> \"Lisa Dusseault\" <lisa@xythos.com> on 2000-12-12 08:56:57 PM\n>\n>\n> Can somebody clarify what this would mean:\n>\n> > -----Original Message-----\n> > From: ietf-dav-versioning-request@w3.org On Behalf Of Geoffrey M.\n> > ...\n> > (II.6) Require that a version URL never be re-used after a version is\n> >        deleted.\n>\n> Whether or not I agree with this, I find the phrase \"version URL\" to be\n> ambiguous enough that I'm not certain what this comment is supposed to\n> mean,\n> so I'll start with an example:\n>  - foo.doc is created\n>  - foo.doc is made versioned and \"foo.doc.__v1__\" is defined as the\n> relative\n> version URL\n>  - All of foo.doc is deleted\n>  - foo.doc is created\n>  - foo.doc is made versioned, NOW, according to this suggestion, the\n> current\n> version CANNOT be called foo.doc.__v1__ therefore is called foo.doc.__v2__\n>\n> Is that the intent?  if so, I'd have to disagree with this; although it\n> might be desirable for a server to avoid ever having a version\n> URL re-used,\n> it ought not to be part of the standard.  I don't actually think it's\n> relative to the standard, although it may be very relative to good server\n> design.\n>\n> lisa\n\n\n\n", "id": "lists-005-13848562"}, {"subject": "RE: II.6, non-reusable version URLs (was: comments on deltav-10.5   from Yaron Goland, Act Two", "content": "I'd never recommend to any client to stop using ETags for this purpose!\nSounds dangerous.  The client always ought to rely on the ETag to see\nif things have changed.  Require clients to use ETag for what it was\ndesigned, and further, require clients to be able to deal with re-use\nof version URLs.  It's good medicine.\n\nNow, my second line of defense for this is usability.  Assuming somebody\nwill want to put version links as URLs in web pages, or in emails, then\nit would be more usable to at least be able to construct short, possibly\nmeaningful version URLs.  The use of a GUID will preclude this.\n\nFWIW, here's what a Xythos Version URL for a real file looks like:\nhttp://www.sharemation.com/~milele/public/advanced-status-reporting.htm?vers\nion=1\n\nlisa\n\n> -----Original Message-----\n> From: ietf-dav-versioning-request@w3.org\n> [mailto:ietf-dav-versioning-request@w3.org]On Behalf Of Clemm, Geoff\n> Sent: Tuesday, December 12, 2000 5:45 PM\n> To: ietf-dav-versioning@w3.org\n> Subject: RE: II.6, non-reusable version URLs (was: comments on\n> deltav-10.5 from Yaron Goland, Act Two)\n>\n>\n> A client will often care (very much) about whether it can store a\n> URL somewhere (in a document, as a property, etc.), and be able to\n> count on it to always identifying exactly that version.  If the\n> protocol does not guarantee that this will be the case, it will have\n> to use some additional info (etag, perhaps) for determining whether\n> or not this URL still identifies the same version.  But there are\n> many situations where all you can store is a URL, and there's no\n> way to say \"and check that the destination of this URL still has\n> this same etag value\".\n>\n> Cheers,\n> Geoff\n>\n>\n> -----Original Message-----\n> From: Lisa Dusseault [mailto:lisa@xythos.com]\n>\n> It would be easy code-wise to use GUIDs in creating version URLs.  However\n> that's not the issue.  I'm not arguing whether this can be implemented\n> easily; it certainly can be.  I'm arguing whether it needs to be\n> part of the\n> protocol specification.  Does it have any bearing on the protocol standard\n> whether or not a server reuses version URLs?  I think not.  Leave\n> decisions\n> up to the implementors when they do not affect interoperability.  Or, give\n> me an argument why interoperability _suffers_ if the server reuses version\n> URLs.\n>\n> lisa\n>\n>\n> > -----Original Message-----\n> > From: ietf-dav-versioning-request@w3.org\n> > [mailto:ietf-dav-versioning-request@w3.org]On Behalf Of Clemm, Geoff\n> > Sent: Tuesday, December 12, 2000 4:08 PM\n> > To: ietf-dav-versioning@w3.org\n> > Subject: Re: II.6, non-reusable version URLs (was: comments on\n> > deltav-10.5 from Yaron Goland, Act Two)\n> >\n> >\n> > Note that a server can implement non-reusable version URL's\n> > fairly easily by extending the version URL with a GUID (such\n> > as would be used for a lock token).  The non-GUID part of the\n> > URL would be used to locate the resource and the GUID part of\n> > the URL would be stored as an implementation attribute on the resource.\n> > If the resource currently located at the non-GUID part of the URL\n> > does not have the GUID part of the URL, then the server would return\n> > a 404 on access to that URL.\n> >\n> > The benefit to the client (as Tim describes below) is significant\n> > enough to warrant serious consideration for adding it to the protocol.\n> >\n> > Lisa: does your server currently use GUID's for any other purpose\n> > (such as locking), and if so, would it be a problem to use them\n> > here?\n> >\n> > Cheers,\n> > Geoff\n> >\n> > -----Original Message-----\n> > From: Tim_Ellison@uk.ibm.com [mailto:Tim_Ellison@uk.ibm.com]\n> >\n> > The term \"version URL\" simply means a URL that identifies a version.  In\n> > your example I'm not sure what you mean by \"relative URL\".\n> >\n> > Servers may support deleting individual versions (as well as the entire\n> > versioned resource).  It would be undesirable for servers to\n> reuse version\n> > URLs since they represent a 'stable' reference to a particular\n> > state of the\n> > resource, and may be used as such by other persistent\n> resources.  Clearly\n> > if the server reuses a URL that would be a bad thing in such\n> > circumstances.\n> >\n> > Tim\n> >\n> >\n> > \"Lisa Dusseault\" <lisa@xythos.com> on 2000-12-12 08:56:57 PM\n> >\n> >\n> > Can somebody clarify what this would mean:\n> >\n> > > -----Original Message-----\n> > > From: ietf-dav-versioning-request@w3.org On Behalf Of Geoffrey M.\n> > > ...\n> > > (II.6) Require that a version URL never be re-used after a version is\n> > >        deleted.\n> >\n> > Whether or not I agree with this, I find the phrase \"version URL\" to be\n> > ambiguous enough that I'm not certain what this comment is supposed to\n> > mean,\n> > so I'll start with an example:\n> >  - foo.doc is created\n> >  - foo.doc is made versioned and \"foo.doc.__v1__\" is defined as the\n> > relative\n> > version URL\n> >  - All of foo.doc is deleted\n> >  - foo.doc is created\n> >  - foo.doc is made versioned, NOW, according to this suggestion, the\n> > current\n> > version CANNOT be called foo.doc.__v1__ therefore is called\n> foo.doc.__v2__\n> >\n> > Is that the intent?  if so, I'd have to disagree with this; although it\n> > might be desirable for a server to avoid ever having a version\n> > URL re-used,\n> > it ought not to be part of the standard.  I don't actually think it's\n> > relative to the standard, although it may be very relative to\n> good server\n> > design.\n> >\n> > lisa\n\n\n\n", "id": "lists-005-13864010"}, {"subject": "Re: II.6, non-reusable version URL", "content": "Subversion will have persistent, unique, non-reused URLs for the version\nresources. They will look something like:\n\n    http://www.webdav.org/repo/$svn/ver/56.3\n\nNo sweat :-)\n\nCheers,\n-g\n\nOn Tue, Dec 12, 2000 at 06:18:13PM -0800, Lisa Dusseault wrote:\n> I'd never recommend to any client to stop using ETags for this purpose!\n> Sounds dangerous.  The client always ought to rely on the ETag to see\n> if things have changed.  Require clients to use ETag for what it was\n> designed, and further, require clients to be able to deal with re-use\n> of version URLs.  It's good medicine.\n> \n> Now, my second line of defense for this is usability.  Assuming somebody\n> will want to put version links as URLs in web pages, or in emails, then\n> it would be more usable to at least be able to construct short, possibly\n> meaningful version URLs.  The use of a GUID will preclude this.\n> \n> FWIW, here's what a Xythos Version URL for a real file looks like:\n> http://www.sharemation.com/~milele/public/advanced-status-reporting.htm?vers\n> ion=1\n> \n> lisa\n> \n> > -----Original Message-----\n> > From: ietf-dav-versioning-request@w3.org\n> > [mailto:ietf-dav-versioning-request@w3.org]On Behalf Of Clemm, Geoff\n> > Sent: Tuesday, December 12, 2000 5:45 PM\n> > To: ietf-dav-versioning@w3.org\n> > Subject: RE: II.6, non-reusable version URLs (was: comments on\n> > deltav-10.5 from Yaron Goland, Act Two)\n> >\n> >\n> > A client will often care (very much) about whether it can store a\n> > URL somewhere (in a document, as a property, etc.), and be able to\n> > count on it to always identifying exactly that version.  If the\n> > protocol does not guarantee that this will be the case, it will have\n> > to use some additional info (etag, perhaps) for determining whether\n> > or not this URL still identifies the same version.  But there are\n> > many situations where all you can store is a URL, and there's no\n> > way to say \"and check that the destination of this URL still has\n> > this same etag value\".\n> >\n> > Cheers,\n> > Geoff\n> >\n> >\n> > -----Original Message-----\n> > From: Lisa Dusseault [mailto:lisa@xythos.com]\n> >\n> > It would be easy code-wise to use GUIDs in creating version URLs.  However\n> > that's not the issue.  I'm not arguing whether this can be implemented\n> > easily; it certainly can be.  I'm arguing whether it needs to be\n> > part of the\n> > protocol specification.  Does it have any bearing on the protocol standard\n> > whether or not a server reuses version URLs?  I think not.  Leave\n> > decisions\n> > up to the implementors when they do not affect interoperability.  Or, give\n> > me an argument why interoperability _suffers_ if the server reuses version\n> > URLs.\n> >\n> > lisa\n> >\n> >\n> > > -----Original Message-----\n> > > From: ietf-dav-versioning-request@w3.org\n> > > [mailto:ietf-dav-versioning-request@w3.org]On Behalf Of Clemm, Geoff\n> > > Sent: Tuesday, December 12, 2000 4:08 PM\n> > > To: ietf-dav-versioning@w3.org\n> > > Subject: Re: II.6, non-reusable version URLs (was: comments on\n> > > deltav-10.5 from Yaron Goland, Act Two)\n> > >\n> > >\n> > > Note that a server can implement non-reusable version URL's\n> > > fairly easily by extending the version URL with a GUID (such\n> > > as would be used for a lock token).  The non-GUID part of the\n> > > URL would be used to locate the resource and the GUID part of\n> > > the URL would be stored as an implementation attribute on the resource.\n> > > If the resource currently located at the non-GUID part of the URL\n> > > does not have the GUID part of the URL, then the server would return\n> > > a 404 on access to that URL.\n> > >\n> > > The benefit to the client (as Tim describes below) is significant\n> > > enough to warrant serious consideration for adding it to the protocol.\n> > >\n> > > Lisa: does your server currently use GUID's for any other purpose\n> > > (such as locking), and if so, would it be a problem to use them\n> > > here?\n> > >\n> > > Cheers,\n> > > Geoff\n> > >\n> > > -----Original Message-----\n> > > From: Tim_Ellison@uk.ibm.com [mailto:Tim_Ellison@uk.ibm.com]\n> > >\n> > > The term \"version URL\" simply means a URL that identifies a version.  In\n> > > your example I'm not sure what you mean by \"relative URL\".\n> > >\n> > > Servers may support deleting individual versions (as well as the entire\n> > > versioned resource).  It would be undesirable for servers to\n> > reuse version\n> > > URLs since they represent a 'stable' reference to a particular\n> > > state of the\n> > > resource, and may be used as such by other persistent\n> > resources.  Clearly\n> > > if the server reuses a URL that would be a bad thing in such\n> > > circumstances.\n> > >\n> > > Tim\n> > >\n> > >\n> > > \"Lisa Dusseault\" <lisa@xythos.com> on 2000-12-12 08:56:57 PM\n> > >\n> > >\n> > > Can somebody clarify what this would mean:\n> > >\n> > > > -----Original Message-----\n> > > > From: ietf-dav-versioning-request@w3.org On Behalf Of Geoffrey M.\n> > > > ...\n> > > > (II.6) Require that a version URL never be re-used after a version is\n> > > >        deleted.\n> > >\n> > > Whether or not I agree with this, I find the phrase \"version URL\" to be\n> > > ambiguous enough that I'm not certain what this comment is supposed to\n> > > mean,\n> > > so I'll start with an example:\n> > >  - foo.doc is created\n> > >  - foo.doc is made versioned and \"foo.doc.__v1__\" is defined as the\n> > > relative\n> > > version URL\n> > >  - All of foo.doc is deleted\n> > >  - foo.doc is created\n> > >  - foo.doc is made versioned, NOW, according to this suggestion, the\n> > > current\n> > > version CANNOT be called foo.doc.__v1__ therefore is called\n> > foo.doc.__v2__\n> > >\n> > > Is that the intent?  if so, I'd have to disagree with this; although it\n> > > might be desirable for a server to avoid ever having a version\n> > > URL re-used,\n> > > it ought not to be part of the standard.  I don't actually think it's\n> > > relative to the standard, although it may be very relative to\n> > good server\n> > > design.\n> > >\n> > > lisa\n\n-- \nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-13882300"}, {"subject": "Change sets and activitie", "content": "<greg>You've got all kinds of race conditions and stuff going in there to\ntry and\ndeal with the problem. Sure, the server knows all of the files that Joe is\ngoing to checkin (through examination of the activity), but it can't do\nanything about it until all the files are checked in. Does it say \"well,\nthere is a v7 for this file, but I can't give it to you right now.\" What if\nJoe never comes back? Nancy should have got v7 in that case. Oh, and what\nhappens with rollback for Joe's failed checkin? Or is that first resource\nsupposed to fail on checkin because some *other* resource in the activity\nis\ngoing to fail in the future.</greg>\n\nI don't think we ever considered DAV:version-names to play this role. We\nconsidered them a way to distinguish revisions that is set by the server\nfor display purposes, they can't be used to access the version. WebDAV\ndefines the change set to be the latest versions in an activity. It doesn't\nsay that all the changes were created at the same time. This moves the\nvalidation of the change set to after checkin, not before. I understand\nthis might not be ideal.\n\n\n\n", "id": "lists-005-13899001"}, {"subject": "RE: Deletion semantics for versioning metadat", "content": "Or maybe the post conditions could be treated as preconditions and the\nmethod fail if they're not met. This would let servers that do reference\ncounts or some such thing, but can't do all that traversal and updates play\ntoo.\n\n\n\nI agree that this is a viable implementation trick, and the client would\nthereby never see 'invalid pointers' so it would satisfy the MUST protocol.\n(I equate it to the protocol saying a resource MUST have a property, and\nthe server choosing to calculate it on the fly when requested.)\nIf it looks like a duck, ...\n\nTim\n\n\"Lisa Dusseault\" <lisa@xythos.com> on 2000-11-20 05:57:55 PM\n\nPlease respond to \"Lisa Dusseault\" <lisa@xythos.com>\n\nTo:   \"Clemm, Geoff\" <gclemm@rational.com>, ietf-dav-versioning@w3.org\ncc:\nSubject:  RE: Deletion semantics for versioning metadata\n\nI'd suggest that an implementation \"MUST NOT return invalid pointers to\ndeleted working resources or other dangling pointers\".\n\nThis leaves the implementation free to clean up on delete, or to clean up\non\nrequest, or in a background process, whatever the implementors prefer.\nThis\nisn't quite \"atomic\", but it gets the desired behaviour.\n\nLisa\n\n> -----Original Message-----\n> From: ietf-dav-versioning-request@w3.org\n> [mailto:ietf-dav-versioning-request@w3.org]On Behalf Of Clemm, Geoff\n> Sent: Monday, November 20, 2000 9:36 AM\n> To: ietf-dav-versioning@w3.org\n> Subject: RE: Deletion semantics for versioning metadata\n>\n>\n> Ooops.  I answered a totally different question than Tim asked.\n> In particular, I answered the question \"Is atomic checkin of the\n> checkouts against an activity a SHOULD or a MUST\".  For that, I\n> said \"SHOULD\".\n>\n> But the question he *asked* was, \"Should the property updates be\n> atomic with the delete\".  For that I say MUST.\n> A dangling reference introduces the possibility that\n> the reference will mistakenly be later bound to a different resource,\n> which violates the semantics of those properties.  Internally,\n> an implementation can create dangling references, but the protocol\n> should require that it detect such dangling references and strip\n> them out before returning the property value.\n>\n> Cheers,\n> Geoff\n>\n> -----Original Message-----\n> From: Geoffrey M. Clemm [mailto:geoffrey.clemm@rational.com]\n> Sent: Monday, November 20, 2000 8:48 AM\n> To: ietf-dav-versioning@w3.org\n> Subject: Re: Deletion semantics for versioning metadata\n>\n>\n>\n> I believe it should be a SHOULD.  There are a variety of versioning\n> repositories that do not provide atomic group checkin behavior, and\n> it is a reasonable server value-add to guarantee atomic behavior.\n> A client can simply report the error, so it doesn't significantly\n> complicate client implementations.\n>\n> Cheers,\n> Geoff\n>\n>    From: Tim_Ellison@uk.ibm.com\n>    Date: Mon, 20 Nov 2000 11:30:16 +0000\n>\n>\n>\n>    Is that 'should' a SHOULD or a MUST?\n>\n>    There are likely servers that cannot achieve an 'atomic delete with\n>    multiple resource property updates'.\n>\n>    Tim\n>\n>\n>    \"Geoffrey M. Clemm\" <geoffrey.clemm@rational.com> on\n> 2000-11-19 06:08:03\n> PM\n>\n>    Please respond to \"Geoffrey M. Clemm\" <geoffrey.clemm@rational.com>\n>\n>    To:   ietf-dav-versioning@w3.org\n>    cc:\n>    Subject:  Deletion semantics for versioning metadata\n>\n>\n>    Greg has asked that we clarify the results of deleting things\n>    like working resources, versions, version histories, etc.\n>\n>    I believe it is sufficient for us to say that if a server allows you\n>    to delete such a resource, that all the versioning properties of other\n>    resources that refer to that resource should be updated to no longer\n>    refer to the deleted resource (I'd probably enumerate those properties\n>    to make sure there is no misunderstanding).\n>\n>    Any objections?\n>\n>    Cheers,\n>    Geoff\n\n\n\n", "id": "lists-005-13907034"}, {"subject": "Re: Working collection", "content": "What about all those .o files (derived files) that happen to be in the same\nworkspace, and should never be versioned?\n\n\n\n\n   From: Greg Stein <gstein@lyra.org>\n\n   On Wed, Nov 22, 2000 at 03:39:25PM -0500, Geoffrey M. Clemm wrote:\n   > ...\n   > I have what I believe is a simpler proposal.  You can create as many\n   > non-versioned resources as you want in a working collection.  When\n   > you checkin a working collection, all non-versioned resources are put\n   > under version control, and are replaced by their (newly created)\n   > version history resource.  The \"put under version control\" works\n   > leafs up, so you can create trees of non-versioned resources inside\n   > of a working collection before checking it in.  The working collection\n   > is deleted on checkin, as a working resource is, but all your work is\n   > saved in the standard form of versions and version histories.\n   > ...\n   > How's all this sound?\n\n   Sounds terrific, and it shouldn't be too hard to model code-wise.\n\nExcellent.  I'll write up this working collection proposal up for\ngeneral review.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-13921749"}, {"subject": "RE: II.6, non-reusable version URLs (was: comments on deltav-10.5 from  Yaron Goland, Act Two", "content": "> I'd never recommend to any client to stop using ETags for this purpose!\n> Sounds dangerous.  The client always ought to rely on the ETag to see\n> if things have changed.  Require clients to use ETag for what it was\n> designed, and further, require clients to be able to deal with re-use\n> of version URLs.  It's good medicine.\n>\n> Now, my second line of defense for this is usability.  Assuming somebody\n> will want to put version links as URLs in web pages, or in emails, then\n> it would be more usable to at least be able to construct short, possibly\n> meaningful version URLs.  The use of a GUID will preclude this.\n> \n> FWIW, here's what a Xythos Version URL for a real file looks like:\n> http://www.sharemation.com/~milele/public/advanced-status-reporting.htm?version=1\n\nTo me, this looks like a good example where in practice, a URL is all you \ncan send to me. It's just not practical to send me the ETag as well, \nbecause there is no easy way for me to check it. I think I would prefer \nclicking on a URL such as\nhttp://www.sharemation.com/~milele/public/advanced-status-reporting.htm/00741ab6a2c400141e860000c0a80cc2\nor\nhttp://www.sharemation.com/~milele/public/advanced-status-reporting.htm?version=1&etag=1fe4-69-39e7056c\nover checking the ETag myself.\n\nWith reusable version URLs, users would need to know about ETags. Example: \nIf you accidentally deleted advanced-status-reporting.htm and then re-created it, a URL which just \nsays ?version=1 would link to the latest version of that document instead \nof the first version.\n\n-Boris.\n\n\n\n", "id": "lists-005-13930422"}, {"subject": "Re: Change sets and activitie", "content": "On Tue, Dec 12, 2000 at 10:13:22PM -0500, Jim Amsden wrote:\n> <greg>You've got all kinds of race conditions and stuff going in there to\n> try and\n> deal with the problem. Sure, the server knows all of the files that Joe is\n> going to checkin (through examination of the activity), but it can't do\n> anything about it until all the files are checked in. Does it say \"well,\n> there is a v7 for this file, but I can't give it to you right now.\" What if\n> Joe never comes back? Nancy should have got v7 in that case. Oh, and what\n> happens with rollback for Joe's failed checkin? Or is that first resource\n> supposed to fail on checkin because some *other* resource in the activity\n> is\n> going to fail in the future.</greg>\n> \n> I don't think we ever considered DAV:version-names to play this role. We\n> considered them a way to distinguish revisions that is set by the server\n> for display purposes, they can't be used to access the version. WebDAV\n> defines the change set to be the latest versions in an activity. It doesn't\n> say that all the changes were created at the same time. This moves the\n> validation of the change set to after checkin, not before. I understand\n> this might not be ideal.\n\nThose were names I was using to refer to the internal mechanics and\nimplementation. The repository transacts the changes, and assigns a number\nat commit time for the transaction.\n\nIt is impossible to have a partial commit, and assign a number. It must all\nbe there, or none of it will be there. If Joe is working on his commit, and\nNancy zooms in with a quick commit, then she'll get v7, and Joe's commit\nwill be v8.\n\nThis transacted commit behavior is to avoid the race conditions and\nnon-determinism mentioned above. Individual working resources cannot be\nchecked in (via CHECKIN) because the whole set must go in as a group.\nTherefore, the activity CHECKIN as the signal for the group.\n\nCheers,\n-g\n\n-- \nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-13939475"}, {"subject": "Re: Working collection", "content": "Subversion (SVN) doesn't use workspaces, so the .o files are only on the\nlocal machine. Standard \"ignore\" rules tell the SVN client to not add them\nto the repository.\n\nIn the working collection model that we agreed on, if you put those .o files\ninto the working collection, then yes: they're going to go into the\nrepository. If you didn't want them there, then don't put them there.\n\nWe have no other precedent that says \"well, ignore <these> files when\nperforming your operation.\" I see no reason to do the same for a checkin of\na working collection.\n\nCheers,\n-g\n\nOn Tue, Dec 12, 2000 at 10:32:00PM -0500, Jim Amsden wrote:\n> What about all those .o files (derived files) that happen to be in the same\n> workspace, and should never be versioned?\n> \n> \n> \n> \n>    From: Greg Stein <gstein@lyra.org>\n> \n>    On Wed, Nov 22, 2000 at 03:39:25PM -0500, Geoffrey M. Clemm wrote:\n>    > ...\n>    > I have what I believe is a simpler proposal.  You can create as many\n>    > non-versioned resources as you want in a working collection.  When\n>    > you checkin a working collection, all non-versioned resources are put\n>    > under version control, and are replaced by their (newly created)\n>    > version history resource.  The \"put under version control\" works\n>    > leafs up, so you can create trees of non-versioned resources inside\n>    > of a working collection before checking it in.  The working collection\n>    > is deleted on checkin, as a working resource is, but all your work is\n>    > saved in the standard form of versions and version histories.\n>    > ...\n>    > How's all this sound?\n> \n>    Sounds terrific, and it shouldn't be too hard to model code-wise.\n> \n> Excellent.  I'll write up this working collection proposal up for\n> general review.\n> \n> Cheers,\n> Geoff\n> \n> \n\n-- \nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-13948417"}, {"subject": "RE: II.6, non-reusable version URLs (was: comments on   deltav-10.5 from  Yaron Goland, Act Two", "content": "[freed from spam trap -rrs]\n\n Date: Wed, 13 Dec 2000 19:38:41 -0500 (EST)\n Message-ID: <000401c06566$487c7740$d84989cf@hursley.ibm.com>\n From: \"Tim Ellison\" <tim@peir.com>\n To: <ietf-dav-versioning@w3.org>\n\nI agree with Boris that it is infeasible to expect clients to remember ETags\nto differentiate between recycled version URLs.  Without encoding the ETag\nin a URL there is no way to create a safe href to a particular version.\n\nI have no problem with putting GUIDs into the URL, which need not be\nparticularly short or meaningful.\n\nTim\n\n\n\n", "id": "lists-005-13957433"}, {"subject": "Minutes Delta-V breakout meeting 13-Dec-0", "content": "Delta-V Design Group Meeting\nIETF San Diego\n\n9:00 am - 3:00 pm\nWednesday 13 December 2000\n\nAttendees:\n    Jim Amsden (IBM Raleigh)\n    Geoff Clemm (Rational Software)\n    Tim Ellison (IBM UK)\n    James Hunt (Universit?t Karlsruhe / FZI)\n    Eric Sedlar (Oracle)\n\n[Note: section references are based on draft-ietf-deltav-versioning-10.9]\n\nSet and agreed on agenda:\n  1.   Review changes that have been made to the protocol document since\n       the last submission.\n  2.   Review items raised by Yaron Goland conveyed by Geoff.\n  3.   Review changes raised by Greg Stein (working collections, checkout\n       in a baseline).\n  4.   Help define the criteria for setting levelling.\n  5.   Discuss the use of XML and DTD's/XML schema.\n  6.   Ordering of set properties (e.g., successors, ...)\n  7.   Why are change sets and branching are both modelled by activities?\n  8.   Use of labels vs. baselines for configurations.\n\nThe group went through the list of changes since the last Internet draft\n(section 21)\n\n\"Moved version-controlled resource DAV:predecessor-set property to core.\n(Boris)\"\nReviewed and agreed.\n\n\"Made label support optional. (Lisa)\"\nDebated why labels should not be in core -- primarily because it is not\nrequired by\ndocument management systems, and it is not viable in distributed\ndisconnected\nimplementations.  Agreed that it should not be in core.\n\n\"Removed Workspace header (Geoff)\"\nDiscussed why the workspace header is problematic.  The problem is\nillustrated by the\nuse of absolute URLs embedded in documents (i.e., links).  When resources\nare in\nworkspaces it is usual that the absolute URL should be interpreted relative\nto the\nworkspace.  The workspace header was proposed to provide a prefix for all\nURLs in the\nrequest.\nHowever, not all URLs should be interpreted relative to the workspace.  For\nexample,\nversion URLs would not be interpreted relative to the workspace.  The\nserver has no way\nof knowing when a URL is workspace relative, and when it is root relative.\nIt was proposed that the server should be able to recognise a URL as a\nserver generated\nURL and thereby not interpret it workspace relative (not apply the\nworkspace header),\nhowever, it was agreed that we cannot dictate that the server allocate a\nfixed part of the\nnamespace for version URLs.\nIt was recognised that this means that server side includes will not work.\n\n\"Added DAV:must-not-be-checked-out precondition for LABEL (John)\"\nAgreed.\n\n\"Only require Multi-Status if there was an error in a Depth operation (e.g.\nLABEL and\nSET-TARGET). (John)\"\nBriefly discussed using multi-status only if there was >1 error.  This idea\nwas abandoned\nand the original update was agreed upon.\n\n\"Got rid of \"parent workspace\" for MKWORKSPACE (Tim/Geoff)\"\nAgreed.\n\n\"Added DAV:no-checkout argument to MERGE (Tim)\"\nAgreed.\n\n\"Fixed BASELINE-CONTROL so that baseline (not baseline history) is the\nargument\n(Tim)\nDisallowed checkout of a baseline (only makes sense for a\nbaseline-selector) (Tim)\nAdded CHECKIN behavior for a baseline-selector (Tim)\nAdded DAV:baseline-controlled-collection property for baseline-selectors\n(Geoff)\"\nThe proceeding four updates are deferred to a later discussion on baselines\nin general.\n\n\"Changed \"advanced\" to \"optional\", since that is what it means (Geoff)\"\nSome discussion that 'advanced' sounds sexier for marketing reasons, but\nthat 'optional'\nwas more accurate.  Agreed that we should adopt 'optional' but think of\nways to entice\npeople to implement it.\n\n\"Changed the DAV:repository-report into DAV:workspace-collection-set and\nDAV:activity-collection-set properties. (Ross)\"\nIn as much as this represents splitting the repository report into separate\nqueries for\nworkspace collections and activity collections, this was agreed, but this\nis likely\nsubsumed by a later suggestion for making this information available\nthrough OPTIONS.\n\n\"Marked the DAV:supported-xxx properties as \"protected\". (JimW)\"\nThis is also in OPTIONS and subsumed by a later recommendation.\n\n\"Cleaned up bad ANY syntax for the DTD's. (Geoff)\"\nAgreed.\n\n\"Use strings in DAV:method elements to define DAV:supported-methods.\n(Juergen)\"\nAgreed.\n\n\"Removed DAV:if-unsupported (use If header when needed) (Yaron).\"\nThe protocol doesn't rely on this behaviour, however, it is considered to\nbe useful (if\npeople ever need it).\n\n\"Moved the DAV:workspace property from version-controlled resources to any\nresource,\nsince resources other than version-controlled resources can be in a\nworkspace (Tim).\"\nAgreed.\n\n\"Changed the return status of VERSION-CONTROL on an existing resource to be\n200\n(Greg).\"\nAgreed\n\n\"Added the impact of DELETE on properties that refer to the deleted\nresource (Greg).\"\nAgreed that any references to the deleted resource should be removed from\nDAV\nproperties.\n\nIt was pointed out that for all computed properties (e.g., 'successor set'\ndefined as the\n\nlist\nof resources who have this resource as a predecessor) the protocol document\nshould\nmention that any method that affects the resources it is computed from\naffects the value\nof the property.\n\n\"Changed the DTD of all top level request and response nodes to be ANY\n(Yaron).\"\nDefer to a later XML discussion.\n\n\"Have version CHECKOUT example use version URL (Chuck).\"\nAgreed\n\n\"Renamed version selector to be version-controlled resource (Geoff).\"\nAgreed.\n\n\"Renamed Target-Selector header to be Label header (Geoff).\"\nAgreed, and that there would be other headers created if required (i.e.\nbaseline:, activity:\n...).\n\n\"Divided optional section into one section per option (Juergen).\"\nThe group liked the idea of splitting the document, however, should the\noptional\nbehaviour document duplicate the information contained in core (so that it\nis a stand-\nalone document) or should it reference the core document?  Agreed to ask\nthe mailing list\nsince there was no consensus reached.\n\nAgreed that we need to add some model description, esp. illustrating the\nuse of client-\nbased vs. server-based workspaces.  Will add a section at the end of the\ndocument that\nbrings the concepts together, with a forward reference to this section\nsince some people\nmay prefer to read this section before the terms etc. are introduced.\n\nVarious changes to the document were discussed:\n\n2.1.4 Auto-versioning\nIt was noted that non-versioning clients may receive errors related to\nversioning\noperations, however, since we are not introducing new status codes, the\nclients will\nunderstand the status code as an error, but they won't understand the\nextended status\nXML body.\n\n2.2 Common property values\nSome of these are duplications of RFC2518 and some are new/modified\ndefinitions.\nAgreed that this duplication was ok.\n\nDiscussed that fact that version controlled resources (VCRs) have different\nproperties\ndepending upon whether they are checked in / checked out.  Suggested having\na DAV:is-\nchecked-in (Boolean) property and reusing the DAV:target property.  Some\npeople felt\nstrongly that individual properties (e.g., DAV:target) should not have\ndifferent meanings\ndepending upon resource state.  Agreed to leave it alone.\n\nDiscussion of DAV:predecessor-set : why it cannot be used to denote the\nchecked out\nversion (e.g., by putting the checked out version URL as the first in the\nlist).  Clients\n\ncan\nmodify the DAV:predecessor-set because it represents the logical successor\nnot the\nchecked out resource.  Clients may remove the checked out version URL from\nthe\npredecessor set and add other URLs (from the same version history).\nAn example of where this is useful is a server that only supports linear\nhistory, and\nclients have branched by checking out the same version.  The second client\nto checkin\ncan do a merge (with the first to checkin) and fix-up the predecessor set\nto maintain linear\nhistory.\n\n2.4.3 predecessor set should have a DTD fragment to be consistent with\nother definitions.\n\nDAV:version-name property is generally useful for clients, but is not used\nin the\nprotocol.  It is envisaged that it would be used in a PROPFIND type request\nrather than\nused to 'directly' access the resource (such as with a VersionName:\nheader).\n\nThe overwrite header description may need rewriting to improve its clarity\n-- Jim A.\nagreed to draft a rewrite.\n\nThe body of section 2.8 OPTIONS should explain what the request body is\nused for.\nCorrect \"If a request body is included, it MUST be a DAV:options-response\nXML\nelement.\" to read \"if a response body ...\".\n\n2.8 supported live properties.  Would like to modify the XML to allow\npassing metadata\nabout the property (e.g., type, whether protected, etc.) by adding another\nlevel of element\n<DAV:property-name> around the existing name data.  Agreed.\n\n2.10 PROPPATCH semantics\nIt was recognised that a versioning aware client may set versioning\nproperties on a non-\nversioning server, and the server would accept the properties (as dead\nproperties).  It\nbehoves clients to check the capabilities of a server (using OPTIONS).\n\nDELETE vs. UNCHECKOUT\nFor a version controlled resource(VCR) DELETE means 'go away' whereas\nUNCHECKOUT means 'revert to checked-in (version) state'; for a working\nresource\nDELETE means 'go away' and there is no equivalent for revert to checked in\nstate.\n\n2.12 COPY semantics needs similar semantics description to PUT & PROPPATCH\nwhere the destination is a VCR.  (No such change to be made to 2.13).\n\n2.14 REPORT method -- why not just use POST?  REPORT is defined to have\nread-only\nsemantics and so is more likely to be acceptable to proxies/servers who\nhave security\nconcerns.  In addition it does not require extending/redefining the\nsemantics of POST.\n\n2.16 postconditions of CHECKOUT does not describe the effect on the checked\nout set\n(this is another example of a 'inverse property' that is defined as a\nfunction of other\nproperties) the effect should be called out explicitly.\nEditorial change: now that the document is split there is no need to say\n\"If a version-\ncontrolled resource was checked out ...\".\n\n2.18 UNCHECKOUT also requires the effect on the checkout-set.\n\n2.20 version tree report also should remove \"If the report is applied to a\nchecked-in\nversion-controlled resource ...\"\n\nXML DTD -- we will create a valid DTD for delta-v, and we will strive to\nget rid of the\nANYs (retaining them in places where extensibility is explicitly\npredicted).  We need to\nallow servers to add proprietary extensions to the XML.  Recognised that a\nDTD is a\npoor-man's solution, and that an XML schema would be more meaningful and\nextendable and would allow clients and servers to validate messages.  Could\nbe added to\nan appendix, but we won't hold up the progress of the document waiting for\nthis.\n\nOrdering of successor list / version tree report\nAgreed that there is no need for the server to assure any ordering or\nrepeatability of\nordering across subsequent request/responses; it is left to the client to\napplying any\ntemporal ordering if this is required.\n\nBrief discussion of activities.  They are used for branching and change\nsets by clients,\nand are indistinguishable as resource on the server.  Activities can be\nused to model\neither--interoperably.\n\nMeeting closed at 3:00pm.\n\nRegards,\n\nTim Ellison\nJava Technology Centre, MP146\nIBM UK Laboratory, Hursley Park, Winchester, UK.\ntel: +44 (0)1962 819872  internal: 249872  MOBx: 270452\n\n\n\n", "id": "lists-005-13965857"}, {"subject": "stuck at sherato", "content": "IETFers,\n\nI'm stuck at the Sheraton, and don't have my own transportation to the\nMarriott, where the deltaV design team is meeting.  Is anybody going over\nthere??  unfortunately I have to be back here for 11:30.\n\nWasn't there any way to find a niche or hotel room or bar corner here at the\nconference hotel?\n\nLisa\n\n\n\n", "id": "lists-005-13984086"}, {"subject": "Minutes Delta-V breakout meeting 14-Dec-0", "content": "Delta-V Design Group Meeting\nIETF San Diego\n\n9:00 am - 3:00 pm\nWednesday 14 December 2000\n\nAttendees:\n    Jim Amsden (IBM Raleigh)\n    Geoff Clemm (Rational Software)\n    Tim Ellison (IBM UK)\n    Mark Hale (Interwoven)\n    James Hunt (Universit?t Karlsruhe / FZI)\n    Eric Sedlar (Oracle)\n\n[Note: section references are based on draft-ietf-deltav-versioning-10.9]\n\nDiscussion of core behaviour of LOCKing an auto-versioned resource followed\nby PUTs, PROPPATCHes and UNLOCK.  Agreed that the proposed behaviour of PUT\nto a LOCKed auto-versioned resource should be to checkout the resource and\nupdate its contents without checking it back in.  Subsequent PUTs and\nPROPPATCHes would update the same (mutable) working resource.  Thw working\nresource would be checked in when the resource was UNLOCKed.\n\nDiscussed ways of working with client side workspaces.\nOne model is that clients acquire locks across all resources that they want\nto update, sends updates, then releases all the locks.  This is inherently\npessimistic, and isn't going to scale to updating large numbers of\nresources.\nAnother model is to use GET and PROPFIND to copy resources over to the\nclient machine.  Clearly clients must be stateful to maintain the resources\nand any subsequent changes to the resources made by the client.  (Clients\nmay check with the server to ensure that the changes are still\nnon-conflicting by considering the current server state.)  When time comes\nto make changes on the server the client checks out the versions, issues\nPUT and PROPPATCH to update the working resource on the server and CHECKIN\nthe working resource.  Note that working resources are required since there\nis no single method for setting properties and content simultaneously.\nSome servers may have a batch capability to atomically check in numerous\nresources atomically.\n\nIn both models for client side workspaces, servers are required to provise\nworking resources, however, in server side workspaces clients simply use\nworkspaces.\n\nIt was noted that we now have multiple ways of checking out a resource,\nLOCK+autoversion, CHECKOUT a version controlled resource, & CHECKOUT a\nversion.\n\nMutable versions can be suppurted by allowing clients that have a lock on a\nversion resource to update the contents and properties in place.\n\nAdvantage of this LOCK/UNLOCK behaviour is that dav level two clients can\nnow create new versions without needing new methods (they still require a\nversioning client to VERSION-CONTROL to resource initially) and without all\nintermediate states of their PUTs and PROPPATCHes being recorded in version\nhistory.\n\nShould clarify in the spec. that 'Overwrite : T' means update in place\n(thereby ignoring the RFC2518 semantics that call for an initial DELETE of\nthe destination).  Remove the 'Overwrite: update' option.\n\nShould require that the error response for new methods contains an XML body\nas defined in the spec. (for advanced error reporting) unless it has been\notherwise negotiated (via header(s) to be defined).  For existing methods\nwe probably have to adopt the existing error conditions (and advanced error\nreporting may have to opt-in).\n\nAgenda item: should consider moving SET-TARGET out of core.\n\nDiscussion of versioned resource vs. a version controlled resource (vcr)\nand why we need to distinguish between resources that can be modified and\nresources that cannot be modified in a LOCK-PUT-UNLOCK sequence (excepting\nmutable versions).  This is a candidate for the delta-v book of why.\n\nSuggested that we specify that allprop requests do not return any delta-v\nproperties -- rejected since it does not solve the allprop problem.\n\nDiscussed checking out in the context of a baseline.\nCreate a baseline resource, can then checkout a resource specifying a\nbaseline in the CHECKOUT body (i.e., the baseline 'contains' a working\nresource/collection).  All the members MUST be checked in before the\nbaseline can be checked in.  Add a DAV:checked-out property to return the\nworking resources in the baseline.\n\nConsider introducing a DAV:sub-baseline property?\n\nGeoff will write up the semantics of checkig out against a baseline and\npost it to the list for general comments.\n\nDiscussed versionig whole respositories --  a single baseline is created\nthat represents the entire state of all resources.  The state of the\nrepository is captured in the baseline history.\n\nSuggested that there be no branching in core, no labels in core, but that\nthere should be a version history available in core.\n\nShould separate the 'label' option from the client managed workspace\noption.  I becomes its own option.\n\nHow about a header to get the latest version in an activity?\nSuggest a REPORT against a version history to ask for the latest verswion\nin a given activity, the response includes a version URL (noted that you\ncan issue depth requests if the target is a collection).\n\nPost conditions may be better expressed as (inverse) pre-conditions in some\ncases.  In any case should add extended status error tags to postconditions\nto allow the server to illustrate that the post condition could not be met.\n\n6.1.1 Grammar href+ becomes href*\n\n6.11 <DAV:activity-must-exist/> precondition should be added.\n\nDiscussion of labels and baselines.\n\nDiscussion of defining a DAV:is-branch property on an activity to advise a\nclient whether the activity represents a branch or change set.  The\nproperty would have no impact on the server behaviour.  Alternative\nsuggestion was to define a DAV:is-change-set property that would require\nthe server to enfore there was only one version per history per activity.\nHowevr, it was noted that this would require a means for setting the\nproperty when the activity is created (defining a body to initialize\nproperties during MKACTIVITY?)\n\nJames H. agreed to write up his semantics differences between a chane set\nand a branch (both being sets of resources) and why it would be useful for\nservers to distinguish them.  James to post this to the list.\n\nShould check through the protocol document and identify which live\nproperties should be protected by a write lock.\n\nSet the agenda for the delta-v working group meeting.\n\nMeeting closed at 3:00pm.\n\n\n\n", "id": "lists-005-13991185"}, {"subject": "Minutes Delta-V WG meeting 14-Dec-0", "content": "Delta-V Working Group Meeting\nIETF San Diego\n\n3:30 pm - 5:30 pm\nWednesday 14 December 2000\n\n[Note: section references are based on draft-ietf-deltav-versioning-10.9]\n\nAgenda for meeting presented by Geoff Clemm.\n\nUse of LOCK/UNLOCK for core versioning and the moving of\nCHECKOUT/CHECKIN/UNCHECKOUT to optional.\nEric S. observed that moving SET-TARGET and UNCHECKOUT to the optional\nsection will reduce the functionality of the existing core (and therefore\nit will be smaller).  This was not considered to be a problem.\n\nDefining he 'Overwrite: T' to mean update, not delete followed by create.\nThis means that COPY would not take an existing (version controlled)\ndestination out of version control.  Larry had suggested that this was the\noriginal intent of 'Overwrite: T' described in RFC2518, so it should be\nclarified there.\nSuggestion that this behaviour be specified in a separate (small) RFC\nrather than embedding it in delta-v or waiting for an update to 2518 which\nmay delay delta-v's progress.\nComment that implementations may not adhere to the DELETE description given\nin 2518 anyway.\nJim A. to raise this issue with Jim W. to determine the best way to\nproceed.\n\nREPORT method to be marshalled as a PROPFIND of a DAV:report live property.\nGeoff gave a description of how it would be marshalled as sub elements of\nthe DAV:property request.\n\nLisa D. said that she now believes that adding new behaviour via methods\nmay be preferable to introducing smart live properties.  Lisa noted that\ndelta-v is somewhat inconsistent since DAV:autoversion is a live property\nthat has a side effect on server behaviour and is updated via PROPPATCH\nrather than a custom method.\n\nProblems with using properties for reports etc. include the use XML schema\n(empty element tags).  Questioned whether it allowed passing arguments in a\nquery language? it was argued it is possible to do in XML and this may be\nused by DASL whereas a REPORT method would not.\n\nQuestioned whether core needs any reports, since the only report available\nin core (to get the version history tree) is easily deduced by following\nthe predecessor set.  Clarified that the predecessor set contains only the\nimmediate predecessors, so it would require multiple requests to obtain.\n\nSince the most common situation in core is linear history producing a\nnested XML response may be verbose/cumbersome.\n\nAdding version history resource to core?\nReported that someone didn't want to allocate a URL for history resources.\nObserved that this would be a reasonable addition since it would be the\nnatural resource to request the version tree report from.  If the report\nmethod were removed from core then there would not be any reports left in\ncore.\n\nReorganising the document.\nThe document has been split along lines of optional behaviour.  Compliments\nreceived from the floor for the new layout.  Question raised about whether\nit should be split into two documents and whether one should be a proper\nsubset of the other or if it should be duplicated.  Larry suggested that it\nis purely an editorial decision -- one doc is advantageous since it does\nnot require repeating the boilerplate text, however, a split doc gives a\nsmaller document for those people only interested in core and makes\nindividual revision of core and optional behaviour easier.\nThere is less need to split the document now that it has been restructured.\n\nShould introduce a section on what servers MUST implement to be considered\ncore compliant.  Suggestion that this be an appendix referenced from the\nintroduction.  Should include a definition of ?core? in the definitions\nsection.\n\nClient side and server side workspaces.\nRepresent two fundamental implementation choices.  A stateful client only\ncontacts the server when there is something to record in version history,\nhowever, since a resource has both content and properties there must be a\nworking resource on the server to ensure that there is a consistent\nresource that is publicly viewable.  Furthermore, some servers will require\nthat there is a batch update to numerous resources\nsimultaneously/atomically.\nServer side workspaces appeal to clients with no state, the server must\nremember both the resource state and the names by which the client knows\nthe resources.\nGuestimate that up to 20% of servers can do both client-side and\nserver-side, however, clients will predominantly be doing just one or the\nother.\nOnce the checkin is completed, the clients? way of working is identical.\n\nQuestion: can servers support both stateful and stateless clients?  Answer:\nyes, but with difficulty.  Servers that can deal with client side state can\nquite easily deal with stateless clients (i.e., store the state on the\nserver).\nQuestion: Is the distinction between them (client side vs. server side)\nthat the client against a client side server can check out a resource\ntwice? Answer: No, both models support checking out 2 (or more) times\neither by using two workspaces or two working resources.\n\nGreg S.?s server will have activities, baselines, and stateful clients (to\nachieve high scalability), it also versions the entire repository (by\nefficient deltas of namespace and content/properties) to retain a coherent,\nversion-consistent, public state.\nWe need to combine the client-side workspaces with baselining; can checkout\na resource in the context of a baseline, then version the baseline (which\nchecks in all the working resources ? atomically).  The atomicity is\nimportant to ensure that consistency is maintained, and there is not a\npartial checkin state left on the server.  It is also required that the\nresult of the checkin can be made public atomically.\nQuestion: Is making the resources public an integral part of the checkin\natomicity?  Answer: Don?t know what Greg will be doing.  In current\nprotocol it would be two steps (1) to checkin the baseline and (2) to make\nthe baseline public (merge?)\n\nJim A. interjected and explained that these are detailed topics that may be\ndifficult to grasp ? people should study the list to get the issues being\ndebated.  Although clients may support both client side and server side\nworkspaces ? they are not like the other options that servers may add in\n(e.g., activities).\n\nWorking collections ? they are there to support client side workspaces that\nneed a place to acquire updates to a collection.\n\nAdding a ?latest version of a given version history in a given activity?,\nso that before you do a merge you can do a diff using the resources that\nwould have been selected by the merge method.\n\nDAV:must-support attribute.  Description of proposal to make it a token\npassed in an If: header.  Need to check the protocol to see if this\nbehaviour is required in the protocol, if not it can be dropped, and if it\nis the issue should be raise in the general WebDAV WG.  In either case\nremove it from delta-v.\n\nUse an explicit value to denote that the checkin date is unavailable.\nMaybe look at the XML schema work to see if they solve this problem.\nSuggestion that they do not, they only allow xml:null.  Specifying it to be\nDAV:unknown may be problematic since it would be a different type (in an\nXML schema).  Take the issue to the list.\n\nShould define which live properties a write lock protects.\nShould enumerate which live properties can be changed on a version?  Maybe\nuseful.\nChanging dead properties must require the server create a new version, live\nproperties may or may not.  Servers may define new live properties and it\nis up to them to decide if it creates new versions.\nSupported-live-properties has an impact on RFC2518 this should be raised on\nthe webdav list.\n\nComment that XML schema have already agreed on using ?true? and ?false?,\nRFC2518 use ?T? and ?F?, which should delta-v use?  Agreement that we\nshould defer to whatever RFC2518 uses (without re-specifying it in delta-v\nprotocol doc.)  Noted that RFC2518 doesn?t use ?T? and ?F? in an XML body,\nonly in a header value so that doesn?t help for validating XML parsers.\nJust state that the value is ?like RFC2518 or successors?.\n\nDiscussion on whether or not a version URL can be reused.  Lisa?s\nimplementation will count up from one for each time the resource at a given\nURL is brought under version control.  It remains the responsibility of the\nclient to check the equivalence of the resource state using Etags.\nQuestion: Since properties and content cannot change in a version, why\nshould clients need to check an Etag.  Support from the floor for reusing\nversion URLs.  Larry suggested that the spec say that ?version URLs SHOULD\nNOT be reused?.  Lisa believes that clients should ALWAYS use Etags to\nensure that resources have not changed.  Comment that this is impractical\nin circumstances where only a URL is supported (not a URL/Etag pair) such\nas links, server side includes, existing APIs, etc.\n\nJim A. opened up to the floor to ask where the working group should go from\nhere.  We?ve had some feedback on working group last call, and we want to\nmove to proposed standard last call in January.  Suggestion that we make\nthe changes discussed in the meeting and go to last call in one month.\nLarry?s comment was that it depends upon how quickly these items can be put\ninto the doc. And the existing open issues resolved, but that a further two\nweek discussion period should be ample and will encourage people to get it\ndone.  Once the WG last call has been made and there are no open issues,\nsend it to the ISG.\n\nLisa presented an e-mail about the overwrite header semantics, which lead\ninto a general discussion about COPY and MOVE semantics in a versioning\nworld.\n\nMeeting closed at 5:30pm.\n\n\n\n", "id": "lists-005-14004923"}, {"subject": "Re: Minutes Delta-V breakout meeting 14-Dec-0", "content": "On Fri, Dec 15, 2000 at 04:03:50PM +0000, Tim_Ellison@uk.ibm.com wrote:\n>...\n> Discussion of defining a DAV:is-branch property on an activity to advise a\n> client whether the activity represents a branch or change set.  The\n> property would have no impact on the server behaviour.  Alternative\n> suggestion was to define a DAV:is-change-set property that would require\n> the server to enfore there was only one version per history per activity.\n> Howevr, it was noted that this would require a means for setting the\n> property when the activity is created (defining a body to initialize\n> properties during MKACTIVITY?)\n\nAs one of the guys using activities :-), I'm fine with adding the\nDAV:is-change-set property, and extending the request body.\n\n> James H. agreed to write up his semantics differences between a chane set\n> and a branch (both being sets of resources) and why it would be useful for\n> servers to distinguish them.  James to post this to the list.\n\nSounds great.\n\nCheers,\n-g\n\n-- \nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-14021102"}, {"subject": "Re: Minutes Delta-V breakout meeting 14-Dec-0", "content": "On Fri, Dec 15, 2000 at 04:03:50PM +0000, Tim_Ellison@uk.ibm.com wrote:\n>...\n> Discussed ways of working with client side workspaces.\n> One model is that clients acquire locks across all resources that they want\n> to update, sends updates, then releases all the locks.  This is inherently\n> pessimistic, and isn't going to scale to updating large numbers of\n> resources.\n> Another model is to use GET and PROPFIND to copy resources over to the\n> client machine.  Clearly clients must be stateful to maintain the resources\n> and any subsequent changes to the resources made by the client.  (Clients\n> may check with the server to ensure that the changes are still\n> non-conflicting by considering the current server state.)  When time comes\n> to make changes on the server the client checks out the versions, issues\n> PUT and PROPPATCH to update the working resource on the server and CHECKIN\n> the working resource.  Note that working resources are required since there\n> is no single method for setting properties and content simultaneously.\n> Some servers may have a batch capability to atomically check in numerous\n> resources atomically.\n\nA third model: the client does a CHECKOUT to get a working resource, then\ndoes a bunch of PUT/PROPPATCH to that working resource. When the client is\ndone, it does a CHECKIN.\n\n[ this contrasts to your model #2 where the client doesn't checkout until\n  they are done with a bunch of local changes. ]\n\n>...\n> Should clarify in the spec. that 'Overwrite : T' means update in place\n> (thereby ignoring the RFC2518 semantics that call for an initial DELETE of\n> the destination).  Remove the 'Overwrite: update' option.\n\nAbout bloody time.\n\n>...\n> Agenda item: should consider moving SET-TARGET out of core.\n\nPlease.\n\nWithout labels, the only thing that SET-TARGET could do is point at a\nspecific version, rather than \"floating\" with the latest. (hmm. how would\nyou reset the target to floating?)\n\n[ and I don't want to implement SET-TARGET :-) ]\n\n>...\n> Suggested that there be no branching in core, no labels in core, but that\n> there should be a version history available in core.\n\nUm. Why? At the moment, I'm not seeing a need for these in Subversion. I'd\nlike to understand the need for these in the core.\n\n[ I think the core should only be enough to support straight-line\n  versioning, and enough to support down-level clients. ]\n\n>...\n> Should separate the 'label' option from the client managed workspace\n> option.  I becomes its own option.\n\nYah, I saw this just a couple nights ago. I couldn't figure out why the two\nconcepts were mixed into the same section.\n\n> How about a header to get the latest version in an activity?\n> Suggest a REPORT against a version history to ask for the latest verswion\n> in a given activity, the response includes a version URL (noted that you\n> can issue depth requests if the target is a collection).\n\nCouldn't you do this with a property report, fetching the DAV:activity-set\nfor each version resource identified by DAV:version-set of the version\nhistory resource?\n\n[ although this form would give you all the activities associated with a\n  version history ]\n\nHmm. Something closer would be a property report fetching an activity's\nversion-set, then their checkin-date. The client could then sort them.\n\nBut yah... another report is possible, too :-)\n\nCheers,\n-g\n\n-- \nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-14029438"}, {"subject": "RE: Minutes Delta-V breakout meeting 14-Dec-0", "content": "The reason why \"core\" versioning servers, e.g. document management servers,\nneed a way to list existing versions (what I think is meant by \"version\nhistory\") is because you need a way to tell the client what the URLs for\nprevious versions are.  The URLs are not calculable by clietns.\n\nThe format can be as dead simple as a list of URLs, though.\n\nIs there any way that getting a list of revision URLs for a versioned\nresource can work the same way as DAV clients currently browse directory\ncontents?  At least, the XML format can be similar:\n<response>\n  <href>~milele/public/advanced-status-reporting.htm?version=5</href>\n  <propstat>\n    <prop>\n      <creator-displayname>Lisa</creator-displayname>\n      <checkin-date>20001212T1332</checkin-date>\n    </prop>\n  </propstat>\n</response>\n<response>\n  <href>~milele/public/advanced-status-reporting.htm?version=6</href>\n  <propstat>\n    <prop>\n      <creator-displayname>Lisa</creator-displayname>\n      <checkin-date>20001213T0942</checkin-date>\n    </prop>\n  </propstat>\n</response>\n\nHmm, this really argues for using PROPFIND since the client can say what\nprops they want for the version.  Perhaps instead of using attributes in the\nbody of PROPFIND request (I never really understood where they would go)\nthere could just be an XML element to tell the server whether the client\nwanted version detail or not:\n\nPROPFIND thisresource\n\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n   <propfind xmlns=\"DAV:\">\n     <versions>show-last-five</D:versions>\n     <prop>\n          <creator-displayname/>\n          <checkin-date/>\n     </prop>\n   </propfind>\n\nlisa\n\n> -----Original Message-----\n> From: ietf-dav-versioning-request@w3.org\n> [mailto:ietf-dav-versioning-request@w3.org]On Behalf Of Greg Stein\n> Sent: Friday, December 15, 2000 3:13 PM\n> To: ietf-dav-versioning@w3.org\n> Subject: Re: Minutes Delta-V breakout meeting 14-Dec-00\n>\n>\n> On Fri, Dec 15, 2000 at 04:03:50PM +0000, Tim_Ellison@uk.ibm.com wrote:\n> >...\n> > Discussed ways of working with client side workspaces.\n> > One model is that clients acquire locks across all resources\n> that they want\n> > to update, sends updates, then releases all the locks.  This is\n> inherently\n> > pessimistic, and isn't going to scale to updating large numbers of\n> > resources.\n> > Another model is to use GET and PROPFIND to copy resources over to the\n> > client machine.  Clearly clients must be stateful to maintain\n> the resources\n> > and any subsequent changes to the resources made by the client.\n>  (Clients\n> > may check with the server to ensure that the changes are still\n> > non-conflicting by considering the current server state.)  When\n> time comes\n> > to make changes on the server the client checks out the versions, issues\n> > PUT and PROPPATCH to update the working resource on the server\n> and CHECKIN\n> > the working resource.  Note that working resources are required\n> since there\n> > is no single method for setting properties and content simultaneously.\n> > Some servers may have a batch capability to atomically check in numerous\n> > resources atomically.\n>\n> A third model: the client does a CHECKOUT to get a working resource, then\n> does a bunch of PUT/PROPPATCH to that working resource. When the client is\n> done, it does a CHECKIN.\n>\n> [ this contrasts to your model #2 where the client doesn't checkout until\n>   they are done with a bunch of local changes. ]\n>\n> >...\n> > Should clarify in the spec. that 'Overwrite : T' means update in place\n> > (thereby ignoring the RFC2518 semantics that call for an\n> initial DELETE of\n> > the destination).  Remove the 'Overwrite: update' option.\n>\n> About bloody time.\n>\n> >...\n> > Agenda item: should consider moving SET-TARGET out of core.\n>\n> Please.\n>\n> Without labels, the only thing that SET-TARGET could do is point at a\n> specific version, rather than \"floating\" with the latest. (hmm. how would\n> you reset the target to floating?)\n>\n> [ and I don't want to implement SET-TARGET :-) ]\n>\n> >...\n> > Suggested that there be no branching in core, no labels in\n> core, but that\n> > there should be a version history available in core.\n>\n> Um. Why? At the moment, I'm not seeing a need for these in Subversion. I'd\n> like to understand the need for these in the core.\n>\n> [ I think the core should only be enough to support straight-line\n>   versioning, and enough to support down-level clients. ]\n>\n> >...\n> > Should separate the 'label' option from the client managed workspace\n> > option.  I becomes its own option.\n>\n> Yah, I saw this just a couple nights ago. I couldn't figure out\n> why the two\n> concepts were mixed into the same section.\n>\n> > How about a header to get the latest version in an activity?\n> > Suggest a REPORT against a version history to ask for the\n> latest verswion\n> > in a given activity, the response includes a version URL (noted that you\n> > can issue depth requests if the target is a collection).\n>\n> Couldn't you do this with a property report, fetching the DAV:activity-set\n> for each version resource identified by DAV:version-set of the version\n> history resource?\n>\n> [ although this form would give you all the activities associated with a\n>   version history ]\n>\n> Hmm. Something closer would be a property report fetching an activity's\n> version-set, then their checkin-date. The client could then sort them.\n>\n> But yah... another report is possible, too :-)\n>\n> Cheers,\n> -g\n>\n> --\n> Greg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-14040446"}, {"subject": "RE: II.6, non-reusable version URLs (was: comments on deltav-10.5  from  Yaron Goland, Act Two", "content": "Lisa asked for a use case that\nmotivated requiring that version URL's not be\nre-used (she suggests having a client that cares\njust use the etag).  I believe that Boris has\nprovided a reasonable use case here ... do people\nagree?\n\nNote that Lisa's objection was not based on\nimplementation difficulty, but rather lack of\nmotivation for the requirement.\n\nAnother objection was that this requirement\nwould cause the version URL's to become longer\nand more obscure.  I personally would be unlikely\nto \"type in\" a version URL, but instead would just\nbe \"clicking\" on one (as in Boris' example below),\nso the length/obscurity of the version URL matters\nmuch less to me than its reliability.\n\nMinimally we will say that a version URL SHOULD be\nunique, but when I wear my client-writer's hat, I\nfind SHOULD's relatively worthless, and only care\nabout MUST's.\n\nWhat do other folks think?\n\nCheers,\nGeoff\n\n-----Original Message-----\nFrom: Boris Bokowski/OTT/OTI [mailto:Boris_Bokowski@oti.com]\nSent: Wednesday, December 13, 2000 11:51 AM\nTo: ietf-dav-versioning@w3.org\nSubject: RE: II.6, non-reusable version URLs (was: comments on\ndeltav-10.5 from Yaron Goland, Act Two)\n\n\n> I'd never recommend to any client to stop using ETags for this purpose!\n> Sounds dangerous.  The client always ought to rely on the ETag to see\n> if things have changed.  Require clients to use ETag for what it was\n> designed, and further, require clients to be able to deal with re-use\n> of version URLs.  It's good medicine.\n>\n> Now, my second line of defense for this is usability.  Assuming somebody\n> will want to put version links as URLs in web pages, or in emails, then\n> it would be more usable to at least be able to construct short, possibly\n> meaningful version URLs.  The use of a GUID will preclude this.\n> \n> FWIW, here's what a Xythos Version URL for a real file looks like:\n>\nhttp://www.sharemation.com/~milele/public/advanced-status-reporting.htm?vers\nion=1\n\nTo me, this looks like a good example where in practice, a URL is all you \ncan send to me. It's just not practical to send me the ETag as well, \nbecause there is no easy way for me to check it. I think I would prefer \nclicking on a URL such as\nhttp://www.sharemation.com/~milele/public/advanced-status-reporting.htm/0074\n1ab6a2c400141e860000c0a80cc2\nor\nhttp://www.sharemation.com/~milele/public/advanced-status-reporting.htm?vers\nion=1&etag=1fe4-69-39e7056c\nover checking the ETag myself.\n\nWith reusable version URLs, users would need to know about ETags. Example: \nIf you accidentally deleted advanced-status-reporting.htm and then\nre-created it, a URL which just \nsays ?version=1 would link to the latest version of that document instead \nof the first version.\n\n-Boris.\n\n\n\n", "id": "lists-005-14055425"}, {"subject": "RE: II.6, non-reusable version URLs (was: comments on deltav-10.5  from  Yaron Goland, Act Two", "content": "To clarify my position...\n\nI now understand Boris' use-case, but it applies equally to regular URLs.\nI'd like to treat version-URLs much like existing URLs.\n\n - You get a URL somehow\n - You GET the content behind the URL from the server.\n - If you've seen it before, you might have the ETag and know if it's\ndifferent.\n - If you haven't seen it before, you won't have the ETag and can't tell.\n - If the target content was deleted and re-created with the same URL,\nthat's life.\n\nWhy do version URLs have to be different from existing URLs?  Why are\nversions special in that clients have to know if the content has changed --\nin a different way than is already used for regular URLs (ETags)?  Let's not\nsolve this problem in a different way!\n\nSince Boris' use-case applies to regular URLs equally well as to version\nURLs, AND since you can even consider it a feature that one can replace the\ncontent behind a static URL with new content, then a general solution would\nseem to be the answer.  And I think the general solution is in hand.  As\nwith regular URLs, if a user intends for something to be the _same_\ndocument, they use the same URL.  Nothing stops users from replacing the\ncontent behind a URL.  URLs are static even though the content behind them\nis dynamic; so if a document creator reused the same URL, when they can so\neasily use a different one, clearly they intended to reuse the same URL.\n\nlisa\n\n> -----Original Message-----\n> From: ietf-dav-versioning-request@w3.org\n> [mailto:ietf-dav-versioning-request@w3.org]On Behalf Of Clemm, Geoff\n> Sent: Friday, December 15, 2000 5:54 PM\n> To: ietf-dav-versioning@w3.org\n> Subject: RE: II.6, non-reusable version URLs (was: comments on\n> deltav-10.5 from Yaron Goland, Act Two)\n>\n>\n> Lisa asked for a use case that\n> motivated requiring that version URL's not be\n> re-used (she suggests having a client that cares\n> just use the etag).  I believe that Boris has\n> provided a reasonable use case here ... do people\n> agree?\n>\n> Note that Lisa's objection was not based on\n> implementation difficulty, but rather lack of\n> motivation for the requirement.\n>\n> Another objection was that this requirement\n> would cause the version URL's to become longer\n> and more obscure.  I personally would be unlikely\n> to \"type in\" a version URL, but instead would just\n> be \"clicking\" on one (as in Boris' example below),\n> so the length/obscurity of the version URL matters\n> much less to me than its reliability.\n>\n> Minimally we will say that a version URL SHOULD be\n> unique, but when I wear my client-writer's hat, I\n> find SHOULD's relatively worthless, and only care\n> about MUST's.\n>\n> What do other folks think?\n>\n> Cheers,\n> Geoff\n>\n> -----Original Message-----\n> From: Boris Bokowski/OTT/OTI [mailto:Boris_Bokowski@oti.com]\n> Sent: Wednesday, December 13, 2000 11:51 AM\n> To: ietf-dav-versioning@w3.org\n> Subject: RE: II.6, non-reusable version URLs (was: comments on\n> deltav-10.5 from Yaron Goland, Act Two)\n>\n>\n> > I'd never recommend to any client to stop using ETags for this purpose!\n> > Sounds dangerous.  The client always ought to rely on the ETag to see\n> > if things have changed.  Require clients to use ETag for what it was\n> > designed, and further, require clients to be able to deal with re-use\n> > of version URLs.  It's good medicine.\n> >\n> > Now, my second line of defense for this is usability.  Assuming somebody\n> > will want to put version links as URLs in web pages, or in emails, then\n> > it would be more usable to at least be able to construct short, possibly\n> > meaningful version URLs.  The use of a GUID will preclude this.\n> >\n> > FWIW, here's what a Xythos Version URL for a real file looks like:\n> >\n> http://www.sharemation.com/~milele/public/advanced-status-reportin\ng.htm?vers\nion=1\n\nTo me, this looks like a good example where in practice, a URL is all you\ncan send to me. It's just not practical to send me the ETag as well,\nbecause there is no easy way for me to check it. I think I would prefer\nclicking on a URL such as\nhttp://www.sharemation.com/~milele/public/advanced-status-reporting.htm/0074\n1ab6a2c400141e860000c0a80cc2\nor\nhttp://www.sharemation.com/~milele/public/advanced-status-reporting.htm?vers\nion=1&etag=1fe4-69-39e7056c\nover checking the ETag myself.\n\nWith reusable version URLs, users would need to know about ETags. Example:\nIf you accidentally deleted advanced-status-reporting.htm and then\nre-created it, a URL which just\nsays ?version=1 would link to the latest version of that document instead\nof the first version.\n\n-Boris.\n\n\n\n", "id": "lists-005-14067261"}, {"subject": "Re: II.6, non-reusable version URLs (was: comments on deltav-10.5  from  Yaron Goland, Act Two", "content": "The key thing that differentiates a version from a generic resource is\nthat its purpose is to capture a particular state of a generic resource,\nand therefore it is immutable (unless a server explicitly adds an IsMutable\nattribute).  This means that when you use a version URL, you are saying\nthat you want to see a particular state of a particular resource.\n\nIn other words, a version is not like any other resource, and so\na version URL should not be treated like any other resource URL,\nbut rather should reflect the semantics and purpose of the\nversion resource.\n\nIn particular, version URL's are used in several properties\nin the versioning protocol.  They appear as the DAV:predecessor-set\nand DAV:successor-set of a version, and the DAV:version-set of a\nbaseline and the DAV:version-set of an activity.  In each of\nthese cases, having that URL get rebound to something that does\nnot reliably capture the appropriate state would violate the\nsemantics of these properties.\n\nNow we could have special case rules such as \"if a version URL appears\nin any DAV:predecessor-set or DAV:successor-set or DAV:version-set of\nany resource, then that version URL MUST NOT refer to anything other\nthan that version\", or even worse, we could require that each of\nthese properties contain both a URL and an etag for every version,\nand force every client to check the validity of the URL, but it\ncertainly would be friendlier to a client to have the server do the\nwork (especially since nobody has argued that this is hard for a\nserver to do).\n\nCheers,\nGeoff\n\n\n   From: \"Lisa Dusseault\" <lisa@xythos.com>\n\n   I now understand Boris' use-case, but it applies equally to regular URLs.\n   I'd like to treat version-URLs much like existing URLs.\n\n    - You get a URL somehow\n\n    - You GET the content behind the URL from the server.\n\n    - If you've seen it before, you might have the ETag and know if it's\n   different.\n\n    - If you haven't seen it before, you won't have the ETag and can't tell.\n    - If the target content was deleted and re-created with the same URL,\n   that's life.\n\n   Why do version URLs have to be different from existing URLs?  Why are\n   versions special in that clients have to know if the content has changed --\n   in a different way than is already used for regular URLs (ETags)?  Let's not\n   solve this problem in a different way!\n\n   Since Boris' use-case applies to regular URLs equally well as to version\n   URLs, AND since you can even consider it a feature that one can replace the\n   content behind a static URL with new content, then a general solution would\n   seem to be the answer.  And I think the general solution is in hand.  As\n   with regular URLs, if a user intends for something to be the _same_\n   document, they use the same URL.  Nothing stops users from replacing the\n   content behind a URL.  URLs are static even though the content behind them\n   is dynamic; so if a document creator reused the same URL, when they can so\n   easily use a different one, clearly they intended to reuse the same URL.\n\n   lisa\n\n   > -----Original Message-----\n   > From: ietf-dav-versioning-request@w3.org\n   > [mailto:ietf-dav-versioning-request@w3.org]On Behalf Of Clemm, Geoff\n   > Sent: Friday, December 15, 2000 5:54 PM\n   > To: ietf-dav-versioning@w3.org\n   > Subject: RE: II.6, non-reusable version URLs (was: comments on\n   > deltav-10.5 from Yaron Goland, Act Two)\n   >\n   >\n   > Lisa asked for a use case that\n   > motivated requiring that version URL's not be\n   > re-used (she suggests having a client that cares\n   > just use the etag).  I believe that Boris has\n   > provided a reasonable use case here ... do people\n   > agree?\n   >\n   > Note that Lisa's objection was not based on\n   > implementation difficulty, but rather lack of\n   > motivation for the requirement.\n   >\n   > Another objection was that this requirement\n   > would cause the version URL's to become longer\n   > and more obscure.  I personally would be unlikely\n   > to \"type in\" a version URL, but instead would just\n   > be \"clicking\" on one (as in Boris' example below),\n   > so the length/obscurity of the version URL matters\n   > much less to me than its reliability.\n   >\n   > Minimally we will say that a version URL SHOULD be\n   > unique, but when I wear my client-writer's hat, I\n   > find SHOULD's relatively worthless, and only care\n   > about MUST's.\n   >\n   > What do other folks think?\n   >\n   > Cheers,\n   > Geoff\n   >\n   > -----Original Message-----\n   > From: Boris Bokowski/OTT/OTI [mailto:Boris_Bokowski@oti.com]\n   > Sent: Wednesday, December 13, 2000 11:51 AM\n   > To: ietf-dav-versioning@w3.org\n   > Subject: RE: II.6, non-reusable version URLs (was: comments on\n   > deltav-10.5 from Yaron Goland, Act Two)\n   >\n   >\n   > > I'd never recommend to any client to stop using ETags for this purpose!\n   > > Sounds dangerous.  The client always ought to rely on the ETag to see\n   > > if things have changed.  Require clients to use ETag for what it was\n   > > designed, and further, require clients to be able to deal with re-use\n   > > of version URLs.  It's good medicine.\n   > >\n   > > Now, my second line of defense for this is usability.  Assuming somebody\n   > > will want to put version links as URLs in web pages, or in emails, then\n   > > it would be more usable to at least be able to construct short, possibly\n   > > meaningful version URLs.  The use of a GUID will preclude this.\n   > >\n   > > FWIW, here's what a Xythos Version URL for a real file looks like:\n   > >\n   > http://www.sharemation.com/~milele/public/advanced-status-reportin\n   g.htm?vers\n   ion=1\n\n   To me, this looks like a good example where in practice, a URL is all you\n   can send to me. It's just not practical to send me the ETag as well,\n   because there is no easy way for me to check it. I think I would prefer\n   clicking on a URL such as\n   http://www.sharemation.com/~milele/public/advanced-status-reporting.htm/0074\n   1ab6a2c400141e860000c0a80cc2\n   or\n   http://www.sharemation.com/~milele/public/advanced-status-reporting.htm?vers\n   ion=1&etag=1fe4-69-39e7056c\n   over checking the ETag myself.\n\n   With reusable version URLs, users would need to know about ETags. Example:\n   If you accidentally deleted advanced-status-reporting.htm and then\n   re-created it, a URL which just\n   says ?version=1 would link to the latest version of that document instead\n   of the first version.\n\n   -Boris.\n\n\n\n", "id": "lists-005-14082731"}, {"subject": "Re: Minutes Delta-V breakout meeting 14-Dec-0", "content": "   From: \"Lisa Dusseault\" <lisa@xythos.com>\n\n   The reason why \"core\" versioning servers, e.g. document management servers,\n   need a way to list existing versions (what I think is meant by \"version\n   history\")  is because you need a way to tell the client what the URLs for\n   previous versions are.  The URLs are not calculable by clietns.\n\nI don't think Greg was questioning the need to have a way\nof getting a list of existing versions.  I think he was just\nsaying that he doesn't need anything more than the DAV:version-tree\nreport (i.e. doesn't need the version history to actually be\na resource).\n\n   The format can be as dead simple as a list of URLs, though.\n\n   Is there any way that getting a list of revision URLs for a versioned\n   resource can work the same way as DAV clients currently browse directory\n   contents?\n\nYes, the DAV:version-tree report lets you say what properties you want\nto see.  If you support version history resources, you can use the\nDAV:property report (which returns an extended PROPFIND-like response).\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-14099517"}, {"subject": "Re: Minutes Delta-V breakout meeting 14-Dec-0", "content": "On Sat, Dec 16, 2000 at 10:03:53AM -0500, Geoffrey M. Clemm wrote:\n> \n>    From: \"Lisa Dusseault\" <lisa@xythos.com>\n> \n>    The reason why \"core\" versioning servers, e.g. document management servers,\n>    need a way to list existing versions (what I think is meant by \"version\n>    history\")  is because you need a way to tell the client what the URLs for\n>    previous versions are.  The URLs are not calculable by clietns.\n> \n> I don't think Greg was questioning the need to have a way\n> of getting a list of existing versions.  I think he was just\n> saying that he doesn't need anything more than the DAV:version-tree\n> report (i.e. doesn't need the version history to actually be\n> a resource).\n\nCorrect. Version histories do not add anything to our system at this point.\nWe will support the version-tree, though.\n\nThat said: I *do* know how/what a version history resource would be within\nour system, and could provide the functionality; it is simply that the\nclient doesn't need it at this time.\n\n[ and, in fact, I don't see its purpose in general. if you could somehow\n  browse and acquire an HREF to a history, then you'd have a resource that\n  tells you a bunch of version resources. But that doesn't tell you anything\n  about the version-controlled resources (e.g. they're layout/structure, how\n  they were made visible to users). So basically, you have an unstructured\n  index to some data, but without a way to properly structure it. Seems a\n  bit pointless :-) ]\n\n>...\n> Yes, the DAV:version-tree report lets you say what properties you want\n> to see.  If you support version history resources, you can use the\n> DAV:property report (which returns an extended PROPFIND-like response).\n\nHow is a property report useful? There is the mapping problem back to the\nversion-controlled resources (VCR).\n\nHmm. I guess \"detached\" version histories aren't useful. When they are still\nhooked in via a VCR, then it handy because you can link from a VCR to a\nhistory to versions within a property report.\n\nOh, whoops. I think that I will have version histories. I forgot that I was\nplanning to do prop reports just like that for some functionality\n(specifically, to call up a change log with users, times, comments). hehe...\ncall me clueless :-)\n\nCheers,\n-g\n\n-- \nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-14108287"}, {"subject": "Re: Minutes Delta-V breakout meeting 14-Dec-0", "content": "Greg,\nGlad to see we're hitting some our your issues.\n\n\nA third model: the client does a CHECKOUT to get a working resource, then\ndoes a bunch of PUT/PROPPATCH to that working resource. When the client is\ndone, it does a CHECKIN.\n<jra>This was the model Tim was referring to, he just left out the \ncheckout. The checkout can be done either when the client gets the \nresource to indicate an intent to change and/or reserve the resource, or \nwhen ready to do the updates on the server. The protocol can support \neither policy.</jra>\n\n>...\n> Suggested that there be no branching in core, no labels in core, but \nthat\n> there should be a version history available in core.\n\nUm. Why? At the moment, I'm not seeing a need for these in Subversion. I'd\nlike to understand the need for these in the core.\n<jra>The purpose of the version history resource is just to provide a \nplace to get information about the versioned resource, and to provide a \nresource the server can iterate over in a report/list. This is in case \nthere are no version-controlled resources on a version and it becomes \n\"lost\".</jra>\n\n\nCouldn't you do this with a property report, fetching the DAV:activity-set\nfor each version resource identified by DAV:version-set of the version\nhistory resource?\n<jra>We could, but this is likely to be a common operation, especially \njust before merging an activity into a a workspace.</jra>\n\n\n\n", "id": "lists-005-14117953"}, {"subject": "RE: Minutes Delta-V breakout meeting 14-Dec-0", "content": "<lisa>\nHmm, this really argues for using PROPFIND since the client can say what\nprops they want for the version.  Perhaps instead of using attributes in \nthe\nbody of PROPFIND request (I never really understood where they would go)\nthere could just be an XML element to tell the server whether the client\nwanted version detail or not:\n\nPROPFIND thisresource\n\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n   <propfind xmlns=\"DAV:\">\n     <versions>show-last-five</D:versions>\n     <prop>\n          <creator-displayname/>\n          <checkin-date/>\n     </prop>\n   </propfind>\n</lisa>\n<jra>Lisa, here's what we were planning:\n\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n   <propfind xmlns=\"DAV:\">\n     <prop>\n          <creator-displayname/>\n              <versions>show-last-five</D:versions>\n          <checkin-date/>\n              <versions>show-last-five</D:versions>\n     </prop>\n   </propfind>\n\nThis is more compatible with 2518.\n\n\n\n", "id": "lists-005-14126675"}, {"subject": "live props on a VC", "content": "The spec is pretty clear in 2.1.3 that dead properties of a version resource\nmust also be exposed on the VCR. It also says that live props may differ.\nBut it would be good to know if a VR's live props must also be exposed on\nthe VCR.\n\nSpecifically, I want to get the DAV:version-name from the VCR (rather than\nissue a second PROPFIND against the DAV:target of the VCR).\n\nI don't see anything in the spec about exposing VR live props thru the VCR\n(I could have easily missed it so far). I'd like to state that they *are*\nexposed.\n\nCheers,\n-g\n\n-- \nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-14135257"}, {"subject": "RE: Minutes Delta-V breakout meeting 14-Dec-0", "content": "I'm afraid I'm a little confused, perhaps it's just the indenting.  Is the\n<versions> tag supposed to be inside each the property name tags, or\nparallel to them?\n\nI'd suggest one only needs one <versions> tag per PROPFIND body, because\nit's pretty nonsensical to ask for one property over 5 versions, and a\ndifferent property over 50 versions, all in one request. the client is more\nlikely to make separate requests.\n\nAnother suggestion is to reuse the \"range\" syntax and logic (e.g. byte-range\nheaders).  This allows a \"last-n\" selection, as well as \"m through n\" or\n\"first n\".  Then we don't need to define custom syntax or logic to pick\nwhich versions to show.\n\nThe basic idea, I think, is sound.\n\nlisa\n  -----Original Message-----\n  From: ietf-dav-versioning-request@w3.org\n[mailto:ietf-dav-versioning-request@w3.org]On Behalf Of Jim Amsden\n  Sent: Sunday, December 17, 2000 7:26 AM\n  To: ietf-dav-versioning@w3.org\n  Subject: RE: Minutes Delta-V breakout meeting 14-Dec-00\n\n\n\n  <lisa>\n  Hmm, this really argues for using PROPFIND since the client can say what\n  props they want for the version.  Perhaps instead of using attributes in\nthe\n  body of PROPFIND request (I never really understood where they would go)\n  there could just be an XML element to tell the server whether the client\n  wanted version detail or not:\n\n  PROPFIND thisresource\n\n  <?xml version=\"1.0\" encoding=\"utf-8\" ?>\n    <propfind xmlns=\"DAV:\">\n      <versions>show-last-five</D:versions>\n      <prop>\n           <creator-displayname/>\n           <checkin-date/>\n      </prop>\n    </propfind>\n  </lisa>\n  <jra>Lisa, here's what we were planning:\n\n  <?xml version=\"1.0\" encoding=\"utf-8\" ?>\n    <propfind xmlns=\"DAV:\">\n      <prop>\n           <creator-displayname/>\n                <versions>show-last-five</D:versions>\n           <checkin-date/>\n               <versions>show-last-five</D:versions>\n      </prop>\n    </propfind>\n\n  This is more compatible with 2518.\n\n\n\n", "id": "lists-005-14142944"}, {"subject": "Re: live props on a VC", "content": "   From: Greg Stein <gstein@lyra.org>\n\n   The spec is pretty clear in 2.1.3 that dead properties of a version resource\n   must also be exposed on the VCR. It also says that live props may differ.\n   But it would be good to know if a VR's live props must also be exposed on\n   the VCR.\n\n   Specifically, I want to get the DAV:version-name from the VCR (rather than\n   issue a second PROPFIND against the DAV:target of the VCR).\n\nYou could just use the property report to avoid the extra roundtrip, i.e. \nto get the version-name of the target of a vcr:\n\nREPORT /whatever HTTP/1.1\n... some headers ...\n<D:property-report xmlns:D=\"DAV:\">\n  <D:target>\n    <D:version-name/>\n  </D:target>\n</D:property-report>\n\n   I don't see anything in the spec about exposing VR live props thru the VCR\n   (I could have easily missed it so far). I'd like to state that they *are*\n   exposed.\n\nIn general, the VCR live properties can differ from those of the\nversion identified by its DAV:target (e.g. creationdate,\ngetmodificationdate, etag, etc).  Currently, a server can implement a\nVCR PROPFIND without traversing over to the target (which in a\ndistributed versioning system could exist on a different server).\nThere are some live properties (such as DAV:version-name and\nDAV:version-history) that could be cached on the VCR because they only\nchange when you change the DAV:target, but I am concerned that this\nblurring of the distinction between a VCR and the version identified\nby the DAV:target of the VCR is likely to confuse implementers into\nthinking that all the live properties of the VCR and the DAV:target\nversion have the same value.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-14153674"}, {"subject": "PROPFIND instead of REPORT (was Re: Minutes Delta-V breakout meeting 14-Dec-00", "content": "At the recent IETF meeting, JimA proposed that we use PROPFIND instead\nof REPORT to obtain information from the server that requires\narguments to qualify what kind of information is required.  Although\nan appealing thought, after mulling this over, I don't see how we\ncould do this in a way that is compatible with PROPFIND but\ndoes not violate the property value DTD's.\n\nJim's recent post describing a request of this kind doesn't really work:\n\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n  <propfind xmlns=\"DAV:\">\n    <prop>\n         <creator-displayname/> \n              <versions>show-last-five</D:versions>\n         <checkin-date/>\n             <versions>show-last-five</D:versions>\n    </prop>\n  </propfind>\n\nIf you indent this consistently, it becomes:\n\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n  <propfind xmlns=\"DAV:\">\n    <prop>\n         <creator-displayname/> \n         <versions>show-last-five</D:versions>\n         <checkin-date/>\n         <versions>show-last-five</D:versions>\n    </prop>\n  </propfind>\n\nwhich seems to be a request for creator-displayname, checkin-date, and\na repeated request for a property named \"D:versions\" (I'm assuming\nthat all elements should have been prefixed by \"D:\").\n\nBased on his original indentation, JimA probably meant:\n\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n  <D:propfind xmlns=\"DAV:\">\n    <D:prop>\n         <D:creator-displayname> \n           <D:versions>show-last-five</D:versions>\n         </D:creator-displayname>\n         <D:checkin-date>\n           <D:versions>show-last-five</D:versions>\n         </D:checkin-date>\n    </D:prop>\n  </D:propfind>\n\nBut now we've violated the DTD's for D:checkin-date and\nD:creator-displayname (which are supposed to be either empty or\ndates and strings, respectively, to display to the user).\n\nCurrently, I think the avoidance of DTD ambiguity is worth\nthe introduction of a new method (i.e. REPORT).\n\nCheers,\nGeoff\n\n   From: \"Lisa Dusseault\" <lisa@xythos.com>\n   Date: Sun, 17 Dec 2000 16:33:44 -0800\n\n   I'm afraid I'm a little confused, perhaps it's just the indenting.  Is\n   the <versions> tag supposed to be inside each the property name tags, or\n   parallel to them?  \n\n   I'd suggest one only needs one <versions> tag per PROPFIND body, because\n   it's pretty nonsensical to ask for one property over 5 versions, and a\n   different property over 50 versions, all in one request. the client is\n   more likely to make separate requests.\n\n   Another suggestion is to reuse the \"range\" syntax and logic (e.g.\n   byte-range headers).  This allows a \"last-n\" selection, as well as \"m\n   through n\" or \"first n\".  Then we don't need to define custom syntax or\n   logic to pick which versions to show.\n\n   The basic idea, I think, is sound.\n\n   lisa\n\n   -----Original Message-----\n   From: ietf-dav-versioning-request@w3.org\n   [mailto:ietf-dav-versioning-request@w3.org]On Behalf Of Jim Amsden\n   Sent: Sunday, December 17, 2000 7:26 AM\n   To: ietf-dav-versioning@w3.org\n   Subject: RE: Minutes Delta-V breakout meeting 14-Dec-00\n\n\n   <lisa> \n   Hmm, this really argues for using PROPFIND since the client can say what\n   props they want for the version.  Perhaps instead of using attributes in\n   the\n   body of PROPFIND request (I never really understood where they would go)\n   there could just be an XML element to tell the server whether the client\n   wanted version detail or not:\n\n   PROPFIND thisresource\n\n   <?xml version=\"1.0\" encoding=\"utf-8\" ?>\n     <propfind xmlns=\"DAV:\">\n       <versions>show-last-five</D:versions>\n       <prop>\n    <creator-displayname/>\n    <checkin-date/>\n       </prop>\n     </propfind>\n   </lisa> \n   <jra>Lisa, here's what we were planning: \n\n   <?xml version=\"1.0\" encoding=\"utf-8\" ?>\n     <propfind xmlns=\"DAV:\">\n       <prop>\n    <creator-displayname/> \n <versions>show-last-five</D:versions>\n    <checkin-date/>\n<versions>show-last-five</D:versions>\n       </prop>\n     </propfind>\n\n   This is more compatible with 2518. \n\n\n\n", "id": "lists-005-14162660"}, {"subject": "Re: PROPFIND instead of REPORT (was Re: Minutes Delta-V breakout meeting 14-Dec-00", "content": "I find that using PROPFIND rather than REPORT is a big bogus. I'm not\nnecessarily asking for properties. I'm asking for information from the\nserver. Is a compare-report a set of *properties* ?? Not in my mind.\n\nFor Subversion, I'm also going to be using a custom report. The client will\nsend to the server a representation of the client state. The server will\nreturn a report saying something to the effect of, \"that tree is out of\ndate; that file is an older version, but is equivalent to the latest; those\nfiles are fine; etc\"\n\nThat isn't a PROPFIND :-)\n\nCheers,\n-g\n\nOn Mon, Dec 18, 2000 at 12:49:31AM -0500, Geoffrey M. Clemm wrote:\n> \n> At the recent IETF meeting, JimA proposed that we use PROPFIND instead\n> of REPORT to obtain information from the server that requires\n> arguments to qualify what kind of information is required.  Although\n> an appealing thought, after mulling this over, I don't see how we\n> could do this in a way that is compatible with PROPFIND but\n> does not violate the property value DTD's.\n> \n> Jim's recent post describing a request of this kind doesn't really work:\n> \n> <?xml version=\"1.0\" encoding=\"utf-8\" ?>\n>   <propfind xmlns=\"DAV:\">\n>     <prop>\n>          <creator-displayname/> \n>               <versions>show-last-five</D:versions>\n>          <checkin-date/>\n>              <versions>show-last-five</D:versions>\n>     </prop>\n>   </propfind>\n> \n> If you indent this consistently, it becomes:\n> \n> <?xml version=\"1.0\" encoding=\"utf-8\" ?>\n>   <propfind xmlns=\"DAV:\">\n>     <prop>\n>          <creator-displayname/> \n>          <versions>show-last-five</D:versions>\n>          <checkin-date/>\n>          <versions>show-last-five</D:versions>\n>     </prop>\n>   </propfind>\n> \n> which seems to be a request for creator-displayname, checkin-date, and\n> a repeated request for a property named \"D:versions\" (I'm assuming\n> that all elements should have been prefixed by \"D:\").\n> \n> Based on his original indentation, JimA probably meant:\n> \n> <?xml version=\"1.0\" encoding=\"utf-8\" ?>\n>   <D:propfind xmlns=\"DAV:\">\n>     <D:prop>\n>          <D:creator-displayname> \n>            <D:versions>show-last-five</D:versions>\n>          </D:creator-displayname>\n>          <D:checkin-date>\n>            <D:versions>show-last-five</D:versions>\n>          </D:checkin-date>\n>     </D:prop>\n>   </D:propfind>\n> \n> But now we've violated the DTD's for D:checkin-date and\n> D:creator-displayname (which are supposed to be either empty or\n> dates and strings, respectively, to display to the user).\n> \n> Currently, I think the avoidance of DTD ambiguity is worth\n> the introduction of a new method (i.e. REPORT).\n> \n> Cheers,\n> Geoff\n> \n>    From: \"Lisa Dusseault\" <lisa@xythos.com>\n>    Date: Sun, 17 Dec 2000 16:33:44 -0800\n> \n>    I'm afraid I'm a little confused, perhaps it's just the indenting.  Is\n>    the <versions> tag supposed to be inside each the property name tags, or\n>    parallel to them?  \n> \n>    I'd suggest one only needs one <versions> tag per PROPFIND body, because\n>    it's pretty nonsensical to ask for one property over 5 versions, and a\n>    different property over 50 versions, all in one request. the client is\n>    more likely to make separate requests.\n> \n>    Another suggestion is to reuse the \"range\" syntax and logic (e.g.\n>    byte-range headers).  This allows a \"last-n\" selection, as well as \"m\n>    through n\" or \"first n\".  Then we don't need to define custom syntax or\n>    logic to pick which versions to show.\n> \n>    The basic idea, I think, is sound.\n> \n>    lisa\n> \n>    -----Original Message-----\n>    From: ietf-dav-versioning-request@w3.org\n>    [mailto:ietf-dav-versioning-request@w3.org]On Behalf Of Jim Amsden\n>    Sent: Sunday, December 17, 2000 7:26 AM\n>    To: ietf-dav-versioning@w3.org\n>    Subject: RE: Minutes Delta-V breakout meeting 14-Dec-00\n> \n> \n>    <lisa> \n>    Hmm, this really argues for using PROPFIND since the client can say what\n>    props they want for the version.  Perhaps instead of using attributes in\n>    the\n>    body of PROPFIND request (I never really understood where they would go)\n>    there could just be an XML element to tell the server whether the client\n>    wanted version detail or not:\n> \n>    PROPFIND thisresource\n> \n>    <?xml version=\"1.0\" encoding=\"utf-8\" ?>\n>      <propfind xmlns=\"DAV:\">\n>        <versions>show-last-five</D:versions>\n>        <prop>\n>     <creator-displayname/>\n>     <checkin-date/>\n>        </prop>\n>      </propfind>\n>    </lisa> \n>    <jra>Lisa, here's what we were planning: \n> \n>    <?xml version=\"1.0\" encoding=\"utf-8\" ?>\n>      <propfind xmlns=\"DAV:\">\n>        <prop>\n>     <creator-displayname/> \n>  <versions>show-last-five</D:versions>\n>     <checkin-date/>\n> <versions>show-last-five</D:versions>\n>        </prop>\n>      </propfind>\n> \n>    This is more compatible with 2518. \n> \n\n-- \nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-14176627"}, {"subject": "Re: PROPFIND instead of REPORT           (was Re: Minutes Delta-V breakout meeting 14-Dec-00", "content": "> <?xml version=\"1.0\" encoding=\"utf-8\" ?>\n>  <D:propfind xmlns=\"DAV:\">\n>    <D:prop>\n>         <D:creator-displayname> \n>           <D:versions>show-last-five</D:versions>\n>         </D:creator-displayname>\n>         <D:checkin-date>\n>           <D:versions>show-last-five</D:versions>\n>         </D:checkin-date>\n>    </D:prop>\n>  </D:propfind>\n>\n> But now we've violated the DTD's for D:checkin-date and\n> D:creator-displayname (which are supposed to be either empty or\n> dates and strings, respectively, to display to the user).\n\nThis is just another nice example for a problem that can elegantly be\nsolved with the DTD change for properties that James and I recently\nsuggested (see\nhttp://lists.w3.org/Archives/Public/ietf-dav-versioning/2000OctDec/0244.html).\n\nWith this change, you could think of something like the following:\n\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n  <D:propfind xmlns=\"DAV:\">\n    <D:prop>\n      <D:property-name>creator-displayname</D:property-name>\n      <D:property-versions>show-last-five</D:property-versions>\n      <D:property-name>checkin-date</D:property-name>\n      <D:property-versions>show-last-five</D:property-versions>\n    </D:prop>\n  </D:propfind>\n\nInstead of requiring that a DAV:property-versions element follows each\nDAV:property-name element, one could -- following Lisa's suggestion --\ndefine the DTD to allow only one DAV:property-versions element as the\nlast (or, alternatively, the first) element within the DAV:prop\nelement.  Or, if you like overkill, write a DTD that either allows a\nsingle DAV:property-versions element as the first element within a\nDAV:prop element or a DAV:property-versions element after each\nD:property-name element.\n\nBTW., the \"show-last-five\" is subject to be replaced by something\nseriously specified, right?\n\n> Currently, I think the avoidance of DTD ambiguity is worth\n> the introduction of a new method (i.e. REPORT).\n\nIf RFC2518 had introduced a D:property-name as in the above example, the\nnew D:property-versions element just could be ignored by servers that do\nnot know this element without breaking compatibility.  Maybe it is really\ntime to fix this in RFC2518 rather than introducing yet another\nworkaround?\n\nBye,\n     Juergen\n\n\n\n", "id": "lists-005-14191332"}, {"subject": "Re: PROPFIND instead of REPORT (was Re: Minutes Delta-V breakout  meeting 14-Dec-00", "content": "Juergen,\n\nYour conclusions are correct, however, the earlier observations remain --\nthat this level of change to RFC2518 is unlikely to occur given the\nmomentum it has achieved.  We should focus on backwards compatible\nextensions.\n\nRegards,\n\nTim\n\n\nJuergen Reuter <reuterj@ira.uka.de> on 2000-12-18 11:14:33 AM\n\nPlease respond to Juergen Reuter <reuterj@ira.uka.de>\n\nTo:   \"Geoffrey M. Clemm\" <geoffrey.clemm@rational.com>\ncc:   reuterj@ira.uka.de, jjh@ira.uka.de, ietf-dav-versioning@w3.org\nSubject:  Re: PROPFIND instead of REPORT           (was Re: Minutes Delta-V\n      breakout meeting 14-Dec-00)\n\n\n\n\n> <?xml version=\"1.0\" encoding=\"utf-8\" ?>\n>  <D:propfind xmlns=\"DAV:\">\n>    <D:prop>\n>         <D:creator-displayname>\n>           <D:versions>show-last-five</D:versions>\n>         </D:creator-displayname>\n>         <D:checkin-date>\n>           <D:versions>show-last-five</D:versions>\n>         </D:checkin-date>\n>    </D:prop>\n>  </D:propfind>\n>\n> But now we've violated the DTD's for D:checkin-date and\n> D:creator-displayname (which are supposed to be either empty or\n> dates and strings, respectively, to display to the user).\n\nThis is just another nice example for a problem that can elegantly be\nsolved with the DTD change for properties that James and I recently\nsuggested (see\nhttp://lists.w3.org/Archives/Public/ietf-dav-versioning/2000OctDec/0244.html\n).\n\nWith this change, you could think of something like the following:\n\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n  <D:propfind xmlns=\"DAV:\">\n    <D:prop>\n      <D:property-name>creator-displayname</D:property-name>\n      <D:property-versions>show-last-five</D:property-versions>\n      <D:property-name>checkin-date</D:property-name>\n      <D:property-versions>show-last-five</D:property-versions>\n    </D:prop>\n  </D:propfind>\n\nInstead of requiring that a DAV:property-versions element follows each\nDAV:property-name element, one could -- following Lisa's suggestion --\ndefine the DTD to allow only one DAV:property-versions element as the\nlast (or, alternatively, the first) element within the DAV:prop\nelement.  Or, if you like overkill, write a DTD that either allows a\nsingle DAV:property-versions element as the first element within a\nDAV:prop element or a DAV:property-versions element after each\nD:property-name element.\n\nBTW., the \"show-last-five\" is subject to be replaced by something\nseriously specified, right?\n\n> Currently, I think the avoidance of DTD ambiguity is worth\n> the introduction of a new method (i.e. REPORT).\n\nIf RFC2518 had introduced a D:property-name as in the above example, the\nnew D:property-versions element just could be ignored by servers that do\nnot know this element without breaking compatibility.  Maybe it is really\ntime to fix this in RFC2518 rather than introducing yet another\nworkaround?\n\nBye,\n     Juergen\n\n\n\n", "id": "lists-005-14203125"}, {"subject": "Re: live props on a VC", "content": "I agree. However, we should note that the values may differ.\n\n\n\nThe spec is pretty clear in 2.1.3 that dead properties of a version \nresource\nmust also be exposed on the VCR. It also says that live props may differ.\nBut it would be good to know if a VR's live props must also be exposed on\nthe VCR.\n\nSpecifically, I want to get the DAV:version-name from the VCR (rather than\nissue a second PROPFIND against the DAV:target of the VCR).\n\nI don't see anything in the spec about exposing VR live props thru the VCR\n(I could have easily missed it so far). I'd like to state that they *are*\nexposed.\n\nCheers,\n-g\n\n--\nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-14216099"}, {"subject": "Re: PROPFIND instead of REPORT (was Re: Minutes Delta-V breakout meeting  14-Dec-00", "content": "I agree that its a strech to think of these things as properties, but one \ncould consider Greg's example below to be the \"synchronization properties\" \nof some root directory. \n\nMy issue is that we already have a number of ways produce reports: using \nservlets (or any other standard way of extending servers with custom \nreports), POST, PROPFIND, and now REPORT. My first suggestion was to use \nPOST and just define the entity request body formats for interoperability. \nThis didn't seem appealing. Next came PROPFIND. I think POST and PROPFIND \nare already existing, generic, extensible mechanisms while REPORT seems to \nbe sort of a special case method. There's no difference in the semantics, \njust the marshalling, and POST and/or PROPFIND already provide sufficient \nsemantics.\n\nGreg, your example below could be done without any extension to WebDAV as \nyour client can ask for the information it needs by doing PROPFINDs with \ndepth on a collection.\n\n\n\n\nI find that using PROPFIND rather than REPORT is a big bogus. I'm not\nnecessarily asking for properties. I'm asking for information from the\nserver. Is a compare-report a set of *properties* ?? Not in my mind.\n\nFor Subversion, I'm also going to be using a custom report. The client \nwill\nsend to the server a representation of the client state. The server will\nreturn a report saying something to the effect of, \"that tree is out of\ndate; that file is an older version, but is equivalent to the latest; \nthose\nfiles are fine; etc\"\n\nThat isn't a PROPFIND :-)\n\nCheers,\n-g\n\nOn Mon, Dec 18, 2000 at 12:49:31AM -0500, Geoffrey M. Clemm wrote:\n>\n> At the recent IETF meeting, JimA proposed that we use PROPFIND instead\n> of REPORT to obtain information from the server that requires\n> arguments to qualify what kind of information is required.  Although\n> an appealing thought, after mulling this over, I don't see how we\n> could do this in a way that is compatible with PROPFIND but\n> does not violate the property value DTD's.\n>\n> Jim's recent post describing a request of this kind doesn't really work:\n>\n> <?xml version=\"1.0\" encoding=\"utf-8\" ?>\n>   <propfind xmlns=\"DAV:\">\n>     <prop>\n>          <creator-displayname/>\n>               <versions>show-last-five</D:versions>\n>          <checkin-date/>\n>              <versions>show-last-five</D:versions>\n>     </prop>\n>   </propfind>\n>\n> If you indent this consistently, it becomes:\n>\n> <?xml version=\"1.0\" encoding=\"utf-8\" ?>\n>   <propfind xmlns=\"DAV:\">\n>     <prop>\n>          <creator-displayname/>\n>          <versions>show-last-five</D:versions>\n>          <checkin-date/>\n>          <versions>show-last-five</D:versions>\n>     </prop>\n>   </propfind>\n>\n> which seems to be a request for creator-displayname, checkin-date, and\n> a repeated request for a property named \"D:versions\" (I'm assuming\n> that all elements should have been prefixed by \"D:\").\n>\n> Based on his original indentation, JimA probably meant:\n>\n> <?xml version=\"1.0\" encoding=\"utf-8\" ?>\n>   <D:propfind xmlns=\"DAV:\">\n>     <D:prop>\n>          <D:creator-displayname>\n>            <D:versions>show-last-five</D:versions>\n>          </D:creator-displayname>\n>          <D:checkin-date>\n>            <D:versions>show-last-five</D:versions>\n>          </D:checkin-date>\n>     </D:prop>\n>   </D:propfind>\n>\n> But now we've violated the DTD's for D:checkin-date and\n> D:creator-displayname (which are supposed to be either empty or\n> dates and strings, respectively, to display to the user).\n>\n> Currently, I think the avoidance of DTD ambiguity is worth\n> the introduction of a new method (i.e. REPORT).\n>\n> Cheers,\n> Geoff\n>\n>    From: \"Lisa Dusseault\" <lisa@xythos.com>\n>    Date: Sun, 17 Dec 2000 16:33:44 -0800\n>\n>    I'm afraid I'm a little confused, perhaps it's just the indenting. Is\n>    the <versions> tag supposed to be inside each the property name tags, \nor\n>    parallel to them?\n>\n>    I'd suggest one only needs one <versions> tag per PROPFIND body, \nbecause\n>    it's pretty nonsensical to ask for one property over 5 versions, and \na\n>    different property over 50 versions, all in one request. the client \nis\n>    more likely to make separate requests.\n>\n>    Another suggestion is to reuse the \"range\" syntax and logic (e.g.\n>    byte-range headers).  This allows a \"last-n\" selection, as well as \"m\n>    through n\" or \"first n\".  Then we don't need to define custom syntax \nor\n>    logic to pick which versions to show.\n>\n>    The basic idea, I think, is sound.\n>\n>    lisa\n>\n>    -----Original Message-----\n>    From: ietf-dav-versioning-request@w3.org\n>    [mailto:ietf-dav-versioning-request@w3.org]On Behalf Of Jim Amsden\n>    Sent: Sunday, December 17, 2000 7:26 AM\n>    To: ietf-dav-versioning@w3.org\n>    Subject: RE: Minutes Delta-V breakout meeting 14-Dec-00\n>\n>\n>    <lisa>\n>    Hmm, this really argues for using PROPFIND since the client can say \nwhat\n>    props they want for the version.  Perhaps instead of using attributes \nin\n>    the\n>    body of PROPFIND request (I never really understood where they would \ngo)\n>    there could just be an XML element to tell the server whether the \nclient\n>    wanted version detail or not:\n>\n>    PROPFIND thisresource\n>\n>    <?xml version=\"1.0\" encoding=\"utf-8\" ?>\n>      <propfind xmlns=\"DAV:\">\n>        <versions>show-last-five</D:versions>\n>        <prop>\n>           <creator-displayname/>\n>           <checkin-date/>\n>        </prop>\n>      </propfind>\n>    </lisa>\n>    <jra>Lisa, here's what we were planning:\n>\n>    <?xml version=\"1.0\" encoding=\"utf-8\" ?>\n>      <propfind xmlns=\"DAV:\">\n>        <prop>\n>           <creator-displayname/>\n>                <versions>show-last-five</D:versions>\n>           <checkin-date/>\n>               <versions>show-last-five</D:versions>\n>        </prop>\n>      </propfind>\n>\n>    This is more compatible with 2518.\n>\n\n--\nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-14224113"}, {"subject": "Re: live props on a VC", "content": "That's completely fine... no big deal if some must differ. However, we could\nprobably insert a \"SHOULD be the same\" phrase. That at least lets people\nknow that the live props will be the same unless something really prevents it.\n\nCheers,\n-g\n\nOn Mon, Dec 18, 2000 at 08:11:36AM -0500, Jim Amsden wrote:\n> I agree. However, we should note that the values may differ.\n\nGreg Stein wrote:\n> The spec is pretty clear in 2.1.3 that dead properties of a version \n> resource\n> must also be exposed on the VCR. It also says that live props may differ.\n> But it would be good to know if a VR's live props must also be exposed on\n> the VCR.\n> \n> Specifically, I want to get the DAV:version-name from the VCR (rather than\n> issue a second PROPFIND against the DAV:target of the VCR).\n> \n> I don't see anything in the spec about exposing VR live props thru the VCR\n> (I could have easily missed it so far). I'd like to state that they *are*\n> exposed.\n> \n> Cheers,\n> -g\n> \n> --\n> Greg Stein, http://www.lyra.org/\n> \n> \n\n-- \nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-14239776"}, {"subject": "Re: live props on a VC", "content": "On Mon, Dec 18, 2000 at 12:07:39AM -0500, Geoffrey M. Clemm wrote:\n> \n>    From: Greg Stein <gstein@lyra.org>\n> \n>    The spec is pretty clear in 2.1.3 that dead properties of a version resource\n>    must also be exposed on the VCR. It also says that live props may differ.\n>    But it would be good to know if a VR's live props must also be exposed on\n>    the VCR.\n> \n>    Specifically, I want to get the DAV:version-name from the VCR (rather than\n>    issue a second PROPFIND against the DAV:target of the VCR).\n> \n> You could just use the property report to avoid the extra roundtrip, i.e. \n> to get the version-name of the target of a vcr:\n> \n> REPORT /whatever HTTP/1.1\n> ... some headers ...\n> <D:property-report xmlns:D=\"DAV:\">\n>   <D:target>\n>     <D:version-name/>\n>   </D:target>\n> </D:property-report>\n\nhehe... that will be even worse. The PROPFIND that I'm using is a Depth:1\nrequest. I'm fetching the props for a whole bunch of resources. If I\nswitched to a REPORT, then I'd need to do a PROPFIND on a collection to get\nall the children, then a PROPFIND/REPORT to link thru the target to get the\nprops off the version resource. Blarg...\n\nWhat would be neat is a collection property providing the URLs of its\nmembers. You could then do a property-report kind of like:\n\n  REPORT /the-collection HTTP/1.1\n  ... some headers ...\n  <D:property-report xmlns:D=\"DAV:\">\n    <D:member-set>\n      <D:target>\n        <D:version-name/>\n      </D:target>\n    <D:/member-set>\n  </D:property-report>\n\n\n:-)\n\n(this would also be nice in that I wouldn't have to filter out the PROPFIND\n result for the collection itself... I'd only get the internal members)\n\n[ and I'm not truly suggesting this new property, but it is certainly an\n  interesting item to ponder... ]\n\n>    I don't see anything in the spec about exposing VR live props thru the VCR\n>    (I could have easily missed it so far). I'd like to state that they *are*\n>    exposed.\n> \n> In general, the VCR live properties can differ from those of the\n> version identified by its DAV:target (e.g. creationdate,\n> getmodificationdate, etag, etc).  Currently, a server can implement a\n> VCR PROPFIND without traversing over to the target (which in a\n> distributed versioning system could exist on a different server).\n> There are some live properties (such as DAV:version-name and\n> DAV:version-history) that could be cached on the VCR because they only\n> change when you change the DAV:target, but I am concerned that this\n> blurring of the distinction between a VCR and the version identified\n> by the DAV:target of the VCR is likely to confuse implementers into\n> thinking that all the live properties of the VCR and the DAV:target\n> version have the same value.\n\nWell, the simple issue in my mind is \"I've got this (VC) resource here, but\nI don't know what it is [without the version-name].\" There is a non-trivial\namount of work to go and fetch that version-name; if it had simply been\nexposed via the VCR, then I'd be fine.\n\nI'd think the following properties are \"important\" to have appear on the\nVCR, and a statement that they MUST be the same:\n\n  DAV:version-name\n  DAV:checkin-date\n  DAV:comment             (*)\n  DAV:creator-displayname (*)\n  DAV:version-history\n  DAV:version             (+)\n\n(*) actually, the VCR could define these itself, so these might be confusing\nto have appear on the VCR.\n(+) this is unchanging, but is just a copy of the DAV:target prop  (??)\n\nThere are some informational properties: checkin-fork, checkout-fork, and\nmutable; I don't have any feelings about them. I'm also not going to suggest\nthe *-set properties, since they could be computed and will change from time\nto time.\n\nThe properties above are all (typically) immutable. It would be nice to have\na MUST for these, and then a SHOULD for others (or even punt the others).\nPunting all others would satisfy Geoff's concern about people blurring the\ndistinction between the resources. Avoiding the *-set properties will also\nhelp out with the remote system issue.\n\nYet, *having* these can provide great benefits to the client. Consider the\nversion-history property: a client can then quickly link to the history and\ngather information. The version-name and checkin-date provides useful\ninformation about what you're looking at. (the comment/creator-displayname\nare handy, but not terribly so -- they only talk about the last change\nrather than anything intrinsic about the resource).\n\nCheers,\n-g\n\n-- \nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-14247741"}, {"subject": "WG meeting minute", "content": "If anyone (esp. attendees :-) has found any errors/omissions to the Delta-V\nWorking group minutes that I posted to the list please let me know before I\nput them up on webdav.org\n\nWorking Group meeting minutes:\n\nhttp://lists.w3.org/Archives/Public/ietf-dav-versioning/2000OctDec/0320.html\n\n\nRegards,\n\nTim Ellison\nJava Technology Centre, MP146\nIBM UK Laboratory, Hursley Park, Winchester, UK.\ntel: +44 (0)1962 819872  internal: 249872  MOBx: 270452\n\n\n\n", "id": "lists-005-14259562"}, {"subject": "Re: PROPFIND instead of REPOR", "content": "On Mon, Dec 18, 2000 at 08:23:47AM -0500, Jim Amsden wrote:\n> I agree that its a strech to think of these things as properties, but one \n> could consider Greg's example below to be the \"synchronization properties\" \n> of some root directory.\n\nNow you're just being silly :-) You're trying to apply your PROPFIND hammer\nto something that isn't a property. Sure... you can model *anything* as\nproperties, but that doesn't mean you *should*.\n\nSo yah... it's a stretch :-)\n\n> My issue is that we already have a number of ways produce reports: using \n> servlets (or any other standard way of extending servers with custom \n> reports), POST, PROPFIND, and now REPORT. My first suggestion was to use \n> POST and just define the entity request body formats for interoperability.\n\nPOST is bogus for this. It is too overloaded and ill-defined as it is. It\nalso (typically) has semantics of \"modify state on the server\" while REPORT\nis strictly non-modifying.\n\n> This didn't seem appealing. Next came PROPFIND. I think POST and PROPFIND \n> are already existing, generic, extensible mechanisms while REPORT seems to \n> be sort of a special case method. There's no difference in the semantics, \n> just the marshalling, and POST and/or PROPFIND already provide sufficient \n> semantics.\n\nPROPFIND is for fetching properties. REPORT is for fetching information\nabout the server, its layout/organization, for multiple disparate resources\nand data, etc.\n\n> Greg, your example below could be done without any extension to WebDAV as \n> your client can ask for the information it needs by doing PROPFINDs with \n> depth on a collection.\n\n\"could\" being the operative word. Whether it \"should\" is a different matter.\n\nConsider the case where the client has a working copy where all the\nresources correspond to v7 from the repository. The repository is now at v9.\nThe client sends a report that contains something like:\n\nREPORT /repos/my-project HTTP/1.1\n...\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<S:upgrade-report xmlns:S=\"...\">\n  <S:directory name=\".\" version=\"7\"/>\n</S:upgrade-report>\n\nThe server then returns a report detailing all the new version resource\nURLs, of all the resources in the repository, for the client to remember.\nSome of those will also be marked as needing to be fetched because there is\na difference between v7 and v9. (note that most of the content won't change\nbetween v7 and v9; just the version resource URLs)\n\nThe REPORT marshalling is *extremely* more efficient than crawling over the\nrepository doing PROPFINDs.\n\nCheers,\n-g\n\n> \n> \n> \n> \n> I find that using PROPFIND rather than REPORT is a big bogus. I'm not\n> necessarily asking for properties. I'm asking for information from the\n> server. Is a compare-report a set of *properties* ?? Not in my mind.\n> \n> For Subversion, I'm also going to be using a custom report. The client \n> will\n> send to the server a representation of the client state. The server will\n> return a report saying something to the effect of, \"that tree is out of\n> date; that file is an older version, but is equivalent to the latest; \n> those\n> files are fine; etc\"\n> \n> That isn't a PROPFIND :-)\n> \n> Cheers,\n> -g\n> \n> On Mon, Dec 18, 2000 at 12:49:31AM -0500, Geoffrey M. Clemm wrote:\n> >\n> > At the recent IETF meeting, JimA proposed that we use PROPFIND instead\n> > of REPORT to obtain information from the server that requires\n> > arguments to qualify what kind of information is required.  Although\n> > an appealing thought, after mulling this over, I don't see how we\n> > could do this in a way that is compatible with PROPFIND but\n> > does not violate the property value DTD's.\n> >\n> > Jim's recent post describing a request of this kind doesn't really work:\n> >\n> > <?xml version=\"1.0\" encoding=\"utf-8\" ?>\n> >   <propfind xmlns=\"DAV:\">\n> >     <prop>\n> >          <creator-displayname/>\n> >               <versions>show-last-five</D:versions>\n> >          <checkin-date/>\n> >              <versions>show-last-five</D:versions>\n> >     </prop>\n> >   </propfind>\n> >\n> > If you indent this consistently, it becomes:\n> >\n> > <?xml version=\"1.0\" encoding=\"utf-8\" ?>\n> >   <propfind xmlns=\"DAV:\">\n> >     <prop>\n> >          <creator-displayname/>\n> >          <versions>show-last-five</D:versions>\n> >          <checkin-date/>\n> >          <versions>show-last-five</D:versions>\n> >     </prop>\n> >   </propfind>\n> >\n> > which seems to be a request for creator-displayname, checkin-date, and\n> > a repeated request for a property named \"D:versions\" (I'm assuming\n> > that all elements should have been prefixed by \"D:\").\n> >\n> > Based on his original indentation, JimA probably meant:\n> >\n> > <?xml version=\"1.0\" encoding=\"utf-8\" ?>\n> >   <D:propfind xmlns=\"DAV:\">\n> >     <D:prop>\n> >          <D:creator-displayname>\n> >            <D:versions>show-last-five</D:versions>\n> >          </D:creator-displayname>\n> >          <D:checkin-date>\n> >            <D:versions>show-last-five</D:versions>\n> >          </D:checkin-date>\n> >     </D:prop>\n> >   </D:propfind>\n> >\n> > But now we've violated the DTD's for D:checkin-date and\n> > D:creator-displayname (which are supposed to be either empty or\n> > dates and strings, respectively, to display to the user).\n> >\n> > Currently, I think the avoidance of DTD ambiguity is worth\n> > the introduction of a new method (i.e. REPORT).\n> >\n> > Cheers,\n> > Geoff\n> >\n> >    From: \"Lisa Dusseault\" <lisa@xythos.com>\n> >    Date: Sun, 17 Dec 2000 16:33:44 -0800\n> >\n> >    I'm afraid I'm a little confused, perhaps it's just the indenting. Is\n> >    the <versions> tag supposed to be inside each the property name tags, \n> or\n> >    parallel to them?\n> >\n> >    I'd suggest one only needs one <versions> tag per PROPFIND body, \n> because\n> >    it's pretty nonsensical to ask for one property over 5 versions, and \n> a\n> >    different property over 50 versions, all in one request. the client \n> is\n> >    more likely to make separate requests.\n> >\n> >    Another suggestion is to reuse the \"range\" syntax and logic (e.g.\n> >    byte-range headers).  This allows a \"last-n\" selection, as well as \"m\n> >    through n\" or \"first n\".  Then we don't need to define custom syntax \n> or\n> >    logic to pick which versions to show.\n> >\n> >    The basic idea, I think, is sound.\n> >\n> >    lisa\n> >\n> >    -----Original Message-----\n> >    From: ietf-dav-versioning-request@w3.org\n> >    [mailto:ietf-dav-versioning-request@w3.org]On Behalf Of Jim Amsden\n> >    Sent: Sunday, December 17, 2000 7:26 AM\n> >    To: ietf-dav-versioning@w3.org\n> >    Subject: RE: Minutes Delta-V breakout meeting 14-Dec-00\n> >\n> >\n> >    <lisa>\n> >    Hmm, this really argues for using PROPFIND since the client can say \n> what\n> >    props they want for the version.  Perhaps instead of using attributes \n> in\n> >    the\n> >    body of PROPFIND request (I never really understood where they would \n> go)\n> >    there could just be an XML element to tell the server whether the \n> client\n> >    wanted version detail or not:\n> >\n> >    PROPFIND thisresource\n> >\n> >    <?xml version=\"1.0\" encoding=\"utf-8\" ?>\n> >      <propfind xmlns=\"DAV:\">\n> >        <versions>show-last-five</D:versions>\n> >        <prop>\n> >           <creator-displayname/>\n> >           <checkin-date/>\n> >        </prop>\n> >      </propfind>\n> >    </lisa>\n> >    <jra>Lisa, here's what we were planning:\n> >\n> >    <?xml version=\"1.0\" encoding=\"utf-8\" ?>\n> >      <propfind xmlns=\"DAV:\">\n> >        <prop>\n> >           <creator-displayname/>\n> >                <versions>show-last-five</D:versions>\n> >           <checkin-date/>\n> >               <versions>show-last-five</D:versions>\n> >        </prop>\n> >      </propfind>\n> >\n> >    This is more compatible with 2518.\n> >\n> \n> --\n> Greg Stein, http://www.lyra.org/\n> \n> \n\n-- \nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-14266414"}, {"subject": "Re: live props on a VC", "content": "I think \"SHOULD be the same\" would be misleading, for example the last\nmodified time of the VCR should not be the same as its target.\n\nLet the spec. be quiet since the property report can be used to trivially\nretrieve properties from the target resource.  Given that the VCR and the\nversion are separate resources there is no precedence for having their\nproperties synchronized (beyond the initial VERSION-CONTROL or SET-TARGET).\n\nTim\n\n\nThat's completely fine... no big deal if some must differ. However, we\ncould\nprobably insert a \"SHOULD be the same\" phrase. That at least lets people\nknow that the live props will be the same unless something really prevents\nit.\n\nCheers,\n-g\n\nOn Mon, Dec 18, 2000 at 08:11:36AM -0500, Jim Amsden wrote:\n> I agree. However, we should note that the values may differ.\n\nGreg Stein wrote:\n> The spec is pretty clear in 2.1.3 that dead properties of a version\n> resource\n> must also be exposed on the VCR. It also says that live props may differ.\n> But it would be good to know if a VR's live props must also be exposed on\n> the VCR.\n>\n> Specifically, I want to get the DAV:version-name from the VCR (rather\nthan\n> issue a second PROPFIND against the DAV:target of the VCR).\n>\n> I don't see anything in the spec about exposing VR live props thru the\nVCR\n> (I could have easily missed it so far). I'd like to state that they *are*\n> exposed.\n>\n> Cheers,\n> -g\n>\n> --\n> Greg Stein, http://www.lyra.org/\n>\n>\n\n--\nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-14284290"}, {"subject": "RE: PROPFIND instead of REPORT (was Re: Minutes Delta-V breakout  meeting  14-Dec-00", "content": "Currently, a REPORT is defined as \"a request for information that\nrequires more than one argument and does not modify the visible state\nof any resource on the server\".\n\nI'd like to propose a new criteria for differentiating a property\n(what you get with PROPFIND) from a report (what you get with REPORT):\n\n---------------------------------\n\nA \"property\" is information about a resource that can only be updated\nby applying a request to that resource.\n\nA \"report\" is a request for information that does not modify the\nvisible state of any resource on the server.\n\n---------------------------------\n\nOne advantage of these criteria is that they provide concrete value to\na client implementation.  In particular, a client knows that when it\napplies a method to a resource, the only properties it needs to\nre-fetch (to reflect the result of that method) are the properties of\nthe resource itself.\n\nAnother advantage of these criteria is that they are consistent with\nthe currently standardized live properties (so they don't \"break\"\nexisting implementations).\n\nA more subjective advantage of these definitions is that I believe\nthey correspond to many people's intuition about what is a property\nand what is a report. In particular, a \"dead property\" is clearly a\nproperty.\n\nIf we use these criteria, a few of the current versioning \"properties\"\nwould need to become reports (e.g. DAV:successor-set,\nDAV:checkout-set, DAV:baselined-collection-set).  This actually would\nsimplify the protocol, since we no longer would need the \npost-conditions on MOVE and DELETE that say these properties\nare updated when a resource they contain is moved or deleted.\n\nComments?\n\nCheers,\nGeoff\n \n\n\n\n", "id": "lists-005-14292949"}, {"subject": "PROPFIND vs REPOR", "content": "<greg>PROPFIND is for fetching properties. REPORT is for fetching information\nabout the server, its layout/organization, for multiple disparate \nresources\nand data, etc.</greg>\n\nThe spec currently says REPORT is for fetching properties of a resource \nthat require additional parameters, PROPFIND for properties that don't \nrequire parameters. So why not just add the parameters to PROPFIND?\n\nWe're getting many requests to reduce the number of methods. While I'm not \nalways sympathetic to this, REPORT looks like a good candidate. The WebDAV \nworking group seemed to prefer this approach. What do others think?\n\n\n\n", "id": "lists-005-14301587"}, {"subject": "Re: PROPFIND vs REPOR", "content": "   From: \"Jim Amsden\" <jamsden@us.ibm.com>\n\n   <greg>PROPFIND is for fetching properties. REPORT is for fetching\n   information about the server, its layout/organization, for multiple\n   disparate resources and data, etc.</greg>\n\n   The spec currently says REPORT is for fetching properties of a resource\n   that require additional parameters, PROPFIND for properties that don't\n   require parameters. So why not just add the parameters to PROPFIND? \n\nTo be precise, the spec currently says REPORT is for obtaining\n\"information\" about a resource.  I personally find the idea of a\n\"parameterized property\" a bit of a stretch, but might be willing\nto make that stretch except for the DTD problem I pointed out in\nan earlier message.\n\nSo I'm currently in the \"have a REPORT method\" camp.\n\n   We're getting many requests to reduce the number of methods. While I'm\n   not always sympathetic to this, REPORT looks like a good candidate. The\n   WebDAV working group seemed to prefer this approach. What do others\n   think?\n\nActually, I think the requests are to add *no* new methods, not to\nreduce the number of methods.  I don't think anyone has said that it\nhelps them to add a smaller number of methods (i.e. if you're adding\none, you can add an arbitrary number).\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-14309252"}, {"subject": "Testing my accoun", "content": "It was nice to meet everyone last week.\n\nThanks,\n\nMark\n\n\n________________________________________________________________________\nMark A. Hale                                            408-220-7483 tel\nStandards Architect                                     408-774-2002 fax\nInterwoven                                      mark.hale@interwoven.com\n1195 W. Fremont Avenue                         http://www.interwoven.com\nSunnyvale, CA  94087\n \n                 Interwoven...  Moving Business to the Web\n\n\n\n", "id": "lists-005-14317483"}, {"subject": "RE: PROPFIND instead of REPORT (was Re: Minutes Delta-V breakout meeting 14-Dec-00", "content": "There are other XML structural possibilities which will work though:\n\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n  <propfind xmlns=\"DAV:\">\n    <prop>\n         <creator-displayname/>\n         <checkin-date/>\n    </prop>\n    <versions>-5</D:versions>\n  </propfind>\n\nThe meaning of this would be defined to be: show me these listed properties,\nfor the last five versions [1], for every resource in the scope of this\nPROPFIND request (we may want to allow servers to limit this kind of request\nto depth 0 but that's easy).\n\nSince DAV servers MUST ignore elements they don't understand [2], this ought\nto work on any server. Even if not, since the client will only send this\nkind of request to a server which it knows to support versioning (from the\nOPTIONS response), this won't mess up any server at all.\n\nDisclaimer:  REPORT always seemed to me to be relatively useful as a new\nmethod.  I just wanted to counter the logic that this can't be done in a way\nthat is completely compatible with PROPFIND\n\n-- Lisa\n\n[1] Syntax I used here for \"last five\" borrowed from RFC2068, section\n14.36.1\n\n     \"o  The final 500 bytes (byte offsets 9500-9999, inclusive):\n\n          bytes=-500\"\n\n[2] RFC2518, section 14\n\n   \"All DAV compliant resources MUST ignore any unknown XML element and\n   all its children encountered while processing a DAV method that uses\n   XML as its command language.\"\n\n> -----Original Message-----\n> From: ietf-dav-versioning-request@w3.org\n> [mailto:ietf-dav-versioning-request@w3.org]On Behalf Of Geoffrey M.\n> Clemm\n> Sent: Sunday, December 17, 2000 9:50 PM\n> To: ietf-dav-versioning@w3.org\n> Subject: PROPFIND instead of REPORT (was Re: Minutes Delta-V breakout\n> meeting 14-Dec-00)\n>\n>\n>\n> At the recent IETF meeting, JimA proposed that we use PROPFIND instead\n> of REPORT to obtain information from the server that requires\n> arguments to qualify what kind of information is required.  Although\n> an appealing thought, after mulling this over, I don't see how we\n> could do this in a way that is compatible with PROPFIND but\n> does not violate the property value DTD's.\n>\n> Jim's recent post describing a request of this kind doesn't really work:\n>\n> <?xml version=\"1.0\" encoding=\"utf-8\" ?>\n>   <propfind xmlns=\"DAV:\">\n>     <prop>\n>          <creator-displayname/>\n>               <versions>show-last-five</D:versions>\n>          <checkin-date/>\n>              <versions>show-last-five</D:versions>\n>     </prop>\n>   </propfind>\n>\n> If you indent this consistently, it becomes:\n>\n> <?xml version=\"1.0\" encoding=\"utf-8\" ?>\n>   <propfind xmlns=\"DAV:\">\n>     <prop>\n>          <creator-displayname/>\n>          <versions>show-last-five</D:versions>\n>          <checkin-date/>\n>          <versions>show-last-five</D:versions>\n>     </prop>\n>   </propfind>\n>\n> which seems to be a request for creator-displayname, checkin-date, and\n> a repeated request for a property named \"D:versions\" (I'm assuming\n> that all elements should have been prefixed by \"D:\").\n>\n> Based on his original indentation, JimA probably meant:\n>\n> <?xml version=\"1.0\" encoding=\"utf-8\" ?>\n>   <D:propfind xmlns=\"DAV:\">\n>     <D:prop>\n>          <D:creator-displayname>\n>            <D:versions>show-last-five</D:versions>\n>          </D:creator-displayname>\n>          <D:checkin-date>\n>            <D:versions>show-last-five</D:versions>\n>          </D:checkin-date>\n>     </D:prop>\n>   </D:propfind>\n>\n> But now we've violated the DTD's for D:checkin-date and\n> D:creator-displayname (which are supposed to be either empty or\n> dates and strings, respectively, to display to the user).\n>\n> Currently, I think the avoidance of DTD ambiguity is worth\n> the introduction of a new method (i.e. REPORT).\n>\n> Cheers,\n> Geoff\n>\n>    From: \"Lisa Dusseault\" <lisa@xythos.com>\n>    Date: Sun, 17 Dec 2000 16:33:44 -0800\n>\n>    I'm afraid I'm a little confused, perhaps it's just the indenting.  Is\n>    the <versions> tag supposed to be inside each the property\n> name tags, or\n>    parallel to them?\n>\n>    I'd suggest one only needs one <versions> tag per PROPFIND\n> body, because\n>    it's pretty nonsensical to ask for one property over 5 versions, and a\n>    different property over 50 versions, all in one request. the client is\n>    more likely to make separate requests.\n>\n>    Another suggestion is to reuse the \"range\" syntax and logic (e.g.\n>    byte-range headers).  This allows a \"last-n\" selection, as well as \"m\n>    through n\" or \"first n\".  Then we don't need to define custom syntax or\n>    logic to pick which versions to show.\n>\n>    The basic idea, I think, is sound.\n>\n>    lisa\n>\n>    -----Original Message-----\n>    From: ietf-dav-versioning-request@w3.org\n>    [mailto:ietf-dav-versioning-request@w3.org]On Behalf Of Jim Amsden\n>    Sent: Sunday, December 17, 2000 7:26 AM\n>    To: ietf-dav-versioning@w3.org\n>    Subject: RE: Minutes Delta-V breakout meeting 14-Dec-00\n>\n>\n>    <lisa>\n>    Hmm, this really argues for using PROPFIND since the client\n> can say what\n>    props they want for the version.  Perhaps instead of using\n> attributes in\n>    the\n>    body of PROPFIND request (I never really understood where they\n> would go)\n>    there could just be an XML element to tell the server whether\n> the client\n>    wanted version detail or not:\n>\n>    PROPFIND thisresource\n>\n>    <?xml version=\"1.0\" encoding=\"utf-8\" ?>\n>      <propfind xmlns=\"DAV:\">\n>        <versions>show-last-five</D:versions>\n>        <prop>\n>     <creator-displayname/>\n>     <checkin-date/>\n>        </prop>\n>      </propfind>\n>    </lisa>\n>    <jra>Lisa, here's what we were planning:\n>\n>    <?xml version=\"1.0\" encoding=\"utf-8\" ?>\n>      <propfind xmlns=\"DAV:\">\n>        <prop>\n>     <creator-displayname/>\n>  <versions>show-last-five</D:versions>\n>     <checkin-date/>\n> <versions>show-last-five</D:versions>\n>        </prop>\n>      </propfind>\n>\n>    This is more compatible with 2518.\n>\n\n\n\n", "id": "lists-005-14324797"}, {"subject": "Re: PROPFIND instead of REPORT (was Re: Minutes Delta-V breakout  meeting 14-Dec-00", "content": "I agree, let's keep REPORT.\n\nTim\n\n\nFrom: Greg Stein <gstein@lyra.org>\nI find that using PROPFIND rather than REPORT is a big bogus. I'm not\nnecessarily asking for properties. I'm asking for information from the\nserver. Is a compare-report a set of *properties* ?? Not in my mind.\n\nFor Subversion, I'm also going to be using a custom report. The client will\nsend to the server a representation of the client state. The server will\nreturn a report saying something to the effect of, \"that tree is out of\ndate; that file is an older version, but is equivalent to the latest; those\nfiles are fine; etc\"\n\nThat isn't a PROPFIND :-)\n\nCheers,\n-g\n\nOn Mon, Dec 18, 2000 at 12:49:31AM -0500, Geoffrey M. Clemm wrote:\n>\n> At the recent IETF meeting, JimA proposed that we use PROPFIND instead\n> of REPORT to obtain information from the server that requires\n> arguments to qualify what kind of information is required.  Although\n> an appealing thought, after mulling this over, I don't see how we\n> could do this in a way that is compatible with PROPFIND but\n> does not violate the property value DTD's.\n>\n> Jim's recent post describing a request of this kind doesn't really work:\n>\n> <?xml version=\"1.0\" encoding=\"utf-8\" ?>\n>   <propfind xmlns=\"DAV:\">\n>     <prop>\n>          <creator-displayname/>\n>               <versions>show-last-five</D:versions>\n>          <checkin-date/>\n>              <versions>show-last-five</D:versions>\n>     </prop>\n>   </propfind>\n>\n> If you indent this consistently, it becomes:\n>\n> <?xml version=\"1.0\" encoding=\"utf-8\" ?>\n>   <propfind xmlns=\"DAV:\">\n>     <prop>\n>          <creator-displayname/>\n>          <versions>show-last-five</D:versions>\n>          <checkin-date/>\n>          <versions>show-last-five</D:versions>\n>     </prop>\n>   </propfind>\n>\n> which seems to be a request for creator-displayname, checkin-date, and\n> a repeated request for a property named \"D:versions\" (I'm assuming\n> that all elements should have been prefixed by \"D:\").\n>\n> Based on his original indentation, JimA probably meant:\n>\n> <?xml version=\"1.0\" encoding=\"utf-8\" ?>\n>   <D:propfind xmlns=\"DAV:\">\n>     <D:prop>\n>          <D:creator-displayname>\n>            <D:versions>show-last-five</D:versions>\n>          </D:creator-displayname>\n>          <D:checkin-date>\n>            <D:versions>show-last-five</D:versions>\n>          </D:checkin-date>\n>     </D:prop>\n>   </D:propfind>\n>\n> But now we've violated the DTD's for D:checkin-date and\n> D:creator-displayname (which are supposed to be either empty or\n> dates and strings, respectively, to display to the user).\n>\n> Currently, I think the avoidance of DTD ambiguity is worth\n> the introduction of a new method (i.e. REPORT).\n>\n> Cheers,\n> Geoff\n>\n>    From: \"Lisa Dusseault\" <lisa@xythos.com>\n>    Date: Sun, 17 Dec 2000 16:33:44 -0800\n>\n>    I'm afraid I'm a little confused, perhaps it's just the indenting.  Is\n>    the <versions> tag supposed to be inside each the property name tags,\nor\n>    parallel to them?\n>\n>    I'd suggest one only needs one <versions> tag per PROPFIND body,\nbecause\n>    it's pretty nonsensical to ask for one property over 5 versions, and a\n>    different property over 50 versions, all in one request. the client is\n>    more likely to make separate requests.\n>\n>    Another suggestion is to reuse the \"range\" syntax and logic (e.g.\n>    byte-range headers).  This allows a \"last-n\" selection, as well as \"m\n>    through n\" or \"first n\".  Then we don't need to define custom syntax\nor\n>    logic to pick which versions to show.\n>\n>    The basic idea, I think, is sound.\n>\n>    lisa\n>\n>    -----Original Message-----\n>    From: ietf-dav-versioning-request@w3.org\n>    [mailto:ietf-dav-versioning-request@w3.org]On Behalf Of Jim Amsden\n>    Sent: Sunday, December 17, 2000 7:26 AM\n>    To: ietf-dav-versioning@w3.org\n>    Subject: RE: Minutes Delta-V breakout meeting 14-Dec-00\n>\n>\n>    <lisa>\n>    Hmm, this really argues for using PROPFIND since the client can say\nwhat\n>    props they want for the version.  Perhaps instead of using attributes\nin\n>    the\n>    body of PROPFIND request (I never really understood where they would\ngo)\n>    there could just be an XML element to tell the server whether the\nclient\n>    wanted version detail or not:\n>\n>    PROPFIND thisresource\n>\n>    <?xml version=\"1.0\" encoding=\"utf-8\" ?>\n>      <propfind xmlns=\"DAV:\">\n>        <versions>show-last-five</D:versions>\n>        <prop>\n>        <creator-displayname/>\n>        <checkin-date/>\n>        </prop>\n>      </propfind>\n>    </lisa>\n>    <jra>Lisa, here's what we were planning:\n>\n>    <?xml version=\"1.0\" encoding=\"utf-8\" ?>\n>      <propfind xmlns=\"DAV:\">\n>        <prop>\n>        <creator-displayname/>\n>          <versions>show-last-five</D:versions>\n>        <checkin-date/>\n>         <versions>show-last-five</D:versions>\n>        </prop>\n>      </propfind>\n>\n>    This is more compatible with 2518.\n>\n\n--\nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-14341706"}, {"subject": "RE: PROPFIND vs REPOR", "content": "A good chance, I suppose, to clarify what I think:\n\n - PROPFIND should be used to ask for a list of properties on a resource, or\na set of resources, including version-controlled resources or version\nresources.  My last mail had a suggested syntax that does not break RFC2518.\nThis involved adding only one XML element, very simple extension to\nPROPFIND.  Additionally, the response will be entirely compatible with 2518,\nno different than an existing PROPFIND response.\n\n - If that means that CORE versioning servers do not have to support REPORT,\nso much the better.  It will make it easy for simple servers to implement\nCORE.  To this end, I suggest that CORE should not require REPORT support\nbut instead require support of a simple <version> specification element in\nthe PROPFIND request body.\n\n - REPORT is preferable, when EITHER the request information is not easily\nmarshalled via PROPFIND,  OR the response format cannot be a\nstraight-forward listing of <href> and property sets (propfind response).\nE.g. merge-preview-report, compare-report, version-selector-url-report\n(from deltav draft 10)\n\n-- Lisa\n\n\n-----Original Message-----\nFrom: ietf-dav-versioning-request@w3.org\n[mailto:ietf-dav-versioning-request@w3.org]On Behalf Of Jim Amsden\nSent: Monday, December 18, 2000 8:01 AM\nTo: ietf-dav-versioning@w3.org\nSubject: PROPFIND vs REPORT\n\n\n\n<greg>PROPFIND is for fetching properties. REPORT is for fetching\ninformation\nabout the server, its layout/organization, for multiple disparate resources\nand data, etc.</greg>\n\nThe spec currently says REPORT is for fetching properties of a resource that\nrequire additional parameters, PROPFIND for properties that don't require\nparameters. So why not just add the parameters to PROPFIND?\n\nWe're getting many requests to reduce the number of methods. While I'm not\nalways sympathetic to this, REPORT looks like a good candidate. The WebDAV\nworking group seemed to prefer this approach. What do others think?\n\n\n\n", "id": "lists-005-14356805"}, {"subject": "Re: live props on a VC", "content": "   From: Greg Stein <gstein@lyra.org>\n\n   On Mon, Dec 18, 2000 at 12:07:39AM -0500, Geoffrey M. Clemm wrote:\n\n   >    From: Greg Stein <gstein@lyra.org>\n   >    I want to get the DAV:version-name from the VCR (rather than\n   >    issue a second PROPFIND against the DAV:target of the VCR).\n\n   > You could just use the property report to avoid the extra\n   > roundtrip, i.e.  to get the version-name of the target of a vcr:\n   > \n   > REPORT /whatever HTTP/1.1\n   > ... some headers ...\n   > <D:property-report xmlns:D=\"DAV:\">\n   >   <D:target>\n   >     <D:version-name/>\n   >   </D:target>\n   > </D:property-report>\n\n   hehe... that will be even worse. The PROPFIND that I'm using is a Depth:1\n   request. I'm fetching the props for a whole bunch of resources. If I\n   switched to a REPORT, then I'd need to do a PROPFIND on a collection to get\n   all the children, then a PROPFIND/REPORT to link thru the target to get the\n   props off the version resource. Blarg...\n\nActually, REPORT takes a Depth header, so you could get all the\nproperties you need in one REPORT request.\n\nIt occurs to me that the current spec needs some more verbiage around\nREPORT with Depth.  It currently just says \"if a Depth header is\nspecified, a 207 multistatus MUST be returned\".  It should say that\nthe report results should be marshalled in the \"prop\" elements of the\n207 multistatus.  We could define our own 2xx \"multi-report\" return\nvalue, but just re-using the 207 seems simpler.\n\nIn fact, if people care, we could extend the REPORT method to allow\nyou to request multiple reports at the same time.  Anyone want to\ndo that while I'm in there making changes?\n\n   What would be neat is a collection property providing the URLs of its\n   members. You could then do a property-report kind of like:\n\n     REPORT /the-collection HTTP/1.1\n     ... some headers ...\n     <D:property-report xmlns:D=\"DAV:\">\n       <D:member-set>\n <D:target>\n   <D:version-name/>\n </D:target>\n       <D:/member-set>\n     </D:property-report>\n\n   :-)\n\n   (this would also be nice in that I wouldn't have to filter out the PROPFIND\n    result for the collection itself... I'd only get the internal members)\n   [ and I'm not truly suggesting this new property, but it is certainly an\n     interesting item to ponder... ]\n\nExcept for the filtering out the collection itself,\nthis is what you can do with a Depth header on the REPORT.\n\nAnd yes, it is pretty silly that there is no Depth value that says\n\"just my immediate children\".  That's probably what Depth=1 *should*\nhave meant.  Oh well ...\n\n   Well, the simple issue in my mind is \"I've got this (VC) resource here, but\n   I don't know what it is [without the version-name].\" There is a non-trivial\n   amount of work to go and fetch that version-name; if it had simply been\n   exposed via the VCR, then I'd be fine.\n\n   I'd think the following properties are \"important\" to have appear on the\n   VCR, and a statement that they MUST be the same:\n\n     DAV:version-name\n     DAV:checkin-date\n     DAV:comment             (*)\n     DAV:creator-displayname (*)\n     DAV:version-history\n     DAV:version             (+)\n\n   (*) actually, the VCR could define these itself, so these might be confusing\n   to have appear on the VCR.\n   (+) this is unchanging, but is just a copy of the DAV:target prop  (??)\n\n   There are some informational properties: checkin-fork, checkout-fork, and\n   mutable; I don't have any feelings about them. I'm also not going to suggest\n   the *-set properties, since they could be computed and will change from time\n   to time.\n\n   The properties above are all (typically) immutable. It would be nice to have\n   a MUST for these, and then a SHOULD for others (or even punt the others).\n   Punting all others would satisfy Geoff's concern about people blurring the\n   distinction between the resources. Avoiding the *-set properties will also\n   help out with the remote system issue.\n\nIf using the DAV:property report (and Depth) does what you need\n(i.e. get version info in a single simple query),\nit would be simpler to leave all this out of the protocol.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-14366463"}, {"subject": "RE: II.6, non-reusable version URLs (was: comments on deltav-10.5  from  Yaron Goland, Act Two", "content": "Boris's use case is pretty convincing to me.\n\n-----Original Message-----\nFrom: ietf-dav-versioning-request@w3.org\n[mailto:ietf-dav-versioning-request@w3.org]On Behalf Of Clemm, Geoff\nSent: Friday, December 15, 2000 5:54 PM\nTo: ietf-dav-versioning@w3.org\nSubject: RE: II.6, non-reusable version URLs (was: comments on\ndeltav-10.5 from Yaron Goland, Act Two)\n\n\nLisa asked for a use case that\nmotivated requiring that version URL's not be\nre-used (she suggests having a client that cares\njust use the etag).  I believe that Boris has\nprovided a reasonable use case here ... do people\nagree?\n\nNote that Lisa's objection was not based on\nimplementation difficulty, but rather lack of\nmotivation for the requirement.\n\nAnother objection was that this requirement\nwould cause the version URL's to become longer\nand more obscure.  I personally would be unlikely\nto \"type in\" a version URL, but instead would just\nbe \"clicking\" on one (as in Boris' example below),\nso the length/obscurity of the version URL matters\nmuch less to me than its reliability.\n\nMinimally we will say that a version URL SHOULD be\nunique, but when I wear my client-writer's hat, I\nfind SHOULD's relatively worthless, and only care\nabout MUST's.\n\nWhat do other folks think?\n\nCheers,\nGeoff\n\n-----Original Message-----\nFrom: Boris Bokowski/OTT/OTI [mailto:Boris_Bokowski@oti.com]\nSent: Wednesday, December 13, 2000 11:51 AM\nTo: ietf-dav-versioning@w3.org\nSubject: RE: II.6, non-reusable version URLs (was: comments on\ndeltav-10.5 from Yaron Goland, Act Two)\n\n\n> I'd never recommend to any client to stop using ETags for this purpose!\n> Sounds dangerous.  The client always ought to rely on the ETag to see\n> if things have changed.  Require clients to use ETag for what it was\n> designed, and further, require clients to be able to deal with re-use\n> of version URLs.  It's good medicine.\n>\n> Now, my second line of defense for this is usability.  Assuming somebody\n> will want to put version links as URLs in web pages, or in emails, then\n> it would be more usable to at least be able to construct short, possibly\n> meaningful version URLs.  The use of a GUID will preclude this.\n>\n> FWIW, here's what a Xythos Version URL for a real file looks like:\n>\nhttp://www.sharemation.com/~milele/public/advanced-status-reporting.htm?vers\nion=1\n\nTo me, this looks like a good example where in practice, a URL is all you\ncan send to me. It's just not practical to send me the ETag as well,\nbecause there is no easy way for me to check it. I think I would prefer\nclicking on a URL such as\nhttp://www.sharemation.com/~milele/public/advanced-status-reporting.htm/0074\n1ab6a2c400141e860000c0a80cc2\nor\nhttp://www.sharemation.com/~milele/public/advanced-status-reporting.htm?vers\nion=1&etag=1fe4-69-39e7056c\nover checking the ETag myself.\n\nWith reusable version URLs, users would need to know about ETags. Example:\nIf you accidentally deleted advanced-status-reporting.htm and then\nre-created it, a URL which just\nsays ?version=1 would link to the latest version of that document instead\nof the first version.\n\n-Boris.\n\n\n\n", "id": "lists-005-14378288"}, {"subject": "RE: live props on a VC", "content": "I hadn't considered this before, but now that I am, I'm not sure it's wise\nto send depth headers on the REPORT method.  My three (somewhat related)\nworries:\n\n1)  Lack of clear model: Although depth makes sense when we're dealing with\nwell-modelled collections and resources, the model here is less clear.  A\nREPORT on a \"baseline\" may well give a bunch of information on the baseline\nand the things the baseline is involved in.  Is that depth infinity?  Does\ndepth 1 make sense?  A REPORT request could target the whole server (e.g. a\nreport asking for all orphaned resources).  A REPORT request could target\nsomething more ephemeral like \"all baselines in this collection\" which is\nnot the same thing as depth infinity on the collection.  It's not like a GET\nor a MKCOL where there's a clear model of the resource being targetted.\n\n2)  Multiple targets of REPORT:  E.g. \"merge-preview-report\" in deltav draft\n10.  What would depth header mean on this request?  The \"target\" of the\nreport is not a single resource or collection, but a combination of some\nthings being merged into other things.  When a combination of things is\nspecified in the request, the depth header is ambiguous.  It could apply to\nany, all, or none.\n\n2)  REPORT on specific kind of resource:  it seems that even when a report\ntargest only one resource, it's often a resource of a very particular kind.\nFor example, one could have a report which only made sense for a baseline,\nor a report which only made sense for a versioned resource.  If depth: 1 or\ndepth: infinity were specified, what about items within that depth that\naren't the right kind of resource for this kind of report?\n\nThus, I'd suggest a good justification for requiring \"depth\" on REPORT.\n\nIf it turns out a depth modifier is required, we should consider whether:\n - it might be better just to define appropriate reports as always being\ndepth infinity (e.g. \"report to me on all orphaned resources\" would always\ncover an entire server or at least a major section of it)\n - it might be better to include a \"depth\" modifier _inside_ the report\nrequest body, so that the requester can be very clear about what resources\nthe depth modifier applies to.\n\n-- Lisa\n\n> -----Original Message-----\n> From: ietf-dav-versioning-request@w3.org\n> [mailto:ietf-dav-versioning-request@w3.org]On Behalf Of Geoffrey M.\n> Clemm\n> Sent: Monday, December 18, 2000 12:24 PM\n> To: ietf-dav-versioning@w3.org\n> Subject: Re: live props on a VCR\n>\n>\n>\n>    From: Greg Stein <gstein@lyra.org>\n>\n>    On Mon, Dec 18, 2000 at 12:07:39AM -0500, Geoffrey M. Clemm wrote:\n>\n>    >    From: Greg Stein <gstein@lyra.org>\n>    >    I want to get the DAV:version-name from the VCR (rather than\n>    >    issue a second PROPFIND against the DAV:target of the VCR).\n>\n>    > You could just use the property report to avoid the extra\n>    > roundtrip, i.e.  to get the version-name of the target of a vcr:\n>    >\n>    > REPORT /whatever HTTP/1.1\n>    > ... some headers ...\n>    > <D:property-report xmlns:D=\"DAV:\">\n>    >   <D:target>\n>    >     <D:version-name/>\n>    >   </D:target>\n>    > </D:property-report>\n>\n>    hehe... that will be even worse. The PROPFIND that I'm using\n> is a Depth:1\n>    request. I'm fetching the props for a whole bunch of resources. If I\n>    switched to a REPORT, then I'd need to do a PROPFIND on a\n> collection to get\n>    all the children, then a PROPFIND/REPORT to link thru the\n> target to get the\n>    props off the version resource. Blarg...\n>\n> Actually, REPORT takes a Depth header, so you could get all the\n> properties you need in one REPORT request.\n>\n> It occurs to me that the current spec needs some more verbiage around\n> REPORT with Depth.  It currently just says \"if a Depth header is\n> specified, a 207 multistatus MUST be returned\".  It should say that\n> the report results should be marshalled in the \"prop\" elements of the\n> 207 multistatus.  We could define our own 2xx \"multi-report\" return\n> value, but just re-using the 207 seems simpler.\n>\n> In fact, if people care, we could extend the REPORT method to allow\n> you to request multiple reports at the same time.  Anyone want to\n> do that while I'm in there making changes?\n>\n>    What would be neat is a collection property providing the URLs of its\n>    members. You could then do a property-report kind of like:\n>\n>      REPORT /the-collection HTTP/1.1\n>      ... some headers ...\n>      <D:property-report xmlns:D=\"DAV:\">\n>        <D:member-set>\n>  <D:target>\n>    <D:version-name/>\n>  </D:target>\n>        <D:/member-set>\n>      </D:property-report>\n>\n>    :-)\n>\n>    (this would also be nice in that I wouldn't have to filter out\n> the PROPFIND\n>     result for the collection itself... I'd only get the internal members)\n>    [ and I'm not truly suggesting this new property, but it is\n> certainly an\n>      interesting item to ponder... ]\n>\n> Except for the filtering out the collection itself,\n> this is what you can do with a Depth header on the REPORT.\n>\n> And yes, it is pretty silly that there is no Depth value that says\n> \"just my immediate children\".  That's probably what Depth=1 *should*\n> have meant.  Oh well ...\n>\n>    Well, the simple issue in my mind is \"I've got this (VC)\n> resource here, but\n>    I don't know what it is [without the version-name].\" There is\n> a non-trivial\n>    amount of work to go and fetch that version-name; if it had simply been\n>    exposed via the VCR, then I'd be fine.\n>\n>    I'd think the following properties are \"important\" to have\n> appear on the\n>    VCR, and a statement that they MUST be the same:\n>\n>      DAV:version-name\n>      DAV:checkin-date\n>      DAV:comment             (*)\n>      DAV:creator-displayname (*)\n>      DAV:version-history\n>      DAV:version             (+)\n>\n>    (*) actually, the VCR could define these itself, so these\n> might be confusing\n>    to have appear on the VCR.\n>    (+) this is unchanging, but is just a copy of the DAV:target prop  (??)\n>\n>    There are some informational properties: checkin-fork,\n> checkout-fork, and\n>    mutable; I don't have any feelings about them. I'm also not\n> going to suggest\n>    the *-set properties, since they could be computed and will\n> change from time\n>    to time.\n>\n>    The properties above are all (typically) immutable. It would\n> be nice to have\n>    a MUST for these, and then a SHOULD for others (or even punt\n> the others).\n>    Punting all others would satisfy Geoff's concern about people\n> blurring the\n>    distinction between the resources. Avoiding the *-set\n> properties will also\n>    help out with the remote system issue.\n>\n> If using the DAV:property report (and Depth) does what you need\n> (i.e. get version info in a single simple query),\n> it would be simpler to leave all this out of the protocol.\n>\n> Cheers,\n> Geoff\n\n\n\n", "id": "lists-005-14391304"}, {"subject": "Re: live props on a VC", "content": "   From: \"Lisa Dusseault\" <lisa@xythos.com>\n\n   I hadn't considered this before, but now that I am, I'm not sure\n   it's wise to send depth headers on the REPORT method.  My three\n   (somewhat related) worries:\n\n   1) Lack of clear model: Although depth makes sense when we're\n   dealing with well-modelled collections and resources, the model\n   here is less clear.  A REPORT on a \"baseline\" may well give a bunch\n   of information on the baseline and the things the baseline is\n   involved in.  Is that depth infinity?  Does depth 1 make sense?  A\n   REPORT request could target the whole server (e.g. a report asking\n   for all orphaned resources).  A REPORT request could target\n   something more ephemeral like \"all baselines in this collection\"\n   which is not the same thing as depth infinity on the collection.\n   It's not like a GET or a MKCOL where there's a clear model of the\n   resource being targetted.\n\nYes, we do need to make it clear that Depth on a REPORT just means\nrunning that report on every member of the request collection (just\nlike PROPFIND).  A baseline is not a collection, so a Depth header has\nno effect on a request on a baseline (other than possibly changing the\nresponse status to a 207).\n\nSo I believe a Depth REPORT has a clear model, but that we need to add\na sentence to the protocol to make it unambiguous.\n\n   2) Multiple targets of REPORT:  E.g. \"merge-preview-report\" in deltav draft\n   10.  What would depth header mean on this request?  The \"target\" of the\n   report is not a single resource or collection, but a combination of some\n   things being merged into other things.  When a combination of things is\n   specified in the request, the depth header is ambiguous.  It could apply to\n   any, all, or none.\n\nHere as well, the merge-preview-report is just applied separately to\neach member of the request collection.  This is a well-defined\noperation.\n\nOn the other hand, your question did highlight the fact that MERGE\nhandles the Depth header somewhat specially, when logically, it\ndoesn't have to.  It probably is worth cleaning this up, by defining\nMERGE with a Depth header to be just a MERGE applied to each member of\nthe request collection.\n\n   3) REPORT on specific kind of resource: it seems that even when a\n   report targest only one resource, it's often a resource of a very\n   particular kind.  For example, one could have a report which only\n   made sense for a baseline, or a report which only made sense for a\n   versioned resource.  If depth: 1 or depth: infinity were specified,\n   what about items within that depth that aren't the right kind of\n   resource for this kind of report?\n\nThat's the same as any other Depth operation.  If you do a Depth\nPROPFIND, some of the resources may not support the requested\nproperties.  Or if you do a Depth LABEL, some of the resources may not\nsupport the LABEL request.  The DAV:propstat tells you what\nhappened for a particular resource.\n\n   Thus, I'd suggest a good justification for requiring \"depth\" on\n   REPORT.\n\nGreg provided a good example.  You want to issue a property report on\nevery member of a collection.\n\n   If it turns out a depth modifier is required, we should consider\n   whether:\n\n   - it might be better just to define appropriate reports as always\n   being depth infinity (e.g. \"report to me on all orphaned resources\"\n   would always cover an entire server or at least a major section of\n   it)\n\nI'd like to keep Depth to just mean what it means in 2518, namely,\napply this operation to every member of the collection.\n\n    - it might be better to include a \"depth\" modifier _inside_ the report\n   request body, so that the requester can be very clear about what resources\n   the depth modifier applies to.\n\nYou could have depth-like modifies in the argument list, but I believe\nthat doesn't decrease the utility of the Depth header with its standard\nsemantics.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-14407438"}, {"subject": "RE: PROPFIND instead of REPOR", "content": "This is an honourable proposal, but I believe that it would be too\nrestrictive to apply that definition of 'property'.\n\nAs you mention, it would require that we redefine some existing versioning\nproperties (DAV:successor-set, DAV:checkout-set,\nDAV:baselined-collection-set) which I think is unfortunate since they are\ncurrently useable by (and useful to) versioning aware DAV level 1 clients.\n\nIn addition, it would place unfortunate restrictions upon custom live\nproperties defined by servers.\n\nThe definition for REPORT is fine.\n\nRegards,\n\nTim Ellison\nJava Technology Centre, MP146\nIBM UK Laboratory, Hursley Park, Winchester, UK.\ntel: +44 (0)1962 819872  internal: 249872  MOBx: 270452\n\n\n\"Clemm, Geoff\" <gclemm@rational.com> on 2000-12-18 03:21:45 PM\n\nPlease respond to \"Clemm, Geoff\" <gclemm@rational.com>\n\nTo:   ietf-dav-versioning@w3.org\ncc:\nSubject:  RE: PROPFIND instead of REPORT (was Re: Minutes Delta-V breakout\n          meeting  14-Dec-00)\n\n\n\n\nCurrently, a REPORT is defined as \"a request for information that\nrequires more than one argument and does not modify the visible state\nof any resource on the server\".\n\nI'd like to propose a new criteria for differentiating a property\n(what you get with PROPFIND) from a report (what you get with REPORT):\n\n---------------------------------\n\nA \"property\" is information about a resource that can only be updated\nby applying a request to that resource.\n\nA \"report\" is a request for information that does not modify the\nvisible state of any resource on the server.\n\n---------------------------------\n\nOne advantage of these criteria is that they provide concrete value to\na client implementation.  In particular, a client knows that when it\napplies a method to a resource, the only properties it needs to\nre-fetch (to reflect the result of that method) are the properties of\nthe resource itself.\n\nAnother advantage of these criteria is that they are consistent with\nthe currently standardized live properties (so they don't \"break\"\nexisting implementations).\n\nA more subjective advantage of these definitions is that I believe\nthey correspond to many people's intuition about what is a property\nand what is a report. In particular, a \"dead property\" is clearly a\nproperty.\n\nIf we use these criteria, a few of the current versioning \"properties\"\nwould need to become reports (e.g. DAV:successor-set,\nDAV:checkout-set, DAV:baselined-collection-set).  This actually would\nsimplify the protocol, since we no longer would need the\npost-conditions on MOVE and DELETE that say these properties\nare updated when a resource they contain is moved or deleted.\n\nComments?\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-14418413"}, {"subject": "Re: live props on a VC", "content": "> In fact, if people care, we could extend the REPORT method to allow\n> you to request multiple reports at the same time.  Anyone want to\n> do that while I'm in there making changes?\n\nNo thanks.  We haven't had anyone calling for that level of functionality.\nSounds like an excellent opportunity for some server to distinguish\nitself...\n\nTim\n\n\n\n", "id": "lists-005-14429167"}, {"subject": "Re: PROPFIND instead of REPOR", "content": "OK, we've got 2 in favor of keeping REPORT (Tim, Greg) and 2 in\nfavor of using PROPFIND (Lisa, Tim).\n\nLast week I was in the PROPFIND camp, and due to the \"DTD problem\"\nI switched to the REPORT camp.  I've convinced myself that there\nreally is no DTD problem, because a PROPFIND for a \"foo-report\"\ncould just be defined to return a \"foo\" in the response.\n\nSo in fairness to the PROPFIND camp, I made a mental pass through the\nprotocol, to see what the effect would be to replace all \"foo\" reports\nwith a \"foo-report\" live property that returns a \"foo\" in the result.\n\nMy impression was that this actually simplifies the protocol.\nIn addition, it would allow us to mark some of the current live\nproperties that really act as reports (i.e. DAV:successor-set,\nDAV:baselined-collection-set, etc.) as being \"reports\" without\nlosing the benefits of being able to marshal them via PROPFIND.\n\nSo I'd like to do the following: make an actual pass through the\nprotocol marshalling the current reports as properties, and post\nthe result for people to look at.  Since the arguments for keeping\nREPORT appear to be mostly aesthetic, this would help us to\ncompare the two approaches (I'll keep the working draft with REPORT up\non our web site).\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-14436207"}, {"subject": "DAV:resourcetyp", "content": "[You have to have a long memory to put this post in context.]\n\nIn an attempt to determine what would happen if we extended the\n'DAV:resourcetype', I tried WebFolders (vintage Win2000Pro 5SP1) against a\nserver that answered a variety of values for resource type.\n\nThe empirical evidence is that resources that answer an non-null value for\nDAV:resourcetype are always interpeted as type 'Web Folder'.\n\nFor example, I tried the following combo, and the resource shows up as a\nfolder.\n  <DAV:resourcetype><FOO:foobartype/></DAV:resourcetype>\n\nI also tried 'extending' collection as follows:\n\n<DAV:resourcetype><DAV:collection><DAV:version-selector/></DAV:collection></DAV:resourcetype>\nand\n\n<DAV:resourcetype><DAV:collection/><DAV:version-selector/></DAV:resourcetype>\n\nand they seemed to work ok (i.e., were interpreted as WebFolders and could\nbe opened and browsed, etc.).\n\nRegards,\nTim\n\n\n\n", "id": "lists-005-14444744"}, {"subject": "RE: PROPFIND instead of REPOR", "content": "To be clear, I'm not against using REPORT.  I'm only for keeping the CORE\nrequirements from having to support REPORT.  I don't think CORE needs\nanything but PROPFIND for getting version info from the server.  I do think\nvarious advanced features are best served with REPORT.\n\nlisa\n\n> -----Original Message-----\n> From: ietf-dav-versioning-request@w3.org\n> [mailto:ietf-dav-versioning-request@w3.org]On Behalf Of Geoffrey M.\n> Clemm\n> Sent: Tuesday, December 19, 2000 4:54 AM\n> To: ietf-dav-versioning@w3.org\n> Subject: Re: PROPFIND instead of REPORT\n>\n>\n>\n> OK, we've got 2 in favor of keeping REPORT (Tim, Greg) and 2 in\n> favor of using PROPFIND (Lisa, Tim).\n>\n> Last week I was in the PROPFIND camp, and due to the \"DTD problem\"\n> I switched to the REPORT camp.  I've convinced myself that there\n> really is no DTD problem, because a PROPFIND for a \"foo-report\"\n> could just be defined to return a \"foo\" in the response.\n>\n> So in fairness to the PROPFIND camp, I made a mental pass through the\n> protocol, to see what the effect would be to replace all \"foo\" reports\n> with a \"foo-report\" live property that returns a \"foo\" in the result.\n>\n> My impression was that this actually simplifies the protocol.\n> In addition, it would allow us to mark some of the current live\n> properties that really act as reports (i.e. DAV:successor-set,\n> DAV:baselined-collection-set, etc.) as being \"reports\" without\n> losing the benefits of being able to marshal them via PROPFIND.\n>\n> So I'd like to do the following: make an actual pass through the\n> protocol marshalling the current reports as properties, and post\n> the result for people to look at.  Since the arguments for keeping\n> REPORT appear to be mostly aesthetic, this would help us to\n> compare the two approaches (I'll keep the working draft with REPORT up\n> on our web site).\n>\n> Cheers,\n> Geoff\n\n\n\n", "id": "lists-005-14452468"}, {"subject": "RE: PROPFIND instead of REPOR", "content": "> To be clear, I'm not against using REPORT.  I'm only for keeping the \nCORE\n> requirements from having to support REPORT.  I don't think CORE needs\n> anything but PROPFIND for getting version info from the server.  I do \nthink\n> various advanced features are best served with REPORT.\n\nThen what about putting version history resources into core versioning? In \ndocument management systems, the history resource for a version like:\nhttp://dav.example.org/foo/document.htm?version=7\ncould be just:\nhttp://dav.example.org/foo/document.htm\nThe DAV:version-set property would then play the role of the history \nreport. Except that there would be no predecessor/successor information, \nbut if everything is linear anyway, who cares...\n\nBTW, for core versioning server implementors, it might be interesting to implement GET applied to a version history \nresource (the result of which is not spec'd).\n\nNote that since last Saturday, even Greg wants to implement version \nhistory resources :-)\n(Sorry, couldn't resist.)\n\nBoris.\n\nP.S. Just for the record: I'm in the REPORT camp, but REPORT doesn't have \nto be in core.\n\n\n\n", "id": "lists-005-14462487"}, {"subject": "Re: PROPFIND instead of REPOR", "content": "Sounds good to me.\n\n\n\nOK, we've got 2 in favor of keeping REPORT (Tim, Greg) and 2 in\nfavor of using PROPFIND (Lisa, Tim).\n\nLast week I was in the PROPFIND camp, and due to the \"DTD problem\"\nI switched to the REPORT camp.  I've convinced myself that there\nreally is no DTD problem, because a PROPFIND for a \"foo-report\"\ncould just be defined to return a \"foo\" in the response.\n\nSo in fairness to the PROPFIND camp, I made a mental pass through the\nprotocol, to see what the effect would be to replace all \"foo\" reports\nwith a \"foo-report\" live property that returns a \"foo\" in the result.\n\nMy impression was that this actually simplifies the protocol.\nIn addition, it would allow us to mark some of the current live\nproperties that really act as reports (i.e. DAV:successor-set,\nDAV:baselined-collection-set, etc.) as being \"reports\" without\nlosing the benefits of being able to marshal them via PROPFIND.\n\nSo I'd like to do the following: make an actual pass through the\nprotocol marshalling the current reports as properties, and post\nthe result for people to look at.  Since the arguments for keeping\nREPORT appear to be mostly aesthetic, this would help us to\ncompare the two approaches (I'll keep the working draft with REPORT up\non our web site).\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-14471139"}, {"subject": "Re: DAV:resourcetyp", "content": "So does this mean we can extend DAV:resourcetype with nested content? This\nsould simplify some of the resource types introduced by versioning.\n\n\n\n[You have to have a long memory to put this post in context.]\n\nIn an attempt to determine what would happen if we extended the\n'DAV:resourcetype', I tried WebFolders (vintage Win2000Pro 5SP1) against a\nserver that answered a variety of values for resource type.\n\nThe empirical evidence is that resources that answer an non-null value for\nDAV:resourcetype are always interpeted as type 'Web Folder'.\n\nFor example, I tried the following combo, and the resource shows up as a\nfolder.\n  <DAV:resourcetype><FOO:foobartype/></DAV:resourcetype>\n\nI also tried 'extending' collection as follows:\n\n<DAV:resourcetype><DAV:collection><DAV:version-selector/></DAV:collection></DAV:resourcetype>\n\nand\n\n<DAV:resourcetype><DAV:collection/><DAV:version-selector/></DAV:resourcetype>\n\n\nand they seemed to work ok (i.e., were interpreted as WebFolders and could\nbe opened and browsed, etc.).\n\nRegards,\nTim\n\n\n\n", "id": "lists-005-14479484"}, {"subject": "Re: PROPFIND instead of REPOR", "content": "   From: \"Boris Bokowski/OTT/OTI\" <Boris_Bokowski@oti.com>\n\n   P.S. Just for the record: I'm in the REPORT camp, but REPORT\n   doesn't have to be in core.\n\nOK, with Lisa clarifying that she is for REPORT in some circumstances,\nand with Boris weighing in for REPORT, that leaves JimA as the only\nadvocate for replacing REPORT with PROPFIND.  So the consensus appears\nto be that we should keep REPORT.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-14487917"}, {"subject": "Issues, Issues, ??", "content": "Currently, I still have some stuff to write up for the revised\nprotocol, but the only thing left on my \"unresolved issue\" list is:\n\n(1) Should version history URL's be in core (i.e. be required)?\n\n(2) Should version URL's be stable (i.e. cannot later refer to something else)?\n\nAny other unresolved issues that I've missed?\n\nJust to get a sense of where the group is on these questions, please\neveryone mail post one of the following 5 choices on these two issues:\n\nYes.\nPrefer yes (but can live with no).\nDon't care.\nPrefer no (but can live with yes).\nNo.\n\nPersonally, I \"prefer yes\" to both issues.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-14495400"}, {"subject": "proposed client and server option", "content": "I propose that we add the following appendix to the protocol.\nI believe this should help address the concern that there are\ntoo many combinations of options.  In fact, if we get enough\nentries in this section, we might be able to trim down or combine\nsome of the existing options.\n\nAny objections, or suggestions for improving the wording?\n\nCheers,\nGeoff\n\n-----------------------------------------------------------\n\n\nAPPENDIX B: PROPOSED VERSIONING CLIENT AND SERVER OPTIONS\n\nAlthough a server can implement any combination of versioning options,\nit is expected that certain options will commonly be implemented\ntogether.  In order to provide guidance to both client and server\nimplementers, this appendix enumerates the option combinations\ncurrently being planned for client and server versioning\nimplementations.\n\nA client will have certain options that it requires and others that it\nsupports.  The difference is that a client will simply give up on a\nserver that does not provide options that it requires, while it will\njust not use options that it supports but which the server does not.\n\nNote that this is just a statement of intent, and does NOT represent a\ncommitment by any individual or organization to provide the specified\nversioning implementation.  An up-to-date version of this appendix can\nbe found at <http://www.webdav.org/deltav/implementations.html>.\n\n24.1 Client AA\n- required options\n- supported options\n\n24.2 Server BB\n\n24.3 Server CC\n\n24.4 ...\n\n\n\n", "id": "lists-005-14503563"}, {"subject": "Re: Issues, Issues, ??", "content": "> (1) Should version history URL's be in core (i.e. be required)?\n\nPrefer yes (but can live with no).\n\n> (2) Should version URL's be stable (i.e. cannot later refer to something \nelse)?\n\nYes.\n\n-Boris.\n\n\n\n", "id": "lists-005-14512213"}, {"subject": "making &quot;Depth:infinity&quot; the default for MERG", "content": "Currently, you can specify a \"Depth:infinity\" header for MERGE.\nSince you can get the same effect by saying that a MERGE is\nalways depth infinity, and that you can just use the version URL\nof a version-controlled collection if you want a \"Depth:0\" merge,\nI vote that we remove the Depth header as a needless complication\nto the MERGE method.\n\nAny objections?\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-14519416"}, {"subject": "Re: making &quot;Depth:infinity&quot; the default for MERG", "content": "None here. Dropping an additional parameter is always a Good Thing(tm).\n\nOn Tue, Dec 19, 2000 at 04:20:51PM -0500, Geoffrey M. Clemm wrote:\n> \n> Currently, you can specify a \"Depth:infinity\" header for MERGE.\n> Since you can get the same effect by saying that a MERGE is\n> always depth infinity, and that you can just use the version URL\n> of a version-controlled collection if you want a \"Depth:0\" merge,\n> I vote that we remove the Depth header as a needless complication\n> to the MERGE method.\n> \n> Any objections?\n> \n> Cheers,\n> Geoff\n\n-- \nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-14527127"}, {"subject": "Re: PROPFIND instead of REPOR", "content": "And the first time some yin-yang does a PROPFIND/allprop to a resource, the\nserver will get slammed as it computes every report. Of course, it will\nprobalby just fail because it doesn't have the input parameters needed for\nsome of the different reports.\n\nThat is *very* bogus.\n\nReports are NOT properties. Live or dead or whatever. They are a special\nrequest to the server to return a (possibly large) response about some\naspect of the server, its config, or the data within the repository.\n\nBad bad bad... please don't turn them into properties.\n\nBesides the allprop thing, how do you propose to marshal parameters for the\nreport? By making them seem just like properties, this also takes away the\nnotion of the \"report-ness\", so the available-reports thing now feels\nawfully arbitrary. But that is needed, because you can'd do a\nPROPFIND/propname and pick out what is a report and what isn't.\n\nAesthetic? I think not. Some basic operations and semantics become quite\ntwisted when you try to conflate the two.\n\nProperties don't have input paramters. Reports do. Don't mix them.\n\n-g\n\nOn Tue, Dec 19, 2000 at 07:53:33AM -0500, Geoffrey M. Clemm wrote:\n> \n> OK, we've got 2 in favor of keeping REPORT (Tim, Greg) and 2 in\n> favor of using PROPFIND (Lisa, Tim).\n> \n> Last week I was in the PROPFIND camp, and due to the \"DTD problem\"\n> I switched to the REPORT camp.  I've convinced myself that there\n> really is no DTD problem, because a PROPFIND for a \"foo-report\"\n> could just be defined to return a \"foo\" in the response.\n> \n> So in fairness to the PROPFIND camp, I made a mental pass through the\n> protocol, to see what the effect would be to replace all \"foo\" reports\n> with a \"foo-report\" live property that returns a \"foo\" in the result.\n> \n> My impression was that this actually simplifies the protocol.\n> In addition, it would allow us to mark some of the current live\n> properties that really act as reports (i.e. DAV:successor-set,\n> DAV:baselined-collection-set, etc.) as being \"reports\" without\n> losing the benefits of being able to marshal them via PROPFIND.\n> \n> So I'd like to do the following: make an actual pass through the\n> protocol marshalling the current reports as properties, and post\n> the result for people to look at.  Since the arguments for keeping\n> REPORT appear to be mostly aesthetic, this would help us to\n> compare the two approaches (I'll keep the working draft with REPORT up\n> on our web site).\n> \n> Cheers,\n> Geoff\n\n-- \nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-14535008"}, {"subject": "Re: Issues, Issues, ??", "content": "On Tue, Dec 19, 2000 at 03:50:36PM -0500, Geoffrey M. Clemm wrote:\n> \n> Currently, I still have some stuff to write up for the revised\n> protocol, but the only thing left on my \"unresolved issue\" list is:\n> \n> (1) Should version history URL's be in core (i.e. be required)?\n\nPrefer no.\n\nI don't have the mindset for a \"core\" server, so I'm not sure why this would\nbe needed.\n[ as Boris pokes fun :-) ... yes, I need it for a REPORT, but that is it. ]\n\n> (2) Should version URL's be stable (i.e. cannot later refer to something else)?\n\nYes.\n\n> Any other unresolved issues that I've missed?\n\nDo you have activity checkin? And the working collection stuff? (although, I\nbelieve those are resolved now)\n\nCheers,\n-g\n\n-- \nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-14545022"}, {"subject": "Re: Issues, Issues, ??", "content": "   From: Greg Stein <gstein@lyra.org>\n\n   On Tue, Dec 19, 2000 at 03:50:36PM -0500, Geoffrey M. Clemm wrote:\n   > \n   > (1) Should version history URL's be in core (i.e. be required)?\n\n   Prefer no.\n\n   I don't have the mindset for a \"core\" server, so I'm not sure why this would\n   be needed.\n   [ as Boris pokes fun :-) ... yes, I need it for a REPORT, but that is it. ]\n\nWell, actually, anyone that implements versioned collections will\nend up providing version history URL's because each member of a\ncollection version is a version history.\n\nSo if /repo/ver/73 is a collection version with three members named\na, b, and c, then /repo/ver/73/a, /repo/ver/73/b, and /repo/ver/73/c\nare all version history URL's.\n\nWith this in mind, do you want to reconsider your \"prefer no\"?\n(I.E. why would you prefer we not require something you are planning\non doing :-).\n\n   > (2) Should version URL's be stable (i.e. cannot later refer to something else)?\n\n   Yes.\n\n   > Any other unresolved issues that I've missed?\n\n   Do you have activity checkin? And the working collection stuff? (although, I\n   believe those are resolved now)\n\nYes, those are on the \"resolved, but need to write-up\" category.\n\n(Of course, if I mess up the write-up, they may generate an issue :-).\n\n(And also note that working collection members will be initialized\nto be version history resources, just to bang that drum one more time :-).\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-14553028"}, {"subject": "Re: Issues, Issues, ??", "content": "On Tue, Dec 19, 2000 at 05:55:16PM -0500, Geoffrey M. Clemm wrote:\n>    From: Greg Stein <gstein@lyra.org>\n> \n>    On Tue, Dec 19, 2000 at 03:50:36PM -0500, Geoffrey M. Clemm wrote:\n>    > \n>    > (1) Should version history URL's be in core (i.e. be required)?\n> \n>    Prefer no.\n> \n>    I don't have the mindset for a \"core\" server, so I'm not sure why this would\n>    be needed.\n>    [ as Boris pokes fun :-) ... yes, I need it for a REPORT, but that is it. ]\n> \n> Well, actually, anyone that implements versioned collections will\n> end up providing version history URL's because each member of a\n> collection version is a version history.\n\nOnly if you allow \"slashing-through\" a collection version resource. :-)\n\nThis does imply that a core server would not implement collection versions.\n\n> So if /repo/ver/73 is a collection version with three members named\n> a, b, and c, then /repo/ver/73/a, /repo/ver/73/b, and /repo/ver/73/c\n> are all version history URL's.\n\nThat's the theory :-). Honestly, I probably won't be allowing that in the\nfirst revision. I've got enough to do as it is...\n\n> With this in mind, do you want to reconsider your \"prefer no\"?\n> (I.E. why would you prefer we not require something you are planning\n> on doing :-).\n\nWe're talking about putting them into core, not whether I'll be implementing\nthem. :-)\n\nVersion history seems a relatively complicated beast, so making it core\nseems like it would need a justification. Therefore, my \"prefer no\" and a\nrequest for why a core server would *need* them.\n\n>...\n> (And also note that working collection members will be initialized\n> to be version history resources, just to bang that drum one more time :-).\n\nSure, but that isn't the question at hand, now is it :-)\n\nCheers,\n-g\n\n-- \nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-14561602"}, {"subject": "Re: making &quot;Depth:infinity&quot; the default for MERG", "content": "Go ahead and remove it.\n\nTim\n\n\n\nCurrently, you can specify a \"Depth:infinity\" header for MERGE.\nSince you can get the same effect by saying that a MERGE is\nalways depth infinity, and that you can just use the version URL\nof a version-controlled collection if you want a \"Depth:0\" merge,\nI vote that we remove the Depth header as a needless complication\nto the MERGE method.\n\nAny objections?\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-14570780"}, {"subject": "Re: PROPFIND instead of REPOR", "content": "On Tue, Dec 19, 2000 at 01:25:22PM -0500, Boris Bokowski/OTT/OTI wrote:\n> > To be clear, I'm not against using REPORT.  I'm only for keeping the \n> CORE\n> > requirements from having to support REPORT.  I don't think CORE needs\n> > anything but PROPFIND for getting version info from the server.  I do \n> think\n> > various advanced features are best served with REPORT.\n> \n> Then what about putting version history resources into core versioning? In \n> document management systems, the history resource for a version like:\n> http://dav.example.org/foo/document.htm?version=7\n> could be just:\n> http://dav.example.org/foo/document.htm\n\nI'd expect the second URL to refer to the \"latest\" version rather than the\nversion history.\n\nCheers,\n-g\n\n-- \nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-14578295"}, {"subject": "Re: proposed client and server option", "content": "Isn't this stuff considered \"non-normative\" and, therefore, not supposed to\nbe included in an RFC?\n\nPutting this on the www.webdav.org/deltav/ site a definite must. But within\nthe RFC seems a bit strange.\n\nCheers,\n-g\n\nOn Tue, Dec 19, 2000 at 04:06:57PM -0500, Geoffrey M. Clemm wrote:\n> \n> I propose that we add the following appendix to the protocol.\n> I believe this should help address the concern that there are\n> too many combinations of options.  In fact, if we get enough\n> entries in this section, we might be able to trim down or combine\n> some of the existing options.\n> \n> Any objections, or suggestions for improving the wording?\n> \n> Cheers,\n> Geoff\n> \n> -----------------------------------------------------------\n> \n> \n> APPENDIX B: PROPOSED VERSIONING CLIENT AND SERVER OPTIONS\n> \n> Although a server can implement any combination of versioning options,\n> it is expected that certain options will commonly be implemented\n> together.  In order to provide guidance to both client and server\n> implementers, this appendix enumerates the option combinations\n> currently being planned for client and server versioning\n> implementations.\n> \n> A client will have certain options that it requires and others that it\n> supports.  The difference is that a client will simply give up on a\n> server that does not provide options that it requires, while it will\n> just not use options that it supports but which the server does not.\n> \n> Note that this is just a statement of intent, and does NOT represent a\n> commitment by any individual or organization to provide the specified\n> versioning implementation.  An up-to-date version of this appendix can\n> be found at <http://www.webdav.org/deltav/implementations.html>.\n> \n> 24.1 Client AA\n> - required options\n> - supported options\n> \n> 24.2 Server BB\n> \n> 24.3 Server CC\n> \n> 24.4 ...\n\n-- \nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-14586671"}, {"subject": "RE: Issues, Issues, ??", "content": "1.  prefer yes\n2.  yes--there are a lot of opportunities for a big win with this, and\nfew downsides\n\n> -----Original Message-----\n> From: ietf-dav-versioning-request@w3.org\n> [mailto:ietf-dav-versioning-request@w3.org]On Behalf Of Geoffrey M.\n> Clemm\n> Sent: Tuesday, December 19, 2000 12:51 PM\n> To: ietf-dav-versioning@w3.org\n> Subject: Issues, Issues, ???\n> \n> \n> \n> Currently, I still have some stuff to write up for the revised\n> protocol, but the only thing left on my \"unresolved issue\" list is:\n> \n> (1) Should version history URL's be in core (i.e. be required)?\n> \n> (2) Should version URL's be stable (i.e. cannot later refer to \n> something else)?\n> \n> Any other unresolved issues that I've missed?\n> \n> Just to get a sense of where the group is on these questions, please\n> everyone mail post one of the following 5 choices on these two issues:\n> \n> Yes.\n> Prefer yes (but can live with no).\n> Don't care.\n> Prefer no (but can live with yes).\n> No.\n> \n> Personally, I \"prefer yes\" to both issues.\n> \n> Cheers,\n> Geoff\n> \n> \n\n\n\n", "id": "lists-005-14596184"}, {"subject": "RE: proposed client and server option", "content": "I kind of agree with Greg that this belongs on the website rather\nthan in the RFC.\n\n\n\n> -----Original Message-----\n> From: ietf-dav-versioning-request@w3.org\n> [mailto:ietf-dav-versioning-request@w3.org]On Behalf Of Geoffrey M.\n> Clemm\n> Sent: Tuesday, December 19, 2000 1:07 PM\n> To: ietf-dav-versioning@w3.org\n> Subject: proposed client and server options\n> \n> \n> \n> I propose that we add the following appendix to the protocol.\n> I believe this should help address the concern that there are\n> too many combinations of options.  In fact, if we get enough\n> entries in this section, we might be able to trim down or combine\n> some of the existing options.\n> \n> Any objections, or suggestions for improving the wording?\n> \n> Cheers,\n> Geoff\n> \n> -----------------------------------------------------------\n> \n> \n> APPENDIX B: PROPOSED VERSIONING CLIENT AND SERVER OPTIONS\n> \n> Although a server can implement any combination of versioning options,\n> it is expected that certain options will commonly be implemented\n> together.  In order to provide guidance to both client and server\n> implementers, this appendix enumerates the option combinations\n> currently being planned for client and server versioning\n> implementations.\n> \n> A client will have certain options that it requires and others that it\n> supports.  The difference is that a client will simply give up on a\n> server that does not provide options that it requires, while it will\n> just not use options that it supports but which the server does not.\n> \n> Note that this is just a statement of intent, and does NOT represent a\n> commitment by any individual or organization to provide the specified\n> versioning implementation.  An up-to-date version of this appendix can\n> be found at <http://www.webdav.org/deltav/implementations.html>.\n> \n> 24.1 Client AA\n> - required options\n> - supported options\n> \n> 24.2 Server BB\n> \n> 24.3 Server CC\n> \n> 24.4 ...\n> \n> \n\n\n\n", "id": "lists-005-14605358"}, {"subject": "RE: DAV:resourcetyp", "content": "This reinforces the direction we had been pursuing of not using\n<DAV:resourcetype> for too much.  For example, using it to indicate\nwhether or not a resource is a principal would mean that even non-\ncollection principals would show up as folders in WebFolders, which\nis not good.\n\n> -----Original Message-----\n> From: ietf-dav-versioning-request@w3.org\n> [mailto:ietf-dav-versioning-request@w3.org]On Behalf Of Jim Amsden\n> Sent: Tuesday, December 19, 2000 9:53 AM\n> To: ietf-dav-versioning@w3.org; w3c-dist-auth@w3c.org\n> Subject: Re: DAV:resourcetype\n>\n>\n> So does this mean we can extend DAV:resourcetype with nested content? This\n> sould simplify some of the resource types introduced by versioning.\n>\n>\n>\n> [You have to have a long memory to put this post in context.]\n>\n> In an attempt to determine what would happen if we extended the\n> 'DAV:resourcetype', I tried WebFolders (vintage Win2000Pro 5SP1) against a\n> server that answered a variety of values for resource type.\n>\n> The empirical evidence is that resources that answer an non-null value for\n> DAV:resourcetype are always interpeted as type 'Web Folder'.\n>\n> For example, I tried the following combo, and the resource shows up as a\n> folder.\n>   <DAV:resourcetype><FOO:foobartype/></DAV:resourcetype>\n>\n> I also tried 'extending' collection as follows:\n>\n> <DAV:resourcetype><DAV:collection><DAV:version-selector/></DAV:col\n> lection></DAV:resourcetype>\n>\n> and\n>\n> <DAV:resourcetype><DAV:collection/><DAV:version-selector/></DAV:re\n> sourcetype>\n>\n>\n> and they seemed to work ok (i.e., were interpreted as WebFolders and could\n> be opened and browsed, etc.).\n>\n> Regards,\n> Tim\n>\n>\n>\n>\n>\n\n\n\n", "id": "lists-005-14615757"}, {"subject": "RE: PROPFIND instead of REPOR", "content": "I'll add one more vote for keeping REPORT around, Geoff, even without\nGreg's argument around allprop (which I automatically discount).  Basically,\nthe question is whether or not PROPFIND should be a general RPC mechanism\nfor stuff not affecting server state (the non-destructive version of POST),\nand I think that handling all the potential cases of missing arguments will\nmake PROPFIND reports very cumbersome and buggy where servers crash or fail\nbecause the check for all the combinations of missing arguments missed\nsomething.\n\n> -----Original Message-----\n> From: ietf-dav-versioning-request@w3.org\n> [mailto:ietf-dav-versioning-request@w3.org]On Behalf Of Greg Stein\n> Sent: Tuesday, December 19, 2000 1:58 PM\n> To: Geoffrey M. Clemm\n> Cc: ietf-dav-versioning@w3.org\n> Subject: Re: PROPFIND instead of REPORT\n>\n>\n> And the first time some yin-yang does a PROPFIND/allprop to a\n> resource, the\n> server will get slammed as it computes every report. Of course, it will\n> probalby just fail because it doesn't have the input parameters needed for\n> some of the different reports.\n>\n> That is *very* bogus.\n>\n> Reports are NOT properties. Live or dead or whatever. They are a special\n> request to the server to return a (possibly large) response about some\n> aspect of the server, its config, or the data within the repository.\n>\n> Bad bad bad... please don't turn them into properties.\n>\n> Besides the allprop thing, how do you propose to marshal\n> parameters for the\n> report? By making them seem just like properties, this also takes away the\n> notion of the \"report-ness\", so the available-reports thing now feels\n> awfully arbitrary. But that is needed, because you can'd do a\n> PROPFIND/propname and pick out what is a report and what isn't.\n>\n> Aesthetic? I think not. Some basic operations and semantics become quite\n> twisted when you try to conflate the two.\n>\n> Properties don't have input paramters. Reports do. Don't mix them.\n>\n> -g\n>\n> On Tue, Dec 19, 2000 at 07:53:33AM -0500, Geoffrey M. Clemm wrote:\n> >\n> > OK, we've got 2 in favor of keeping REPORT (Tim, Greg) and 2 in\n> > favor of using PROPFIND (Lisa, Tim).\n> >\n> > Last week I was in the PROPFIND camp, and due to the \"DTD problem\"\n> > I switched to the REPORT camp.  I've convinced myself that there\n> > really is no DTD problem, because a PROPFIND for a \"foo-report\"\n> > could just be defined to return a \"foo\" in the response.\n> >\n> > So in fairness to the PROPFIND camp, I made a mental pass through the\n> > protocol, to see what the effect would be to replace all \"foo\" reports\n> > with a \"foo-report\" live property that returns a \"foo\" in the result.\n> >\n> > My impression was that this actually simplifies the protocol.\n> > In addition, it would allow us to mark some of the current live\n> > properties that really act as reports (i.e. DAV:successor-set,\n> > DAV:baselined-collection-set, etc.) as being \"reports\" without\n> > losing the benefits of being able to marshal them via PROPFIND.\n> >\n> > So I'd like to do the following: make an actual pass through the\n> > protocol marshalling the current reports as properties, and post\n> > the result for people to look at.  Since the arguments for keeping\n> > REPORT appear to be mostly aesthetic, this would help us to\n> > compare the two approaches (I'll keep the working draft with REPORT up\n> > on our web site).\n> >\n> > Cheers,\n> > Geoff\n>\n> --\n> Greg Stein, http://www.lyra.org/\n>\n>\n\n\n\n", "id": "lists-005-14626352"}, {"subject": "RE: PROPFIND instead of REPOR", "content": "I agree that the defn. for REPORT is fine.\n\nI also agree with not restricting the definition of property more.  Server\nimplementors don't get the choice to add methods (vs properties) like we\ndo, we would need an alternative way for server implementors to marshal\n\"extra\" live property information to the client, and I don't think that\nadditional implementation-specific reports are likely to work as well with\nsoftware that doesn't know about them in advance.\n\n> -----Original Message-----\n> From: ietf-dav-versioning-request@w3.org\n> [mailto:ietf-dav-versioning-request@w3.org]On Behalf Of\n> Tim_Ellison@uk.ibm.com\n> Sent: Tuesday, December 19, 2000 3:02 AM\n> To: ietf-dav-versioning@w3.org\n> Subject: RE: PROPFIND instead of REPORT\n>\n>\n>\n>\n> This is an honourable proposal, but I believe that it would be too\n> restrictive to apply that definition of 'property'.\n>\n> As you mention, it would require that we redefine some existing versioning\n> properties (DAV:successor-set, DAV:checkout-set,\n> DAV:baselined-collection-set) which I think is unfortunate since they are\n> currently useable by (and useful to) versioning aware DAV level 1 clients.\n>\n> In addition, it would place unfortunate restrictions upon custom live\n> properties defined by servers.\n>\n> The definition for REPORT is fine.\n>\n> Regards,\n>\n> Tim Ellison\n> Java Technology Centre, MP146\n> IBM UK Laboratory, Hursley Park, Winchester, UK.\n> tel: +44 (0)1962 819872  internal: 249872  MOBx: 270452\n>\n>\n> \"Clemm, Geoff\" <gclemm@rational.com> on 2000-12-18 03:21:45 PM\n>\n> Please respond to \"Clemm, Geoff\" <gclemm@rational.com>\n>\n> To:   ietf-dav-versioning@w3.org\n> cc:\n> Subject:  RE: PROPFIND instead of REPORT (was Re: Minutes Delta-V breakout\n>           meeting  14-Dec-00)\n>\n>\n>\n>\n> Currently, a REPORT is defined as \"a request for information that\n> requires more than one argument and does not modify the visible state\n> of any resource on the server\".\n>\n> I'd like to propose a new criteria for differentiating a property\n> (what you get with PROPFIND) from a report (what you get with REPORT):\n>\n> ---------------------------------\n>\n> A \"property\" is information about a resource that can only be updated\n> by applying a request to that resource.\n>\n> A \"report\" is a request for information that does not modify the\n> visible state of any resource on the server.\n>\n> ---------------------------------\n>\n> One advantage of these criteria is that they provide concrete value to\n> a client implementation.  In particular, a client knows that when it\n> applies a method to a resource, the only properties it needs to\n> re-fetch (to reflect the result of that method) are the properties of\n> the resource itself.\n>\n> Another advantage of these criteria is that they are consistent with\n> the currently standardized live properties (so they don't \"break\"\n> existing implementations).\n>\n> A more subjective advantage of these definitions is that I believe\n> they correspond to many people's intuition about what is a property\n> and what is a report. In particular, a \"dead property\" is clearly a\n> property.\n>\n> If we use these criteria, a few of the current versioning \"properties\"\n> would need to become reports (e.g. DAV:successor-set,\n> DAV:checkout-set, DAV:baselined-collection-set).  This actually would\n> simplify the protocol, since we no longer would need the\n> post-conditions on MOVE and DELETE that say these properties\n> are updated when a resource they contain is moved or deleted.\n>\n> Comments?\n>\n> Cheers,\n> Geoff\n>\n>\n>\n>\n>\n>\n\n\n\n", "id": "lists-005-14638321"}, {"subject": "RE: Issues, Issues, ??", "content": "> Currently, I still have some stuff to write up for the revised\n> protocol, but the only thing left on my \"unresolved issue\" list is:\n>\n> (1) Should version history URL's be in core (i.e. be required)?\n\nNo\n\n> (2) Should version URL's be stable (i.e. cannot later refer to\n> something else)?\n\nPrefer no (but can live with yes).\n\nI can imagine the simplest server (with a thin client) re-initializing the\nversioning of a resource on request and recycling URLs.\n\nThanks,\n\nMark\n\n\n\n", "id": "lists-005-14651056"}, {"subject": "Re: PROPFIND instead of REPOR", "content": "   From: Greg Stein <gstein@lyra.org>\n\n   On Tue, Dec 19, 2000 at 01:25:22PM -0500, Boris Bokowski/OTT/OTI wrote:\n\n   > Then what about putting version history resources into core\n   > versioning? In document management systems, the history resource\n   > for a version like:\n   >  http://dav.example.org/foo/document.htm?version=7\n   > could be just:\n   >  http://dav.example.org/foo/document.htm\n\n   I'd expect the second URL to refer to the \"latest\" version rather than the\n   version history.\n\nI'm sure Boris meant something like:\n\nhttp://dav.example.org/foo/document.htm?version-history\n\nas the URL for the version history resource, since\n\n/http://dav.example.org/foo/document.htm\n\nis the URL for the version-controlled resource.\n\nNote that we need to be a bit careful with the terms \"refer\" and\n\"latest\" in this context.  When a version-controlled resource is\nchecked-in, its content and dead properties are the same as those of\nthe version resource identified by the DAV:target of the\nversion-controlled resource, but the URL refers to the\nversion-controlled resource, not to that version resource, and the\nDAV:target is not necessarily the \"latest\" version (new versions can\nbe created in the version history without changing the DAV:target of\nthe versin controlled resource).\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-14658531"}, {"subject": "Re: proposed client and server option", "content": "   From: Greg Stein <gstein@lyra.org>\n\n   Isn't this stuff considered \"non-normative\" and, therefore, not supposed to\n   be included in an RFC?\n\nI believe that you can put non-normative stuff in an appendix, but if\nwe keep this appendix (the current consensus is to *not* keep it),\nwe should confirm this.\n\n   Putting this on the www.webdav.org/deltav/ site a definite must. But within\n   the RFC seems a bit strange.\n\nThat does appear to be the consensus.  Just to provide some background\non what led to my proposing it:\n\n- At various times, folks have asked for the definition of an \"intermediate\"\nlevel (between \"just core\" and \"all options\").  Their intermediate level\nwas inevitably the set of options they were intending on implementing.\nHaving folks just declare \"what they are planning on implementing\"\nwould short circuit debate on \"what should the intermediate level be\".\n\n- At other times, folks have asked for some idea about what would be\na \"reasonable\" set of options to support.  This appendix would also be\nof use to those folks, while avoiding contention over what set of\noptions is \"reasonable\".\n\nCheers,\nGeoff\n\n\n   On Tue, Dec 19, 2000 at 04:06:57PM -0500, Geoffrey M. Clemm wrote:\n   > \n   > I propose that we add the following appendix to the protocol.\n   > I believe this should help address the concern that there are\n   > too many combinations of options.  In fact, if we get enough\n   > entries in this section, we might be able to trim down or combine\n   > some of the existing options.\n   > \n   > Any objections, or suggestions for improving the wording?\n   > \n   > Cheers,\n   > Geoff\n   > \n   > -----------------------------------------------------------\n   > \n   > \n   > APPENDIX B: PROPOSED VERSIONING CLIENT AND SERVER OPTIONS\n   > \n   > Although a server can implement any combination of versioning options,\n   > it is expected that certain options will commonly be implemented\n   > together.  In order to provide guidance to both client and server\n   > implementers, this appendix enumerates the option combinations\n   > currently being planned for client and server versioning\n   > implementations.\n   > \n   > A client will have certain options that it requires and others that it\n   > supports.  The difference is that a client will simply give up on a\n   > server that does not provide options that it requires, while it will\n   > just not use options that it supports but which the server does not.\n   > \n   > Note that this is just a statement of intent, and does NOT represent a\n   > commitment by any individual or organization to provide the specified\n   > versioning implementation.  An up-to-date version of this appendix can\n   > be found at <http://www.webdav.org/deltav/implementations.html>.\n   > \n   > 24.1 Client AA\n   > - required options\n   > - supported options\n   > \n   > 24.2 Server BB\n   > \n   > 24.3 Server CC\n   > \n   > 24.4 ...\n\n   -- \n   Greg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-14667410"}, {"subject": "Subversion support (was: Re: proposed client and server options", "content": ">    > 24.1 Client AA\n>    > - required options\n>    > - supported options\n>    > \n>    > 24.2 Server BB\n>    > \n>    > 24.3 Server CC\n>    > \n>    > 24.4 ...\n\n\nAll righty, then... here is your first appendix item:\n\n24.xxx  Subversion 1.0 (http://subversion.tigris.org/)\n\n   A. Subversion client\n      i. Required options:\n         a. RFC 2518, Class 1  (but not Class 2)\n b. Core versioning (but not: VERSION-CONTROL, UNCHECKOUT, or\n    SET-TARGET)\n c. Client-Workspace option\n d. Label option  (probably; not entirely sure because our \"label\"\n    may simply be a COPY)\n    [ this also presumes Label will be split from Client-WS ]\n e. Activity option\n f. Version-History-Resource option\n g. Version-Controlled-Collection option\n h. Fork-Control option\n i. Subversion-specific items: a custom report, DAV:version-name\n    must be an integer representing repository-global-change, atomic\n    CHECKIN of activities, DAV:prop supported within the DAV:checkin\n    element (to enable returning post-checkin information, such as\n    new version resource URLs), possibly other TBD items???\n\n      ii. Supported options: none\n\n   B. Subversion server support\n      i. RFC 2518, Class 1\n      ii. Subversion-specific subsets for each of 24.xxx.A.i.[b-i] The\n  Subversion server will not fully support DeltaV's Core or Options.\n\n\nAnd yes, I realize that the above spec implies that neither the client nor\nthe server will be interoperable with other DAV systems. That support will\ntake place in a future version (after 1.0). Limited subsets will be\navailable, so interop will depend highly upon what the client expects and\nuses from the server.\n\nCheers,\n-g\n\n-- \nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-14678186"}, {"subject": "retrieving propertes at CHECKIN time (was: Re: Subversion support", "content": "On Wed, Dec 20, 2000 at 01:43:24PM -0800, Greg Stein wrote:\n>...\n>  i. Subversion-specific items: a custom report, DAV:version-name\n>     must be an integer representing repository-global-change, atomic\n>     CHECKIN of activities, DAV:prop supported within the DAV:checkin\n>     element (to enable returning post-checkin information, such as\n>     new version resource URLs), possibly other TBD items???\n\nNote the bit in there about DAV:prop in the CHECKIN of an activity. It would\nbe great if that could be formalized, along with a response body for the\nCHECKIN.\n\nThe motivation is pretty simple: the CHECKIN can construct a *bunch* of new\nversion resources. It would be nice to have the CHECKIN return that\ninformation to you (since it already has it), then for the client to go\ncrawling back over the server fetching all that data.\n\nThe interesting question, of course, is what resource the DAV:prop applies\nto. Is it the version selector? No, because those aren't involved in the\ncheckout or checkin (we originally checked out version resources). So it is\nmost likely going to refer to the new version resource. I'm fine with that,\nas I can get the DAV:version, DAV:getetag, and DAV:version-name properties\nfrom that and be okay.\n\nBut depending on what you CHECKIN, I could see the DAV:prop potentially\napplying to different items. IMO, it would always apply to the newly-created\nversion resource(s).\n\nCheers,\n-g\n\n-- \nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-14688097"}, {"subject": "Re: PROPFIND instead of REPOR", "content": "> I'm sure Boris meant something like:\n> \n> http://dav.example.org/foo/document.htm?version-history\n> \n> as the URL for the version history resource, since\n> \n> /http://dav.example.org/foo/document.htm\n> \n> is the URL for the version-controlled resource.\n\nYes. Thanks for correcting this, Geoff!\n\nBoris\n\n\n\n", "id": "lists-005-14697185"}, {"subject": "RE: PROPFIND instead of REPOR", "content": "This is likely to clear up some confusion:  I was just discussing this stuff\nwith Barry Lind today, and we were unclear on the concept of what resources\nor valid URLs must exist.\n\nOur question was, for a document that has n revisions, how many valid URLs\n(I'm avoiding the word resource) exist?\n n version resources, e.g. http://dav.example.org/foo/document.htm?version=n\n +1 version-controlled resource, e.g.\nhttp://dav.example.org/foo/document.htm\n +1 version-history resource, e.g.\nhttp://dav.example.org/foo/document.htm?version-history\n\nSo we're talking about a model with n+2 valid URLs?  Like Boris may have\ndone, I previously interpreted the versioning spec to require n+1 valid\nURLs:  one for each version, plus one for the resource/history thing, which\nI thought was one beast, rather than two.  Now it seems you're saying the\nresource URL and the version-history-resource URL are two different things,\nso the entire count is n+2.\n\nIf that's the case, then I'm dead against requiring a version-history\nresource for servers implementing CORE.  Make the list of versions be a\nproperty on the version-controlled resource, or let versions be discoverable\nby adding an <allversions> tag to PROPFIND.  It doesn't matter much, just\nkeep it simple!\n\nLisa\n\n\n> -----Original Message-----\n> From: ietf-dav-versioning-request@w3.org\n> [mailto:ietf-dav-versioning-request@w3.org]On Behalf Of Geoffrey M.\n> Clemm\n> Sent: Wednesday, December 20, 2000 11:44 AM\n> To: ietf-dav-versioning@w3.org\n> Subject: Re: PROPFIND instead of REPORT\n>\n>\n>    From: Greg Stein <gstein@lyra.org>\n>\n>    On Tue, Dec 19, 2000 at 01:25:22PM -0500, Boris Bokowski/OTT/OTI wrote:\n>\n>    > Then what about putting version history resources into core\n>    > versioning? In document management systems, the history resource\n>    > for a version like:\n>    >  http://dav.example.org/foo/document.htm?version=7\n>    > could be just:\n>    >  http://dav.example.org/foo/document.htm\n>\n>    I'd expect the second URL to refer to the \"latest\" version\n> rather than the\n>    version history.\n>\n> I'm sure Boris meant something like:\n>\n> http://dav.example.org/foo/document.htm?version-history\n>\n> as the URL for the version history resource, since\n>\n> /http://dav.example.org/foo/document.htm\n>\n> is the URL for the version-controlled resource.\n>\n> Note that we need to be a bit careful with the terms \"refer\" and\n> \"latest\" in this context.  When a version-controlled resource is\n> checked-in, its content and dead properties are the same as those of\n> the version resource identified by the DAV:target of the\n> version-controlled resource, but the URL refers to the\n> version-controlled resource, not to that version resource, and the\n> DAV:target is not necessarily the \"latest\" version (new versions can\n> be created in the version history without changing the DAV:target of\n> the versin controlled resource).\n>\n> Cheers,\n> Geoff\n\n\n\n", "id": "lists-005-14704747"}, {"subject": "RE: Issues, Issues, ??", "content": "> Currently, I still have some stuff to write up for the revised\n> protocol, but the only thing left on my \"unresolved issue\" list is:\n>\n> (1) Should version history URL's be in core (i.e. be required)?\nNo.\nAs I elaborated in my last mail, CORE should only require a URL for each\n\"version resource\" plus a URL for the original resource, now a\n\"version-controlled resource\".  I can't see any features in CORE that aren't\neasily done by addressing one of these.\n\n> (2) Should version URL's be stable (i.e. cannot later refer to\n> something else)?\nNo to what I think you mean.\n\nI think you mean reusable, not stable. ( You can require version URLs to be\nstable: as long as a version exists, it will have the same URL.  It's when a\nversion goes away that one starts to worry whether its URL may be reused.)\n\nMy plea is to let us manage our own namespaces.  Although it is not\ntechnically difficult to add a GUID to a URL, we consider that to be really\nugly in a URL that we expect will be visible.\n\nWhat if this requirement is dropped from the spec? Reuse may happen, but it\nwill not be frequent.  The client can use ETags.  Interoperability is not\nthreatened.\n\nA client must deal with versions the way it deals with any resource:\n - if it has never before retrieved the body, it has NO WAY of knowing\nwhether the body has changed, and has NO REFERENCE POINT against which to\ncompare that anyway!  It's meaningless to say that the content \"shouldn't\nhave changed\" since a client which has never before seen the content can't\ntell the difference.\n - When it does retrieve the body, it should retrieve the ETag.\n - When it wants to see if the body has changed, it should compare the ETag.\n\nLisa\n\n> Any other unresolved issues that I've missed?\n\nThe related issue about how to get a list of versions.\n\n\n\n", "id": "lists-005-14717041"}, {"subject": "Re: PROPFIND instead of REPOR", "content": "I've always seen version history resources as separate beasts from the\nversion selector. So yes... N+2.\n\nAnd for that reasons, I've also expressed by reluctance to put them into\nCore without an example case from a \"Core server\" mindset person.\n\nCheers,\n-g\n\nOn Wed, Dec 20, 2000 at 05:57:13PM -0800, Lisa Dusseault wrote:\n> This is likely to clear up some confusion:  I was just discussing this stuff\n> with Barry Lind today, and we were unclear on the concept of what resources\n> or valid URLs must exist.\n> \n> Our question was, for a document that has n revisions, how many valid URLs\n> (I'm avoiding the word resource) exist?\n>  n version resources, e.g. http://dav.example.org/foo/document.htm?version=n\n>  +1 version-controlled resource, e.g.\n> http://dav.example.org/foo/document.htm\n>  +1 version-history resource, e.g.\n> http://dav.example.org/foo/document.htm?version-history\n> \n> So we're talking about a model with n+2 valid URLs?  Like Boris may have\n> done, I previously interpreted the versioning spec to require n+1 valid\n> URLs:  one for each version, plus one for the resource/history thing, which\n> I thought was one beast, rather than two.  Now it seems you're saying the\n> resource URL and the version-history-resource URL are two different things,\n> so the entire count is n+2.\n> \n> If that's the case, then I'm dead against requiring a version-history\n> resource for servers implementing CORE.  Make the list of versions be a\n> property on the version-controlled resource, or let versions be discoverable\n> by adding an <allversions> tag to PROPFIND.  It doesn't matter much, just\n> keep it simple!\n> \n> Lisa\n> \n> \n> > -----Original Message-----\n> > From: ietf-dav-versioning-request@w3.org\n> > [mailto:ietf-dav-versioning-request@w3.org]On Behalf Of Geoffrey M.\n> > Clemm\n> > Sent: Wednesday, December 20, 2000 11:44 AM\n> > To: ietf-dav-versioning@w3.org\n> > Subject: Re: PROPFIND instead of REPORT\n> >\n> >\n> >    From: Greg Stein <gstein@lyra.org>\n> >\n> >    On Tue, Dec 19, 2000 at 01:25:22PM -0500, Boris Bokowski/OTT/OTI wrote:\n> >\n> >    > Then what about putting version history resources into core\n> >    > versioning? In document management systems, the history resource\n> >    > for a version like:\n> >    >  http://dav.example.org/foo/document.htm?version=7\n> >    > could be just:\n> >    >  http://dav.example.org/foo/document.htm\n> >\n> >    I'd expect the second URL to refer to the \"latest\" version\n> > rather than the\n> >    version history.\n> >\n> > I'm sure Boris meant something like:\n> >\n> > http://dav.example.org/foo/document.htm?version-history\n> >\n> > as the URL for the version history resource, since\n> >\n> > /http://dav.example.org/foo/document.htm\n> >\n> > is the URL for the version-controlled resource.\n> >\n> > Note that we need to be a bit careful with the terms \"refer\" and\n> > \"latest\" in this context.  When a version-controlled resource is\n> > checked-in, its content and dead properties are the same as those of\n> > the version resource identified by the DAV:target of the\n> > version-controlled resource, but the URL refers to the\n> > version-controlled resource, not to that version resource, and the\n> > DAV:target is not necessarily the \"latest\" version (new versions can\n> > be created in the version history without changing the DAV:target of\n> > the versin controlled resource).\n> >\n> > Cheers,\n> > Geoff\n\n-- \nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-14726640"}, {"subject": "mutable version resources (was: Re: Issues, Issues, ???", "content": "On Wed, Dec 20, 2000 at 08:27:41PM -0800, Lisa Dusseault wrote:\n>...\n> > (2) Should version URL's be stable (i.e. cannot later refer to\n> > something else)?\n> No to what I think you mean.\n> \n> I think you mean reusable, not stable. ( You can require version URLs to be\n> stable: as long as a version exists, it will have the same URL.  It's when a\n> version goes away that one starts to worry whether its URL may be reused.)\n> \n> My plea is to let us manage our own namespaces.  Although it is not\n> technically difficult to add a GUID to a URL, we consider that to be really\n> ugly in a URL that we expect will be visible.\n> \n> What if this requirement is dropped from the spec? Reuse may happen, but it\n> will not be frequent.  The client can use ETags.  Interoperability is not\n> threatened.\n> \n> A client must deal with versions the way it deals with any resource:\n>  - if it has never before retrieved the body, it has NO WAY of knowing\n> whether the body has changed, and has NO REFERENCE POINT against which to\n> compare that anyway!  It's meaningless to say that the content \"shouldn't\n> have changed\" since a client which has never before seen the content can't\n> tell the difference.\n>  - When it does retrieve the body, it should retrieve the ETag.\n>  - When it wants to see if the body has changed, it should compare the ETag.\n\nIf the server is advertising the version resources as \"not mutable\", then\nwho needs an etag?\n\nYour position now *requires* every client to store etags related to version\nresources. Just having that URL is no longer enough. (all related to the\nweakening from MUST to a SHOULD)\n\nIt seems that your argument simply revolves around convenience. We've got\nsome pretty good use cases from Boris on simply using a URL to refer to a\nresource. If that URL suddenly refers to something else... eek. And there'd\nbe no way to tell since the darn etag isn't passed along with the URL.\n\nI think that your argument about \"clients dealing with version resources\" is\nsomewhat specious. I can argue that a client will fetch the version\nresource, get an etag, and that it will continue to have that etag forever.\nFurther, a client won't \"want to see if the body has changed\" if it already\npresumes the version resource is immutable. If you have some downlevel\nbrowser, then it will check the etag, but will always find it unchanged.\n\nNow... if a server advertises version resources as mutable, then yah:\nclients damn well better start watching those etags. But I think the mutable\nstuff blows, so I don't care that servers with mutable versions could screw\nsome clients :-)\n\nCheers,\n-g\n\n-- \nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-14738890"}, {"subject": "Re: PROPFIND instead of REPOR", "content": "Geoff Clemm wrote:\n\n> Note that we need to be a bit careful with the terms\n> \"refer\" and \"latest\" in this context.  When a version-\n> controlled resource is checked-in, its content and dead\n> properties are the same as those of the version resource\n> identified by the DAV:target of the version-controlled\n> resource, but the URL refers to the version-controlled\n> resource, not to that version resource, and the\n> DAV:target is not necessarily the \"latest\" version (new\n> versions can be created in the version history without\n> changing the DAV:target of the versin controlled resource).\n\nGeoff's comments are worth re-posting just to hammer the point home.\n\nA version-controlled resource (VCR) is NOT a reference/pointer/redirector\nto a version -- it is a resource with the same content and dead properties\nas a version (a 'copy' if you will).  Operations on the VCR do not affect\nthe version from which it was created.\n\nI'm struggling to determine the cause of the continued confusion.  Maybe it\nis the historical name (version selector), or the fact that it has a\nDAV:target property, or the fact that the protocol has an easy way to step\nover the VCR to the vesion, or are people thinking of implementations?\n\nWould renaming 'DAV:target' to 'DAV:based-on' or such like help?\n\n\nTim\n\n\n\n", "id": "lists-005-14749028"}, {"subject": "Re: proposed client and server option", "content": "I say keep it out of the spec. (and put it on webdav.org).\n\nRegards,\n\nTim Ellison\nJava Technology Centre, MP146\nIBM UK Laboratory, Hursley Park, Winchester, UK.\ntel: +44 (0)1962 819872  internal: 249872  MOBx: 270452\n\n\n\"Geoffrey M. Clemm\" <geoffrey.clemm@rational.com> on 2000-12-20 08:03:26 PM\n\nPlease respond to \"Geoffrey M. Clemm\" <geoffrey.clemm@rational.com>\n\nTo:   ietf-dav-versioning@w3.org\ncc:\nSubject:  Re: proposed client and server options\n\n\n\n\n\n   From: Greg Stein <gstein@lyra.org>\n\n   Isn't this stuff considered \"non-normative\" and, therefore, not supposed\nto\n   be included in an RFC?\n\nI believe that you can put non-normative stuff in an appendix, but if\nwe keep this appendix (the current consensus is to *not* keep it),\nwe should confirm this.\n\n   Putting this on the www.webdav.org/deltav/ site a definite must. But\nwithin\n   the RFC seems a bit strange.\n\nThat does appear to be the consensus.  Just to provide some background\non what led to my proposing it:\n\n- At various times, folks have asked for the definition of an\n\"intermediate\"\nlevel (between \"just core\" and \"all options\").  Their intermediate level\nwas inevitably the set of options they were intending on implementing.\nHaving folks just declare \"what they are planning on implementing\"\nwould short circuit debate on \"what should the intermediate level be\".\n\n- At other times, folks have asked for some idea about what would be\na \"reasonable\" set of options to support.  This appendix would also be\nof use to those folks, while avoiding contention over what set of\noptions is \"reasonable\".\n\nCheers,\nGeoff\n\n\n   On Tue, Dec 19, 2000 at 04:06:57PM -0500, Geoffrey M. Clemm wrote:\n   >\n   > I propose that we add the following appendix to the protocol.\n   > I believe this should help address the concern that there are\n   > too many combinations of options.  In fact, if we get enough\n   > entries in this section, we might be able to trim down or combine\n   > some of the existing options.\n   >\n   > Any objections, or suggestions for improving the wording?\n   >\n   > Cheers,\n   > Geoff\n   >\n   > -----------------------------------------------------------\n   >\n   >\n   > APPENDIX B: PROPOSED VERSIONING CLIENT AND SERVER OPTIONS\n   >\n   > Although a server can implement any combination of versioning options,\n   > it is expected that certain options will commonly be implemented\n   > together.  In order to provide guidance to both client and server\n   > implementers, this appendix enumerates the option combinations\n   > currently being planned for client and server versioning\n   > implementations.\n   >\n   > A client will have certain options that it requires and others that it\n   > supports.  The difference is that a client will simply give up on a\n   > server that does not provide options that it requires, while it will\n   > just not use options that it supports but which the server does not.\n   >\n   > Note that this is just a statement of intent, and does NOT represent a\n   > commitment by any individual or organization to provide the specified\n   > versioning implementation.  An up-to-date version of this appendix can\n   > be found at <http://www.webdav.org/deltav/implementations.html>.\n   >\n   > 24.1 Client AA\n   > - required options\n   > - supported options\n   >\n   > 24.2 Server BB\n   >\n   > 24.3 Server CC\n   >\n   > 24.4 ...\n\n   --\n   Greg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-14757869"}, {"subject": "Re: PROPFIND instead of REPOR", "content": "I shalln't pretend to be a core-centric observer, but ...\n\nDiscussing the 'number of URLs' isn't going to work for a couple of\nreasons.\n\n(1) In the face of BIND there can be any number of URLs to a resource --\nbut let's dismiss this one.\n\n(2) Using VERSION-CONTROL, as defined in core, clients can create any\nnumber of version-controlled resources (VCRs) based upon a given version\n(using <DAV:version> in the body).  Each VCR would have its own URL, so the\nnumber of valid URLs in 'the system' even for a single version will be n+m!\n\nI think we _do_ have to talk about the number of resources created.\nAssume a single versionable resource.  After the initial VERSION-CONTROL\nmethod is applied, three resources are created:\n  - a version, containing a copy of the content and dead properties of the\nversionable resource,\n - a VCR, containing a copy of the content and dead properties of the\nversion/versionable resource,\n - a version history, containing properties that refer to the version. (not\npresently in core).\n\nFrom here clients can create new versions (CHECKOUT & CHECKIN) and create\nnew VCRs (VERSION-CONTROL) independently.\n\nHowever, version histories seem to provide little functionality.  They can\nanswer all the version URLs (which may be difficult for a distributed\nserver to compute anyway), the initial version (which could be deduced as\nthe version with no predecessor*), and the latest version (just the\nchronologically latest checkin-time, also difficult when distributed).\nBeyond that, histories provide a 'handle' to the versions when all the VCRs\nhave been deleted -- I suggest that this role could equally be played by\nany version (by following predecessor-successor references).\n\n*-presently the DAV:predecessor set is unprotected and so multiple versions\ncould have no predecessor.  I suggest that we do not allow clients to\nPROPPATCH an empty predecessor set on a checked out VCR/working resource.\n\nDepending upon how popular 'latest' proves to be, that can be provided by a\ndifferent mechanism.\n\n\nTim\n\n\nFrom: Greg Stein <gstein@lyra.org>\n\nTo:   Lisa Dusseault <lisa@xythos.com>\ncc:   ietf-dav-versioning@w3.org\nSubject:  Re: PROPFIND instead of REPORT\n\nI've always seen version history resources as separate beasts from the\nversion selector. So yes... N+2.\n\nAnd for that reasons, I've also expressed by reluctance to put them into\nCore without an example case from a \"Core server\" mindset person.\n\nCheers,\n-g\n\nOn Wed, Dec 20, 2000 at 05:57:13PM -0800, Lisa Dusseault wrote:\n> This is likely to clear up some confusion:  I was just discussing this\nstuff\n> with Barry Lind today, and we were unclear on the concept of what\nresources\n> or valid URLs must exist.\n>\n> Our question was, for a document that has n revisions, how many valid\nURLs\n> (I'm avoiding the word resource) exist?\n>  n version resources, e.g.\nhttp://dav.example.org/foo/document.htm?version=n\n>  +1 version-controlled resource, e.g.\n> http://dav.example.org/foo/document.htm\n>  +1 version-history resource, e.g.\n> http://dav.example.org/foo/document.htm?version-history\n>\n> So we're talking about a model with n+2 valid URLs?  Like Boris may have\n> done, I previously interpreted the versioning spec to require n+1 valid\n> URLs:  one for each version, plus one for the resource/history thing,\nwhich\n> I thought was one beast, rather than two.  Now it seems you're saying the\n> resource URL and the version-history-resource URL are two different\nthings,\n> so the entire count is n+2.\n>\n> If that's the case, then I'm dead against requiring a version-history\n> resource for servers implementing CORE.  Make the list of versions be a\n> property on the version-controlled resource, or let versions be\ndiscoverable\n> by adding an <allversions> tag to PROPFIND.  It doesn't matter much, just\n> keep it simple!\n>\n> Lisa\n>\n>\n> > -----Original Message-----\n> > From: ietf-dav-versioning-request@w3.org\n> > [mailto:ietf-dav-versioning-request@w3.org]On Behalf Of Geoffrey M.\n> > Clemm\n> > Sent: Wednesday, December 20, 2000 11:44 AM\n> > To: ietf-dav-versioning@w3.org\n> > Subject: Re: PROPFIND instead of REPORT\n> >\n> >\n> >    From: Greg Stein <gstein@lyra.org>\n> >\n> >    On Tue, Dec 19, 2000 at 01:25:22PM -0500, Boris Bokowski/OTT/OTI\nwrote:\n> >\n> >    > Then what about putting version history resources into core\n> >    > versioning? In document management systems, the history resource\n> >    > for a version like:\n> >    >  http://dav.example.org/foo/document.htm?version=7\n> >    > could be just:\n> >    >  http://dav.example.org/foo/document.htm\n> >\n> >    I'd expect the second URL to refer to the \"latest\" version\n> > rather than the\n> >    version history.\n> >\n> > I'm sure Boris meant something like:\n> >\n> > http://dav.example.org/foo/document.htm?version-history\n> >\n> > as the URL for the version history resource, since\n> >\n> > /http://dav.example.org/foo/document.htm\n> >\n> > is the URL for the version-controlled resource.\n> >\n> > Note that we need to be a bit careful with the terms \"refer\" and\n> > \"latest\" in this context.  When a version-controlled resource is\n> > checked-in, its content and dead properties are the same as those of\n> > the version resource identified by the DAV:target of the\n> > version-controlled resource, but the URL refers to the\n> > version-controlled resource, not to that version resource, and the\n> > DAV:target is not necessarily the \"latest\" version (new versions can\n> > be created in the version history without changing the DAV:target of\n> > the versin controlled resource).\n> >\n> > Cheers,\n> > Geoff\n\n--\nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-14769535"}, {"subject": "&quot;latest&quot; resource (was: Re: PROPFIND instead of REPORT", "content": "On Thu, Dec 21, 2000 at 11:14:57AM +0000, Tim_Ellison@uk.ibm.com wrote:\n>...\n> Depending upon how popular 'latest' proves to be, that can be provided by a\n> different mechanism.\n\nSomething that I was just thinking of...\n\nIs there a way to tell a VCR to \"float\" with the latest version\nautomatically? I've got a strange feeling that if you CHECKOUT a version\nresource, modify it, then do a CHECKIN, that the VCR that pointed at the\noriginal version resource doesn't get auto-updated to point at the latest\nversion.\n\nIs there a way to do this automatically? If not, then what is involved with\nkeeping VCRs pointing at the latest? Do I need to issue a bazillion\nSET-TARGET requests?\n\nCheers,\n-g\n\n-- \nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-14785422"}, {"subject": "RE: Issues, Issues, ??", "content": "> My plea is to let us manage our own namespaces.  Although\n> it is not technically difficult to add a GUID to a URL,\n> we consider that to be really ugly in a URL that we expect\n> will be visible.\n>\n> What if this requirement is dropped from the spec? Reuse\n> may happen, but it will not be frequent.  The client can\n> use ETags.  Interoperability is not threatened.\n\nMutable versions aside, the defining characteristic of a version is that\nits content and dead properties do not change.  This stability is relied\nupon in a number of cases in order to reconstruct previous states.  In\naddition there are a number of cases where the only usable reference to\nthese stable states is a URL.\n\n> A client must deal with versions the way it deals with any\n> resource:\n\nDisagree.  Versions are special, that's why we are here.  They MAY be dealt\nwith like any other resource, but they have specific characteristics that\ncan be relied upon.\n\n>  - if it has never before retrieved the body, it has NO WAY\n> of knowing whether the body has changed, and has NO REFERENCE\n> POINT against which to compare that anyway!  It's meaningless\n> to say that the content \"shouldn't have changed\" since a client\n> which has never before seen the content can't tell the difference.\n\nAgree.\n\n>  - When it does retrieve the body, it should retrieve the ETag.\n>  - When it wants to see if the body has changed, it should\n> compare the ETag.\n\nDisagree.  In compound documents, server-side includes, HTML anchors,\neditors, etc. there is no provision for storing a URL-ETag tuple.  To\npreserve those specific characteristics of a version in these situations\nrequires a URL whose defining characteristic is that the contents and dead\nproperties (of the resource) do not change.\n\nTim\n\n\n\n", "id": "lists-005-14793998"}, {"subject": "Re: &quot;latest&quot; resource (was: Re: PROPFIND instead of REPORT", "content": "> Is there a way to tell a VCR to \"float\" with the\n> latest version automatically?\n\nNo.\n\n> I've got a strange feeling that if you CHECKOUT a\n> version resource, modify it, then do a CHECKIN, that\n> the VCR that pointed at the original version resource\n> doesn't get auto-updated to point at the latest\n> version.\n\nYou should listen to that strange feeling!  It's right.\n\n> Is there a way to do this automatically? If not, then\n> what is involved with keeping VCRs pointing at the latest?\n> Do I need to issue a bazillion SET-TARGET requests?\n\nYup, you have to issue your bazillion requests.\nThe alternative is that CHECKOUT/CHECKIN fail because some client has a VCR\nlocked and you cannot honour the auto 'latest' for them -- even assuming\nthat you know on which server the VCR resides and can modify it.\n\n\nTim\n\n\n\n", "id": "lists-005-14802882"}, {"subject": "Re: &quot;latest&quot; resourc", "content": "On Thu, Dec 21, 2000 at 12:26:29PM +0000, Tim_Ellison@uk.ibm.com wrote:\n> > Is there a way to tell a VCR to \"float\" with the\n> > latest version automatically?\n> \n> No.\n\nGrr. This seems a bit bizarre. Of the version control systems that I've used\n(RCS, CVS, SourceSafe), they've all had floating VCRs (effectively). That\nDeltaV lacks the same concept is quite astonishing...\n\n> > I've got a strange feeling that if you CHECKOUT a\n> > version resource, modify it, then do a CHECKIN, that\n> > the VCR that pointed at the original version resource\n> > doesn't get auto-updated to point at the latest\n> > version.\n> \n> You should listen to that strange feeling!  It's right.\n\n*grumble*\n\n> > Is there a way to do this automatically? If not, then\n> > what is involved with keeping VCRs pointing at the latest?\n> > Do I need to issue a bazillion SET-TARGET requests?\n> \n> Yup, you have to issue your bazillion requests.\n\nThat simply blows.\n\n> The alternative is that CHECKOUT/CHECKIN fail because some client has a VCR\n> locked and you cannot honour the auto 'latest' for them -- even assuming\n> that you know on which server the VCR resides and can modify it.\n\nPeople can't lock stuff on my server :-), so I'm not worred about this.\n\n\nHmm. I just thought of something. Assume you have two people: Joe checks in\na bunch of stuff, creating new version resources. He then follows with a\nbunch of SET-TARGET methods, so the VCRs get update. Jane fetches the VCRs\nand sees his changes.\n\nNow... what if Joe was replaced by an automatic process? From Jane's\nstandpoint, she doesn't care *how* the VCRs are updated, just that they are.\n\nIn other words, I might argue that the server can pretend there is somebody\nout there updating all the VCRs in the repository to point to the \"latest\"\nrevision. The logs don't show it :-), but it is happening.\n\nDoes the spec forbid this? :-)\n\nCheers,\n-g\n\n-- \nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-14811433"}, {"subject": "draft-ietf-deltav-versioning-10.11 now availabl", "content": "I believe this draft reflects the current consensus on how to \nresolve the issues raised during the last call period.  In particular,\nwrt the outstanding issues, my reading of the consensus is:\n- keep REPORT (i.e. do not replace with PROPFIND)\n- require version-URL's not to be re-used (I believe only Lisa is\n  against this, and not for difficulty of implementation reasons)\n- keep version history resources optional.\n\nThe changes were primarily in the layout of the document, but the\ndesign team feels that there were enough changes to merit a second\nlast-call on the modified draft.  In particular, I will post\ndraft-ietf-deltav-versioning-11 on 1/1/01.  There will then\na 2 week working group last call on this document.  If there are\nno substantive changes from this last call, we will submit the -11\ndraft to the IESG.\n\nI'll be monitoring the mailing list closely between now and 1/1/01,\nand would appreciate any reviews of the 10.11 working draft.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-14821427"}, {"subject": "Re: DAV:activity-se", "content": "   From: Juergen Reuter <reuterj@ira.uka.de>\n\n   Is there any way to determine the set of activities for a working\n   resource as was specified in a preceding CHECKOUT?  Probably, somewhere\n   in section 13, there should be a DAV:activity-set defined for working\n   resources.\n\nA working resource is defined as having all the properties of a checked\nout version-controlled resource.  Since a checked out version-controlled\nresource has a DAV:activity-set, so does a working resource.\n\n   And in section 13.9, there should be a DAV:checkout-set\n   property (as in section 5.1.4) defined on activity resources, right?\n\nThat seems reasonable.  I've added this in the 10.11 draft.  If anyone\nobjects, please let me know.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-14828784"}, {"subject": "Re: comments on deltav-10.5 from Yaron Goland, Act On", "content": "Here is the response from the working group to Yaron's comments.\nThese changes appear in the current (10-11) working draft.\n\n   ------- Act I --------------\n\n   (I.1) Get rid of DAV:must-support attribute, and instead define tokens\n for use in an If header.\n\nDone.\n\n   (I.2) Add an intermediate node above any list of property names in a\n report request or response, so that the report can be extended\n with additional XML markup.\n\nDone.  (I think I caught them all).\n\n   (I.3) Add an \"unknown\" value for checkin-date.\n\nThe working group felt a \"null\" value was appropriate for this,\nrather than defining an \"unknown\" value.\n\n   (I.4) Require that the 403/409 response body token appear as the top\n level element \"unless explicitly negotiated otherwise\", so that\n clients get predictable behavior, but later specs can allow\n clients to request other behavior.\n\nDone.\n\n   (I.5) Need to define the precondition for when cannot place a resource\n at this place. (one per resource type).\n\nDone.\n\n   (I.6) Have an example show additional elements in request body being\n ignored by the request.\n\nThis will be reflected in the \"scenarios\" document, since this is just\none of many interesting examples that are worth describing.\n\n   (I.7) Add a response body to VERSION-CONTROL, so that can indicate\n   whether\n it is a no-op or not.  <DAV:already-under-control/>\n\nDone.\n\n   (I.8) Whenever a statement of the form \"the xxx specified in the yyy\n element\" refers to an element in the request body, it should\n explicitly say \"the xxx specified in the yyy element in the\n request body\".\n\nDone wherever there was a chance of ambiguity.\n\n   (I.9) Indicate which live properties are controlled by a lock.\n\nDone (in particular, every versioning live property is controlled by\na write lock).\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-14836293"}, {"subject": "Re: comments on deltav-10.5 from Yaron Goland, Act Tw", "content": "   From: \"Geoffrey M. Clemm\" <geoffrey.clemm@rational.com>\n\n   (II.1) F and T should be false and true to allign the direction of the\n  XML Schema look of allignment with XML schema wherever we can\n  (at least by value).\n\nDone.\n\n   (II.2) Require the value of DAV:comment to be XML, for internationalization.\n\nRemoved the restriction that it be a string, but did not require it to be XML.\n\n   (II.3) Don't constrain the value of DAV:creator-displayname to be a string.\n\nDone.\n\n   (II.4) Require version-name to be XML, for internationalization.\n\nRemoved the restrictin that it be a string, but did not require it to be XML.\n\n   (II.5) Move all DAV:supported-xxx properties to the OPTIONS response.\n  Move all DAV:xxx-collection-set properties to the OPTIONS\n  response.\n\nDone.\n\n   (II.6) Require that a version URL never be re-used after a version is\n  deleted.\n\nDone.\n\n   (II.7) Add tokens for If header that check whether specific\n  checkout/checkin forking behavior is supported by the server.\n\nDeferred.  This can be added later if there is sufficient interest.\n\n   (II.8) Allow \"ancestor\", \"descendant\", (or both), and \"all\" as options\n  to the DAV:version-tree report.\n\nDeferred.  This can be added later if there is sufficient interest.\n\n   (II.9) Require that a PUT to a locked auto-versioned resource be just\n  CHECKOUT/update (i.e. omit the CHECKIN).  Then have an UNLOCK\n  of an auto-checked-out versioned resource be a CHECKIN.\n\nDone.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-14845390"}, {"subject": "Re: comments on deltav-10.5 from Yaron Goland, Act On", "content": "See <tim> tags below.\n\n\n\n\"Geoffrey M. Clemm\" <geoffrey.clemm@rational.com> on 2000-12-21 03:23:21 PM\n\nPlease respond to \"Geoffrey M. Clemm\" <geoffrey.clemm@rational.com>\n\nTo:   ietf-dav-versioning@w3.org\ncc:\nSubject:  Re: comments on deltav-10.5 from Yaron Goland, Act One\n\n\n\n\n\nHere is the response from the working group to Yaron's comments.\nThese changes appear in the current (10-11) working draft.\n\n   ------- Act I --------------\n\n   (I.1) Get rid of DAV:must-support attribute, and instead define tokens\n      for use in an If header.\n\nDone.\n\n<tim>\n    Shame.  I'll have to see this, but either you have LOTS of\n    tokens or have chosen which are 'ignoreable'.  For the record\n    I was in favour of keeping the attribute.\n</tim\n\n\n   (I.2) Add an intermediate node above any list of property names in a\n      report request or response, so that the report can be extended\n      with additional XML markup.\n\nDone.  (I think I caught them all).\n\n   (I.3) Add an \"unknown\" value for checkin-date.\n\nThe working group felt a \"null\" value was appropriate for this,\nrather than defining an \"unknown\" value.\n\n<tim>\n    Again, for the record, I am in favour of servers not defining\n    this property if they cannot provide a reasonable value for it.\n    (I don't know what the \"null\" vallue will be?)\n</tim>\n\n   (I.4) Require that the 403/409 response body token appear as the top\n      level element \"unless explicitly negotiated otherwise\", so that\n      clients get predictable behavior, but later specs can allow\n      clients to request other behavior.\n\nDone.\n\n<tim>\n    What does 'explicitly negotiated otherwise' mean?  If it means that\n    particular clients and servers can have an out of (protocol) band\n    conversation to do something else, then of course this is true; for\n    any number of things.  I'm not sure what this statement adds.\n</tim>\n\n\n   (I.5) Need to define the precondition for when cannot place a resource\n      at this place. (one per resource type).\n\nDone.\n\n   (I.6) Have an example show additional elements in request body being\n      ignored by the request.\n\nThis will be reflected in the \"scenarios\" document, since this is just\none of many interesting examples that are worth describing.\n\n   (I.7) Add a response body to VERSION-CONTROL, so that can indicate\n   whether\n      it is a no-op or not.  <DAV:already-under-control/>\n\nDone.\n\n   (I.8) Whenever a statement of the form \"the xxx specified in the yyy\n      element\" refers to an element in the request body, it should\n      explicitly say \"the xxx specified in the yyy element in the\n      request body\".\n\nDone wherever there was a chance of ambiguity.\n\n   (I.9) Indicate which live properties are controlled by a lock.\n\nDone (in particular, every versioning live property is controlled by\na write lock).\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-14854474"}, {"subject": "Re: comments on deltav-10.5 from Yaron Goland, Act Tw", "content": "See <tim> tags below.\n\n\n\"Geoffrey M. Clemm\" <geoffrey.clemm@rational.com> on 2000-12-21 03:27:57 PM\n\nPlease respond to \"Geoffrey M. Clemm\" <geoffrey.clemm@rational.com>\n\nTo:   ietf-dav-versioning@w3.org\ncc:\nSubject:  Re: comments on deltav-10.5 from Yaron Goland, Act Two\n\n\n\n\n\n   From: \"Geoffrey M. Clemm\" <geoffrey.clemm@rational.com>\n\n   (II.1) F and T should be false and true to allign the direction of the\n       XML Schema look of allignment with XML schema wherever we can\n       (at least by value).\n\nDone.\n\n   (II.2) Require the value of DAV:comment to be XML, for\ninternationalization.\n\nRemoved the restriction that it be a string, but did not require it to be\nXML.\n\n   (II.3) Don't constrain the value of DAV:creator-displayname to be a\nstring.\n\nDone.\n\n   (II.4) Require version-name to be XML, for internationalization.\n\nRemoved the restrictin that it be a string, but did not require it to be\nXML.\n\n<tim>\n    So what's a guy to do?  If it is not necessarily XML it must be\n    handled as a String -- which means all of those <'s and &'s must\n    be escaped.  Of course if a different client retrieves the comment\n    and the XML is un-escaped on the way out, it won't be internationalized\n    to the client's taste.\n    I guess that the objection to it's being XML is that the comment\n    is typically accessible by other (non-NLS'd) tools that would only\n    expect a String.\n</tim>\n\n   (II.5) Move all DAV:supported-xxx properties to the OPTIONS response.\n       Move all DAV:xxx-collection-set properties to the OPTIONS\n       response.\n\nDone.\n\n<tim>\n    Do we need DAV:supported-live-properties?\n    Servers are required to protect the names of all live properties\n    (whether they support them or not), so PROPPATCH will fail if the\n    property is unsupported.\n    Servers should not define a live property that it does not support,\n    and PROPFIND would return 404 Not Found.\n</tim>\n\n\n   (II.6) Require that a version URL never be re-used after a version is\n       deleted.\n\nDone.\n\n   (II.7) Add tokens for If header that check whether specific\n       checkout/checkin forking behavior is supported by the server.\n\nDeferred.  This can be added later if there is sufficient interest.\n\n   (II.8) Allow \"ancestor\", \"descendant\", (or both), and \"all\" as options\n       to the DAV:version-tree report.\n\nDeferred.  This can be added later if there is sufficient interest.\n\n   (II.9) Require that a PUT to a locked auto-versioned resource be just\n       CHECKOUT/update (i.e. omit the CHECKIN).  Then have an UNLOCK\n       of an auto-checked-out versioned resource be a CHECKIN.\n\nDone.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-14866043"}, {"subject": "Re: Subversion support (was: Re: proposed client and server options", "content": "   From: Greg Stein <gstein@lyra.org>\n\n   All righty, then... here is your first appendix item:\n\nThanks for the prompt response, Greg!\n\nEveryone else: Even though we aren't putting this in an appendix, I\nwill be posting this info to our web page, so please send me your\ninfo.  Now's your chance to advertise your option set so that you can\nnudge new implementations to support it!\n\n   24.xxx  Subversion 1.0 (http://subversion.tigris.org/)\n\n      A. Subversion client\n i. Required options:\n    a. RFC 2518, Class 1  (but not Class 2)\n    b. Core versioning (but not: VERSION-CONTROL, UNCHECKOUT, or\n       SET-TARGET)\n    c. Client-Workspace option\n    d. Label option  (probably; not entirely sure because our \"label\"\n       may simply be a COPY)\n       [ this also presumes Label will be split from Client-WS ]\n\nYes, the label option is split from client-ws option.  I think you'll\nend up wanting to support the baseline option instead of the label option,\nbut that is of course up to you.\n\n    e. Activity option\n    f. Version-History-Resource option\n    g. Version-Controlled-Collection option\n    h. Fork-Control option\n    i. Subversion-specific items: a custom report,\n\nI'd be interested in hearing about the custom report.\n\n       DAV:version-name must be an integer representing\n       repository-global-change,\n\nDAV:version-name is server defined, so that can be whatever you want\nit to be.\n\n       atomic CHECKIN of activities,\n\nI added atomic checkin of activities in the MERGE\nrequest, so that's now part of the activity option.\n\n       DAV:prop supported within the DAV:checkin\n       element (to enable returning post-checkin information, such as\n       new version resource URLs),\n\nI believe you can get this information by using a property REPORT\non the DAV:version-set of the activity.  We should verify this.\n\n       possibly other TBD items???\n\nYeah, there always are those (:-).\n\n ii. Supported options: none\n\n      B. Subversion server support\n i. RFC 2518, Class 1\n ii. Subversion-specific subsets for each of 24.xxx.A.i.[b-i] The\n     Subversion server will not fully support DeltaV's Core or Options.\n\n   And yes, I realize that the above spec implies that neither the client nor\n   the server will be interoperable with other DAV systems. That support will\n   take place in a future version (after 1.0). Limited subsets will be\n   available, so interop will depend highly upon what the client expects and\n   uses from the server.\n\nUNCHECKOUT and SET-TARGET are no longer in core, and since Subversion\nauto-version-controls, you actually *do* support VERSION-CONTROL (i.e.\napplying VERSION-CONTROL to something that is already version-controlled\nis explicitly OK and required behavior).\n\nSo that means you will be a fully compliant core versioning server\n(not quite as good as a fully operational death-star, but less\nsusceptible to rebel bombing runs :-).  In particular, this should\ngive you a non-trivial degree of interoperability in even your 1.0\nserver.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-14877437"}, {"subject": "Re: retrieving propertes at CHECKIN time (was: Re: Subversion support", "content": "   From: Greg Stein <gstein@lyra.org>\n\n   >  i. Subversion-specific items: a custom report, DAV:version-name\n   >     must be an integer representing repository-global-change, atomic\n   >     CHECKIN of activities, DAV:prop supported within the DAV:checkin\n   >     element (to enable returning post-checkin information, such as\n   >     new version resource URLs), possibly other TBD items???\n\n   Note the bit in there about DAV:prop in the CHECKIN of an activity. It would\n   be great if that could be formalized, along with a response body for the\n   CHECKIN.\n\n   The motivation is pretty simple: the CHECKIN can construct a *bunch* of new\n   version resources. It would be nice to have the CHECKIN return that\n   information to you (since it already has it), then for the client to go\n   crawling back over the server fetching all that data.\n\nIf you ask for a DAV:property REPORT on the DAV:version-set of your \nactivity, you can get all this information in one request.\n\n   The interesting question, of course, is what resource the DAV:prop applies\n   to. Is it the version selector? No, because those aren't involved in the\n   checkout or checkin (we originally checked out version resources). So it is\n   most likely going to refer to the new version resource. I'm fine with that,\n   as I can get the DAV:version, DAV:getetag, and DAV:version-name properties\n   from that and be okay.\n\nYes.  You would indicate in your DAV:property-request what properties\nyou wanted in the REPORT.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-14888368"}, {"subject": "Overwrite:T behavior for COP", "content": "In the versioning protocol, it is very important to give a client the\nability to update an existing resource via a COPY.  Unfortunately,\n2518 currently says that a COPY with Overwrite:T MUST delete the\ndestination resource first, which means you are not updating the\nresource, but rather are creating a new resource.\n\nFor versioning, this means that a COPY whose Destination is a \nversion-controlled resource creates a new non-version-controlled\nresource at the Destination, rather than adding a new version to\nthe version history of the version-controlled resource.  This\n\"delete\" behavior has similar bad interactions with access control,\nsince someone that is allowed to update a resource, but not allowed\nto delete that resource, would not be allowed to execute the COPY.\n\nIn earlier versions of the versioning protocol, a new value, \"update\"\nwas proposed for the Overwrite header (in addition to \"T\" and \"F\"),\nto support this update behavior of COPY.\n\nAlternatively, one could introduce an \"Update\" header.\n\nA third alternative was suggested at the recent IETF meeting\nby Roy Fielding, namely, that the \"update\" behavior was actually\nthe behavior intended for COPY with Overwrite:T, so the\nright thing to do is to make this clarification in the\nversioning protocol, rather than introducing a new \"update\" value\nfor Overwrite or a new Update header.\n\nThe consensus of the attendees of the WebDAV working group meeting\nwas to follow Roy's suggestion, and use this third alternative,\nso this is what now appears in the latest versioning draft (10.11).\n\nDoes anyone object to this third alternative?\n\nIn particular, note that this does result in different behavior when a\ncollection is being copied.  In particular, the \"delete\" semantics\nremoves members that are currently in the destination but do not have\ncorresponding members in the source, while the \"update\" semantics does\nnot remove any members, but only updates existing members and adds new\nmembers.\n\nNote: Please comment on this soon, since the current plan is to submit\nthe versioning protocol to the IESG in January.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-14897754"}, {"subject": "Re: Overwrite:T behavior for COP", "content": "\"Geoffrey M. Clemm\" wrote:\n\n> A third alternative was suggested at the recent IETF meeting\n> by Roy Fielding, namely, that the \"update\" behavior was actually\n> the behavior intended for COPY with Overwrite:T, so the\n> right thing to do is to make this clarification in the\n> versioning protocol, rather than introducing a new \"update\" value\n> for Overwrite or a new Update header.\n\nShould this be in the versioning protocol, or in an update to 2518? (Or\nis it intended that the versioning RFC update 2518?)\n\n--\n/==============================================================\\\n|John Stracke    | http://www.ecal.com |My opinions are my own.|\n|Chief Scientist |=============================================|\n|eCal Corp.      |Belief is not relevant to truth.             |\n|francis@ecal.com|                                             |\n\\==============================================================/\n\n\n\n", "id": "lists-005-14907103"}, {"subject": "Re: PROPFIND instead of REPOR", "content": "I think Tim may be right (what you call something often does\nmatter :-).  So I'd like to open up the floor for a new name\nfor DAV:target.\n\nWe have Tim's suggestion: DAV:based-on\nSome other possibilities: DAV:state, DAV:current-state\n\nAny other suggestions?\n\nCheers,\nGeoff\n\n   From: Tim_Ellison@uk.ibm.com\n\n   Geoff Clemm wrote:\n\n   > Note that we need to be a bit careful with the terms\n   > \"refer\" and \"latest\" in this context.  When a version-\n   > controlled resource is checked-in, its content and dead\n   > properties are the same as those of the version resource\n   > identified by the DAV:target of the version-controlled\n   > resource, but the URL refers to the version-controlled\n   > resource, not to that version resource, and the\n   > DAV:target is not necessarily the \"latest\" version (new\n   > versions can be created in the version history without\n   > changing the DAV:target of the versin controlled resource).\n\n   Geoff's comments are worth re-posting just to hammer the point home.\n\n   A version-controlled resource (VCR) is NOT a reference/pointer/redirector\n   to a version -- it is a resource with the same content and dead properties\n   as a version (a 'copy' if you will).  Operations on the VCR do not affect\n   the version from which it was created.\n\n   I'm struggling to determine the cause of the continued confusion.  Maybe it\n   is the historical name (version selector), or the fact that it has a\n   DAV:target property, or the fact that the protocol has an easy way to step\n   over the VCR to the vesion, or are people thinking of implementations?\n\n   Would renaming 'DAV:target' to 'DAV:based-on' or such like help?\n\n\n   Tim\n\n\n\n", "id": "lists-005-14915557"}, {"subject": "Version History Resource (was: PROPFIND instead of REPORT", "content": "   From: \"Lisa Dusseault\" <lisa@xythos.com>\n\n   Now it seems you're saying the resource URL and the\n   version-history-resource URL are two different things, so the\n   entire count is n+2.\n\nNote that I take the current consensus to be to make version history\nresources an option, so my follow-up is to make sure there is no\nconfusion about the difference between a version-controlled resource\nand a version history.\n\nFirst, I'll point out I'm a bit unimpressed by the jump from\n\"n+1\" to \"n+2\".  Whatever technique you are using to allow you\nto have \"n\" additional URL's for the resource, it is hard to imagine\nit being other than trivial to support one more (computers are\nreally good at doing N+1 things once you've programmed them to do\nN things :-).\n\nBut back to the more substantive question why a version history\nresource.\n\nThere are a variety of benefits to distinguishing a version-controlled\nresource from a version history.  For example, if you lock the version\nhistory, no new versions can be added to the history (you've locked\nthe DAV:version-set).  If you lock the version-controlled resource\n(the more normal thing to do), you just lock that resource and\nparallel development can continue to add new versions to the history\nresource.\n\n   If that's the case, then I'm dead against requiring a version-history\n   resource for servers implementing CORE.  Make the list of versions be a\n   property on the version-controlled resource,\n\nIf you did that, you'd lose the ability to decide whether to\nlock the version history, or just the version controlled resource.\nSimilarly, you'd lose the ability to differentiate between\n\"when was the history last modified (i.e. a new version added)\"\nand \"when was this particular version selector last modified\".\n\n   or let versions be discoverable\n   by adding an <allversions> tag to PROPFIND.\n\nAKA a REPORT (:-).\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-14924651"}, {"subject": "Re: &quot;latest&quot; resourc", "content": "I think the current (10.11) draft gives Greg what he want here.  In\nparticular, I'm proposing that we allow a MERGE request to checkin\nevery checkout in an activity (previously the spec was silent on this\ncase).\n\nThis means that rather than the \"atomic activity CHECKIN\" that Greg\nasked for before, he instead has \"atomic activity CHECKIN and MERGE\"\nwhich I think is what he really wants.  Greg, can you confirm/deny?\n\nA few more comments below.\n\n   From: Greg Stein <gstein@lyra.org>\n\n   On Thu, Dec 21, 2000 at 12:26:29PM +0000, Tim_Ellison@uk.ibm.com wrote:\n   > > Is there a way to tell a VCR to \"float\" with the\n   > > latest version automatically?\n   > \n   > No.\n\n   Grr. This seems a bit bizarre. Of the version control systems that I've used\n   (RCS, CVS, SourceSafe), they've all had floating VCRs (effectively). That\n   DeltaV lacks the same concept is quite astonishing...\n\nWith the above MERGE behavior, you do have the ability to tell the\nserver to move forward to all the new versions you are creating, which\nI believe is the \"float\" you want here.\n\n   > > I've got a strange feeling that if you CHECKOUT a\n   > > version resource, modify it, then do a CHECKIN, that\n   > > the VCR that pointed at the original version resource\n   > > doesn't get auto-updated to point at the latest\n   > > version.\n   > \n   > You should listen to that strange feeling!  It's right.\n\n   *grumble*\n\nHopefully this update to the protocol will allay that strange\nfeeling (:-).\n\n   > > Is there a way to do this automatically? If not, then\n   > > what is involved with keeping VCRs pointing at the latest?\n   > > Do I need to issue a bazillion SET-TARGET requests?\n   > \n   > Yup, you have to issue your bazillion requests.\n\n   That simply blows.\n\nI agree.  A bazillion requests is a lot of requests.\n\n   Hmm. I just thought of something. Assume you have two people: Joe checks in\n   a bunch of stuff, creating new version resources. He then follows with a\n   bunch of SET-TARGET methods, so the VCRs get update. Jane fetches the VCRs\n   and sees his changes.\n\n   Now... what if Joe was replaced by an automatic process? From Jane's\n   standpoint, she doesn't care *how* the VCRs are updated, just that they are.\n\n   In other words, I might argue that the server can pretend there is somebody\n   out there updating all the VCRs in the repository to point to the \"latest\"\n   revision. The logs don't show it :-), but it is happening.\n\n   Does the spec forbid this? :-)\n\nNope.  All you lose is interoperability (because your client is unlikely\nto get this behavior on any other server, and another client would be \nsurprised to see this happen on your server).\n\nBUT, I believe what you want to happen is very reasonable, so if the MERGE\nproposal works for you, we have a nicely interoperable way for you to tell\nyour server what to do.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-14933759"}, {"subject": "Re: Overwrite:T behavior for COP", "content": "   From: John Stracke <francis@ecal.com>\n\n   \"Geoffrey M. Clemm\" wrote:\n   > A third alternative was suggested at the recent IETF meeting\n   > by Roy Fielding, namely, that the \"update\" behavior was actually\n   > the behavior intended for COPY with Overwrite:T, so the\n   > right thing to do is to make this clarification in the\n   > versioning protocol, rather than introducing a new \"update\" value\n   > for Overwrite or a new Update header.\n\n   Should this be in the versioning protocol, or in an update to 2518? (Or\n   is it intended that the versioning RFC update 2518?)\n\nThis is something that is needed by the versioning protocol, but which\nis of sufficient generality as to be a reasonable candidate for\ninclusion in an update to 2518.  So it MUST appear in the versioning\nprotocol (since we don't want to delay the versioning protocol until\nan update to 2518 is completed), and they SHOULD appear in the update\nto 2518.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-14944340"}, {"subject": "Re: comments on deltav-10.5 from Yaron Goland, Act On", "content": "   From: Tim_Ellison@uk.ibm.com\n\n      (I.1) Get rid of DAV:must-support attribute, and instead define\n      tokens for use in an If header.\n\n   Done.\n\n   <tim>\n       Shame.  I'll have to see this, but either you have LOTS of\n       tokens or have chosen which are 'ignoreable'.  For the record\n       I was in favour of keeping the attribute.\n   </tim>\n\nI agree that this functionality has advantages, but since it\nwas not critical for versioning, we decided to leave it to be\ndefined by some other group that really needs it. \n\n      (I.3) Add an \"unknown\" value for checkin-date.\n\n   The working group felt a \"null\" value was appropriate for this,\n   rather than defining an \"unknown\" value.\n\n   <tim>\n       Again, for the record, I am in favour of servers not defining\n       this property if they cannot provide a reasonable value for it.\n       (I don't know what the \"null\" vallue will be?)\n   </tim>\n\nThat's what I meant ... I should have said \"omit the property\", not\na \"null value\".\n\n      (I.4) Require that the 403/409 response body token appear as the top\n level element \"unless explicitly negotiated otherwise\", so that\n clients get predictable behavior, but later specs can allow\n clients to request other behavior.\n\n   Done.\n\n   <tim>\n       What does 'explicitly negotiated otherwise' mean?  If it means that\n       particular clients and servers can have an out of (protocol) band\n       conversation to do something else, then of course this is true; for\n       any number of things.  I'm not sure what this statement adds.\n   </tim>\n\nIf you just say \"MUST be the top level element\", then this is violated\nby any later spec that wants to allow the client to ask for it to be\nelsewhere (e.g. use a header to ask that it be nested in some other\nXML).  So for extensibility, you need to open up this constraint in\nthis fashion.\n\n      (II.4) Require version-name to be XML, for internationalization.\n\n   Removed the restrictin that it be a string, but did not require it to be\n   XML.\n\n   <tim>\n       So what's a guy to do?  If it is not necessarily XML it must be\n       handled as a String -- which means all of those <'s and &'s must\n       be escaped.  Of course if a different client retrieves the comment\n       and the XML is un-escaped on the way out, it won't be internationalized\n       to the client's taste.\n       I guess that the objection to it's being XML is that the comment\n       is typically accessible by other (non-NLS'd) tools that would only\n       expect a String.\n   </tim>\n\nYes, this was just a case of \"editor fatigue\".  I'll change this to say\nthat XML is required.\n\n      (II.5) Move all DAV:supported-xxx properties to the OPTIONS response.\n  Move all DAV:xxx-collection-set properties to the OPTIONS\n  response.\n\n   Done.\n\n   <tim>\n       Do we need DAV:supported-live-properties?\n       Servers are required to protect the names of all live properties\n       (whether they support them or not), so PROPPATCH will fail if the\n       property is unsupported.\n       Servers should not define a live property that it does not support,\n       and PROPFIND would return 404 Not Found.\n   </tim>\n\nSince the protocol does not distinguish between dead and live properties,\na server has no way of knowing whether the PROPPATCH was to a dead\nproperty or to a live property that it doesn't know about.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-14952474"}, {"subject": "DAV:must-support attribute (was: comments on deltav-10.5 from  Yaron Goland, Act One", "content": "      (I.1) Get rid of DAV:must-support attribute, and instead define\n      tokens for use in an If header.\n\n   Done.\n\n   <tim>\n       Shame.  I'll have to see this, but either you have LOTS of\n       tokens or have chosen which are 'ignoreable'.  For the record\n       I was in favour of keeping the attribute.\n   </tim>\n\n  <geoff>\n    I agree that this functionality has advantages, but\n    since it was not critical for versioning, we decided\n    to leave it to be defined by some other group that\n    really needs it.\n  </geoff>\n\n<tim_2>\n  I just want to be clear that when you wrote \"...and instead define\n  tokens ...\", you were not planning on doing that.  Correct?\n</tim_2>\n\n\n\n", "id": "lists-005-14963276"}, {"subject": "Re: Subversion suppor", "content": "On Thu, Dec 21, 2000 at 11:32:32AM -0500, Geoffrey M. Clemm wrote:\n>    From: Greg Stein <gstein@lyra.org>\n>...\n>    24.xxx  Subversion 1.0 (http://subversion.tigris.org/)\n> \n>       A. Subversion client\n>  i. Required options:\n>     a. RFC 2518, Class 1  (but not Class 2)\n>     b. Core versioning (but not: VERSION-CONTROL, UNCHECKOUT, or\n>        SET-TARGET)\n>     c. Client-Workspace option\n>     d. Label option  (probably; not entirely sure because our \"label\"\n>        may simply be a COPY)\n>        [ this also presumes Label will be split from Client-WS ]\n> \n> Yes, the label option is split from client-ws option.  I think you'll\n> end up wanting to support the baseline option instead of the label option,\n> but that is of course up to you.\n\nYup. Not sure on Labels, and baselines will probably be post-1.0. I'll take\na look at them (with your feedback to the SVN list) and see if/how they\napply and whether there is any \"impedance\" with introducing baselines.\n\n>     e. Activity option\n>     f. Version-History-Resource option\n>     g. Version-Controlled-Collection option\n>     h. Fork-Control option\n>     i. Subversion-specific items: a custom report,\n> \n> I'd be interested in hearing about the custom report.\n\nI'm reporting the status of the client files to the server as the *input*,\nand it returns information about what is out of date.\n\nThe status report is somewhat compressed. For example, \"this dir (and\neverything in it) is v7, except <this> file is v8 and <that> is v6.\" The\nserver then returns info for each item that needs to be updated. These\nupdates are in one of two forms:\n\n1) the client side resource is up to date, except its version has changed.\n   <here> is the new version URL and version-name (where the version-name is\n   actually the repository-global version number)\n\nor\n\n2) the resource is out of date. here is the version URL and version-name.\n   [ the client then fetches a diff to patch from the old version up to the\n     new version ]\n\nCase (1) happens a lot when you have global version numbers (foo.c gets\nupdated, which causes a global version bump, which means every version URL\nmust be updated to the new version number). I might have to figure out a way\nto compress the response. Either let the version URL stagnate, or tell the\nclient how to reconstruct version URLs for <all files in this subtree>.\n\nIn any case... the basic scenario is to report the client state to the\nserver, and have the server tell the client what is needed to update itself.\n\n[ yes, this can be made interoperable through the use of PROPFIND, but you\n  would need to PROPFIND across the whole repository to look for updates. we\n  send a compressed state and the server tells what bits will need to be\n  updated ]\n\n>        DAV:version-name must be an integer representing\n>        repository-global-change,\n> \n> DAV:version-name is server defined, so that can be whatever you want\n> it to be.\n\nOn the server, yes. I put this under \"required client options.\" The client\n*expects* this to be an integer.\n\n>        atomic CHECKIN of activities,\n> \n> I added atomic checkin of activities in the MERGE\n> request, so that's now part of the activity option.\n\nHmm. I read the new draft. I'm unsure if the \"MERGE <activity>\" does the\ncheckin now. It seems to imply that a merge of an activity will cause all\nchecked-out resources to be checked in first, then the merge to the VCR is\nperformed.\n\nIs that the general sense?\n\n(presuming so, then I can review it to assist with clarifying it)\n\n>        DAV:prop supported within the DAV:checkin\n>        element (to enable returning post-checkin information, such as\n>        new version resource URLs),\n> \n> I believe you can get this information by using a property REPORT\n> on the DAV:version-set of the activity.  We should verify this.\n\nIf the activity sticks around after a CHECKIN or MERGE, then yah... I'd have\nthe version-set. Sounds about right.\n\n>...\n> UNCHECKOUT and SET-TARGET are no longer in core,\n\nCool. No need to worry about them, then :-)\n\nHmm. I see CHECKOUT isn't there either... off in the client/server workspace\noptions. Quick question/point: what should a server return for a CHECKOUT\nagainst the wrong type of resource? e.g. should I return 409 (Conflict) if\nsomebody does a CHECKOUT on a VCR? Is there a specific <DAV:error code> to\nreturn for this situation?\n\n> and since Subversion\n> auto-version-controls, you actually *do* support VERSION-CONTROL (i.e.\n> applying VERSION-CONTROL to something that is already version-controlled\n> is explicitly OK and required behavior).\n\nTrue. I'll just need to check the code to ensure it Does The Right Thing.\n\n> So that means you will be a fully compliant core versioning server\n> (not quite as good as a fully operational death-star, but less\n> susceptible to rebel bombing runs :-).  In particular, this should\n> give you a non-trivial degree of interoperability in even your 1.0\n> server.\n\nNeat :-)\n\nI'll review the core in the 10.11 draft and verify my core support.\nPresuming you're going to start a doc on webdav.org for this, then I'll just\npost changes as they come up.\n\nIt seems like a core server is awfully thin now. And does the\nDAV:version-tree report go into the \"Version History Option\" since it\noperates against a version history? And presuming so, the text for this\nreport should say it \"goes to the DAV:version-history of the DAV:target\" or\nsomesuch.\n\nCheers,\n-g\n\n-- \nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-14971667"}, {"subject": "live properties (was: comments on deltav-10.5 from Yaron Goland,  Act One", "content": "      (II.5) Move all DAV:supported-xxx properties to the OPTIONS response.\n       Move all DAV:xxx-collection-set properties to the OPTIONS\n       response.\n\n   Done.\n\n   <tim>\n       Do we need DAV:supported-live-properties?\n       Servers are required to protect the names of all live properties\n       (whether they support them or not), so PROPPATCH will fail if the\n       property is unsupported.\n       Servers should not define a live property that it does not support,\n       and PROPFIND would return 404 Not Found.\n   </tim>\n\n <Geoff>\n    Since the protocol does not distinguish between dead and\n    live properties, a server has no way of knowing whether\n    the PROPPATCH was to a dead property or to a live property\n    that it doesn't know about.\n </Geoff>\n\n<tim_2>\n  I recall that we used to say that servers must protect all defined\n  live properties (i.e., names) in the spec, even those properties that\n  were unsupported.  I didn't see that statement in a quick scan of the\n  latest spec, so has it been dropped?\n  If yes, then I presume it is now encumbant upon clients to (a) check\n  that a live property is supported before setting it (and expecting it\n  to have any effect on the server), and (b) check that a live property\n  is supported before getting it to check that some other client didn't\n  violate (a).\n  It would seem to be less of a burden for the server to protect the\n  property name (and effectively enforce (a)) than expect the client to\n  do two queries (OPTIONS and PROPPATCH/FIND) for each live property\n  operation.\n</tim_2>\n\n\nTim\n\n\n\n", "id": "lists-005-14985304"}, {"subject": "Re: &quot;latest&quot; resourc", "content": "> On Thu, Dec 21, 2000 at 12:26:29PM +0000, Tim_Ellison@uk.ibm.com wrote:\n> > > Is there a way to tell a VCR to \"float\" with the\n> > > latest version automatically?\n> >\n> > No.\n>\n> Grr. This seems a bit bizarre. Of the version control systems\n> that I've used (RCS, CVS, SourceSafe), they've all had floating\n> VCRs (effectively). That DeltaV lacks the same concept is quite\n> astonishing...\n\nRemember that VCRs do not reference particular versions, they are based on\nversions.\n\nI have no objection to including this.\nIt should be optional.  Locked VCRs should not 'float' when new versions\nare created.\n\n> > > I've got a strange feeling that if you CHECKOUT a\n> > > version resource, modify it, then do a CHECKIN, that\n> > > the VCR that pointed at the original version resource\n> > > doesn't get auto-updated to point at the latest\n> > > version.\n> >\n> > You should listen to that strange feeling!  It's right.\n>\n> *grumble*\n\nA VCR doesn't point to a version resource (but I know what you mean).  This\ndistinction is important.\n\nHowever, if you CHECKOUT & CHECKIN a VCR that will create a new version\nresource, and 'copy' the content and dead properties to the VCR.\n\n> > > Is there a way to do this automatically? If not, then\n> > > what is involved with keeping VCRs pointing at the latest?\n> > > Do I need to issue a bazillion SET-TARGET requests?\n> >\n> > Yup, you have to issue your bazillion requests.\n>\n> That simply blows.\n\nIf you're going to scale up to multi-server versioning with distributed\nhistory, it is just too painful to go around and update all those VCRs.\n\n> > The alternative is that CHECKOUT/CHECKIN fail because some client has a\nVCR\n> > locked and you cannot honour the auto 'latest' for them -- even\nassuming\n> > that you know on which server the VCR resides and can modify it.\n>\n> People can't lock stuff on my server :-), so I'm not worred about this.\n\nThat would help but we can't alienate locking clients.\n\n> Hmm. I just thought of something. Assume you have two people: Joe\n> checks in a bunch of stuff, creating new version resources. He\n> then follows with a bunch of SET-TARGET methods, so the VCRs get\n> update. Jane fetches the VCRs and sees his changes.\n>\n> Now... what if Joe was replaced by an automatic process? From Jane's\n> standpoint, she doesn't care *how* the VCRs are updated, just that\n> they are.\n>\n> In other words, I might argue that the server can pretend there\n> is somebody out there updating all the VCRs in the repository to\n> point to the \"latest\" revision. The logs don't show it :-), but it\n> is happening.\n>\n> Does the spec forbid this? :-)\n\nNo, the spec does not forbid this.  I'd like to see if we can agree on\nsomething and work it into the spec.\n\nTim\n\n\n\n", "id": "lists-005-14994416"}, {"subject": "Re: live propertie", "content": "On Fri, Dec 22, 2000 at 09:11:01AM +0000, Tim_Ellison@uk.ibm.com wrote:\n>...\n> <tim_2>\n>   I recall that we used to say that servers must protect all defined\n>   live properties (i.e., names) in the spec, even those properties that\n>   were unsupported.  I didn't see that statement in a quick scan of the\n>   latest spec, so has it been dropped?\n>   If yes, then I presume it is now encumbant upon clients to (a) check\n>   that a live property is supported before setting it (and expecting it\n>   to have any effect on the server), and (b) check that a live property\n>   is supported before getting it to check that some other client didn't\n>   violate (a).\n>   It would seem to be less of a burden for the server to protect the\n>   property name (and effectively enforce (a)) than expect the client to\n>   do two queries (OPTIONS and PROPPATCH/FIND) for each live property\n>   operation.\n> </tim_2>\n\nI agree -- the server should \"protect\" unsupported live props.\n\nCheers,\n-g\n\n-- \nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-15004742"}, {"subject": "Re: &quot;latest&quot; resourc", "content": "[ accidentally sent privately; Tim okay'd going back here... ]\n\nOn Thu, Dec 21, 2000 at 01:20:16PM +0000, Tim_Ellison@uk.ibm.com wrote:\n> Greg Stein wrote:\n> > On Thu, Dec 21, 2000 at 12:26:29PM +0000, Tim_Ellison@uk.ibm.com wrote:\n> > > > Is there a way to tell a VCR to \"float\" with the\n> > > > latest version automatically?\n> > >\n> > > No.\n> >\n> > Grr. This seems a bit bizarre. Of the version control systems\n> > that I've used (RCS, CVS, SourceSafe), they've all had floating\n> > VCRs (effectively). That DeltaV lacks the same concept is quite\n> > astonishing...\n> \n> Remember that VCRs do not reference particular versions, they are based on\n> versions.\n\nHeh. Never really thought of them as separate, but yah... I see that.\n\n> I have no objection to including this.\n> It should be optional.  Locked VCRs should not 'float' when new versions\n> are created.\n\nWell, it looks like I can explicitly update them with some changes Geoff\nmade in the MERGE method. Specifically, that you can MERGE an activity now,\nwhich seems to imply: check all the buggers in to get your new version\nresources, then merge those into the VCRs.\n\nAs Geoff points out, using MERGE this way will mean that the client no\nlonger \"expects\" the VCR to float, but is specifically asking the server to\ndo the checkin and VCR change.\n\n>...\n> > > > Is there a way to do this automatically? If not, then\n> > > > what is involved with keeping VCRs pointing at the latest?\n> > > > Do I need to issue a bazillion SET-TARGET requests?\n> > >\n> > > Yup, you have to issue your bazillion requests.\n> >\n> > That simply blows.\n> \n> If you're going to scale up to multi-server versioning with distributed\n> history, it is just too painful to go around and update all those VCRs.\n\nNot on our system. When you fetch, it just grabs the latest. We aren't\nactually making copies or updating VCRs at all. You could consider it a\n\"lazy update\", but even that is a bit false since there is no (cached) state\nassociated with the VCR.\n\n> > > The alternative is that CHECKOUT/CHECKIN fail because some client has a\n> VCR\n> > > locked and you cannot honour the auto 'latest' for them -- even\n> assuming\n> > > that you know on which server the VCR resides and can modify it.\n> >\n> > People can't lock stuff on my server :-), so I'm not worred about this.\n> \n> That would help but we can't alienate locking clients.\n\nSure. I'm just saying that auto-latest works for me since I can't get goofed\nup by a client locking a VCR.\n\nBut auto-latest seems moot given the MERGE changes. Then again, it might be\nnice for systems that don't support MERGE / activities. e.g. imagine CVS\nwith a DeltaV frontend (although its bozo per-file model would probably be\nokay cuz they'd probably be tweaking the VCR anyways).\n\n> > Hmm. I just thought of something. Assume you have two people: Joe\n> > checks in a bunch of stuff, creating new version resources. He\n> > then follows with a bunch of SET-TARGET methods, so the VCRs get\n> > update. Jane fetches the VCRs and sees his changes.\n> >\n> > Now... what if Joe was replaced by an automatic process? From Jane's\n> > standpoint, she doesn't care *how* the VCRs are updated, just that\n> > they are.\n> >\n> > In other words, I might argue that the server can pretend there\n> > is somebody out there updating all the VCRs in the repository to\n> > point to the \"latest\" revision. The logs don't show it :-), but it\n> > is happening.\n> >\n> > Does the spec forbid this? :-)\n> \n> No, the spec does not forbid this.  I'd like to see if we can agree on\n> something and work it into the spec.\n\nI think Geoff came up with something that will work. I just asked for a\nsmall clarification on whether \"MERGE <activity>\" implies a checkin or not.\nPresuming it *does*, then I get the atomic checkin *and* the \"floating\" all\nin one clean little package.\n\nCheers,\n-g\n\n-- \nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-15012941"}, {"subject": "Re: Subversion suppor", "content": "[ Tim respectively sent privately because of the queries about the\n  functionality of the server; however, it is an Open Source project, so I\n  (thankfully) have no IP to protect and can respond publicly. Tim okay'd\n  posting this back to the list ]\n\nOn Thu, Dec 21, 2000 at 01:34:47PM +0000, Tim_Ellison@uk.ibm.com wrote:\n> Greg Stein wrote:\n> \n> 24.xxx  Subversion 1.0 (http://subversion.tigris.org/)\n> \n>    A. Subversion client\n>       i. Required options:\n>          a. RFC 2518, Class 1  (but not Class 2)\n>       b. Core versioning (but not: VERSION-CONTROL, UNCHECKOUT, or\n>          SET-TARGET)\n> \n> So do you support unversioned resources at all? or do you use CHECKIN to\n> bring them under version control?\n\nThere are no unversioned resources within a Subversion repository. However,\nwe *can* place that repository anywhere in the server's URL space, so it is\ndefinitely possible that unversioned resources will exist on the *server*.\n\nFor example:\n\n   http://www.lyra.org/index.html    -- unversioned\n   http://www.lyra.org/svn/...       -- everything in here is versioned\n\nGiven that VERSION-CONTROL will be a simple no-op (based on Geoff's\ncomments), I will support that. If you try it outside of an SVN repository,\nthen Apache simply won't recognize the method and will return an error.\n\nAnd it sounds like UNCHECKOUT and SET-TARGET left Core, so I'm okay there.\n\n(I won't support UNCHECKOUT since it is part of the server-workspace option\n and SVN uses the client-workspace model; and SET-TARGET is now its own\n option; SVN won't support either of these options)\n\n>       c. Client-Workspace option\n>       d. Label option  (probably; not entirely sure because our \"label\"\n>          may simply be a COPY)\n>          [ this also presumes Label will be split from Client-WS ]\n> \n> I don't understand.  How do you implement labels as a COPY?\n\nSVN can do a copy-by-reference, so they're cheap as hell. I can label\nsomething simply by doing:\n\n  COPY http://www.lyra.org/svn/project\n  Destination: http://www.lyra.org/svn/labels/1.0a1\n\nAssuming nobody monkeys in the 1.0a1 tree, it will reflect the state of\n\"/svn/project\" at the time of the COPY. Of course, we can also apply a\nsimple ACL to prevent that monkeying (but then again: we might want to apply\nfixes to the alpha).\n\nThat said, I think we might do labels in the classic RCS/CVS sense simply\nfor the user-model aspect. That's why I'm tentative with labels. I think\nwe'd like to keep them as copies, but it can be a funny model for some\npeople.\n\n\"how do I see my labels?\" \"well, go over to that part of the tree\" \"oh, is\nthat 'labels' subtree part of the system?\" \"nah... we just picked that... it\nis a policy choice\" \"WTF?!\" :-)\n\n>       e. Activity option\n>       f. Version-History-Resource option\n>       g. Version-Controlled-Collection option\n>       h. Fork-Control option\n>       i. Subversion-specific items: a custom report, DAV:version-name\n>          must be an integer representing repository-global-change,\n> \n> Note that the DAV:version-name is server chosen anyway so 'must be an\n> integer' -> 'is an integer'\n\nAs I said to Geoff :-) ... the server does choose it, yes. But we're talking\nabout what the client expects here. And the client *requires* that\nversion-name to be an integer.\n\n(and that creates a pretty hard dependency/expectation on the server)\n\n>           atomic\n>          CHECKIN of activities, DAV:prop supported within the DAV:checkin\n>          element (to enable returning post-checkin information, such as\n>          new version resource URLs), possibly other TBD items???\n> \n> I'll need to think about how you can do that -- because if it is a working\n> resource you are checking in the resource has gone after the CHECKIN, so\n> what URL would you put in the propstat response?  Its easier for a VCR but\n> I know you'll need it on working resources too.\n\nThe new version resource (resulting from the CHECKIN).\n\nI think we're okay on this one, due to the activity-MERGE. (assuming nobody\nhas big problems with that one)\n\nCheers,\n-g\n\n-- \nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-15024425"}, {"subject": "Re: retrieving propertes at CHECKIN tim", "content": "On Thu, Dec 21, 2000 at 11:37:30AM -0500, Geoffrey M. Clemm wrote:\n> \n>    From: Greg Stein <gstein@lyra.org>\n> \n>    >  i. Subversion-specific items: a custom report, DAV:version-name\n>    >     must be an integer representing repository-global-change, atomic\n>    >     CHECKIN of activities, DAV:prop supported within the DAV:checkin\n>    >     element (to enable returning post-checkin information, such as\n>    >     new version resource URLs), possibly other TBD items???\n> \n>    Note the bit in there about DAV:prop in the CHECKIN of an activity. It would\n>    be great if that could be formalized, along with a response body for the\n>    CHECKIN.\n> \n>    The motivation is pretty simple: the CHECKIN can construct a *bunch* of new\n>    version resources. It would be nice to have the CHECKIN return that\n>    information to you (since it already has it), then for the client to go\n>    crawling back over the server fetching all that data.\n> \n> If you ask for a DAV:property REPORT on the DAV:version-set of your \n> activity, you can get all this information in one request.\n\nTrue. But I can also get it from the activity-MERGE you just defined. And\nthat is much better.\n\n(the version-set on an activity could be a little troublesome for me; not\n sure yet, though)\n\n>    The interesting question, of course, is what resource the DAV:prop applies\n>    to. Is it the version selector? No, because those aren't involved in the\n>    checkout or checkin (we originally checked out version resources). So it is\n>    most likely going to refer to the new version resource. I'm fine with that,\n>    as I can get the DAV:version, DAV:getetag, and DAV:version-name properties\n>    from that and be okay.\n> \n> Yes.  You would indicate in your DAV:property-request what properties\n> you wanted in the REPORT.\n\nWell, going against the DAV:version-set, it identifies the version\nresources, so I'm already there. Not a problem. But the question is probably\nmoot for my case.\n\nCheers,\n-g\n\n-- \nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-15036026"}, {"subject": "CHECKOUT response (was: Subversion support", "content": "> >...\n> > UNCHECKOUT and SET-TARGET are no longer in core,\n>\n> Cool. No need to worry about them, then :-)\n>\n> Hmm. I see CHECKOUT isn't there either... off in the\n> client/server workspace options. Quick question/point: what\n> should a server return for a CHECKOUT against the wrong type\n> of resource? e.g. should I return 409 (Conflict) if somebody\n> does a CHECKOUT on a VCR? Is there a specific <DAV:error code>\n> to return for this situation?\n\nFWIW:\n\nIf the VCR is already checked out, I chose to return 409 Conflict\n<DAV:must-not-be-checked-out/>.  If a client sends CHECKOUT to a resource\nthat is not under version control I return 403 Forbidden\n<DAV:must-be-version-or-version-controlled-resource/>.\n\nFor a complete list of the 403/409 split (which was derived somewhat\narbitrarily) see\nhttp://lists.w3.org/Archives/Public/ietf-dav-versioning/2000OctDec/0125.html\n\n\nTim\n\n\n\n", "id": "lists-005-15045436"}, {"subject": "Re: PROPFIND instead of REPOR", "content": "The name change seems a bit gratuitous. I don't see a problem with people\nsometimes looking at the VCR as a redirector. Since they can't change the\nVCR, it certainly doesn't feel all that separate.\n\nThen again, since the VCR doesn't expose properties from the version, they\n*do* feel distinct. And you CHECKOUT a VCR; that is distinct from what\nhappens when you CHECKOUT a version.\n\nRenaming it would also play hell with the SET-TARGET method :-)\n\nIMO, just leave it.\n\nCheers,\n-g\n\nOn Thu, Dec 21, 2000 at 12:19:32PM -0500, Geoffrey M. Clemm wrote:\n> \n> I think Tim may be right (what you call something often does\n> matter :-).  So I'd like to open up the floor for a new name\n> for DAV:target.\n> \n> We have Tim's suggestion: DAV:based-on\n> Some other possibilities: DAV:state, DAV:current-state\n> \n> Any other suggestions?\n> \n> Cheers,\n> Geoff\n> \n>    From: Tim_Ellison@uk.ibm.com\n> \n>    Geoff Clemm wrote:\n> \n>    > Note that we need to be a bit careful with the terms\n>    > \"refer\" and \"latest\" in this context.  When a version-\n>    > controlled resource is checked-in, its content and dead\n>    > properties are the same as those of the version resource\n>    > identified by the DAV:target of the version-controlled\n>    > resource, but the URL refers to the version-controlled\n>    > resource, not to that version resource, and the\n>    > DAV:target is not necessarily the \"latest\" version (new\n>    > versions can be created in the version history without\n>    > changing the DAV:target of the versin controlled resource).\n> \n>    Geoff's comments are worth re-posting just to hammer the point home.\n> \n>    A version-controlled resource (VCR) is NOT a reference/pointer/redirector\n>    to a version -- it is a resource with the same content and dead properties\n>    as a version (a 'copy' if you will).  Operations on the VCR do not affect\n>    the version from which it was created.\n> \n>    I'm struggling to determine the cause of the continued confusion.  Maybe it\n>    is the historical name (version selector), or the fact that it has a\n>    DAV:target property, or the fact that the protocol has an easy way to step\n>    over the VCR to the vesion, or are people thinking of implementations?\n> \n>    Would renaming 'DAV:target' to 'DAV:based-on' or such like help?\n> \n> \n>    Tim\n\n-- \nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-15053027"}, {"subject": "Re: &quot;latest&quot; resourc", "content": "On Thu, Dec 21, 2000 at 12:46:58PM -0500, Geoffrey M. Clemm wrote:\n> \n> I think the current (10.11) draft gives Greg what he want here.  In\n> particular, I'm proposing that we allow a MERGE request to checkin\n> every checkout in an activity (previously the spec was silent on this\n> case).\n> \n> This means that rather than the \"atomic activity CHECKIN\" that Greg\n> asked for before, he instead has \"atomic activity CHECKIN and MERGE\"\n> which I think is what he really wants.  Greg, can you confirm/deny?\n\nYes, that's what I want: check in everything that has been checked out\n(within the specified activity); do the checkin atomically; update all\ncorresponding VCRs to point to the now-latest version resources.\n\nNote that I don't need activity checkin any more (with this change). I\nbelieve it still makes great sense, so I'd be a \"prefer yes\" to see it\nremain.\n\n>...\n>    From: Greg Stein <gstein@lyra.org>\n> \n>    On Thu, Dec 21, 2000 at 12:26:29PM +0000, Tim_Ellison@uk.ibm.com wrote:\n>    > > Is there a way to tell a VCR to \"float\" with the\n>    > > latest version automatically?\n>    > \n>    > No.\n> \n>    Grr. This seems a bit bizarre. Of the version control systems that I've used\n>    (RCS, CVS, SourceSafe), they've all had floating VCRs (effectively). That\n>    DeltaV lacks the same concept is quite astonishing...\n> \n> With the above MERGE behavior, you do have the ability to tell the\n> server to move forward to all the new versions you are creating, which\n> I believe is the \"float\" you want here.\n\nSure looks that way.\n\nI would do something like:\n\n  MERGE /repos/$svn/act/my-activity-name\n  Destination: http://www.lyra.org/repos\n\n  <some merge body>\n\nThe merge body would specify some props, and I'd get my new version URLs and\nversion-names back. Quite tidy, actually :-)\n\n[ and what is funny is that I initially considered MERGE as doing this\n  check-in (which is why I asked for the prop response in there). then you\n  said it didn't check in resources, just updated VCRs, so that goes out and\n  in comes the activity-CHECKIN. that doesn't update VCRs, so now we're back\n  where I started :-) ]\n\n>...\n>    > > Is there a way to do this automatically? If not, then\n>    > > what is involved with keeping VCRs pointing at the latest?\n>    > > Do I need to issue a bazillion SET-TARGET requests?\n>    > \n>    > Yup, you have to issue your bazillion requests.\n> \n>    That simply blows.\n> \n> I agree.  A bazillion requests is a lot of requests.\n\nHeh.\n\n>    Hmm. I just thought of something. Assume you have two people: Joe checks in\n>    a bunch of stuff, creating new version resources. He then follows with a\n>    bunch of SET-TARGET methods, so the VCRs get update. Jane fetches the VCRs\n>    and sees his changes.\n> \n>    Now... what if Joe was replaced by an automatic process? From Jane's\n>    standpoint, she doesn't care *how* the VCRs are updated, just that they are.\n> \n>    In other words, I might argue that the server can pretend there is somebody\n>    out there updating all the VCRs in the repository to point to the \"latest\"\n>    revision. The logs don't show it :-), but it is happening.\n> \n>    Does the spec forbid this? :-)\n> \n> Nope.  All you lose is interoperability (because your client is unlikely\n> to get this behavior on any other server, and another client would be \n> surprised to see this happen on your server).\n\nAgreed.\n\n> BUT, I believe what you want to happen is very reasonable, so if the MERGE\n> proposal works for you, we have a nicely interoperable way for you to tell\n> your server what to do.\n\nYes. But I think 10.13 doesn't make it clear that any resources that are\nchecked-out (into that activity) will be checked in first. I'm just thinking\na bit of prose in the intro of the section. A careful reading of the\nprecondition and postcondition implies this, but some text would be great.\n\nCheers,\n-g\n\n-- \nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-15062664"}, {"subject": "Re: &quot;latest&quot; resourc", "content": "<Geoff>\n    I think the current (10.11) draft gives Greg what he\n    want here.  In particular, I'm proposing that we allow\n    a MERGE request to checkin every checkout in an activity\n    (previously the spec was silent on this case).\n</Geoff>\n\nI feel like I'm playing catch-up on MERGE, so bear with me ...\n\nThe proposal is to allow a MERGE /myactivity with Destination:\n/somecollection which will (1) checkin any checked out resources (VCRs or\nworking resources), and (2) perform the merge semantics on all the VCRs in\nthe activity that have a corresponding VCR (i.e. shared target history) in\nthe destination.\n\nWhy do you want to do these in a single operation, why not use CHECKIN and\nMERGE separately?  At least then you'll catch people still working in the\nactivity that you are trying to merge.\n\nCan the destination be any collection?  Didn't it use to be only a\nworkspace?\nIf it is not a workspace then I presume that all VCRs in the destination\nare merged (transitive closure of all URLs rooted at the destination URL),\nand merges are performed based on shared version history and nothing to do\nwith the URL namespace.\n\nIt's going to be a very heavy weight operation on the server, for something\nthat I expect people to be using frequently.\n\nRegards,\nTim\n\n\n\n", "id": "lists-005-15074368"}, {"subject": "Re: comments on deltav-10.5 from Yaron Goland, Act Tw", "content": "   (II.4) Require version-name to be XML, for internationalization.\n\nRemoved the restrictin that it be a string, but did not require it to be\nXML.\n\n<tim>\n    So what's a guy to do?  If it is not necessarily XML it must be\n    handled as a String -- which means all of those <'s and &'s must\n    be escaped.  Of course if a different client retrieves the comment\n    and the XML is un-escaped on the way out, it won't be internationalized\n    to the client's taste.\n    I guess that the objection to it's being XML is that the comment\n    is typically accessible by other (non-NLS'd) tools that would only\n    expect a String.\n</tim>\n<jra>\nI think it should be XML too. Remember PCDATA is acceptable XML, and its\njust a string. This should follow the same convention as DAV:owner for lock\nowners for example.\n</jra>\n\n\n\n", "id": "lists-005-15082944"}, {"subject": "RE: Issues, Issues, ??", "content": "<lisa>A client must deal with versions the way it deals with any resource:\n - if it has never before retrieved the body, it has NO WAY of knowing\nwhether the body has changed, and has NO REFERENCE POINT against which to\ncompare that anyway!  It's meaningless to say that the content \"shouldn't\nhave changed\" since a client which has never before seen the content can't\ntell the difference.\n - When it does retrieve the body, it should retrieve the ETag.\n - When it wants to see if the body has changed, it should compare the\nETag.</lisa>\n\nI disagree. What you are saying is true of regular resources, but it should\nnot be true of immutable versions. That's part of the funtamental semantics\nthat versioning adds to WebDAV. I don't think it is at all unreasonable for\nsomeone (or some application or baseline) to assume that immutable versions\nit references will never change other than deletion. In some cases, this is\neven a legal requirement.\n\n\n\n", "id": "lists-005-15090824"}, {"subject": "Renaming &quot;target&quot; (was: PROPFIND instead of REPORT", "content": "   From: Tim_Ellison@uk.ibm.com\n\n   A version-controlled resource (VCR) is NOT a reference/pointer/redirector\n   to a version -- it is a resource with the same content and dead properties\n   as a version (a 'copy' if you will).  Operations on the VCR do not affect\n   the version from which it was created.\n\n   I'm struggling to determine the cause of the continued confusion.  Maybe it\n   is the historical name (version selector), or the fact that it has a\n   DAV:target property, or the fact that the protocol has an easy way to step\n   over the VCR to the vesion, or are people thinking of implementations?\n\n   Would renaming 'DAV:target' to 'DAV:based-on' or such like help?\n\nAfter mulling over this some more, I think Tim is on to something\nhere.  Several times at the last IETF meeting, I heard folks use \nthe term \"target\" to mean \"the resource identified by the request-URL\"\nas in \"the target of the POST request is ...\".  This certainly\nwould lead you to believe that the \"target\" of an operation on\na version-controlled resource is identified by its DAV:target\nproperty.  Which is exactly what we don't want people to think.\n\nI believe that a more meaningful (and less misleading) term for\nDAV:target would be DAV:checked-in.  This has several benefits:\n- you can test whether a resource is checked in by testing if\n  it has a DAV:checked-in property (that's pretty intuitive)\n- it is symmetric with the DAV:checked-out property\n\nThen all we need to do is rename the SET-TARGET method (I think\n\"UPDATE\" works fine), and we're all set.\n\nI'll make a query/replace pass through the protocol, and if nothing\nbreaks, I'll post a 10.12 draft for your consideration.  I need to\nget a 10.12 draft anyway, to make the fixes that Greg and Tim have\nasked for (clarifying checkin behavior for MERGE activity, and\nadding XML to the DAV:comment and DAV:creatordisplayname properties).\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-15098555"}, {"subject": "Re: DAV:must-support attribute (was: comments on deltav-10.5 from  Yaron Goland, Act One", "content": "Ah yes, my response was misleading.  I was not planning on defining\nany new tokens for an If header, but rather just deferring the problem\nuntil we really needed to deal with it (at which time we can have\nthe discussion about If header tokens vs. DAV:must-support attributes).\n\nThanks for clarifying that, Tim.\n\nCheers,\nGeoff\n\n   From: Tim_Ellison@uk.ibm.com\n\n (I.1) Get rid of DAV:must-support attribute, and instead define\n tokens for use in an If header.\n\n      Done.\n\n      <tim>\n  Shame.  I'll have to see this, but either you have LOTS of\n  tokens or have chosen which are 'ignoreable'.  For the record\n  I was in favour of keeping the attribute.\n      </tim>\n\n     <geoff>\n       I agree that this functionality has advantages, but\n       since it was not critical for versioning, we decided\n       to leave it to be defined by some other group that\n       really needs it.\n     </geoff>\n\n   <tim_2>\n     I just want to be clear that when you wrote \"...and instead define\n     tokens ...\", you were not planning on doing that.  Correct?\n   </tim_2>\n\n\n\n", "id": "lists-005-15108093"}, {"subject": "Re: Subversion suppor", "content": "   From: Greg Stein <gstein@lyra.org>\n\n   ...\n   I'm reporting the status of the client files to the server as the *input*,\n   and it returns information about what is out of date.\n   ...\n\nI'll mull this over for a bit to see if I can think of a form of this\nreport that is not wired into the Subversion implementation.  I will\nprobably have some questions, but it probably makes more sense to\npursue this thread on the subversion mailing list.\n\n\n   >        DAV:version-name must be an integer representing\n   >        repository-global-change,\n   > \n   > DAV:version-name is server defined, so that can be whatever you want\n   > it to be.\n\n   On the server, yes. I put this under \"required client options.\" The client\n   *expects* this to be an integer.\n\nOK, I get it.  That means that your client won't work unless it is an\ninteger?  Is this a release-1 style constraint that you would try to\nrelax (for interoperability) in a later release, or is that something\nthat is intrinsic to the design of your client?\n\n   > I added atomic checkin of activities in the MERGE\n   > request, so that's now part of the activity option.\n\n   Hmm. I read the new draft. I'm unsure if the \"MERGE <activity>\"\n   does the checkin now. It seems to imply that a merge of an activity\n   will cause all checked-out resources to be checked in first, then\n   the merge to the VCR is performed.  Is that the general sense?\n\nYes, that's it.  I'll try to update the section to make this clearer.\n\n   Hmm. I see CHECKOUT isn't there either... off in the client/server\n   workspace options. Quick question/point: what should a server\n   return for a CHECKOUT against the wrong type of resource?\n   e.g. should I return 409 (Conflict) if somebody does a CHECKOUT on\n   a VCR? Is there a specific <DAV:error code> to return for this\n   situation?\n\nIf the resource doesn't support CHECKOUT at all, then that would be a\n405 (Method not Allowed).  If the resource in theory supports the\nmethod but your server will never allow it, that's a 403 (Forbidden).\nIf there's something the user could do to the resource, that's a 409\n(Conflict), and you could return (DAV:must-be-checked-in).\n\n   It seems like a core server is awfully thin now. And does the\n   DAV:version-tree report go into the \"Version History Option\" since it\n   operates against a version history?\n  \nThe DAV:version-tree report is part of core.  Every versioning\nserver must provide the concept of a version history (which is why\nthe concept appears in core versioning), but the only way of accessing\nthis information in core versioning is the DAV:version-tree REPORT.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-15116826"}, {"subject": "Re: live properties (was: comments on deltav-10.5 from Yaron Goland,  Act One", "content": "   From: Tim_Ellison@uk.ibm.com\n\n     Do we need DAV:supported-live-properties?  Servers are\n     required to protect the names of all live properties\n     (whether they support them or not), so PROPPATCH will fail\n     if the property is unsupported.  Servers should not define a\n     live property that it does not support, and PROPFIND would\n     return 404 Not Found.\n\n     I recall that we used to say that servers must protect all defined\n     live properties (i.e., names) in the spec, even those properties that\n     were unsupported.  I didn't see that statement in a quick scan of the\n     latest spec, so has it been dropped?\n\nSection 2.8 Additional PROPPATCH Semantics\n(DAV:cannot-modify-unsupported-property)\n\nDAV:supported-live-properties isn't for the live properties \ndefined in the protocol (they can be discovered via the\nDAV: header from the OPTIONS request).  It is for server\ndefined live properties, that a user might be able to make\nsense of, even if the client wasn't designed with them in mind.\nIt is expected that versioning servers will all have at least\na few server specific live properties.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-15126699"}, {"subject": "review of baseline sectio", "content": "Some nits that I noticed while reading thru the baseline section:\n\n*) S9.7 is whacked. It talks about activities.\n\n*) S9.11 preconditions talk about removing VCRs, but not adding them.\n\n*) S9.6 marshalling refers to the DAV:version-controlled-resource report and\n   the DAV:version-controlled-resource element.\n\n*) S9.1.2 why is the version-set replicated here, rather than sitting back\n   on the actual baseline? We don't replicate stuff to VCRs, so I see no\n   rationale to do it for baseline selectors.\n\n*) Is there a way to rationale VCR vs Baseline Selector? We dumped\n   \"selector\" for the former, so why not the latter?\n\n*) Are subbaselines really required?\n   a) assuming so, then the first sentence, last word, of S9.1.3 and S9.2.2\n      should be pluralized.\n\n*) S9.6: add a comment that this report is usually used in conjunction with\n   the Depth: header\n   \n   Oh, wait. Version histories aren't necessarily a tree that allows a\n   Depth: header. Further, we don't have the property-report's feature of\n   \"linking through\" to go from VCRs to versions to histories (where we can\n   then find the right version-in-the-baseline info).\n\n   Let me amend: I think this report doesn't work :-). You'd have to crawl\n   the whole repository.\n\n\nCheers,\n-g\n\n-- \nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-15135257"}, {"subject": "Re: review of baseline sectio", "content": "   From: Greg Stein <gstein@lyra.org>\n\n   Some nits that I noticed while reading thru the baseline section:\n\nDrat ... while I was replacing DAV:target with DAV:checked-in, I\nnoticed a bunch of glitches and hoped I'd get a new draft up before\nanyone noticed ... oh well.  10.12 is up on the web site, so maybe I\ncaught these already (one can always hope :-).\n\n   *) S9.7 is whacked. It talks about activities.\n\nCaught that one.\n\n   *) S9.11 preconditions talk about removing VCRs, but not adding them.\n\nMissed that one!\nDrat ...  Looks like we'll need a 10.13 (not that I really though we could\nstop at 12 :-).\n\n   *) S9.6 marshalling refers to the DAV:version-controlled-resource report and\n      the DAV:version-controlled-resource element.\n\nCaught that.\n\n   *) S9.1.2 why is the version-set replicated here, rather than sitting back\n      on the actual baseline? We don't replicate stuff to VCRs, so I see no\n      rationale to do it for baseline selectors.\n\nCaught that (a cut'n'paste thing ... we needed DAV:subbaseline-set in\na baseline selector so they can be modified, and it looks like\nDAV:version-set came along for the ride :-).\n\n   *) Is there a way to rationale VCR vs Baseline Selector? We dumped\n      \"selector\" for the former, so why not the latter?\n\nThe problem is that there are two kinds of \"versions\" of a collection ...\n\"shallow versions\" (just the immediate members), which are just\ncalled \"collection versions\", and \"deep versions\", which are called\n\"baselines\".\n\nAt one point, we put all the methods/properties on the collection, and had\n\"checkin\" and \"deep checkin\", \"checkout\" and \"deep checkout\", \n\"DAV:checked-out\" and \"DAV:deep-checked-out\", \"DAV:predecessor-set\" and\n\"DAV:deep-predecessor-set\", ... (you get the picture :-).\n\nIt's way simpler to just create a second resource (the baseline\nselector) that is the \"deep versioned resource\", and have a\n\"checkin\" of the baseline selector be \"deep-checkin\", \"checkout\nof the baseline selector be \"deep checkout\", the DAV:checked-out\nproperty of the baseline selector be \"DAV:deep-checked-out\", etc.\n\nThe baseline-controlled-collection and its baseline selector are\nthen linked one-to-one, so that if you have one, you can always\nget to the other.\n\nNow as for the term \"baseline selector\".  We already have the\ncollection itself as the \"baseline-controlled resource\", so that term\nis taken.  At that point, I just ran out of ideas, so left it as\n\"baseline selector\" (just for old time's sake :-)..\n\n   *) Are subbaselines really required?\n      a) assuming so, then the first sentence, last word, of S9.1.3 and S9.2.2\n should be pluralized.\n\nI think I may have missed one of those plurals, but I did get the\n\"is optional\" added (DAV:subactivity-set is optional as well).\n\n   *) S9.6: add a comment that this report is usually used in conjunction with\n      the Depth: header\n\n      Oh, wait. Version histories aren't necessarily a tree that allows a\n      Depth: header.\n\nActually, version history resources are never a tree (they aren't\ncollection resources, at least as far as the protocol is concerned).\nSo this report is rarely used with a Depth header, but is for going\nfrom a single version history to its version.\n\n      Further, we don't have the property-report's feature of\n      \"linking through\" to go from VCRs to versions to histories (where we can\n      then find the right version-in-the-baseline info).\n      Let me amend: I think this report doesn't work :-). You'd have to crawl\n      the whole repository.\n\nYou couldn't do a Depth walk of the version-controlled resource tree\nto get old baseline versions anyway, because there can easily be\nversions in the old baseline that no longer have version-controlled\nresources in the current version-controlled resource tree.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-15143359"}, {"subject": "Re: Subversion suppor", "content": "   From: Greg Stein <gstein@lyra.org>\n\n   SVN can do a copy-by-reference, so they're cheap as hell. I can label\n   something simply by doing:\n\n     COPY http://www.lyra.org/svn/project\n     Destination: http://www.lyra.org/svn/labels/1.0a1\n\nAccording to the protocol, that would create a bunch of new\nnon-version-controlled resources.  They could be automatically put\nunder version control, but then as far as the protocol is concerned,\nthey would be completely unrelated to the resources that they came\nfrom (i.e. changes couldn't be merged back to /svn/project).\n\nI believe the most interoperable way of marshalling this in\nthe versioning protocol so that you could merge changes back\nwould be:\n\n     REPORT /svn/project\n     Host: www.lyra.org\n     <D:property-report>\n       <D:baseline-selector>\n         <D:checked-in/>        ; (used to be D:target)\n       </D:baseline-selector>\n     </D:property-report>\n\n; This gets you the current baseline (aka Subversion \"repository revision\")\nof your project.\n      \n\n     BASELINE-CONTROL /svn/labels/1.0a1\n     <D:baseline-control>\n       <D:baseline> http://whatever-came-back-from-REPORT\n       </D:baseline>\n     </D:baseline-control>\n\nIn other words, you \"instantiate\" a baseline in a baseline-controlled\ncollection whenever you want to expose that baseline as a namespace. \n\n   Assuming nobody monkeys in the 1.0a1 tree, it will reflect the state of\n   \"/svn/project\" at the time of the COPY. Of course, we can also apply a\n   simple ACL to prevent that monkeying (but then again: we might want to apply\n   fixes to the alpha).\n\n   That said, I think we might do labels in the classic RCS/CVS sense simply\n   for the user-model aspect. That's why I'm tentative with labels. I think\n   we'd like to keep them as copies, but it can be a funny model for some\n   people.\n\n   \"how do I see my labels?\" \"well, go over to that part of the tree\" \"oh, is\n   that 'labels' subtree part of the system?\" \"nah... we just picked that... it\n   is a policy choice\" \"WTF?!\" :-)\n\nWell, if they want to \"slash through\" the names of the labeled copy,\nthey pretty much have to instantiate it somewhere in the namespace.\n\nBut I agree that they probably don't want to instantiate all their\nlabels as copies in the namespace (even if subversion can do it\ncheaply :-), so I guess I'll withdraw my objection to labels, as long\nas they are used on baselines (which I believe is the only place\nsubversion would place them?) and not on individual file versions.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-15154140"}, {"subject": "Re: &quot;latest&quot; resourc", "content": "   From: Greg Stein <gstein@lyra.org>\n\n   I would do something like:\n\n     MERGE /repos/$svn/act/my-activity-name\n     Destination: http://www.lyra.org/repos\n\n     <some merge body>\n\n   The merge body would specify some props, and I'd get my new version URLs and\n   version-names back. Quite tidy, actually :-)\n\n   [ and what is funny is that I initially considered MERGE as doing this\n     check-in (which is why I asked for the prop response in there). then you\n     said it didn't check in resources, just updated VCRs, so that goes out and\n     in comes the activity-CHECKIN. that doesn't update VCRs, so now we're back\n     where I started :-) ]\n\nAh yes, but that was before I understood you were doing all conflict\nresolution on the client, and before we had the DAV:no-checkout option\nto MERGE to ensure it.\n\nBut in retrospect, yes, you were right (:-).\n\nI don't feel too bad going around once ... it's the second or third\ntime around that can make you dizzy (:-).\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-15164175"}, {"subject": "COPY and retain history (was: Re: Subversion support", "content": "On Sat, Dec 23, 2000 at 12:01:15AM -0500, Geoffrey M. Clemm wrote:\n>    From: Greg Stein <gstein@lyra.org>\n> \n>    SVN can do a copy-by-reference, so they're cheap as hell. I can label\n>    something simply by doing:\n> \n>      COPY http://www.lyra.org/svn/project\n>      Destination: http://www.lyra.org/svn/labels/1.0a1\n> \n> According to the protocol, that would create a bunch of new\n> non-version-controlled resources.  They could be automatically put\n> under version control, but then as far as the protocol is concerned,\n> they would be completely unrelated to the resources that they came\n> from (i.e. changes couldn't be merged back to /svn/project).\n\neek.\n\n[looking, looking...]\n\nWell, I need to figure out exactly where I want to go with this. To create a\ntrue copy-by-ref, I'd want to use VERSION-CONTROL on a null resource to\npoint(*) at the appropriate version (and an existing version history). Then\nI'd want to fork a new line of descent from that version.\n\nThe fork would probably happen in some kind of lazy fashion. Hmm... yes, in\nSVN, the two VCRs would point at the same version resource. As soon as you\ngo to modify one or the other, a fork is created.\n\nAh. Actually, the VERSION-CONTROL would be executed within a working\ncollection. When the working collection is checked in, a new pair of version\nresources are created (which internally reference the same content). For\nexample:\n\n    CHECKOUT /repos/$svn/ver/67/somedir\n\n    VERSION-CONTROL /repos/$svn/wrk/activity-name-here/67/somedir/foo.c\n    (pointing at /repos/$svn/ver/67/otherdir/foo.c)\n    \n    CHECKIN (activity)\n\nNow, we'd have two new version resources(++):\n    /repos/$svn/ver/68/somedir/foo.c\n    /repos/$svn/ver/68/otherdir/foo.c\n\nSince we have two version resources, but the same version history, we\neffectively have the beginning of our fork.\n\nNote: S5.10 of the 10.11 draft should be moved. I'd say Section 3 offhand,\nbut it would seem that you could do a VERSION-CONTROL on a null resource\neven without version histories. Sure, once you bring in version histories,\nthe semantics (pre/post conditiosn) might change a bit. But S5.10 has no\nrelation to server-side workspaces. I'd say the null resource part goes into\ncore, and then behavior gets modified/refined by the options.\n\n(++) hmm. One thought. Whenever a checkin anywhere occurs, a complete set of\nversion resources are created, whether a specific version resource was\nactually involved in the checkin or not. While allowed by the spec (it would\nbe as if some Invisible Bob was creating new version resources), there may\nbe some implication that I'm missing. Need to think on this one.\n\nOh. I might have the answer already :-). I can avoid creating new version\nresources if I simply jigger them a bit:\n\n    /repos/$svn/ver/17.3/somedir/foo.c\n    /repos/$svn/ver/17.3/otherdir/foo.c\n\nHere, the \"17.3\" refers to the internal, stored content. As new repository\nversions are creatd, the 17.3 remains stable, so we aren't implicitly\ncreating new version resources any more.\n\nNow to think on this model some more, and see whether the repository can\nwork using this model.\n\n>...\n> In other words, you \"instantiate\" a baseline in a baseline-controlled\n> collection whenever you want to expose that baseline as a namespace.\n\nFor a label... yah. This would work great.\n\nIf we do true labels, rather than just copies, then I'll probably go ahead\nand add some formalized baseline code.\n\nDarn... I just keep adding more and more of the DeltaV draft. What's next?\nWorkspaces?! :-)\n\n>...\n> Well, if they want to \"slash through\" the names of the labeled copy,\n> they pretty much have to instantiate it somewhere in the namespace.\n\nYup.\n\n> But I agree that they probably don't want to instantiate all their\n> labels as copies in the namespace (even if subversion can do it\n> cheaply :-),\n\nIt's an O(1) operation :-)\n\n> so I guess I'll withdraw my objection to labels, as long\n> as they are used on baselines (which I believe is the only place\n> subversion would place them?) and not on individual file versions.\n\nWe would definitely be doing labels on baselines. I never investigated them\nthoroughly (as you can tell, we aren't even sure what kind of label\nfunctionality we want, let alone the modelling of them via DAV). But your\nlabel-a-baseline idea is exactly spot on :-)\n\nThe copy functionality will always exist, so creating a new VCR from the\nether is important.\n\nCheers,\n-g\n\n(*) if somebody says that a VCR doesn't \"point\", I'll kick 'em in the shins\n\n-- \nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-15172343"}, {"subject": "Re: &quot;latest&quot; resourc", "content": "   From: Tim_Ellison@uk.ibm.com\n\n   <Geoff>\n       I think the current (10.11) draft gives Greg what he\n       want here.  In particular, I'm proposing that we allow\n       a MERGE request to checkin every checkout in an activity\n       (previously the spec was silent on this case).\n   </Geoff>\n\n   I feel like I'm playing catch-up on MERGE, so bear with me ...\n\n   The proposal is to allow a MERGE /myactivity with Destination:\n   /somecollection which will (1) checkin any checked out resources (VCRs or\n   working resources), and (2) perform the merge semantics on all the VCRs in\n   the activity that have a corresponding VCR (i.e. shared target history) in\n   the destination.\n\nYes.\n\n   Why do you want to do these in a single operation, why not use CHECKIN and\n   MERGE separately?  At least then you'll catch people still working in the\n   activity that you are trying to merge.\n\nIn Greg's system, his checkin's always create a new baseline (he has\nno machinery for capturing work that is not in a baseline).  In addition,\nhe doesn't want to create the baseline unless it can be placed on\nthe tip of the \"mainline\" of the baseline history.  You could try to\nintroduce something like a \"working baseline\", but it gets very messy\n(I know, I tried :-).  So the auto-checkin on MERGE and the auto-baseline\non CHECKIN appears to be the simplest way to allow him to do what\nhe wants (and I believe what he wants to do is very reasonable).\n\n   Can the destination be any collection?  Didn't it use to be only a\n   workspace?\n\nIt can be any collection, but some implementations\nwill only allow the Destination of a MERGE to be certain\ncollections (such as, workspace collections, for example :-).\n\n   If it is not a workspace then I presume that all VCRs in the destination\n   are merged (transitive closure of all URLs rooted at the destination URL),\n   and merges are performed based on shared version history and nothing to do\n   with the URL namespace.\n\nThat's correct.\n\n   It's going to be a very heavy weight operation on the server, for something\n   that I expect people to be using frequently.\n\nIf your server can do any kind of \"findmerge\" (find what needs to be\nmerged), it's fairly easy to lop off things that aren't in a particular\n\"Destination collection\".  But many/most of us will just constrain what\nthe Destination can be (in our case, a workspace, in Greg's case, the\ncollection corresponding to his \"repository\").\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-15184822"}, {"subject": "couple small comments on 10.1", "content": "*) S11.4: the phrase \"and the request-URL does not identify a resource\"\n   should be axed. It should be possible to PUT a new non-version-controlled\n   resource.\n\n*) S11.4: it should talk about matching preconditions for VERSION-CONTROL,\n   much like S11.6 does.\n\n\nCheers,\n-g\n\n-- \nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-15194560"}, {"subject": "Re: COPY and retain history (was: Re: Subversion support", "content": "On Fri, Dec 22, 2000 at 10:18:21PM -0800, Greg Stein wrote:\n>...\n> Well, I need to figure out exactly where I want to go with this. To create a\n> true copy-by-ref, I'd want to use VERSION-CONTROL on a null resource to\n> point(*) at the appropriate version (and an existing version history). Then\n> I'd want to fork a new line of descent from that version.\n> \n> The fork would probably happen in some kind of lazy fashion. Hmm... yes, in\n> SVN, the two VCRs would point at the same version resource. As soon as you\n> go to modify one or the other, a fork is created.\n> \n> Ah. Actually, the VERSION-CONTROL would be executed within a working\n> collection. When the working collection is checked in, a new pair of version\n> resources are created (which internally reference the same content). For\n> example:\n> \n>     CHECKOUT /repos/$svn/ver/67/somedir\n> \n>     VERSION-CONTROL /repos/$svn/wrk/activity-name-here/67/somedir/foo.c\n>     (pointing at /repos/$svn/ver/67/otherdir/foo.c)\n>     \n>     CHECKIN (activity)\n\nAh, crap.\n\nThis doesn't quite work right. We had previously stated that a working\ncollection would hold version histories or non-versioned resources (where\nthe latter are put under version control at checkin time).\n\nBut using VERSION-CONTROL to create a \"copy\" within the working collection\nwill create a version-controlled resource. And that doesn't fit the model.\n\nGrr.\n\nCreating a binding in the working collection to a version history isn't\ngoing to be quite right either, because we want to copy a specific version\nresource into the working collection.\n\nOne other thing that I just realized while reading the \"versioned collection\noption\" is that the spec says collection versions refer to version histories\nto prevent the \"bubble up\" syndrome. Well, guess what? :-)  SVN refers to\nversion resources and does the bubble up.\n\nThis is needed because DirA could refer to v6 of foo.c and DirB to v7 of\nfoo.c.\n\nSigh...\n\nWell, I'm out of town until next Thursday. I'll ponder on the problem some\nmore. I suspect that the answer may revolve around \"what is in a collection\nversion? option 1 is version histories; option 2 is version resources.\" SVN\nwould be option 2, while other servers will prefer option 1 for the reasons\nstated in the draft. This can make sense depending on how you want to view\ncollections... option (2) implies the collection is bindings to *specific*\nmembers, while option (1) is just bindings.\n\nOh... Collection versions in option (2) are sub-baselines. Now that is\nsomething to think on while I'm away...\n\nAnd hey... do I ever get an acknowledgement in the draft? :-)\n\nHappy holidays everyone!\n\nCheers,\n-g\n\n-- \nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-15201657"}, {"subject": "Re: COPY and retain history (was: Re: Subversion support", "content": "   From: Greg Stein <gstein@lyra.org>\n\n   On Sat, Dec 23, 2000 at 12:01:15AM -0500, Geoffrey M. Clemm wrote:\n   >    From: Greg Stein <gstein@lyra.org>\n   > \n   >    SVN can do a copy-by-reference, so they're cheap as hell. I can label\n   >    something simply by doing:\n   > \n   >      COPY http://www.lyra.org/svn/project\n   >      Destination: http://www.lyra.org/svn/labels/1.0a1\n   > \n   > According to the protocol, that would create a bunch of new\n   > non-version-controlled resources.  They could be automatically put\n   > under version control, but then as far as the protocol is concerned,\n   > they would be completely unrelated to the resources that they came\n   > from (i.e. changes couldn't be merged back to /svn/project).\n\n   Well, I need to figure out exactly where I want to go with this. To create a\n   true copy-by-ref, I'd want to use VERSION-CONTROL on a null resource to\n   point(*) at the appropriate version (and an existing version history). Then\n   I'd want to fork a new line of descent from that version.\n\nActually, I believe you need to do a BASELINE-CONTROL on an empty\ncollection.  While everything in that new collection is \"checked-in\"\nit can't be changed, which makes your \"copy-by-ref\" a very good\nimplementation for a \"baseline-controlled collection\".  When you MERGE\nactivities into that new collection, you have \"forked a new line of\ndescent\".  But because you have told the server that these collections\nare based on the same \"baseline history\", it knows to do the\nbook-keeping needed to allow you to merge from one \"line of descent\"\nto another (and you just use the MERGE method to do so).\n\n   The fork would probably happen in some kind of lazy fashion. Hmm... yes, in\n   SVN, the two VCRs would point at the same version resource. As soon as you\n   go to modify one or the other, a fork is created.\n\nA collection \"version\" doesn't give you what you need (it just says\nwhat version histories are its members), but you need to know what\n*versions* are its members.  That's what a baseline gives you ...\nit knows what versions are needed for all of the members of the\ncollection.\n\n   Ah. Actually, the VERSION-CONTROL would be executed within a working\n   collection.\n\nA VERSION-CONTROL requests creates version-controlled resources,\nbut a working collection member must be either a non-version-controlled\nresource or a version history, not a version-controlled resource.\nIt doesn't do you any good to have a version-controlled resource\nin a working collection, because when you check in the working\ncollection, the resulting collection version can only have version\nhistory members so the \"selected version\" information in the\nversion-controlled resource would be lost.\n\n   When the working collection is checked in, a new pair of version\n   resources are created (which internally reference the same content).\n\nNote that even if we did allow version-controlled resources in\na working collection, a VERSION-CONTROL request with an existing\nversion does not create any new versions (it just uses the\nversion specified in the VERSION-CONTROL request).\n\n   For  example:\n\n       CHECKOUT /repos/$svn/ver/67/somedir\n\nThe CHECKOUT would need an \"activity\" parameter (since you're\ndoing all your changes in the context of an activity), but\nyou probably just omitted that for brevity.\n\n       VERSION-CONTROL /repos/$svn/wrk/activity-name-here/67/somedir/foo.c\n       (pointing at /repos/$svn/ver/67/otherdir/foo.c)\n\nI asume that \"/repos/$svn/wrk/activity-name-here/67/somedir\"\nis the working collection that results from the CHECKOUT?\nAs indicated above, it wouldn't do any good to create a\nversion-controlled resource referring to a particular version,\nin the working collection, because when you checked in the\nworking collection, the collection version would just have\na reference to the version history, and the particular version\ninformation (/ver/67) would be lost.\n\n       CHECKIN (activity)\n\n   Now, we'd have two new version resources(++):\n       /repos/$svn/ver/68/somedir/foo.c\n       /repos/$svn/ver/68/otherdir/foo.c\n\nActually, the only new \"version\" resource you'd get is the\none you checked out (i.e. the working collection .../somedir).\n\nNow in the new *baseline* that was created when you did the checkin\n(i.e. baseline 68), there would be a *reference* to every version but\nthe only *new* version would be that new collection version for\n\"somedir\".\n\n   Since we have two version resources, but the same version history, we\n   effectively have the beginning of our fork.\n\n   Note: S5.10 of the 10.11 draft should be moved. I'd say Section 3 offhand,\n   but it would seem that you could do a VERSION-CONTROL on a null resource\n   even without version histories. Sure, once you bring in version histories,\n   the semantics (pre/post conditiosn) might change a bit. But S5.10 has no\n   relation to server-side workspaces. I'd say the null resource part goes into\n   core, and then behavior gets modified/refined by the options.\n\nIf we allowed version-controlled resources as members of working\ncollections, then I'd agree, but by the reasoning above, we don't.\n \n   (++) hmm. One thought. Whenever a checkin anywhere occurs, a complete set of\n   version resources are created, whether a specific version resource was\n   actually involved in the checkin or not. While allowed by the spec (it would\n   be as if some Invisible Bob was creating new version resources), there may\n   be some implication that I'm missing. Need to think on this one.\n\nCreating a new version of every resource in the repository as a side\neffect of checking in a single file would make it unlikely that an SVN\nserver or client would interoperate with any other WebDAV server or\nclient.\n\nOn the other hand, creating a new *baseline* which refers to the new\nversions you created plus all the existing versions that you didn't\nchange would work just fine.\n\n   Oh. I might have the answer already :-). I can avoid creating new version\n   resources if I simply jigger them a bit:\n\n       /repos/$svn/ver/17.3/somedir/foo.c\n       /repos/$svn/ver/17.3/otherdir/foo.c\n\n   Here, the \"17.3\" refers to the internal, stored content. As new repository\n   versions are creatd, the 17.3 remains stable, so we aren't implicitly\n   creating new version resources any more.\n\n   Now to think on this model some more, and see whether the repository can\n   work using this model.\n\nYes, the stable version URL (where you only generate a new one when\nthe version content changes) will be essential for interoperability.\n\n   >...\n   > In other words, you \"instantiate\" a baseline in a baseline-controlled\n   > collection whenever you want to expose that baseline as a namespace.\n\n   For a label... yah. This would work great.\n\n   If we do true labels, rather than just copies, then I'll probably go ahead\n   and add some formalized baseline code.\n\n   Darn... I just keep adding more and more of the DeltaV draft. What's next?\n   Workspaces?! :-)\n\nOK, well, I wasn't going to say anything, but since you brought it\nup (:-), the only important characteristic of a workspace is that:\n\n- it is a collection displaying version-controlled resources\n- it has at most one version from any given version history\n\nYour \"label\" collection happens to be exactly that.  So you might\nas well call it a workspace, and be able to use the\n\"DAV:workspace-collection-set\" to let clients know \"where they\ncan find/put their labels\" (which answers your earlier question\nabout \"how will a client find where those label collections live\".\n\n   > But I agree that they probably don't want to instantiate all their\n   > labels as copies in the namespace (even if subversion can do it\n   > cheaply :-),\n\n   It's an O(1) operation :-)\n\nYes, I wasn't suggesting they don't want to do it for efficiency\nreasons, but rather to keep the namespace manageable,\nthey might want to just instantiate \"important\" labels as\ncollections in the namespace, and just use simple \"string labels\"\non baselines for all the ones that aren't that important.\n\nYou can then use a string label for everything, but only\ninstantiate \"important\" labels in the namespace (and then\nclean them out of the namespace when they become no longer\nimportant).   That way you can remember everything without\ntrashing your namespace as time goes on.\n\n   > so I guess I'll withdraw my objection to labels, as long\n   > as they are used on baselines (which I believe is the only place\n   > subversion would place them?) and not on individual file versions.\n\n   We would definitely be doing labels on baselines. I never investigated them\n   thoroughly (as you can tell, we aren't even sure what kind of label\n   functionality we want, let alone the modelling of them via DAV). But your\n   label-a-baseline idea is exactly spot on :-)\n\n   The copy functionality will always exist, so creating a new VCR from the\n   ether is important.\n\nOr creating a new baseline-controlled-collection from the ether is\nimportant ...\n\n   (*) if somebody says that a VCR doesn't \"point\", I'll kick 'em in the shins\n\nSaying that \"a VCR points\" is fine, but at risk of getting\nmy shins kicked, I would have objected if you'd said that\na VCR *is* a pointer (:-).\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-15211868"}, {"subject": "Re: COPY and retain history (was: Re: Subversion support", "content": "Ooops.  Looks like I should have read ahead ... Greg just made many of the\npoints in this response that I made in mine.\n\n   From: Greg Stein <gstein@lyra.org>\n\n   On Fri, Dec 22, 2000 at 10:18:21PM -0800, Greg Stein wrote:\n   >...\n   >     CHECKOUT /repos/$svn/ver/67/somedir\n   >     VERSION-CONTROL /repos/$svn/wrk/activity-name-here/67/somedir/foo.c\n   >     (pointing at /repos/$svn/ver/67/otherdir/foo.c)\n   >     CHECKIN (activity)\n\n   This doesn't quite work right. We had previously stated that a working\n   collection would hold version histories or non-versioned resources (where\n   the latter are put under version control at checkin time).\n   But using VERSION-CONTROL to create a \"copy\" within the working collection\n   will create a version-controlled resource. And that doesn't fit the model.\n\nYup.\n\n   Creating a binding in the working collection to a version history isn't\n   going to be quite right either, because we want to copy a specific version\n   resource into the working collection.\n\nYup.\n\n   One other thing that I just realized while reading the \"versioned collection\n   option\" is that the spec says collection versions refer to version histories\n   to prevent the \"bubble up\" syndrome. Well, guess what? :-)  SVN refers to\n   version resources and does the bubble up.\n\nYes, \"baselines\" or \"deep versions\" are there for when you want to bubble\nup (which is why I keep beating the \"baseline drum\" for subversion :-).\n\n   Well, I'm out of town until next Thursday. I'll ponder on the problem some\n   more. I suspect that the answer may revolve around \"what is in a collection\n   version? option 1 is version histories; option 2 is version resources.\" SVN\n   would be option 2, while other servers will prefer option 1 for the reasons\n   stated in the draft. This can make sense depending on how you want to view\n   collections... option (2) implies the collection is bindings to *specific*\n   members, while option (1) is just bindings.\n\n   Oh... Collection versions in option (2) are sub-baselines. Now that is\n   something to think on while I'm away...\n\nI don't think you'll need sub-baselines until you do\ncross-repository linking, but regular baselines should\nget you what you want.\n\n   And hey... do I ever get an acknowledgement in the draft? :-)\n\nThe informal criteria for \"design team acknowledgement\" was technical \nmailing list participation and attendance at at least 2 design meetings.\nI'd say that a flood (:-) of mail messages and responsibility for at least\ntwo of the features in the protocol (working collections, auto-checkin\nfor MERGE) calls for a change to the informal criteria ...\nso, what \"organization\" (if any) would you like to have appear\nnext to your name?\n\n   Happy holidays everyone!\n\nSame from me!  And a special thankyou to Greg for all his work.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-15229200"}, {"subject": "RE: couple small comments on 10.1", "content": "      From: Greg Stein [mailto:gstein@lyra.org]\n\n      S11.4: the phrase \"and the request-URL does not identify a\n      resource\" should be axed. It should be possible to PUT a new\n      non-version-controlled resource.\n\nCollection version members must be version histories, and a\nPUT never creates a version history at the destination URL,\nso you can't use PUT to create a member of a collection version.\nIf you do a PUT to an existing member of a collection member,\nthat would be a PUT to a version history resource ... we don't\never use the content of a version history resource, but we haven't\nforbidden a version history from having content. \n\n   *) S11.4: it should talk about matching preconditions for\n      VERSION-CONTROL, much like S11.6 does.\n\nGood point.  I'll add that.  Actually, I think it should go into 2.7\n(I thought it was there already, but apparently not).\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-15239646"}, {"subject": "Applying MERGE to the resource being modifie", "content": "Currently, the request-URL of the MERGE request identifes the\nversions being merged, and a Destination header identifies the\nversion selectors being updated.  This is probably backwards,\nsince you want the server that holds the version selectors to\nget the request, not the server holding the versions (they might\nbe on different servers).\n\nSo I propose that we swap this around, and have the request-URL\nof the MERGE request identify the \"merge destination\", and identify\nthe versions to be merged in the MERGE request body.\n\nAny objections?  (Note: no semantic change here, just tweaking\nthe marshalling).\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-15247555"}, {"subject": "draft-ietf-deltav-versioning-10.13 availabl", "content": "<http://www.webdav.org/deltav/protocol/draft-ietf-deltav-versioning-10.13.htm>\n\nUnless I receive any last minute corrections/comments, 10.13 will\nbe submitted on 1/1/01 as draft-ietf-deltav-versioning-11 for a 2 week\nworking group last call.\n\nHappy New Year to all !!\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-15255408"}, {"subject": "RE: draft-ietf-deltav-versioning-10.13 availabl", "content": "I request that the the draft be submitted on 1/5/01 for last call at the\nearliest.\n\nI am working with our team to prepare some comments to 10.12.\nRealistically, a number of people are out for the holidays and will not\nreturn until 1/2 for final input.\n\nI am also trying to correct section references like the following in Section\n5:\n\n\"In order to ensure unambiguous merging (see section 6.2) and baselining\n(see section 0) ...\"\n\nHappy New Year as well,\n\nMark\n\n\n> -----Original Message-----\n> From: ietf-dav-versioning-request@w3.org\n> [mailto:ietf-dav-versioning-request@w3.org]On Behalf Of Geoffrey M.\n> Clemm\n> Sent: Thursday, December 28, 2000 2:21 PM\n> To: ietf-dav-versioning@w3.org\n> Subject: draft-ietf-deltav-versioning-10.13 available\n>\n>\n>\n> <http://www.webdav.org/deltav/protocol/draft-ietf-deltav-versionin\n> g-10.13.htm>\n>\n> Unless I receive any last minute corrections/comments, 10.13 will\n> be submitted on 1/1/01 as draft-ietf-deltav-versioning-11 for a 2 week\n> working group last call.\n>\n> Happy New Year to all !!\n>\n> Cheers,\n> Geoff\n\n\n\n", "id": "lists-005-15262911"}, {"subject": "RE: draft-ietf-deltav-versioning-10.13 availabl", "content": "Hi Mark!\n\nI was aware you were planning on sending in a review by the\nfirst week of January, so I made sure that the last call\nperiod (from 1/1/01 to 1/15/01) did not interfere with that,\nbut I'm also happy to delay posting the draft until 1/5/01,\nso that we can get anything you find fixed up before sending\nit out for last call (such as those section 0 references,\nthanks to Word's idea of how to silently update cross\nreferences!).\n\nSo the two week last call period will now begin on 1/5/01.\n\nCheers,\nGeoff\n\n\n-----Original Message-----\nFrom: Mark A. Hale [mailto:mark.hale@interwoven.com]\nSent: Thursday, December 28, 2000 5:42 PM\nTo: ietf-dav-versioning@w3.org\nCc: Geoffrey M. Clemm\nSubject: RE: draft-ietf-deltav-versioning-10.13 available\n\n\nI request that the the draft be submitted on 1/5/01 for last call at the\nearliest.\n\nI am working with our team to prepare some comments to 10.12.\nRealistically, a number of people are out for the holidays and will not\nreturn until 1/2 for final input.\n\nI am also trying to correct section references like the following in Section\n5:\n\n\"In order to ensure unambiguous merging (see section 6.2) and baselining\n(see section 0) ...\"\n\nHappy New Year as well,\n\nMark\n\n\n> -----Original Message-----\n> From: ietf-dav-versioning-request@w3.org\n> [mailto:ietf-dav-versioning-request@w3.org]On Behalf Of Geoffrey M.\n> Clemm\n> Sent: Thursday, December 28, 2000 2:21 PM\n> To: ietf-dav-versioning@w3.org\n> Subject: draft-ietf-deltav-versioning-10.13 available\n>\n>\n>\n> <http://www.webdav.org/deltav/protocol/draft-ietf-deltav-versionin\n> g-10.13.htm>\n>\n> Unless I receive any last minute corrections/comments, 10.13 will\n> be submitted on 1/1/01 as draft-ietf-deltav-versioning-11 for a 2 week\n> working group last call.\n>\n> Happy New Year to all !!\n>\n> Cheers,\n> Geoff\n\n\n\n", "id": "lists-005-15272658"}, {"subject": "Re: Applying MERGE to the resource being modifie", "content": "Sounds good.\n\nTim\n\n\n\"Clemm, Geoff\" <gclemm@rational.com> on 2000-12-28 05:33:51 AM\n\nPlease respond to \"Clemm, Geoff\" <gclemm@rational.com>\n\nTo:   \"DeltaV (E-mail)\" <ietf-dav-versioning@w3.org>\ncc:\nSubject:  Applying MERGE to the resource being modified\n\n\n\n\n\nCurrently, the request-URL of the MERGE request identifes the\nversions being merged, and a Destination header identifies the\nversion selectors being updated.  This is probably backwards,\nsince you want the server that holds the version selectors to\nget the request, not the server holding the versions (they might\nbe on different servers).\n\nSo I propose that we swap this around, and have the request-URL\nof the MERGE request identify the \"merge destination\", and identify\nthe versions to be merged in the MERGE request body.\n\nAny objections?  (Note: no semantic change here, just tweaking\nthe marshalling).\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-15283535"}, {"subject": "RE: draft-ietf-deltav-versioning-10.13 availabl", "content": "Thanks Geoff.  Hopefully we can get the changes in so last call only needs\nto go once.  I appreciate your allowing the space for feedback.  I will be\nsubmitting some changes on Tuesday after I have a chance to meet with my\ncolleague that returns after break.\n\nHappy new year,\n\nMark\n\n\n\n> -----Original Message-----\n> From: ietf-dav-versioning-request@w3.org\n> [mailto:ietf-dav-versioning-request@w3.org]On Behalf Of Clemm, Geoff\n> Sent: Thursday, December 28, 2000 6:34 PM\n> To: ietf-dav-versioning@w3.org\n> Subject: RE: draft-ietf-deltav-versioning-10.13 available\n>\n>\n> Hi Mark!\n>\n> I was aware you were planning on sending in a review by the\n> first week of January, so I made sure that the last call\n> period (from 1/1/01 to 1/15/01) did not interfere with that,\n> but I'm also happy to delay posting the draft until 1/5/01,\n> so that we can get anything you find fixed up before sending\n> it out for last call (such as those section 0 references,\n> thanks to Word's idea of how to silently update cross\n> references!).\n>\n> So the two week last call period will now begin on 1/5/01.\n>\n> Cheers,\n> Geoff\n>\n>\n> -----Original Message-----\n> From: Mark A. Hale [mailto:mark.hale@interwoven.com]\n> Sent: Thursday, December 28, 2000 5:42 PM\n> To: ietf-dav-versioning@w3.org\n> Cc: Geoffrey M. Clemm\n> Subject: RE: draft-ietf-deltav-versioning-10.13 available\n>\n>\n> I request that the the draft be submitted on 1/5/01 for last call at the\n> earliest.\n>\n> I am working with our team to prepare some comments to 10.12.\n> Realistically, a number of people are out for the holidays and will not\n> return until 1/2 for final input.\n>\n> I am also trying to correct section references like the following\n> in Section\n> 5:\n>\n> \"In order to ensure unambiguous merging (see section 6.2) and baselining\n> (see section 0) ...\"\n>\n> Happy New Year as well,\n>\n> Mark\n>\n>\n> > -----Original Message-----\n> > From: ietf-dav-versioning-request@w3.org\n> > [mailto:ietf-dav-versioning-request@w3.org]On Behalf Of Geoffrey M.\n> > Clemm\n> > Sent: Thursday, December 28, 2000 2:21 PM\n> > To: ietf-dav-versioning@w3.org\n> > Subject: draft-ietf-deltav-versioning-10.13 available\n> >\n> >\n> >\n> > <http://www.webdav.org/deltav/protocol/draft-ietf-deltav-versionin\n> > g-10.13.htm>\n> >\n> > Unless I receive any last minute corrections/comments, 10.13 will\n> > be submitted on 1/1/01 as draft-ietf-deltav-versioning-11 for a 2 week\n> > working group last call.\n> >\n> > Happy New Year to all !!\n> >\n> > Cheers,\n> > Geoff\n\n\n\n", "id": "lists-005-15292344"}, {"subject": "the DAV:comparison repor", "content": "During a proof-read pass over 10.13, it occurred to me that the\nDAV:comparison report is too vague to provide a significant degree of\ninteroperability.  The example suggests it is useful for comparing two\ncollections, but how often does one really have an \"old\" and a \"new\"\ncopy of a collection on the server?  A smart client will keep track of\nthe changes made on the client, and only update the server with the\nchanges, not a new copy of the entire collection.  And even if one did\nhave both collections on the server, one usually wants a \"smart\"\ncompare that notices when a collection is \"moved\", instead of\nreporting a a delete and an add for each member of the moved\ncollection.\n\nAs suggested in the text of this report, it is really for\ncomparing two baselines, which is of significant value since the\nDAV:version-set of a baseline can be huge (and thus not something\none would want to download to a client), but the difference between\ntwo baselines will often be manageable (and useful) information.\n\nSo I propose that we convert the DAV:comparison report into a\nDAV:baseline-comparison report, and move it from the \"general option\"\nsection into the baseline option section, where it will be of\nsignificant value for interoperability.\n\nComments?\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-15304771"}, {"subject": "RE: the DAV:comparison repor", "content": "Geoff,\n\nI agree with your synopsis and support the change.  \n\nThanks,\n\nMark\n\n\n\n\n> -----Original Message-----\n> From: ietf-dav-versioning-request@w3.org\n> [mailto:ietf-dav-versioning-request@w3.org]On Behalf Of Geoffrey M.\n> Clemm\n> Sent: Friday, December 29, 2000 11:28 AM\n> To: ietf-dav-versioning@w3.org\n> Subject: the DAV:comparison report\n> \n> \n> \n> During a proof-read pass over 10.13, it occurred to me that the\n> DAV:comparison report is too vague to provide a significant degree of\n> interoperability.  The example suggests it is useful for comparing two\n> collections, but how often does one really have an \"old\" and a \"new\"\n> copy of a collection on the server?  A smart client will keep track of\n> the changes made on the client, and only update the server with the\n> changes, not a new copy of the entire collection.  And even if one did\n> have both collections on the server, one usually wants a \"smart\"\n> compare that notices when a collection is \"moved\", instead of\n> reporting a a delete and an add for each member of the moved\n> collection.\n> \n> As suggested in the text of this report, it is really for\n> comparing two baselines, which is of significant value since the\n> DAV:version-set of a baseline can be huge (and thus not something\n> one would want to download to a client), but the difference between\n> two baselines will often be manageable (and useful) information.\n> \n> So I propose that we convert the DAV:comparison report into a\n> DAV:baseline-comparison report, and move it from the \"general option\"\n> section into the baseline option section, where it will be of\n> significant value for interoperability.\n> \n> Comments?\n> \n> Cheers,\n> Geoff\n> \n> \n> \n> \n> \n\n\n\n", "id": "lists-005-15312811"}, {"subject": "collection version resource", "content": "I'm starting from scratch on this, but this message is tied to the thread\nentitled \"COPY and retain history\". It just wouldn't be clean to respond to\nthose messages.\n\nBasic issue: needing a way to add a member to a working collection that\nrefers to an existing version resource, then possibly allowing further\nchanges to that added member before [activity] checkin.\n\nBackground/details/etc:\n\n*) current situation: collection versions contain version histories. Working\n   collections contain version histories or non-versioned resources.\n\n*) VERSION-CONTROL creates a new VCR, which implies it cannot be used in a\n   collection version or a working collection\n\n*) BASELINE-CONTROL was suggested by Geoff for some purpose (not entirely\n   clear), but it puts existing collections under baseline control. We have\n   only one \"public\" collection, which is the repository root's VCR.\n\n*) (model-wise) Subversion's collection versions contain version resources.\n   New collection versions are created if the collection must refer to a\n   different version resource of a member (\"bubble up\" occurs).\n   [ I say \"model-wise\" because this is the SVN model, but the DeltaV terms\n     don't strictly apply because of the definition of a collection\n     version's member resources. ]\n\n*) Commits can be made atomic via merging an activity. This is a rather\n   heavyweight operation in the SVN server:\n   - for all non-versioned resources in the activity, create new version\n     histories and initial versions\n   - check in all working resources\n   - update all VCRs to refer to the new version resources\n   - the VCRs are baseline-controlled, so the baseline selector is checked\n     out, a new baseline is created, and then the baseline is checked in.\n     (per S9.11, DAV:auto-baseline)\n   \n   The resulting baseline would refer to the proper set of version\n   resources, so we're fine so far.\n\n*) While SVN collections refer to specific versions, it could be possible to\n   leave that only to the baselines and to somehow construct a \"standard\"\n   collection version resource.\n\n   [ this might be difficult because in DeltaV, a new collection version is\n     created when the *set* of members is changed; in SVN, a new collection\n     version is created when the set changes *or* a member gets a new\n     version resource. The hard part is \"creating\" collection versions on\n     set-changes, but not member version changes. Now that I have thought\n     about it, it might not be possible to do this; if it *is* then it will\n     probably be quite expensive and it doesn't fit the model at all ]\n\n   [ hmm. an alternative would be to go ahead and create new collection\n     version resources even when \"no change\" has occurred in the set of\n     members. to a client, it simply sees spurious creation of collection\n     versions, but shouldn't have a real issue with it. ]\n   \n   Given the second model in the \"aside\" above, it would seem that we could\n   model a DeltaV collection version. A true SVN collection version would\n   only be exposed via a baseline.\n\n*) The problem: given a working collection, I need a way to specify that a\n   member is a specific version resource. The member may be furthered\n   modified before it is checked in. When the new (auto) baseline is\n   constructed, it will refer to the original version resource or to the\n   modified successor of that version resource.\n\n   Note that the member may be a collection or a non-collection resource.\n   (I state this because I think Geoff said to use a BASELINE-CONTROL for\n    this copy-by-ref thing, but that would only apply to a collection)\n\n\nMy ideal solution would be to allow collection versions, and thusly working\ncollections, to contain version resources *instead* of version histories.\nThis would solve the model disparity for collection versions. However,\nputting a version resource into a working collection isn't quite right...\nThat would prevent a change of the copy-by-ref'd resource before it was\nchecked in. It almost seems that the needed model would be a working\nresource where the DAV:checked-out property is the copied version resource.\nBut that might spawn a new version resource even when we don't make any\nchanges...\n\nsigh. Here would be an ideal sequence of semantic operations:\n\n1) CHECKOUT a collection version (within an activity)\n2) \"copy\" a specific version resource into the working collection; the copy\n   should also be a version resource, tied to the same version history. In\n   fact, using the BIND method is pretty close: construct a new URL for a\n   given version resource.\n3) somehow \"checkout\" the \"new\" version resource to create a working\n   resource\n4) PUT/PROPPATCH changes to that working resource\n5) MERGE the activity\n\nYes... steps (2) and (3) are the hard part.\n\n\nI'm all for fitting into the existing DeltaV model(s), but I can't see how.\n\nHmm. What if I copy/bind/whatever a version resource (\"VR\") into the working\ncollection (\"WC\"). If changes are needed, then I do a CHECKOUT on VR and a\nworking resource (\"WR\") is returned. PUT/PROPPATCH request(s) are performed\non WR. At checkin/merge time, the server understands that WR corresponds to\nVR. The new collection version (or baseline; the actual new \"thing\" seems to\nbe moot here) is created to refer to VR, or to VR' (resulting from the\ncheckin of WR).\n\nIt may also be that a version-controlled resource would go into WC which\ninitially points at the original version resource. However, this creates\nproblems when we go to check out that version resource to make further\nchanges. That would lose the association between WC and the \"new\" member.\nBut the nice part about the VCR is that it can point to VR'. Otherwise,\nthere is a need to \"replace\" VR (within WC) with VR'.\n\n\nObviously... I haven't figured out the best way to model this (within the\nexisting DeltaV or figuring out how it needs to change). Any thoughts?\n\nCheers,\n-g\n\n-- \nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-15322211"}, {"subject": "shared version historie", "content": "I'm seeing some issues in the draft when a namespace has two VCRs that refer\nto versions from the same history.\n\nFor example, let's say that I have a version history with:\n\n    V1 -> V2 -> V3 -> V4\n\nIn the VCR namespace:\n\n  /coll/foo.c -> V2\n  /coll/bar.c -> V4  [copied from foo.c, then extended]\n\nI see two problems arising from this now:\n\n1) a MERGE request is going to have problems because it doesn't know which\n   VCR to update when bar.c is moved from V4 to V5. foo.c also refers to the\n   same version history, so the MERGE may want to update that to V5, too.\n\n   [ based on my understanding of MERGE which says \"update all VCRs which\n     refer to the version history of the merge version (V5)\". in this case,\n     two VCRs do. ]\n\n2) I have a change set style of an activity. The resulting version history\n   should look like:\n\n    V1 -> V2 -> V3 -> V4 -> V5\n            \\\n     V2.1\n\n   But the limitations imposed on activities prevents two versions in the\n   same line of descent. (but the point is *after* the change set is\n   applied, I want two lines of descent)\n   \n   [ oh, wait a sec. DAV:unreserved fixes this ]\n\n\nI have a feeling that problem (1) could be lessened because V5 was created\nby checking in a change against V4, so we only update VCRs that refer to V4.\nBut that isn't actually in the draft, and it might not be desirable (MERGE\nisn't always based on checking stuff in; it can also be used for workspace\nmanagement).\n\nOkay. (2) is moot. The introduction to activities is very misleading. It\nsays that versions in an activity must be on a single line of descent.\nTwice. Well, that gets completely thrown out later when DAV:unreserved is\ndescribed. The introduction should say something about this to prevent\nconfusion (like I just did above).\n\n\nI'll look for other issues with shared version histories, but this is my\nstart. Of course, there is also the problem of getting two references in\nthere in the first place (in the working collection model; it would appear\nthat the workspace model can just use VERSION-CONTROL to create the second\nreference).\n\nCheers,\n-g\n\n-- \nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-15334982"}, {"subject": "Re: collection version resource", "content": "   From: Greg Stein <gstein@lyra.org>\n\n   Basic issue: needing a way to add a member to a working collection that\n   refers to an existing version resource, then possibly allowing further\n   changes to that added member before [activity] checkin.\n\nSounds reasonable.\n\n   Background/details/etc:\n\n   *) current situation: collection versions contain version histories. Working\n      collections contain version histories or non-versioned resources.\n\nYes.\n\n   *) VERSION-CONTROL creates a new VCR, which implies it cannot be used in a\n      collection version or a working collection\n\nYes.\n\n   *) BASELINE-CONTROL was suggested by Geoff for some purpose (not entirely\n      clear), but it puts existing collections under baseline control. We have\n      only one \"public\" collection, which is the repository root's VCR.\n\nYour server would automatically have the \"root collection\" of your\nrepository under BASELINE-CONTROL, so a client would not need to\nexplicitly make a BASELINE-CONTROL request (until we get to subversion\n\"labels\", when they would :-).\n\n   *) (model-wise) Subversion's collection versions contain version resources.\n\nWhat you are calling a \"Subversion collection version\" is what the\nprotocol calls a \"collection baseline\".  If there's any flexibility in the\nsubversion terminology choice, it would be good if Subversion could\nalso use the term \"baseline\", or perhaps \"deep version\" for this concept.\n\n      New collection versions are created if the collection must refer to a\n      different version resource of a member (\"bubble up\" occurs).\n\nThis is also true for the protocol ... if we use the protocol\nterminology, this says \"new collection baselines are created if the\ncollection must refer to a different version of a member (\"bubble up\noccurs\"). \n\n      [ I say \"model-wise\" because this is the SVN model, but the DeltaV terms\ndon't strictly apply because of the definition of a collection\nversion's member resources. ]\n\nThe DeltaV concepts apply ... it's just that we need to get the\nterminology alligned (or at least, understand the terminology mapping).\n\n\n   *) Commits can be made atomic via merging an activity. This is a rather\n      heavyweight operation in the SVN server:\n      - for all non-versioned resources in the activity, create new version\nhistories and initial versions\n      - check in all working resources\n      - update all VCRs to refer to the new version resources\n      - the VCRs are baseline-controlled, so the baseline selector is checked\nout, a new baseline is created, and then the baseline is checked in.\n(per S9.11, DAV:auto-baseline)\n\n      The resulting baseline would refer to the proper set of version\n      resources, so we're fine so far.\n\nAll OK here.\n\n   *) While SVN collections refer to specific versions, it could be possible to\n      leave that only to the baselines and to somehow construct a \"standard\"\n      collection version resource.\n\nYes, that would make things interoperate.\n\n      [ this might be difficult because in DeltaV, a new collection version is\ncreated when the *set* of members is changed; in SVN, a new collection\nversion is created when the set changes *or* a member gets a new\nversion resource. The hard part is \"creating\" collection versions on\nset-changes, but not member version changes. Now that I have thought\nabout it, it might not be possible to do this; if it *is* then it will\nprobably be quite expensive and it doesn't fit the model at all ]\n\n      [ hmm. an alternative would be to go ahead and create new collection\nversion resources even when \"no change\" has occurred in the set of\nmembers. to a client, it simply sees spurious creation of collection\nversions, but shouldn't have a real issue with it. ]\n\nYes, this alternative would be fine.\n\n      Given the second model in the \"aside\" above, it would seem that we could\n      model a DeltaV collection version. A true SVN collection version would\n      only be exposed via a baseline.\n\nYes, an \"SVN collection version\" is what DeltaV calls a \"collection baseline\".\n\n   *) The problem: given a working collection, I need a way to specify that a\n      member is a specific version resource.\n\nIt's true that a client needs to know what version it is looking at,\nbut I don't see that it needs to get this information from a working\ncollection (the client just keeps a list of the versions that it has).\n\n      The member may be furthered\n      modified before it is checked in.\n\nThat's fine, but there is no need to check it out \"in the context of\nthe working collection\" ... just check out that version directly.\n\n      When the new (auto) baseline is\n      constructed, it will refer to the original version resource or to the\n      modified successor of that version resource.\n\nThat happens because the activity contains the working resource ...\nno need for the working collection to contain the working resource.\n\n      Note that the member may be a collection or a non-collection resource.\n      (I state this because I think Geoff said to use a BASELINE-CONTROL for\n       this copy-by-ref thing, but that would only apply to a collection)\n\nAs long as it is a working resource, it will be in the checkout-set of\nthe activity, the new version will be captured by the new baseline and\nbecause of the semantics of the MERGE operations, will become the\nDAV:checked-in version of the appropriate version selector.\n\n   My ideal solution would be to allow collection versions, and thusly working\n   collections, to contain version resources *instead* of version histories.\n\nNo need for this change.  Activities contain versions, and baselines\ncontain versions, which should be all the version containment that\nyou need.\n\n   This would solve the model disparity for collection versions. However,\n   putting a version resource into a working collection isn't quite right...\n   That would prevent a change of the copy-by-ref'd resource before it was\n   checked in. It almost seems that the needed model would be a working\n   resource where the DAV:checked-out property is the copied version resource.\n   But that might spawn a new version resource even when we don't make any\n   changes...\n\nYou are about to get lost in a maze of twisty passages, all of which\nlook alike ... don't go there (:-).\n\n   sigh. Here would be an ideal sequence of semantic operations:\n\n   1) CHECKOUT a collection version (within an activity)\n\nYes.\n\n   2) \"copy\" a specific version resource into the working collection; the copy\n      should also be a version resource, tied to the same version history. In\n      fact, using the BIND method is pretty close: construct a new URL for a\n      given version resource.\n\nYou would need to \"bind\" the appropriate version history into the\nworking collection, not \"copy\" a version into it (which would create\na new version history, not link you to an old one).\n\nBIND would be the most direct way (the DeltaV spec is my highest\npriority, then the ACL spec, and then BIND ... I'm hoping JimW will get\nthe BIND editing done, but having your first baby does tend to absorb\nquite a bit of time (:-), so I may end up getting to it before he does.\n\nAlternatively, you can just CHECKOUT a collection version that\ncontains the desired version history (creating a second working\ncollection), MOVE the desired version history from the second working\ncollection into the first working collection, and then DELETE the\nsecond working collection.  This achieves the result of a BIND\nwithout actually using the BIND method.\n\n   3) somehow \"checkout\" the \"new\" version resource to create a working\n      resource\n\nThat's the easy part.  You just checkout that version resource, to get\na new working resource.\n\nYou don't need anything more than the implict connection between the\nworking collection and the working resource (i.e.  the working\nresource checks out a version whose version history is now a member of\nthe working collection).\n\n   4) PUT/PROPPATCH changes to that working resource\n\nYup.\n\n   5) MERGE the activity\n\nYup.\n\n   Yes... steps (2) and (3) are the hard part.\n\nStep (3) is easy, so that just leaves step (2) to think about.\nIf you just use the BIND protocol (it's going to happen, so you won't\nbe *that* far in front of the crowd), step (2) is simple as well.\nOr if you don't want to have a BIND dependency, just use the\nCHECKOUT, MOVE approach, which isn't too bad.\n\n   I'm all for fitting into the existing DeltaV model(s), but I can't see how.\n   Hmm. What if I copy/bind/whatever a version resource (\"VR\") into the working\n   collection (\"WC\").\n\nBIND the version history in, and you've got the collection change done.\n\n   If changes are needed, then I do a CHECKOUT on VR and a\n   working resource (\"WR\") is returned.\n\nYes (but there's no need for the working collection to be involved in this\nversion checkout).\n\n   PUT/PROPPATCH request(s) are performed on WR.\n\nYes.\n\n   At checkin/merge time, the server understands that WR corresponds to\n   VR.\n\nIt's true that the DAV:checked-out property of a WR identifies the VR\nthat was checked out.\n\n   The new collection version (or baseline; the actual new \"thing\" seems to\n   be moot here) is created to refer to VR, or to VR' (resulting from the\n   checkin of WR).\n\nWell, it's actually very important to get the \"thing\" right to get\ninteroperability, so let's go with \"baseline\".  Then, yes, the new\ncollection baseline will refer to VR' (because the MERGE updates\nthe version-controlled resource to have VR' as its DAV:checked-in\nversion, which means that VR' is added to the DAV:version-set of\nthe new baseline.\n\n   It may also be that a version-controlled resource would go into WC which\n   initially points at the original version resource. However, this creates\n   problems when we go to check out that version resource to make further\n   changes. That would lose the association between WC and the \"new\" member.\n   But the nice part about the VCR is that it can point to VR'. Otherwise,\n   there is a need to \"replace\" VR (within WC) with VR'.\n\nThe MERGE takes care of getting VR' into the new baseline, so there's\nno need to get it into the working collection.\n\n   Obviously... I haven't figured out the best way to model this (within the\n   existing DeltaV or figuring out how it needs to change). Any thoughts?\n\nLet me know if any of this doesn't work for you.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-15343795"}, {"subject": "Re: shared version historie", "content": "   From: Greg Stein <gstein@lyra.org>\n\n   I'm seeing some issues in the draft when a namespace has two VCRs that refer\n   to versions from the same history.\n\n   For example, let's say that I have a version history with:\n\n       V1 -> V2 -> V3 -> V4\n\n   In the VCR namespace:\n\n     /coll/foo.c -> V2\n     /coll/bar.c -> V4  [copied from foo.c, then extended]\n\nIf it really was \"COPY\"d, then foo.c and bar.c would be in different\nversion histories, by the semantics of COPY.  You'd have to use\nBIND or the MOVE trick to get this situation.\n\nNote though, that if /coll were a workspace, this could not happen,\nbecause you cannot have two different version controlled resources\nwith the same version history in the same workspace.  (You could have\ntwo bindings to the same version-controlled resource, but then they\nwould share the same DAV:checked-in version).\n\n   I see two problems arising from this now:\n\n   1) a MERGE request is going to have problems because it doesn't know which\n      VCR to update when bar.c is moved from V4 to V5. foo.c also refers to the\n      same version history, so the MERGE may want to update that to V5, too.\n\nYes, that is why this is not allowed to happen in a workspace.\n\n      [ based on my understanding of MERGE which says \"update all VCRs which\nrefer to the version history of the merge version (V5)\". in this case,\ntwo VCRs do. ]\n\nCurrently the protocol is not explicit about what happens in this\nsituation (i.e. it talks about \"the\" merge target).  This means\nthat currently, a server could call it an error, update just some\nof the VCR's, or update all of the VCR's.\n\n   2) I have a change set style of an activity. The resulting version history\n      should look like:\n\n       V1 -> V2 -> V3 -> V4 -> V5\n       \\\nV2.1\n\n      But the limitations imposed on activities prevents two versions in the\n      same line of descent. (but the point is *after* the change set is\n      applied, I want two lines of descent)\n\nYou can have multiple lines of descent, but V2.1 is not allowed to be\nin the same activity as V3, V4, or V5.\n\n      [ oh, wait a sec. DAV:unreserved fixes this ]\n\nDepends what you mean by \"fixes\".  DAV:unreserved just lets thing\nbranch in the same activity at CHECKOUT time.  You cannot CHECKIN\nsomething (whether or not it is reserved) if it would cause a fork\nin an activity.\n\n   I have a feeling that problem (1) could be lessened because V5 was created\n   by checking in a change against V4, so we only update VCRs that refer to V4.\n\nIn general, you can update a VCR to any other version from the version\nhistory of that VCR (skipping forward, backward, or sideways in the\nhistory is all legal), so only updating a VCR if it currently has\nthe predecessor of the change would be a significant loss of functionality.\n\n   But that isn't actually in the draft, and it might not be desirable (MERGE\n   isn't always based on checking stuff in; it can also be used for workspace\n   management).\n\nYes.\n\n   Okay. (2) is moot. The introduction to activities is very misleading. It\n   says that versions in an activity must be on a single line of descent.\n   Twice. Well, that gets completely thrown out later when DAV:unreserved is\n   described. The introduction should say something about this to prevent\n   confusion (like I just did above).\n\nThe confusion must be in the definition of \"unreserved\", which needs to\nmake it very clear that the unreserved fork only applies to a checkout ...\nthe *versions* in an activity must be on a single line of descent, so the\ncheckout forking is only temporary.\n\n   I'll look for other issues with shared version histories, but this is my\n   start. Of course, there is also the problem of getting two references in\n   there in the first place (in the working collection model; it would appear\n   that the workspace model can just use VERSION-CONTROL to create the second\n   reference).\n\nYes, but not in the same workspace.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-15361195"}, {"subject": "RE: prop in a MERGE reques", "content": "Not sure what happened there.  I'll just restore that section\nfrom version 13 unless I can figure out what that was all about.\nThanks for noticing!\n\nCheers,\nGeoff\n\n-----Original Message-----\nFrom: Greg Stein [mailto:gstein@lyra.org]\nSent: Monday, April 02, 2001 8:47 PM\nTo: ietf-dav-versioning@w3.org\nSubject: DAV:prop in a MERGE request\n\n\nWhat happened to the DAV:prop stuff in the MERGE request? I'm not seeing it\nanywhere in the -14 draft. I don't recall any conversation about removing\nthat.\n\nCheers,\n-g\n\n-- \nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-15617988"}, {"subject": "Re: prop in a MERGE reques", "content": "It kind of stands out when you go to start implementing that part :-)\n\n\nOn Mon, Apr 02, 2001 at 11:22:40PM -0400, Clemm, Geoff wrote:\n> Not sure what happened there.  I'll just restore that section\n> from version 13 unless I can figure out what that was all about.\n> Thanks for noticing!\n> \n> Cheers,\n> Geoff\n> \n> -----Original Message-----\n> From: Greg Stein [mailto:gstein@lyra.org]\n> Sent: Monday, April 02, 2001 8:47 PM\n> To: ietf-dav-versioning@w3.org\n> Subject: DAV:prop in a MERGE request\n> \n> \n> What happened to the DAV:prop stuff in the MERGE request? I'm not seeing it\n> anywhere in the -14 draft. I don't recall any conversation about removing\n> that.\n> \n> Cheers,\n> -g\n> \n> -- \n> Greg Stein, http://www.lyra.org/\n\n-- \nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-15625797"}, {"subject": "Re: FW: Meeting Notes for the 50th IETF Proceeding", "content": "\"Clemm, Geoff\" wrote:\n\n> John:Could you forward the notes you took to Jim?We were going\n> to have a phone call this Friday, for the folks that couldn't\n> make it to the IETF.  Could you also post the notes to the\n> versioning mailing list, so that folks have a chance to read it\n> over before the call?\n\nHere you go.\n\n--\n/==============================================================\\\n|John Stracke    | http://www.ecal.com |My opinions are my own.|\n|Chief Scientist |=============================================|\n|eCal Corp.      |E pui muove! -- Galileo                      |\n|francis@ecal.com|                                             |\n\\==============================================================/\n\n\n\n\n\n\ntext/html attachment: minutes.html\n\n\n\n\n", "id": "lists-005-15633874"}, {"subject": "RE: FW: Meeting Notes for the 50th IETF Proceeding", "content": "I'm glad to see from the meeting notes that I wasn't the only one who\nwondered about Core versus Basic (Core + checkout + fork control).  I agree\nwith Mark and Larry that Core is sufficient to implement versioning, and\nwith Eric that some clients will be perfectly happy to deal with Core-level\nservers.  So I believe DeltaV should have a package which is just Core.  I\nwould not replace Core with Basic.  Given that decision, I would rename\nBasic to avoid the implication that it's the minimum package, or otherwise\nmake it clear that Core is the minimum.\n\nI disagree with Geoff and JimW that adding checkout and fork control is low\ncost for any server wishing to be DeltaV-compliant.  Recall that checkout\nrequires mutable VCRs on the server which hold intermediate state between\ncheckout and checkin, whereas Core has no such requirement.  Core allows all\nserver-resident resources to be immutable, which is arguably a more\nconsistent model than the mixed model with checkout (mutable checked-out\nVCRs, everything else immutable).  For existing versioning servers that\ndisallow mutable objects, the cost of supporting checkout is non-trivial,\nbecause code would have to be written to subvert the fundamental design of\nthe server.\n\n--Chuck Fay \nFileNET Corporation, 3565 Harbor Blvd., Costa Mesa, CA 92626 \nphone:  (714) 327-3513, fax:  (714) 327-5076, email:  cfay@filenet.com\n \n\n\n\n", "id": "lists-005-15642224"}, {"subject": "RE: FW: Meeting Notes for the 50th IETF Proceeding", "content": "Thanks for taking and posting the notes, John!\n\nJust one minor correction to the minutes:\n\n   Have talked it over with ADs to see what kind of standard they need to\n   meet before submitting draft to AD; Patrik said it's really down to\n   whether the chair thinks there's consensus. If the AD doesn't find any\n   omissions/flaws, then they'll issue the IESG Last Call.\n\nYes, this was Patrik.\n\n   Patrik has already given one approving comment on the doc (he likes\n   server-side workspaces), suggesting that he's been keeping track of\n   deltav well enough that he's probably already spotted major gotchas\n   that might hold it up.\n\nIt actually was Ned who made this comment (Ned is the\nAD responsible for the DeltaV protocol).\nI'm not sure that it would be appropriate\nto infer that he's already spotted major gotchas that might hold\nit up (Ned made no such claim), but I felt it was a\ngood indication of his knowledge and interest in the area.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-15652857"}, {"subject": "RE: FW: Meeting Notes for the 50th IETF Proceeding", "content": "The IETF rules say that these notes have to be sent to the\nminutes in .txt format, so I figured I'd give JimA a hand and\ndo some reformatting.  Just in case anyone on the mailing list\nprefers the .txt format, I'll post it here as well.\n\nCheers,\nGeoff\n\n--------------------------------------------------------------\n\n\nDeltaV minutes from IETF-50 \n\n** Current status **\n\nHave held multiple WG last calls.\n\nAppears to be consensus on features, but not on packaging/grouping.\n\nTarget one more draft before submission to AD. \n\nHave talked it over with ADs to see what kind of standard they need to\nmeet before submitting draft to AD; Patrik said it's really down to\nwhether the chair thinks there's consensus. If the AD doesn't find any\nomissions/flaws, then they'll issue the IESG Last Call.\n\n\n** Yesterday's design meeting **\n\nPropose deferring variants. \n\nPropose packages. \n\nDefined sets of functionality. \n\nProtocol still reports \"features\" (a.k.a. options). \n\nLabels separate. \n\nUpdate separate -- plays against some advanced features.\n\nDefer variants; if make it a separate milestone, with a separate\ndesign team, might be able to get a new set of people interested.\n\nPackages wouldn't actually change the protocol; but it would say that\nsets of features go together; if you implement A, you MUST implement B\nand C. Reduces the combinatorial explosion, helps QA and interop\ntesting. Four proposed packages: Base, File Versioning, Client CM,\nServer CM. Will have to be hashed out on the list, of course.\n\nIssues: should that be \"SHOULD implement B and C\"; how does the server\nadvertise which packages it support? Larry pointing out that,\nhistorically, one thing the IETF doesn't do well is protocols with a\nlot of independent options; packaging the options like this improves\ninterop a lot.\n\nMark: that you don't need any of these packages to implement\nversioning; you could just do automatic versioning, which is in the\ncore. Says we should have a package for the core, so that we could\nhave simple, noninteractive clients.\n\nLisa: an autoversioning client could run against a Base server.\n\nMark: core is \"sufficient to be deltav compliant\", so it should be\npermitted.\n\nLarry: the smaller subsets are interesting; leaning towards permitting\na Core package.\n\nGeoff: question is, is the cost of adding checkout and fork control,\nto be Base, is high enough to deter an implementor from going to Base.\n\nJimW: probably not; it's probably under 1000 lines of code.\n\nGeoff: right, because autoversioning has to do that checkout anyway,\neven if it doesn't expose it via deltav.\n\nLarry: if all packages have checkout & fork control (proposed\ndefinitions do), then why not redefine core to include them, and drop\nthe Base package?\n\nGeoff: some people he knows want to expose \"core\" as a feature, which\ncan advertised. Knows one server for whom it is very important to be\ncore-only.\n\nLarry: but is it useful to any client?\n\nGeoff: that server does not want to allow non-automatic versioning.\n\nChris trying to get the sense of the room.\n\nLarry: what kind of difference would this make to a client?\n\nLisa: not much; but it could well make a big difference for some servers.\n\n[...] Geoff: bundling the base features into core gives us less\nflexibility later; we wouldn't be able to fix it later.\n\nEric: some clients will be perfectly happy to deal with core-level\nservers.\n\nLarry: leaving them separate features is fine with him, but telling\nimplementors it's OK to leave them out.\n\nSeparate thread: Update and Label are not in any of the packages;\nthey're to be advertised separately.\n\nGeoff: they're not really orthogonal, though; they'd harm Client CM\nand Server CM.\n\nJimW: maybe {Client, Server} CM should imply \"MUST NOT support Update,\nLabel\".\n\nEric: Label might be harmless, actually.\n\n(Larry asking, and Geoff explaining, why Update is harmful.)\n\nEric: so, should File Versioning imply Update?\n\nChris: there are backends where File Versioning would be possible, but\nUpdate very difficult.\n\nLarry: get rid of Update, maybe?\n\nGeoff: let's take it to the list; its defenders aren't here.\n\nLarry: so what was it for?\n\nGeoff: well, it was needed back before we added some of the more\nadvanced CM capabilities; it might not be needed any more.\n\nShould we cut Label?\n\nJohn Stracke: without Label, it's going to be pretty hard to build on\ntop of CVS, which is important to a lot of people, esp. open-source\nprojects. Discussion over what to do; we might be able to define a\nsimpler degree of CM that CVS could do. One thing that makes Label\ncomplex is the Label: header (interacts with GET and PROPFIND; has to\nbe internationalized specially); but maybe we could cut\nthat. Discussion.\n\nSense of the room: remove the Label: header; possibly remove Update. \n\nJimW: could the simplified Label be rolled into any of these?\n\nGeoff: Certainly into {Client, Server} CM. \n\n\n** Open Issues **\n\n- Should COPY of collections delete destination elements not in source?\nThat's what 2518 says, but that's not what people expect, and not what\nfilesystems actually implement (they merge into the existing\ncollection). Define a header to request the merge behavior, or update\n2518?\n\nLarry: if we update 2518, it should be in a separate doc.\n\nJimW: the header option is what an early WebDAV draft did, and it\nsuccumbed to optionitis. But there might be clients that depend on the\ncurrent behavior. Action item: JimW will follow up on revving 2518.\n\n- Should we declare that no versioning properties are returned by allprop?\n\nJimW: why?\n\nGeoff: so that servers can avoid the cost of computing them,\nparticularly since most clients currently doing allprop are not\nversion-aware and won't be able to use the versioning\nproperties. (Side thread about deprecating allprop altogether. The\nnatural issues.) Discussion: what level should this requirement be?\n\nChris: some servers will find it easier to send everything (for one\nreason or another), and they shouldn't be required to filter.\n\nLarry: how is filtering going to be more expensive than generating &\nsending the XML?\n\n...Chris recording: sense of room: SHOULD NOT, with explanation.\n\n\n- Should the checkin on unlock create a new version if the resource has\nnot been changed while it was locked?\n\nGeoff: the spec for autoversioning says that checkout occurs on\nupdate, but not on lock.\n\nChris: let's make it optional, for stores that automatically check out\non lock.\n\nGeoff: but what if you do a depth lock, just to modify a single\nresource? It would be really inefficient. Also, clients need\npredictable behavior.\n\nChris recording: sense of the room: no, because the checkout doesn't\noccur until a modification is made.\n\n- Add UNVERSION-CONTROL request?\n\nJimW: just copy it to a non-version-controlled part of the namespace.\n\nChris: but this is something that'd be done in situ.\n\nLisa: this will destroy too much information.\n\nJimW: do you really want to add this new feature right when we're\ntrying to finish up?\n\nChris: somebody asked for it; we should address it.\n\nGeoff: yes, we're addressing it; but its utility is so low that it's\nbelow the bar for now.\n\nLarry: so what was the actual problem to be solved?\n\nLisa: I want a way to take a versioned resource and make it non-versioned.\n\nLarry: what's wrong with copying it away and then moving it back?\n\nLisa: it's not in situ, so it doesn't get logged properly. But...it's\na reasonable workaround; can we document it?\n\nChris recording: sense of the room: document the workaround. \n\n- Should we get rid of DAV:version-set property of a version history\n  resource?\n\nChris: why?\n\nLisa had pointed out that there were too many ways to get at the\nversion history; thought this one was one we could get rid of; but\nmaybe a different one would be better. Discussion; it comes out that\nthere are only two ways to get the entire history: version-set and a\nreport. Lisa had thought that the predecessor/successor properties had\nbeen \"all predecessors/all successors\".\n\nChris recording: sense of the room: clarify that pred/succ properties\nare immediate only, maybe add an implementation note for clients on\nthe best way to get history, explain that the different methods are\nequiv.\n\n- Should the DAV:version-controlled-configuration be on all members of\n  a baseline-controlled collection?\n\nGeoff explaining: version-controlled-configuration is the property of\na baseline-controlled collection that lets you create new\nbaselines. It's currently on the root; Greg Stein wanted to be able to\nuse it on any member.\n\nChris: was there any dissent when it came upon the list?\n\nGeoff: no.\n\nChris: any objection here? No.\n\nChris recording: sense of the room: no objections, but no strong\nsupport, either.\n\nShould the URLs in the DAV:compare-baseline report be version URLs or\nURLs from the DAV:baseline-collections of the baselines being\ncompared?\n\nGeoff explaining.\n\nGeoff: Pros and cons of the two approaches are obscure; current way\n(version URLs) is a little bit simpler, since there's only a single\nspace of version URLs, which makes them easier to compare.\n\nChris: anybody here have an opinion?\n\nJimW: better to return the more canonical URL (version URL).\n\nEric and ? agree; Chris recording that as sense of the room. \n\n- Add a DAV:error node above the 403/409 XML elements?\n\nBasically, it makes the DTD easier to write, by isolating all the\nplaces where there might be 500 possible errors to specify.\n\nSense of the room: no objections, some limited support, a request to\nunify with the advanced status reporting stuff.\n\n- Should we create an appendix with all the DTDs? Maybe XML Schema?\nIt's being voted on now, and the vote should take about a month.\n\n(JimW: and if Tim B-L vetoes it six months later?)\n\nSense of the room: wait for Schema; create an appendix with schemas;\nif Schema isn't approved in time, we make the appendix non-normative.\n\n- Lisa bringing up a new issue on \"version history resource\": the\nintroductory paragraph lists some things it can be used for, but\ndoesn't explain how.\n\nGeoff explaining; they'll put it in the draft. Also noting that the\nVHR is a good place to put global (cross-version) properties of a\nresource.\n\n\n\n", "id": "lists-005-15661029"}, {"subject": "REVersioning TeleConf Agenda, 4/6/01 (Friday) 12-1pm ES", "content": "phone: 888 819 8909  pass-code#97985\n\nAgenda:\n\nDiscuss the changes proposed at the Minneapolis IETF\n\n- split Variant into separate spec (no objections so far)\n\n- merge Fork-Control into Checkout (no objections so far)\n\n- define four \"feature-sets\" or \"option-sets\" (defined in earlier message)\n\n- defer label header, but keep LABEL method\n\n- defer UPDATE method\n\nI'll try to get a 14.1 draft posted to the deltav web site before\nFriday.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-15678440"}, {"subject": "RE: FW: Meeting Notes for the 50th IETF Proceeding", "content": "   From: Fay, Chuck [mailto:CFay@filenet.com]\n\n   I'm glad to see from the meeting notes that I wasn't the only one\n   who wondered about Core versus Basic (Core + checkout + fork\n   control).  I agree with Mark and Larry that Core is sufficient to\n   implement versioning, and with Eric that some clients will be\n   perfectly happy to deal with Core-level servers.  \n\nI agree with this as well.\n\n   So I believe\n   DeltaV should have a package which is just Core.\n\nIt's important to separate \"features\" (what we used to call \"options\")\nfrom \"packages\".  The consensus at the meeting was that a server\nreports its capabilities in the form of a set of features (in the DAV\nheader from an OPTIONS request).  In the protocol, we define a small\nset of feature sets, or \"packages\", that a server SHOULD support,\nas a way to simplify the creation of interoperable clients.\n\nThis means that a server MAY support just the \"version-control\"\nfeature, but not any of the defined packages.  On the other hand,\nto keep the interoperable client combinatorics in control, we\npropose to define a small number of \"packages\" that reflect a \nset of features that appear to cover the majority of planned\nimplementations.\n\n   I would not\n   replace Core with Basic.  Given that decision, I would rename Basic\n   to avoid the implication that it's the minimum package, or\n   otherwise make it clear that Core is the minimum.\n\nYes, all features require the \"version-control\" feature, which makes\nit the logical minimum set of versioning features.  But it is still\nreasonable to say that the smallest defined \"package\" consists of\nmore than that logical minimum set of versioning features.\n\nAlthough Lisa has recently posted a suggestion that we actually \nreturn package names in OPTIONS, rather than feature names, I do\nnot agree with this suggestion, and this suggestion was not\nsupported by the working group in Minneapolis.\n\n   I disagree with Geoff and JimW that adding checkout and fork control is\nlow\n   cost for any server wishing to be DeltaV-compliant.\n\nThe minutes are a bit misleading there.  I agreed that it is reasonable\nto have checkout and fork-control in the smallest defined \"package\",\nbut I did not agree that a server have to support this in order to\nadvertise any DeltaV support.  To the contrary, I believe as stated\nabove, namely that a server MAY just support the \"version-control\"\nfeature (which does not have CHECKOUT).\n\n   Recall that checkout\n   requires mutable VCRs on the server which hold intermediate state between\n   checkout and checkin, whereas Core has no such requirement.\n\nI agree.\n\n   Core allows all\n   server-resident resources to be immutable, which is arguably a more\n   consistent model than the mixed model with checkout (mutable checked-out\n   VCRs, everything else immutable).\n\nMore \"consistent\"?  I probably wouldn't go that far ... if you want to\nhave consistent property/content, unless you can come up with a way of\nupdating both in one HTTP request, you'll be creating inconsistent\nimmutable states on the server, which doesn't sound like a good thing\nto me.  This is why although I agree that a server MAY just support\nthe version-control feature, it SHOULD support CHECKOUT.\n\n   For existing versioning servers that\n   disallow mutable objects, the cost of supporting checkout is non-trivial,\n   because code would have to be written to subvert the fundamental design\nof\n   the server.\n\nI agree.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-15685842"}, {"subject": "draft-ietf-deltav-versioning-14.1 is now availabl", "content": "This draft contains all the changes discussed at the Minneapolis\nworking group meeting, except for the removal of the update feature.\n\n<http://www.webdav.org/deltav/protocol/draft-ietf-deltav-versioning-14.1.htm\n>\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-15696595"}, {"subject": "RE: Versioning TeleConf Agenda, 4/6/01 (Friday) 12-1pm ES", "content": "Attending: Peter(Merant), Boris(IBM), Geoff(Rational)\n\n   Agenda:\n\n   Discuss the changes proposed at the Minneapolis IETF\n\n   - split Variant into separate spec (no objections so far)\n\nNo objections in con-call.\n\n   - merge Fork-Control into Checkout (no objections so far)\n\nNo objections in con-call.\n\n   - define four \"feature-sets\" or \"option-sets\" (defined in earlier\nmessage)\n\nOk with con-call participants.\n\n   - defer label header, but keep LABEL method\n\nExample of reason why you don't want human meaningful strings in a\nheader:  The Label value needs to be matched against values stored \non the server.  For some languages, the encoding is not enough to\ndecide whether or not there is a match ... you need something like\na language attribute.  With labels in XML, that's no problem ... you\nadd the language information as an optional element or attribute.\nWith a header, there is no good way to provide this info.\n\nConsensus of con-call: Label header can be removed.\n\n   - defer UPDATE method\n\nWe spent some time discussing the motivation for this.  The consensus\nof the con-call was that there was sufficient support for it in the\nworking group to keep it in the protocol.  \n\n   - should version-controlled configurations always be in the\n     checked-out state?\n\nOne more topic was raised, which was a proposal that a\nversion-controlled configuration should always be in the checked-out\nstate.  In particular, it would be initialized to be in the\nchecked-out state, and that DAV:keep-checked-out is implicitly\napplied whenever it is checked in.\n\nThe motivation for this proposal is that being \"checked in\" means\nthat the state of the resource should be the same as that of the\nDAV:checked-in version of the resource, and that it must first be\nchecked out before this state can be changed.  But it is always\npossible to change the state of a version-controlled configuration,\ntherefore it is inconsistent to ever have a version-controlled\nconfiguration in the DAV:checked-in state.\n\nThe consensus of the con-call was that this change should be made.\nDoes anyone object?\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-15703444"}, {"subject": "Re: Versioning TeleConf Agenda, 4/6/01 (Friday) 12-1pm ES", "content": "On Sun, Apr 08, 2001 at 12:04:06AM -0400, Clemm, Geoff wrote:\n>...\n>    - should version-controlled configurations always be in the\n>      checked-out state?\n> \n> One more topic was raised, which was a proposal that a\n> version-controlled configuration should always be in the checked-out\n> state.  In particular, it would be initialized to be in the\n> checked-out state, and that DAV:keep-checked-out is implicitly\n> applied whenever it is checked in.\n> \n> The motivation for this proposal is that being \"checked in\" means\n> that the state of the resource should be the same as that of the\n> DAV:checked-in version of the resource, and that it must first be\n> checked out before this state can be changed.  But it is always\n> possible to change the state of a version-controlled configuration,\n\n\"always possible\" ?? How is that? This proposal seems predicated on a VCC\nbeing mutable, but I don't understand why that would be so. I seem them as\nquite immutable.\n\nCheers,\n-g\n\n-- \nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-15713507"}, {"subject": "RE: Versioning TeleConf Agenda, 4/6/01 (Friday) 12-1pm ES", "content": "A version-controlled configuration is always associated with a\nbaseline-controlled collection (and is used to capture the state\nof the configuration rooted at that baseline-controlled collection).\nSince you can always check-out/modify/check-in the members of the\nbaseline-controlled collection, this effectively lets you modify\nthat membership of that baseline-controlled collection, unconstrained\nby the current state of the associated version-controlled configuration.\n\nIn contrast a \"baseline\", like any other version, is always immutable.\n\nCheers,\nGeoff\n\n\n-----Original Message-----\nFrom: Greg Stein [mailto:gstein@lyra.org]\nSent: Monday, April 09, 2001 2:34 AM\nTo: ietf-dav-versioning@w3.org\nSubject: Re: Versioning TeleConf Agenda, 4/6/01 (Friday) 12-1pm EST\n\n\nOn Sun, Apr 08, 2001 at 12:04:06AM -0400, Clemm, Geoff wrote:\n>...\n>    - should version-controlled configurations always be in the\n>      checked-out state?\n> \n> One more topic was raised, which was a proposal that a\n> version-controlled configuration should always be in the checked-out\n> state.  In particular, it would be initialized to be in the\n> checked-out state, and that DAV:keep-checked-out is implicitly\n> applied whenever it is checked in.\n> \n> The motivation for this proposal is that being \"checked in\" means\n> that the state of the resource should be the same as that of the\n> DAV:checked-in version of the resource, and that it must first be\n> checked out before this state can be changed.  But it is always\n> possible to change the state of a version-controlled configuration,\n\n\"always possible\" ?? How is that? This proposal seems predicated on a VCC\nbeing mutable, but I don't understand why that would be so. I seem them as\nquite immutable.\n\nCheers,\n-g\n\n-- \nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-15721792"}, {"subject": "version-controlled configuration always checked-ou", "content": "Clemm, Geoff\" <gclemm@rational.com> wrote:\n> A version-controlled configuration is always associated with a\n> baseline-controlled collection (and is used to capture the state\n> of the configuration rooted at that baseline-controlled collection).\n> Since you can always check-out/modify/check-in the members of the\n> baseline-controlled collection,\nWhy must this be allowed ? If I have a version-controlled configuration\nwhich I got from a baseline and it's a version of a component (subbaseline)\nI don't want the possibility of changing resources in my workspace which are\ncontrolled by the baseline as long as I don't want to change anything in this\ncomponent.\nTo do this I should do a CHECKOUT on the version-controlled configuration.\nThis also helps for creating new baselines of my master configuration.\nAs long as I didn't CHECKOUT the subbaseline I don't have to check for any changes\nin this component but just put the subbaseline path and it's current\nversion in my subbaseline-set.\n\nThen I would like to remove a restriction on subbaselines. In 11 you require \nthe resources of subconfigurations to be removed from under the root collection\nof the configuration. This effectively leads to a flat set of configurations\nin a workspace. This is inconvenient for structuring large projects with heavy\nreuse of subconfigurations and subsubconfigurations.\nYou only have to state that a collection contained in a baseline-controlled\ncollection which is itself baseline-controlled isn't considered a resource\nbelonging to the configuration but must be added as a subbaseline if wanted.\n\nThen I'm happy that you keep UPDATE. Exposing an old version is THE basic\nfunctionality of versioning. So it should be available as an explicit action\n(Like the good old 'co -r' of RCS). Even if I agree that you can do it implicitly\ne.g. in Clearcase by changing a views config spec.\n\nCheers, Edgar\n-- \nedgar@edgarschwarz.de                    http://www.edgarschwarz.de\n*          DOSenfreie Zone.        Running Native Oberon.         *\nMake it as simple as possible, but not simpler.     Albert Einstein\n\n\n\n", "id": "lists-005-15731895"}, {"subject": "checked-out VCC (was: Re: Versioning TeleConf Agenda, 4/6/01 (Friday) 12-1pm EST", "content": "On Mon, Apr 09, 2001 at 01:19:58PM -0400, Clemm, Geoff wrote:\n> A version-controlled configuration is always associated with a\n> baseline-controlled collection (and is used to capture the state\n> of the configuration rooted at that baseline-controlled collection).\n> Since you can always check-out/modify/check-in the members of the\n> baseline-controlled collection, this effectively lets you modify\n> that membership of that baseline-controlled collection, unconstrained\n> by the current state of the associated version-controlled configuration.\n\nIn the above description, you're modifying the baseline-controlled\ncollection (BCC). You aren't modifying the VCC.\n\nI still see no point in putting the VCC in a permanently-checked-out state.\n\nIf you're concerned about consistency between the BCC and the baseline\nreferred to by the checked-in VCC, then the answer is to make the BCC\nreadonly. Not to say the VCC is always checked out.\n\nChecking out the VCC would then allow the BCC to be modified. I have no\nopinion on whether a server can always (force) a VCC to remain checked out.\nBut the spec should not mandate that situation.\n\n[ in Subversion, the VCC cannot be checked out and the BCC is readonly; you\n  must use working resources to create a new baseline, all of which is then\n  merged into the BCC and VCC ]\n\nCheers,\n-g\n\n-- \nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-15741019"}, {"subject": "label header (was: Re: Versioning TeleConf Agenda, 4/6/01 (Friday) 12-1pm EST", "content": "On Sun, Apr 08, 2001 at 12:04:06AM -0400, Clemm, Geoff wrote:\n>...\n>    - defer label header, but keep LABEL method\n> \n> Example of reason why you don't want human meaningful strings in a\n> header:  The Label value needs to be matched against values stored \n> on the server.  For some languages, the encoding is not enough to\n> decide whether or not there is a match ... you need something like\n> a language attribute.  With labels in XML, that's no problem ... you\n> add the language information as an optional element or attribute.\n> With a header, there is no good way to provide this info.\n> \n> Consensus of con-call: Label header can be removed.\n\nI was talking about this with somebody yesterday. I don't see the argument\nat all. Please give an example where a Label needs a language to resolve\nproperly.\n\nAs I see it, we compare the (character) encoded string against those on the\nserver. \"le\" and \"le\" are exactly the same whether the language is French or\nEnglish.\n\nBy suggesting that there is some language component in there, you are then\nstating that the comparison function on the server must account for\nlanguage. That just doesn't seem right. The logical mechanism is to convert\nthe Label: header value into Unicode and compare that to all the labels\nstored on the server (which are also stored as Unicode).\n\nUnless/until somebody can come up with an example of a string that is\nencoded the same, but interpreted differently based on language, *and* argue\nthe expectation that the server should treat that string/language pair\ndifferently... then I might agree to dropping the Label header.\n\nBut until then, let's keep the Label header. Tossing it means we must\nreplace our PROPFINDs with some silly new report and an extra round trip.\nWhere is the benefit!?!\n\nFinally... even if you can show a similarly-encoded string which needs to\nalso account for the language, then the Label header can simply look like:\n\n  Label: my-label; language=\"en-us\"\n\nIf we want to be anal about it:\n\n  Label: my-label; language=\"en-us\"; charset=\"iso-8859-1\"\n\nBut the whole language thing seems like a red herring.\n\nCheers,\n-g\n\n-- \nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-15749925"}, {"subject": "RE: label header (was: Re: Versioning TeleConf Agenda, 4/6/01 (Fr iday) 12-1pm EST", "content": "   From: Greg Stein [mailto:gstein@lyra.org]\n\n   On Sun, Apr 08, 2001 at 12:04:06AM -0400, Clemm, Geoff wrote:\n   >...\n   >    - defer label header, but keep LABEL method\n   > \n   > Example of reason why you don't want human meaningful strings in\n   > a header: The Label value needs to be matched against values\n   > stored on the server.  For some languages, the encoding is not\n   > enough to decide whether or not there is a match ... you need\n   > something like a language attribute.  With labels in XML, that's\n   > no problem ... you add the language information as an optional\n   > element or attribute.  With a header, there is no good way to\n   > provide this info.\n   > \n   > Consensus of con-call: Label header can be removed.\n\n   I was talking about this with somebody yesterday. I don't see the\n   argument at all. Please give an example where a Label needs a\n   language to resolve properly.\n\n   As I see it, we compare the (character) encoded string against\n   those on the server. \"le\" and \"le\" are exactly the same whether the\n   language is French or English.\n\nIf a user wants the \"tested\" version, and so types in \"tested\" to his\nclient, but goes against a server which has some Swahili labels, where\nthe string \"tested\" happens to mean \"just broke all the nightly builds\",\nthen the user won't get what they wanted (possibly what they deserved,\nbut not what they wanted :-).\n\n   By suggesting that there is some language component in there, you\n   are then stating that the comparison function on the server must\n   account for language. That just doesn't seem right. The logical\n   mechanism is to convert the Label: header value into Unicode and\n   compare that to all the labels stored on the server (which are also\n   stored as Unicode).\n\nThat would be algorithmically simpler, but wouldn't get the user what\nthey wanted (although some software vendors have a tradition of \ntelling the user that they *really* want what is algorithmically\nsimpler :-).\n\n   Unless/until somebody can come up with an example of a string that\n   is encoded the same, but interpreted differently based on language,\n   *and* argue the expectation that the server should treat that\n   string/language pair differently... then I might agree to dropping\n   the Label header.\n\nI believe the major point of labels is that they provide a human with\na way of meaningfully naming something, and not just to be some\nstring.  You already have the version-name if you just want some\nstring that identifies a version.\n\n   But until then, let's keep the Label header. Tossing it means we\n   must replace our PROPFINDs with some silly new report and an extra\n   round trip.  Where is the benefit!?!\n\nI'm not sure that the \"label\" report is any sillier than any other\nreport (:-), and I don't think an extra round trip will materially\naffect us here.  The label is primarily for individual resources.  If\nyou are manipulating sets of resources, you have the baseline and\nworkspace features.\n\n   Finally... even if you can show a similarly-encoded string which\n   needs to also account for the language, then the Label header can\n   simply look like:\n\n     Label: my-label; language=\"en-us\"\n\n   If we want to be anal about it:\n\n     Label: my-label; language=\"en-us\"; charset=\"iso-8859-1\"\n\n   But the whole language thing seems like a red herring.\n\nReplicating XML attribute information in a header does not seem\nlike the right thing to do here, especially if it just is to save an\noccasional round trip.  But I believe we need that information\nto do correct label matching.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-15760327"}, {"subject": "RE: label header (was: Re: Versioning TeleConf Agenda, 4/6/01 (Friday) 12-1pm EST", "content": "                  \"\nTake the word 'schon' in German, which can also be spelled\n'schoen'.  There is a convention that specifies that umlauts can\nbe replaced by a following \"e\" and still be the same word.  It is\nnot the case that binary comparisons can be done even for equality\nfor natural language strings.\n\nHowever, your point is still valid--I thought the reasons to get\nrid of the Label header were:\n\n* make label just a property and remove an option, simplifying\n  the client testing problem\n* shorten the spec\n* nobody at the working group cared that much about the header\n* avoid the language pain in the a** with respect to internationalizing\nthe header\n\nThe language issue isn't sufficient by itself.\n\n> -----Original Message-----\n> From: ietf-dav-versioning-request@w3.org\n> [mailto:ietf-dav-versioning-request@w3.org]On Behalf Of Greg Stein\n> Sent: Tuesday, April 10, 2001 4:20 AM\n> To: 'ietf-dav-versioning@w3.org'\n> Subject: label header (was: Re: Versioning TeleConf Agenda, 4/6/01\n> (Friday) 12-1pm EST)\n>\n>\n> On Sun, Apr 08, 2001 at 12:04:06AM -0400, Clemm, Geoff wrote:\n> >...\n> >    - defer label header, but keep LABEL method\n> >\n> > Example of reason why you don't want human meaningful strings in a\n> > header:  The Label value needs to be matched against values stored\n> > on the server.  For some languages, the encoding is not enough to\n> > decide whether or not there is a match ... you need something like\n> > a language attribute.  With labels in XML, that's no problem ... you\n> > add the language information as an optional element or attribute.\n> > With a header, there is no good way to provide this info.\n> >\n> > Consensus of con-call: Label header can be removed.\n>\n> I was talking about this with somebody yesterday. I don't see the argument\n> at all. Please give an example where a Label needs a language to resolve\n> properly.\n>\n> As I see it, we compare the (character) encoded string against\n> those on the\n> server. \"le\" and \"le\" are exactly the same whether the language\n> is French or\n> English.\n>\n> By suggesting that there is some language component in there, you are then\n> stating that the comparison function on the server must account for\n> language. That just doesn't seem right. The logical mechanism is\n> to convert\n> the Label: header value into Unicode and compare that to all the labels\n> stored on the server (which are also stored as Unicode).\n>\n> Unless/until somebody can come up with an example of a string that is\n> encoded the same, but interpreted differently based on language,\n> *and* argue\n> the expectation that the server should treat that string/language pair\n> differently... then I might agree to dropping the Label header.\n>\n> But until then, let's keep the Label header. Tossing it means we must\n> replace our PROPFINDs with some silly new report and an extra round trip.\n> Where is the benefit!?!\n>\n> Finally... even if you can show a similarly-encoded string which needs to\n> also account for the language, then the Label header can simply look like:\n>\n>   Label: my-label; language=\"en-us\"\n>\n> If we want to be anal about it:\n>\n>   Label: my-label; language=\"en-us\"; charset=\"iso-8859-1\"\n>\n> But the whole language thing seems like a red herring.\n>\n> Cheers,\n> -g\n>\n> --\n> Greg Stein, http://www.lyra.org/\n>\n>\n\n\n\n", "id": "lists-005-15772436"}, {"subject": "RE: label header (was: Re: Versioning TeleConf Agenda, 4/6/01 (Friday) 12-1pm  EST", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-15784860"}, {"subject": "RE: label header (was: Re: Versioning TeleConf Agenda, 4/6/01  (Friday) 12-1pm EST", "content": "--On 01-04-10 13.21 -0400 Jim Amsden <jamsden@us.ibm.com> wrote:\n\n> Perhaps we could get some clarification from the Application area\n> directors if this is something we need to address or not?  I'd prefer to\n> leave the label header in the spec as it semms that selecting a version\n> by label is simple and reasonable functionality that is common practice,\n> and has been in the spec for quite some time. However if it leads down\n> unnecessary rat-holes, I could be convinced to delete it. Ned? Patrik? \n\nIF you do comparisons of any kind, you MUST define how a match is to\ndefined.\n\nWhen comparing Unicode characters, my take is that you have to do things\nlike the IDN wg is talking about. See for example\ndraft-ietf-idn-nameprep-03.txt which talks about the operations you have to\ndo on two strings _before_ you do the actual comparison.\n\nSo, comparing human readable text is hard, very hard, but possible.\n\n   paf\n\n\n\n", "id": "lists-005-15793689"}, {"subject": "RE: label header (was: Re: Versioning TeleConf Agenda, 4/6/01 (Fr iday) 12-1pm EST", "content": "   From: Eric Sedlar [mailto:Eric.Sedlar@oracle.com]\n\n   Take the word 'schon' in German, which can also be spelled\n   'schoen'.  There is a convention that specifies that umlauts can\n   be replaced by a following \"e\" and still be the same word.  It is\n   not the case that binary comparisons can be done even for equality\n   for natural language strings.\n\n   However, your point is still valid--I thought the reasons to get\n   rid of the Label header were:\n\n   * make label just a property and remove an option, simplifying\n     the client testing problem\n\nI don't think we proposed removing the LABEL method that updates\nthe value of the label property, did we?  In particular, there\nare several folks that object to having a non-protected property\nthat when updated has a side-effect on another non-protectected\nproperty (i.e. the label properties on two different version\nresources of the same version history).\n\nAlso, once we use the \"package\" approach, whether or not the\nlabel is a separately identifiable feature doesn't matter as\nlong as it is bundled into a package with the other advanced\nfeatures.\n\nBut simplifying testing is certainly an issue, since there are\nall the interactions of the Label header with various methods\nthat would have to be tested.\n\n   * shorten the spec\n\nYes.\n\n   * nobody at the working group cared that much about the header\n\nIt's true that none of the folks that care were at that meeting, but I\ndon't think we believed that nobody cared.  Currently, it does look\nlike just a few people care (about the Label header, that is ...\nseveral people care about the label feature).\n\n   * avoid the language pain in the a** with respect to internationalizing\n   the header\n   The language issue isn't sufficient by itself.\n\nMy preference was affected by all the issues you describe, but\nit was the internationalization issues that tipped my vote for\nremoving the Label header.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-15803218"}, {"subject": "RE: label header (was: Re: Versioning TeleConf Agenda, 4/6/01 (Fr  iday) 12-1pm EST", "content": "I'll just restate my position for the record.\n\nI want to keep the label header and don't think that labels should be\nlanguage encoded.  Using a well defined encoding we can match on labels\nsufficiently well (canonicalizing if necessary) and that is all that we are\nrequired to do.\n\nThe issue of two strings being interpreted differently in different\nlanguages is bogus.  There are strings in a single language that are\nambiguous and I don't think anyone is suggesting that we try and solve the\nsemantics of common version labeling requirements!  Others have already\ndescribed situations of languages permitting variations on spelling etc. of\nthe same word.  We just don't need to go there -- a label is just a string.\n\nThe use of the Label: header is useful for operations on a single resource,\nand invaluable for operations on groups of resources that are labeled with\na single label.\n\nI'm in favour of keeping the label header as is.\n\nRegards,\nTim\n\n\n\n", "id": "lists-005-15813067"}, {"subject": "Re: checked-out VCC (was: Re: Versioning TeleConf Agenda, 4/6/01  (Friday) 12-1pm EST", "content": "I guess it just depends on which perspective you take.\nIf you are looking at it from the baseline point of view then the\nversion-controlled configuration should remain checked-in, but if you are\nlooking at it from the baseline-controlled configuration then it should\nremain checked out.\n\nIt can be argued either way, but I think of a version-controlled\nconfiguration as being 'more closely associated with' the baseline -- but\ndon't ask me to give a good reason<g>\nSo I would expect the version-controlled configuration to be in a\nchecked-in state for most of the time, then be checked out and checked in\nto capture the new baseline (i.e. the opposite of the proposal).\n\nRegards,\nTim\n\nGreg wrote:\n\n\nOn Mon, Apr 09, 2001 at 01:19:58PM -0400, Clemm, Geoff wrote:\n> A version-controlled configuration is always associated with a\n> baseline-controlled collection (and is used to capture the state\n> of the configuration rooted at that baseline-controlled collection).\n> Since you can always check-out/modify/check-in the members of the\n> baseline-controlled collection, this effectively lets you modify\n> that membership of that baseline-controlled collection, unconstrained\n> by the current state of the associated version-controlled configuration.\n\nIn the above description, you're modifying the baseline-controlled\ncollection (BCC). You aren't modifying the VCC.\n\nI still see no point in putting the VCC in a permanently-checked-out state.\n\nIf you're concerned about consistency between the BCC and the baseline\nreferred to by the checked-in VCC, then the answer is to make the BCC\nreadonly. Not to say the VCC is always checked out.\n\nChecking out the VCC would then allow the BCC to be modified. I have no\nopinion on whether a server can always (force) a VCC to remain checked out.\nBut the spec should not mandate that situation.\n\n[ in Subversion, the VCC cannot be checked out and the BCC is readonly; you\n  must use working resources to create a new baseline, all of which is then\n  merged into the BCC and VCC ]\n\nCheers,\n-g\n\n--\nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-15821263"}, {"subject": "RE: label header (was: Re: Versioning TeleConf Agenda, 4/6/01 (Fr  iday) 12-1pm  EST", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-15830637"}, {"subject": "RE: checked-out VCC (was: Re: Versioning TeleConf Agenda, 4/6/01   (Friday) 12-1pm EST", "content": "In versioning, a good way of determining what the \"state\" of a\nversion-controlled resource consists of,\nis to create a version of it, and see what is stored in that\nversion.  If you create a version (i.e. baseline) of a version-controlled\nconfiguration, you see a snapshot of the state of all members of\nthe configuration rooted at the baseline-controlled collection.\nI believe this is a compelling argument for the statement that\nthe state of the version-controlled configuration is the state of\nthe configuration rooted at the baseline-controlled collection\n(also, that's what the protocol says :-).\n\nNote that Greg and Edgar are making a different argument:\nthey agree that the state of the version-controlled configuration\nis the state of the configuration rooted at the baseline-controlled\ncollection, but they argue that protocol should be changed to say\nthat the baseline-controlled collection\nshould not be modifiable while version-controlled configuration is\nchecked in (the protocol currently makes no such requirement).\nI'll respond to that in a separate message.\n\nCheers,\nGeoff\n\n-----Original Message-----\nFrom: Tim_Ellison@uk.ibm.com [mailto:Tim_Ellison@uk.ibm.com]\nSent: Wednesday, April 11, 2001 4:42 AM\nTo: ietf-dav-versioning@w3.org\nSubject: Re: checked-out VCC (was: Re: Versioning TeleConf Agenda,\n4/6/01 (Friday) 12-1pm EST)\n\n\n\n\nI guess it just depends on which perspective you take.\nIf you are looking at it from the baseline point of view then the\nversion-controlled configuration should remain checked-in, but if you are\nlooking at it from the baseline-controlled configuration then it should\nremain checked out.\n\nIt can be argued either way, but I think of a version-controlled\nconfiguration as being 'more closely associated with' the baseline -- but\ndon't ask me to give a good reason<g>\nSo I would expect the version-controlled configuration to be in a\nchecked-in state for most of the time, then be checked out and checked in\nto capture the new baseline (i.e. the opposite of the proposal).\n\nRegards,\nTim\n\nGreg wrote:\n\n\nOn Mon, Apr 09, 2001 at 01:19:58PM -0400, Clemm, Geoff wrote:\n> A version-controlled configuration is always associated with a\n> baseline-controlled collection (and is used to capture the state\n> of the configuration rooted at that baseline-controlled collection).\n> Since you can always check-out/modify/check-in the members of the\n> baseline-controlled collection, this effectively lets you modify\n> that membership of that baseline-controlled collection, unconstrained\n> by the current state of the associated version-controlled configuration.\n\nIn the above description, you're modifying the baseline-controlled\ncollection (BCC). You aren't modifying the VCC.\n\nI still see no point in putting the VCC in a permanently-checked-out state.\n\nIf you're concerned about consistency between the BCC and the baseline\nreferred to by the checked-in VCC, then the answer is to make the BCC\nreadonly. Not to say the VCC is always checked out.\n\nChecking out the VCC would then allow the BCC to be modified. I have no\nopinion on whether a server can always (force) a VCC to remain checked out.\nBut the spec should not mandate that situation.\n\n[ in Subversion, the VCC cannot be checked out and the BCC is readonly; you\n  must use working resources to create a new baseline, all of which is then\n  merged into the BCC and VCC ]\n\nCheers,\n-g\n\n--\nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-15838026"}, {"subject": "RE: label header (was: Re: Versioning TeleConf Agenda, 4/6/01 (Fr   iday) 12-1pm EST", "content": "I agree that nobody is trying suggesting that we try and solve the\nsemantics of common version labeling requirements.\n\nOn the other hand, I believe it is a reasonable expectation on the\npart of the user that if they declare a label in the English language\n(and indicate as much with an attribute on that label), that this\ndefinition be respected, and that a request for that label not come\nback with some non-English byte string that happens to match.\nSimilarly, any other attribute declared on that label should be respected.\n\nSo unless we define an \"XML attribute encoding\" syntax for the\nLabel header (which I strongly advocate we not do), the Label\nheader will be missing key information needed for a correct\nlabel match to be performed.\n\nCheers,\nGeoff\n\n-----Original Message-----\nFrom: Tim_Ellison@uk.ibm.com [mailto:Tim_Ellison@uk.ibm.com]\nSent: Wednesday, April 11, 2001 4:21 AM\nTo: ietf-dav-versioning@w3.org\nSubject: RE: label header (was: Re: Versioning TeleConf Agenda, 4/6/01\n(Fr iday) 12-1pm EST)\n\n\n\n\nI'll just restate my position for the record.\n\nI want to keep the label header and don't think that labels should be\nlanguage encoded.  Using a well defined encoding we can match on labels\nsufficiently well (canonicalizing if necessary) and that is all that we are\nrequired to do.\n\nThe issue of two strings being interpreted differently in different\nlanguages is bogus.  There are strings in a single language that are\nambiguous and I don't think anyone is suggesting that we try and solve the\nsemantics of common version labeling requirements!  Others have already\ndescribed situations of languages permitting variations on spelling etc. of\nthe same word.  We just don't need to go there -- a label is just a string.\n\nThe use of the Label: header is useful for operations on a single resource,\nand invaluable for operations on groups of resources that are labeled with\na single label.\n\nI'm in favour of keeping the label header as is.\n\nRegards,\nTim\n\n\n\n", "id": "lists-005-15849649"}, {"subject": "RE: label header (was: Re: Versioning TeleConf Agenda, 4/6/01 (Fr    iday) 12-1pm EST", "content": "Geoff wrote:\n> I agree that nobody is trying suggesting that we try\n> and solve the semantics of common version labeling requirements.\n\nThat was a flippant comment, sorry.\n\n> On the other hand, I believe it is a reasonable expectation\n> on the part of the user that if they declare a label in the\n> English language (and indicate as much with an attribute on\n> that label),\n\nhold on, that is what I said -- that we don't describe the label as a\nlanguage attributed value, it is just a string, a sequence of characters\nwith a well defined encoding scheme.\n\n> that this definition be respected, and that a\n> request for that label not come back with some non-English\n> byte string that happens to match.  Similarly, any other\n> attribute declared on that label should be respected.\n\nI think you are very brave to go down this road, and I predict it will end\nin tears.  Are you are seriously suggesting that you will match based on\nlanguage rules?  Maybe just language name?  It is unneccessary and I\nsuggest beyond VCM expectations.\n\n> So unless we define an \"XML attribute encoding\" syntax for\n> the Label header (which I strongly advocate we not do), the\n> Label header will be missing key information needed for a\n> correct label match to be performed.\n\nI agree we do not want any attributes.  I still want the Label: header.\n\nTim\n\n\n\n", "id": "lists-005-15859793"}, {"subject": "RE: checked-out VCC (was: Re: Versioning TeleConf Agenda, 4/6/01    (Friday) 12-1pm EST", "content": "Geoff wrote:\n> In versioning, a good way of determining what the \"state\"\n> of a version-controlled resource consists of, is to create\n> a version of it, and see what is stored in that version.\n\n'suppose that depends on your definition of 'good'.  Since we are talking\nabout configurations it could be a good way of using up lots of server\ncycles and disk space.\nIn general it should be possible to just query the state of the\nversion-controlled resource directly without having to make a version of\nit.  (I could take a photo of you to see what you look like, but if you are\nthere for the photo...)\n\n> If you create a version (i.e. baseline) of a version-controlled\n> configuration, you see a snapshot of the state of all\n> members of the configuration rooted at the baseline-controlled\n> collection.\n\nThis is true.\n\n> I believe this is a compelling argument for the\n> statement that the state of the version-controlled configuration\n> is the state of the configuration rooted at the baseline-\n> controlled collection (also, that's what the protocol says :-).\n\nI agree with the conclusion, but don't see that as a compelling argument.\n\nThe version-controlled configuration represents the deep hierarchy of\nversion-controlled resources rooted at the baseline-controlled collection,\nand is only necessary to distinguish operations on the configuration from\nthose on the (shallow) root collection.  Had we chosen some other mechanism\nthen there would be no need for the version-controlled configuration.\n\nJust as a version-controlled resource can differ from the checked-out\nversion to which it refers, there is every reason to believe that the\nversion-controlled configuration can differ from the baseline.  This\nimplies (to me) that it may be in the checked-out state for extended\nperiods of time.  In fact, it would be unusual for it to be checked-in\nother than during the baseline snapshot.\n\n> Note that Greg and Edgar are making a different argument:\n> they agree that the state of the version-controlled configuration\n> is the state of the configuration rooted at the baseline-\n> controlled collection,\n\nWe all agree.\n\n> but they argue that protocol should\n> be changed to say that the baseline-controlled collection\n> should not be modifiable while version-controlled configuration\n> is checked in (the protocol currently makes no such requirement).\n> I'll respond to that in a separate message.\n\nI understand their position, but if we believe that the version-controlled\nconfiguration resource is a 'proxy' for operations on the configuration\n(rather than _being_ the resources in the configuration), it is\nunneccessary for it to be a version-controlled resource at all.  Maybe it\nshould not be checked-out or checked-in, but subject to some other method\nthat means 'take a baseline shapshot'.  Could be BASELINE, or whatever.\n\nTim\n\n\n\n", "id": "lists-005-15869143"}, {"subject": "Re: label header (was: Re: Versioning TeleConf Agenda, 4/6/01 (Fr    iday) 12-1pm EST", "content": "I believe my position matches Tim's precisely.\n\nI see no reason to believe that a label is anything other than a sequence of\ncharacters (in some specified encoding). I do not see that language has any\nrelevance to the topic.\n\nLet's please keep the Label: header.\n\nCheers,\n-g\n\nOn Wed, Apr 11, 2001 at 02:18:12PM +0100, Tim_Ellison@uk.ibm.com wrote:\n> \n> \n> Geoff wrote:\n> > I agree that nobody is trying suggesting that we try\n> > and solve the semantics of common version labeling requirements.\n> \n> That was a flippant comment, sorry.\n> \n> > On the other hand, I believe it is a reasonable expectation\n> > on the part of the user that if they declare a label in the\n> > English language (and indicate as much with an attribute on\n> > that label),\n> \n> hold on, that is what I said -- that we don't describe the label as a\n> language attributed value, it is just a string, a sequence of characters\n> with a well defined encoding scheme.\n> \n> > that this definition be respected, and that a\n> > request for that label not come back with some non-English\n> > byte string that happens to match.  Similarly, any other\n> > attribute declared on that label should be respected.\n> \n> I think you are very brave to go down this road, and I predict it will end\n> in tears.  Are you are seriously suggesting that you will match based on\n> language rules?  Maybe just language name?  It is unneccessary and I\n> suggest beyond VCM expectations.\n> \n> > So unless we define an \"XML attribute encoding\" syntax for\n> > the Label header (which I strongly advocate we not do), the\n> > Label header will be missing key information needed for a\n> > correct label match to be performed.\n> \n> I agree we do not want any attributes.  I still want the Label: header.\n> \n> Tim\n\n-- \nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-15879364"}, {"subject": "RE: label header (was: Re: Versioning TeleConf Agenda, 4/6/01 (Fr    iday) 12-1pm EST", "content": "> I believe my position matches Tim's precisely.\n>\n> I see no reason to believe that a label is anything other than a\n> sequence of characters (in some specified encoding). I do not see that\n> language has any relevance to the topic.\n\nA label is a human-readable string. To correctly display an arbitrary\nsequence of Unicode characters, a computer must know the language of the\nstring. This allows the computer to, for example, draw the characters left\nto right, or right to left, as appropriate.\n\nThus the language tag is necessary.\n\nHowever, this is all predicated on the label being just a single string.\nWhat if label is changed into the pair:\n\n(label_id, label_displayname)\n\nComparisons could be performed against the label_id (which is a\ncomputer-generated ID), and the label displayname could be shown to the\nuser. This would keep the human readability, while avoiding the i18n string\ncomparison problems. Header marshalling would be ugly, but feasible.\n\n- Jim\n\n\n\n", "id": "lists-005-15889717"}, {"subject": "RE: checked-out VCC (was: Re: Versioning TeleConf Agenda, 4/6/01     (Friday) 12-1pm EST", "content": "   From: Tim_Ellison@uk.ibm.com [mailto:Tim_Ellison@uk.ibm.com]\n\n   Geoff wrote:\n   > In versioning, a good way of determining what the \"state\"\n   > of a version-controlled resource consists of, is to create\n   > a version of it, and see what is stored in that version.\n\n   'suppose that depends on your definition of 'good'.  Since we are talking\n   about configurations it could be a good way of using up lots of server\n   cycles and disk space.\n\nWhen I said \"a good way of determining\", I meant from a logical\nperspective, i.e. what would be a consistent way of interpreting\nthe protocol.\n\n   In general it should be possible to just query the state of the\n   version-controlled resource directly without having to make a version of\n   it.  (I could take a photo of you to see what you look like, but if you\nare\n   there for the photo...)\n\nThe point here is that you logically have two objects located at the\nsame URL; namely, a collection and a configuration.  The\nversion-controlled collection contains the \"depth:0\" (or \"shallow\")\nstate at that URL, while the version-controlled configuration contains\nthe \"depth:infinity\" (or \"deep\") state of the configuration rooted at\nthat same URL.\n\nSo \"the state\" of the version-controlled configuration is the\ndepth:infinity state of its associated baseline-controlled collection.\n\n   > If you create a version (i.e. baseline) of a version-controlled\n   > configuration, you see a snapshot of the state of all\n   > members of the configuration rooted at the baseline-controlled\n   > collection.\n\n   This is true.\n\nAt least we agree on that (:-).\n\n   > I believe this is a compelling argument for the\n   > statement that the state of the version-controlled configuration\n   > is the state of the configuration rooted at the baseline-\n   > controlled collection (also, that's what the protocol says :-).\n\n   I agree with the conclusion, but don't see that as a compelling argument.\n\nWell, I guess it doesn't matter what road you take, as long as we\nget to the same destination (:-).\n\n   The version-controlled configuration represents the deep hierarchy of\n   version-controlled resources rooted at the baseline-controlled\ncollection,\n   and is only necessary to distinguish operations on the configuration from\n   those on the (shallow) root collection.  Had we chosen some other\nmechanism\n   then there would be no need for the version-controlled configuration.\n\nI agree.\n\n   Just as a version-controlled resource can differ from the checked-out\n   version to which it refers, there is every reason to believe that the\n   version-controlled configuration can differ from the baseline.\n\nI agree.\n\n   This\n   implies (to me) that it may be in the checked-out state for extended\n   periods of time.  In fact, it would be unusual for it to be checked-in\n   other than during the baseline snapshot.\n\nAnd if you explicitly use the DAV:keep-checked-out parameter to CHECKIN,\nit never is in the checked-in state.  But I agree that the \"implicit\npresence\nof DAV:keep-checked-out\" is rather anomalous.\n\n   > Note that Greg and Edgar are making a different argument:\n   > they agree that the state of the version-controlled configuration\n   > is the state of the configuration rooted at the baseline-\n   > controlled collection,\n\n   We all agree.\n\nOK, then all of us reached that common destination, so that's a good thing!\n\n   > but they argue that protocol should\n   > be changed to say that the baseline-controlled collection\n   > should not be modifiable while version-controlled configuration\n   > is checked in (the protocol currently makes no such requirement).\n   > I'll respond to that in a separate message.\n\n   I understand their position, but if we believe that the\nversion-controlled\n   configuration resource is a 'proxy' for operations on the configuration\n   (rather than _being_ the resources in the configuration), it is\n   unneccessary for it to be a version-controlled resource at all.  Maybe it\n   should not be checked-out or checked-in, but subject to some other method\n   that means 'take a baseline shapshot'.  Could be BASELINE, or whatever.\n\nYes, that's another approach (and one that we even used in a few drafts\nquite a while ago).  The problem was that we had to explain how this\nnon-version-controlled resource was creating something that had all the\nproperties of a version history (where each version in the version \nhistory was a baseline).   We did so, but it required duplicating\nmost of the versioning semantics text, just replacing \"version\" with\nbaseline everywhere.\n\nPerhaps the easiest thing to do is to add an \"always-checkout\" value\nto the DAV:auto-version property, where this checks out the version-\ncontrolled resource on any update, but leaves it checked out until\nan explicit \"CHECKIN\" is invoked.  A server that wants to interoperate\nwith a CHECKIN-aware but baseline-unaware client, could then just set\n\"always-checkout\" on the version-controlled configuration.\nDoes this sound better than the \"VCC is always checked out\" approach?\nIt does address the issue with minimal impact on the protocol.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-15898588"}, {"subject": "checked-out VCC: A new proposa", "content": "At the very end of my last response to Tim on this topic,\nI proposed an alternative approach instead of \"always keep it checked-out\".\nSince this appeared at the end of a long message, I thought it would\nbe better to state the new proposal in a separate message (i.e. this one).\n\nTo summarize the issue: In order to allow a baseline-unaware\nversioning client to interoperate with version-controlled resources\nthat are under baseline control, it is important to allow a client to\nto check-out/check-in any version-controlled member of a\nbaseline-controlled collection.  My previous proposal to address this\nis to require that a version-controlled configuration is always in the\nchecked-out state.  One can make a good argument for why there is\nlittle/no value in having the version-controlled configuration ever be\nin the checked-in state, but rather than make that argument, I believe\nthere is an alternative that provides a more regular model, and that will\nbe more palatable to those who have objected to the \"it's always\nchecked-out\" approach.\n\nThe new proposal is to add a new value for the DAV:auto-version\nproperty, namely the \"DAV:always-checkout\" value.  When this value is\nset for a checked-in version-controlled resource, that resource will\nautomatically be checked out whenever it is updated, but must be\nexplicitly checked in (with a subsequent CHECKIN request) to create\na new version (or in the case of a configuration, to create a new\nbaseline).\n\nThis addresses the baseline-unaware versioning client issue, because\na baselining server that wants to be friendly to such a client will\nset the DAV:autoversion property of a version-controlled configuration\nto be DAV:always-checkout.  Standard checked-out/checked-in semantics\nwill then apply to the version-controlled configuration.\n\nAny objections?\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-15911639"}, {"subject": "Re: checked-out VCC: A new proposa", "content": "I agree that this conforms to the 'minimum change to the spec' criteria --\nand it is even a defendable position (bonus!)\n\n...I was getting a little edgy reading your last note when you started\ntalking about Depth: 0 and Depth: infinity headers <g>\n\nI do not object.\n\nRegards,\nTim\n\n----------------------------\nGeoff wrote:\n\nAt the very end of my last response to Tim on this topic,\nI proposed an alternative approach instead of \"always keep it checked-out\".\nSince this appeared at the end of a long message, I thought it would\nbe better to state the new proposal in a separate message (i.e. this one).\n\nTo summarize the issue: In order to allow a baseline-unaware\nversioning client to interoperate with version-controlled resources\nthat are under baseline control, it is important to allow a client to\nto check-out/check-in any version-controlled member of a\nbaseline-controlled collection.  My previous proposal to address this\nis to require that a version-controlled configuration is always in the\nchecked-out state.  One can make a good argument for why there is\nlittle/no value in having the version-controlled configuration ever be\nin the checked-in state, but rather than make that argument, I believe\nthere is an alternative that provides a more regular model, and that will\nbe more palatable to those who have objected to the \"it's always\nchecked-out\" approach.\n\nThe new proposal is to add a new value for the DAV:auto-version\nproperty, namely the \"DAV:always-checkout\" value.  When this value is\nset for a checked-in version-controlled resource, that resource will\nautomatically be checked out whenever it is updated, but must be\nexplicitly checked in (with a subsequent CHECKIN request) to create\na new version (or in the case of a configuration, to create a new\nbaseline).\n\nThis addresses the baseline-unaware versioning client issue, because\na baselining server that wants to be friendly to such a client will\nset the DAV:autoversion property of a version-controlled configuration\nto be DAV:always-checkout.  Standard checked-out/checked-in semantics\nwill then apply to the version-controlled configuration.\n\nAny objections?\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-15921406"}, {"subject": "RE: checked-out VCC: A new proposa", "content": "   From: Tim_Ellison@uk.ibm.com [mailto:Tim_Ellison@uk.ibm.com]\n   Subject: Re: checked-out VCC: A new proposal\n\n   I agree that this conforms to the 'minimum change to the spec'\n   criteria -- and it is even a defendable position (bonus!)\n\n   I do not object.\n\nWhile investigating the new \"auto-checkout-manual-checkin\" value for\nDAV:auto-version, it appeared to me that things could be made\nsignificantly clearer if we replace the DAV:auto-version property with\na DAV:auto-checkout and DAV:auto-checkin property.  This lets us\nspecify auto-checkout behavior independently from auto-checkin\nbehavior, which is what we need/want for \"auto-checkout-manual-checkin\".\n\nIs this OK?\n\nCheers,\nGeoff\n\n--------------------------------------\n\n\n3.2.2DAV:auto-checkout \n\nWhen a modification request (such as PUT/PROPPATCH) is applied to a\nchecked-in version-controlled resource, if the resource is\nnon-write-locked and the DAV:auto-checkout property is\nDAV:unlocked-update, or if the resource is write-locked and the\nDAV:auto-checkout property is DAV:locked-update, the request is\nautomatically preceded by a checkout operation.\n\nA server MAY refuse to allow the value of the DAV:auto-checkout\nproperty to be modified.\n\n<!ELEMENT auto-checkout ANY>\nANY value: A sequence of elements with at most one\nDAV:unlocked-update element and at most one DAV:locked-update\nelement.\n<!ELEMENT unlocked-update EMPTY>\n<!ELEMENT locked-update EMPTY>\n\n3.2.3DAV:auto-checkin \n\nWhen a modification request (such as PUT/PROPPATCH) on a checked-in\nversion-controlled resource has been automatically preceded by a\ncheckout operation, if the resource is non-write-locked and the\nDAV:auto-checkin property is DAV:unlocked-update, or if the resource\nis write-locked and the DAV:auto-checkin property is\nDAV:locked-update, the request is automatically followed by a checkin\noperation.\n\nIf a write-locked version-controlled resource was automatically\nchecked out because the DAV:auto-checkout property was\nDAV:locked-update, a removal of the write lock (such as from an UNLOCK\nor lock timeout) is automatically preceded by a checkin operation.\n\nA server MAY refuse to allow the value of the DAV:auto-checkin\nproperty to be modified.\n\n<!ELEMENT auto-checkin ANY>\nANY value: A sequence of elements with at most one\nDAV:unlocked-update element, at most one DAV:locked-update\nelement, and at most one DAV:unlock element.\n<!ELEMENT unlocked-update EMPTY>\n<!ELEMENT locked-update EMPTY>\n\n\n\n", "id": "lists-005-15930627"}, {"subject": "CHECKOUT and the working-resource featur", "content": "The CHECKOUT method is defined both in the \"checkout\" feature and\nin the \"working resource\" feature.  In the \"checkout\" feature, you\ncan only apply CHECKOUT to a version-controlled resource.  In the\n\"working-resource\" feature, you can only apply CHECKOUT to a version.\n\nSo both features have a CHECKOUT method, but they are applied to \ndifferent kinds of resources.  In the client workspace package,\nyou can only apply CHECKOUT to a version (which results in a\nworking resource).\n\nCheers,\nGeoff\n\n\n-----Original Message-----\nFrom: Tim_Ellison@uk.ibm.com [mailto:Tim_Ellison@uk.ibm.com]\n\n> client workspace:\n>    core\n>    working-resource\n>    update\n\nHow do you create a working resource if you don't have checkout?\n\n\n\n", "id": "lists-005-15940625"}, {"subject": "RE: checked-out VCC: A new proposa", "content": "Sure -- it will keep the table draw-ers in employment<g>\n\nRegards,\nTim\n--------------\nGeoff wrote:\n\n   From: Tim_Ellison@uk.ibm.com [mailto:Tim_Ellison@uk.ibm.com]\n   Subject: Re: checked-out VCC: A new proposal\n\n   I agree that this conforms to the 'minimum change to the spec'\n   criteria -- and it is even a defendable position (bonus!)\n\n   I do not object.\n\nWhile investigating the new \"auto-checkout-manual-checkin\" value for\nDAV:auto-version, it appeared to me that things could be made\nsignificantly clearer if we replace the DAV:auto-version property with\na DAV:auto-checkout and DAV:auto-checkin property.  This lets us\nspecify auto-checkout behavior independently from auto-checkin\nbehavior, which is what we need/want for \"auto-checkout-manual-checkin\".\n\nIs this OK?\n\nCheers,\nGeoff\n\n--------------------------------------\n\n\n3.2.2           DAV:auto-checkout\n\nWhen a modification request (such as PUT/PROPPATCH) is applied to a\nchecked-in version-controlled resource, if the resource is\nnon-write-locked and the DAV:auto-checkout property is\nDAV:unlocked-update, or if the resource is write-locked and the\nDAV:auto-checkout property is DAV:locked-update, the request is\nautomatically preceded by a checkout operation.\n\nA server MAY refuse to allow the value of the DAV:auto-checkout\nproperty to be modified.\n\n<!ELEMENT auto-checkout ANY>\nANY value: A sequence of elements with at most one\nDAV:unlocked-update element and at most one DAV:locked-update\nelement.\n<!ELEMENT unlocked-update EMPTY>\n<!ELEMENT locked-update EMPTY>\n\n3.2.3           DAV:auto-checkin\n\nWhen a modification request (such as PUT/PROPPATCH) on a checked-in\nversion-controlled resource has been automatically preceded by a\ncheckout operation, if the resource is non-write-locked and the\nDAV:auto-checkin property is DAV:unlocked-update, or if the resource\nis write-locked and the DAV:auto-checkin property is\nDAV:locked-update, the request is automatically followed by a checkin\noperation.\n\nIf a write-locked version-controlled resource was automatically\nchecked out because the DAV:auto-checkout property was\nDAV:locked-update, a removal of the write lock (such as from an UNLOCK\nor lock timeout) is automatically preceded by a checkin operation.\n\nA server MAY refuse to allow the value of the DAV:auto-checkin\nproperty to be modified.\n\n<!ELEMENT auto-checkin ANY>\nANY value: A sequence of elements with at most one\nDAV:unlocked-update element, at most one DAV:locked-update\nelement, and at most one DAV:unlock element.\n<!ELEMENT unlocked-update EMPTY>\n<!ELEMENT locked-update EMPTY>\n\n\n\n", "id": "lists-005-15948344"}, {"subject": "Versioning Package", "content": "I did another pass through the \"packages\" description.\nIn particular, I gave the common intersection of all\npackages (which is just the \"version-control\" feature)\nits own package name (the \"core-versioning\" package).\n\nThere is more information on the \"server workspace\" and\n\"client workspace\" differences in the \"workspace feature\"\nand \"working resource feature\" descriptions.\n\nDoes this look OK?\n\nCheers,\nGeoff\n\n\n-------------------------------------------------------------\n\n2.1Basic Versioning Packages\n\nAlthough a server MAY support any combination of versioning features,\nin order to minimize the complexity of a WebDAV basic versioning\nclient, a WebDAV basic versioning server SHOULD support one of the\nfollowing feature sets, or \"packages\":\n\nCore-Versioning Package:\n  version-control\n\nBasic-Server-Workspace Package:\n  version-control, version-history, checkout, workspace\n\nBasic-Client-Workspace Package:\n  version-control, update, working-resource\n\nThe core-versioning package supports linear versioning by both\nversioning-aware and versioning-unaware client.  A versioning-aware\nclient can use reports and properties to access previous versions of a\nversion-controlled resource.\n\nThe basic workspace packages support parallel development of\nversion-controlled resources.\n\nIn the basic-server-workspace package, all persistent state is\nmaintained on the server.  Parallel development is supported by\nallocating multiple \"workspaces\" on the server that display different\nconfigurations of the shared resources.\n\nIn the basic-client-workspace package, each client maintains the\npersistent state for its configuration of the shared resources.\nConcurrent updates to the shared resources are provided by allocating\nmultiple \"working resources\" on the server for a single\nversion-controlled resource.\n\nA server that supports both basic workspace packages will interoperate\nwith all basic versioning clients.\n\n...\n\n9.3Advanced Versioning Packages\n\nAlthough a server MAY support any combination of advanced versioning\nfeatures, in order to minimize the complexity of a WebDAV advanced\nversioning client, a WebDAV advanced versioning server SHOULD support\none of the following packages:\n\nAdvanced-Server-Workspace Package:\n  Basic-Server-Workspace package plus all advanced features\n\nAdvanced-Client-Workspace Package:\n  Basic-Client-Workspace Package plus all advanced features\n\nThe advanced-server-workspace package supports advanced versioning\ncapabilities for a client with no persistent state.  The\nadvanced-client-workspace package supports advanced versioning\ncapabilities for a client that maintains configuration state on the\nclient.  A server that supports both advanced workspace packages will\ninteroperate with all versioning clients.\n\n\n\n", "id": "lists-005-15958507"}, {"subject": "Re (2): label heade", "content": "Some days late now but nevertheless I would like to give my 0.02$:\n\n\"Jim Whitehead\" <ejw@cse.ucsc.edu> wrote:\n> A label is a human-readable string. To correctly display an arbitrary\n> sequence of Unicode characters, a computer must know the language of the\n> string. This allows the computer to, for example, draw the characters left\n> to right, or right to left, as appropriate.\n> \n> Thus the language tag is necessary.\nThe problem that a label can be a four letter word in another language :-)\ndoesn't strike me as very relevant in practice.\nAlso the drawing direction of the characters is implicitly encoded\nin the characters themselves, isn't it ?\nSo I think that a label as a simple string of UNICODE characters would be\ngood enough and simple to implement too.\nNot aesthetically perfect, but a working solution if you want to draw people\nfrom RCS, CVS, Clearcase to name a few, which heavily rely on labels.\nSo I would keep the label header as a simple UNICODE string.\n\nCheers, Edgar \n-- \nedgar@edgarschwarz.de                    http://www.edgarschwarz.de\n*          DOSenfreie Zone.        Running Native Oberon.         *\nMake it as simple as possible, but not simpler.     Albert Einstein\n\n\n\n", "id": "lists-005-15968340"}, {"subject": "Re (2): checked-out VCC: A new proposa", "content": "\"Clemm, Geoff\" <gclemm@rational.com> wrote:\n> While investigating the new \"auto-checkout-manual-checkin\" value for\n> DAV:auto-version, it appeared to me that things could be made\n> significantly clearer if we replace the DAV:auto-version property with\n> a DAV:auto-checkout and DAV:auto-checkin property.  This lets us\n> specify auto-checkout behavior independently from auto-checkin\n> behavior, which is what we need/want for \"auto-checkout-manual-checkin\".\nDAV:auto-checkout and DAV:auto-checkin sound sensible. So if this means\nthat for a baseline-aware client the version-controlled-configuration\nnormally is in a checked-in state and to help non baseline-aware\nclients the server can use these these properties it's okay with me.\n\n\n\"Clemm, Geoff\" <gclemm@rational.com> wrote:\n> The point here is that you logically have two objects located at the\n> same URL; namely, a collection and a configuration.\nExactly. This unavoidable dualism is the root of our problems.\n\n> The version-controlled collection contains the \"depth:0\" (or \"shallow\")\n> state at that URL, while the version-controlled configuration contains\n> the \"depth:infinity\" (or \"deep\") state of the configuration rooted at\n> that same URL.\n> So \"the state\" of the version-controlled configuration is the\n> depth:infinity state of its associated baseline-controlled collection.\nSo we decided to take the shallow variant as the collection version\nand took 'configuration' and 'baseline' for the deep variant.\nI still wonder wheter it would be possible to drop the terms 'configuration'\nand 'baseline'.\nJust let's define a version of a collection as the deep variant which you\nget by a plain vanilla VERSION-CONTROL on the collection.\nThen you have 'basic' resources (no collections) with their versions and\ncollections (meaning the whole tree) and their versions.\nI would do that because I'm not yet persuaded whether we really need the (shallow)\nversion-controlled-collection. It's rationale seems to be a little bit\ntechnically based. It is believed that it is necessary to untangle working\nwith activities, merging and workspaces. So it's not a feature of it's own\nvalue but only for support of other features.\nI have the feeling that this activity problem could be solved in another way.\nTo try to understand the problem I will reread the stuff on activities,\nmerge, version-controlled-collection and workspaces (rather entangled :-)\na couple of times. Perhaps it will help.\n\nThen an important point for me where I didn't get any feedback yet. I proposed to\ndefine a configuration (to use the current term) as the tree beginning at root\ncollection EXCLUDING BASELINE-CONTROLLED sub-collections. This would be a\nvery small change in the protocol and also be cheap in implementation I guess.\nBut nevertheless thats a feature another SW group and I found missing when\nwe evaluated Clearcase a while ago. Clearcase Components are shallow constructs\nlike configurations (I hope it's allowed to mention a tool here to illustrate\nmy point).\nMy experience with projects beginning with a couple of thousand files and heavy\nreuse of code between different executables tells me that hierachically structured\ncomponents (Here called configurations) are a natural way to work.\n\nAll in all I can live with the existing terms. Better alternatives to cope with\nthe abovementioned dualism aren't easy to find.\nWhat's important are the features I get and as I see it now they are there with the\nexception of my last point.\n\nCheers and happy Easter, Edgar\n\n-- \nedgar@edgarschwarz.de                    http://www.edgarschwarz.de\n*          DOSenfreie Zone.        Running Native Oberon.         *\nMake it as simple as possible, but not simpler.     Albert Einstein\n\n\n\n", "id": "lists-005-15976606"}, {"subject": "RE: label header (was: Re: Versioning TeleConf Agenda, 4/6/01 (Friday) 12-1pm  EST", "content": "Patrik,\nI took a look at the document referenced below \n(http://www.ietf.org/internet-drafts/draft-ietf-idn-nameprep-03.txt), and \nit definitely indicates the issues associated with internationalizing \nstrings. Here's a brief summary:\n\nThe steps for preparing IDN domain names are:\n\n1. Input the domain name through some mechanism (outside the scope of the \ndocument)\n\n2. Do transformations on the input domain name for case folding, hyphen \nmapping, etc.\n\n3. Normalize the result (see \nhttp://www.unicode.org/unicode/reports/tr15/tr15-21.html)\n\n4. Check for prohibited characters and return an error if any. Most of \nthese characters are things that cannot be displayed properly.\n\n5. Resolve the resultant domain name\n\nMany of the transformations applied above are specific to domain name \nsemantics. Labels in DeltaV have no associated semantics. They are only \nkeys that are to be used by the user and client applications any way they \nwant. The server applies no semantics to labels other than they are unique \namong the revisions of the same versioned resource. Uniqueness is \ndetermined strictly by byte-by-byte comparisons, not display names. \nRevisions have a separate display name property for this purpose.  There \nare no language transformations done on labels either. We make no attempt \nto process them in any way.\n\nNow if labels are used for display purposes, which many clients will \ncertainly do, we may run into problems with normalization since it is \npossible that different labels could be rendered the same, or different \nclients could take the same rendering and submit different label headers. \nFor maximum flexibility, we would like to leave such concerns to the \nclient applications that are providing the label semantics rather than \ndoing something in the protocol that might not meet all client needs. This \nis different than preparing internationalized domain names, because the \nsemantics are being specified.\n\nA number of members of the DeltaV working group (myself included) have \nexpressed a desire to keep the label header. I think we're tentatively OK \non using UTF-8 encoded strings, but I would welcome any further discussion \non the topic to be sure we're not going to regret the decision. If simple \nbyte-by-byte comparisons are not sufficient, we could attempt to solve the \nproblem through normalization and mapping rather than simply removing the \nlabel header.\n\n\n\n\n\nPatrik F?ltstr?m <paf@cisco.com>\n04/10/2001 04:02 PM\n\n \n        To:     Jim Amsden <jamsden@us.ibm.com>, ietf-dav-versioning@w3.org, \nned@innosoft.com\n        cc: \n        Subject:        RE: label header (was: Re: Versioning TeleConf Agenda, 4/6/01 (Friday) \n12-1pm EST)\n\n \n\n--On 01-04-10 13.21 -0400 Jim Amsden <jamsden@us.ibm.com> wrote:\n\n> Perhaps we could get some clarification from the Application area\n> directors if this is something we need to address or not?  I'd prefer to\n> leave the label header in the spec as it semms that selecting a version\n> by label is simple and reasonable functionality that is common practice,\n> and has been in the spec for quite some time. However if it leads down\n> unnecessary rat-holes, I could be convinced to delete it. Ned? Patrik? \n\nIF you do comparisons of any kind, you MUST define how a match is to\ndefined.\n\nWhen comparing Unicode characters, my take is that you have to do things\nlike the IDN wg is talking about. See for example\ndraft-ietf-idn-nameprep-03.txt which talks about the operations you have \nto\ndo on two strings _before_ you do the actual comparison.\n\nSo, comparing human readable text is hard, very hard, but possible.\n\n   paf\n\n\n\n", "id": "lists-005-15988083"}, {"subject": "Label header i18n, and RFC 227", "content": "> Also the drawing direction of the characters is implicitly encoded\n> in the characters themselves, isn't it ?\n\nFrom what I understand, not necessarily.\n\n> So I think that a label as a simple string of UNICODE characters would be\n> good enough and simple to implement too.\n> Not aesthetically perfect, but a working solution if you want to\n> draw people\n> from RCS, CVS, Clearcase to name a few, which heavily rely on labels.\n> So I would keep the label header as a simple UNICODE string.\n\nI am not opposed to labels. I just believe labels should be tagged with an\nidentifier of the language of the label text.\n\nThis is my best understanding of the intent of the IETF Policy on Character\nSets and Languages (described in RFC 2277, which is also IETF Best Common\nPractice (BCP) 18).  Section 4.2 of RFC 2277 is very explicit:\n\n4.2.  Requirement for language tagging\n\n   Protocols that transfer text MUST provide for carrying information\n   about the language of that text.\n\n   Protocols SHOULD also provide for carrying information about the\n   language of names, where appropriate.\n\n   Note that this does NOT mean that such information must always be\n   present; the requirement is that if the sender of information wishes\n   to send information about the language of a text, the protocol\n   provides a well-defined way to carry this information.\n\n\nTo resolve this issue, DeltaV needs to either:\n\n(a) Develop a plausible explanation for why label information is not human\nreadable text.\n\n(b) Explain why label text, unlike all other human readable text, does not\nrequire language tagging.\n\n(c) Add a language tag to the label.\n\nIn my opinion, choices (a) and (b) are high-risk, since they have a higher\nprobability of causing the DeltaV draft to be sent back to the working group\nto resolve the i18n issues associated with labels.  Choice (c) is low-risk,\nsince it meets the letter and spirit of RFC 2277.\n\nLet me also note that the author of RFC 2277, Harald Alvestrand, is now the\nChair of the IETF, which I interpret as indicating that the IETF's\ncommitment to internationalization continues to be quite strong.\n\n- Jim\n\n\n\n", "id": "lists-005-16001567"}, {"subject": "Re: Label header i18n, and RFC 227", "content": "On Mon, Apr 16, 2001 at 09:24:19AM -0700, Jim Whitehead wrote:\n>...\n> To resolve this issue, DeltaV needs to either:\n> \n> (a) Develop a plausible explanation for why label information is not human\n> readable text.\n> \n> (b) Explain why label text, unlike all other human readable text, does not\n> require language tagging.\n> \n> (c) Add a language tag to the label.\n> \n> In my opinion, choices (a) and (b) are high-risk, since they have a higher\n> probability of causing the DeltaV draft to be sent back to the working group\n> to resolve the i18n issues associated with labels.  Choice (c) is low-risk,\n> since it meets the letter and spirit of RFC 2277.\n\nFair enough.\n\nRather than nuke the header, I propose that we take advantage of the\nstandard format for headers:\n\n  Label: name; language=\"en-us\"\n\nNote that RFC 2616, S3.10 talks about how to specify a language value.\n\nCheers,\n-g\n\n-- \nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-16011384"}, {"subject": "RE: Re (2): checked-out VCC: A new proposa", "content": "   From: Edgar@EdgarSchwarz.de [mailto:Edgar@EdgarSchwarz.de]\n\n   I still wonder wheter it would be possible to drop the terms\n   'configuration' and 'baseline'.  Just let's define a version of a\n   collection as the deep variant which you get by a plain vanilla\n   VERSION-CONTROL on the collection.  Then you have 'basic' resources\n   (no collections) with their versions and collections (meaning the\n   whole tree) and their versions.  I would do that because I'm not\n   yet persuaded whether we really need the (shallow)\n   version-controlled-collection. It's rationale seems to be a little\n   bit technically based. It is believed that it is necessary to\n   untangle working with activities, merging and workspaces. So it's\n   not a feature of it's own value but only for support of other\n   features.  I have the feeling that this activity problem could be\n   solved in another way.  To try to understand the problem I will\n   reread the stuff on activities, merge,\n   version-controlled-collection and workspaces (rather entangled :-)\n   a couple of times. Perhaps it will help.\n\nYes, the rationale for supporting both versions and baselines of\ncollections is based on requirements of activities and merging, but\nsometimes hard problems don't have simple answers (:-).  But I'm\nalways interested in discovering simpler answers to hard problems, so\nplease do keep investigating.\n\n   Then an important point for me where I didn't get any feedback\n   yet. I proposed to define a configuration (to use the current term)\n   as the tree beginning at root collection EXCLUDING\n   BASELINE-CONTROLLED sub-collections. This would be a very small\n   change in the protocol and also be cheap in implementation I guess.\n\nSorry if I didn't make it clearer earlier, but I agree with the point\nyou raise here.  It was a key component of another thread a month or\nso ago (I can't remember the thread title ... Greg started it, I\nbelieve).  The final resolution was that every member of a\nbaseline-controlled collection got its own\nDAV:version-controlled-configuration property.  This clarified that a\nconfiguration does not contain version-controlled members of a nested\nconfiguration, which I believe is what you are asking for here.  You\nuse the DAV:subbaseline-set to add nested configuration baselines to a\nbaseline.\n\n   All in all I can live with the existing terms. Better alternatives\n   to cope with the abovementioned dualism aren't easy to find.\n   What's important are the features I get and as I see it now they\n   are there with the exception of my last point.\n\nGreat!  It looks like you actually get all the features you want,\nsince the latest rev of the spec fixes gives you that last feature\nas well.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-16019187"}, {"subject": "Re: Label header i18n, and RFC 227", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-16029216"}, {"subject": "The Label header, and other issues raised since draft-1", "content": "I believe it is fair to say that based on activity in the mailing\nlist, there appears to be strong support for the Label header within\nthe working group.\n\nAs for the issues raised concerning the Label header:\n\n- Internationalizable display of labels:\n\nThis actually has little to do with the label header, since you don't\nuse the label header to create labels, but rather use the body of the\nLABEL method.  In the body of LABEL method, you can annotate the label\nwith as many internationalization attributes as it wishes, and you\nquery for labels with PROPFIND, which will give you all those\nattributes back.\n\n- Label matching\n\nHere is the area where the Label header does come into play, because\nit is the way several methods will pass in the label to be \"matched\".\nMy impression is that most of the members of the working group that\ncare about labels find a simple byte string matching of the label to\nbe sufficient for their needs.  It is OK for an Englishman to label a\nversion \"gross\", and then have this version be selected by a German\nthat asks for the \"large\" version (i.e.  \"gross\" in German, put please\ndon't get too concerned about the details of this example :-).\n\nThis is no more likely to happen than for some other client to use the\nword \"gross\" in English to mean something other than what the second\nclient had in mind.  In fact, it is probably much *more* likely for\nthe two different English uses of a string to collide, than it is for\nan English use to collide with a German use.\n\nClients that really care about his issue will just use baselines\ninstead of labels, since a baseline selection of a version can never\n\"collide\" with another baseline (which is why I think we should just\nget rid of the label feature altogether, but that's just me :-).\n\nSo if we accept all that, the only thing left to do is to decide which\npackages (if any) will contain the label header.  After staring at\nour current packages (core, basic/advanced client workspaces, and\nbasic/advanced servers workspaces), I believe it makes sense to bundle\nlabels into the \"client workspace\" packages.\n\nMy reasoning is as follows: I believe most client-workspace servers do\nin fact support labels, and Greg (who is known to be producing an\nadvanced-client-workspace server) was one of the vocal supporters of\nlabels.  This makes sense, because although a server-workspace server\ncan just allocate a \"workspace\" when it wants to expose a set of\nrelated versions, a basic client workspace server cannot, and labels\ngive it a simple way to do so.\n\nSo, I propose that we define the label feature as being part of the\nbasic-client-workspace package.  Any objections?\n\nThis means that the proposed resolution of the issues raised since \ndraft 14 are:\n\nThe Variant-Control Feature:\n   Defer it to another spec. focused on variants.\n\nThe Fork-Control Feature:\n   Merge it into the checkout feature.\n\nThe Update Feature:\n   Keep it, and make it part of the basic-client-workspace package\n   (needed so that a new version created by checking in a working\n   resource can be made the \"checked-in\" version of its version\n   controlled resource).\n\nThe Label Feature:\n   Keep it as is (i.e. with the Label header), and make it part of the\n   basic-client-workspace package (so that a client can define a\n   lightweight configuration of versions on the server).\n\nThe \"checked-out version-controlled configuration\" issue:\n   Add a \"checkout-on-update-and-keep-checked-out\" variant to the\n   auto-versioning mechanism.  Also, simplify DAV:auto-version\n   by replacing it with DAV:auto-checkout and DAV:auto-checkin.\n\nPackages:\n   Define 5 packages: core-versioning, basic/advanced-client-workspace,\n   and basic/advanced-server-workspace.\n\nIn other words, the mailing list accepted 3 of the proposals from\nthe Minneapolis meeting, rejected 2 of the proposals from the\nMinneapolis meeting, and accept the latest variant of the one \nissue that originated on the mailing list (auto-checkout of a VCC).\n\nDoes anyone disagree/object to the resolutions described here?\nIf not, I'll write this up as draft-15, and submit it to the IETF\nso that JimA can officially submit it to Ned for the next step\nof the process.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-16036167"}, {"subject": "Re: The Label header, and other issues raised since draft-1", "content": "On Tue, Apr 17, 2001 at 12:07:20AM -0400, Clemm, Geoff wrote:\n>...\n> Does anyone disagree/object to the resolutions described here?\n> If not, I'll write this up as draft-15, and submit it to the IETF\n> so that JimA can officially submit it to Ned for the next step\n> of the process.\n\nAll agreed on this side of the computer screen.\n\nCheers,\n-g\n\n-- \nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-16048515"}, {"subject": "Re: The Label header, and other issues raised since draft-1", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-16056148"}, {"subject": "Mention nested baselines in 1", "content": "\"Clemm, Geoff\" <gclemm@rational.com> wrote:\n> Sorry if I didn't make it clearer earlier, but I agree with the point\n> you raise here.  It was a key component of another thread a month or\n> so ago (I can't remember the thread title ... Greg started it, I\n> believe).\nI remember the thread but didn't follow it closely enough it seems, to\nunderstand the consequences. Sometimes not all things are obvious.\n\n> The final resolution was that every member of a \n> baseline-controlled collection got its own\n> DAV:version-controlled-configuration property.  This clarified that a\n> configuration does not contain version-controlled members of a nested\n> configuration, which I believe is what you are asking for here.\n> You use the DAV:subbaseline-set to add nested configuration baselines to a\n> baseline.\nYes.\n\nSo it remains (probably you already know that yourself) that the beginning\nof 'Baseline feature' needs some rewording. Especially the the first sentence\nand the stuff on components which seems to imply that you have to move it out\nof the baseline scope to create a subbaseline.\n\nBTW, I agree with your roadmap for 15. That also means that I can accept a\nlanguage attribute for labels. But please NO additional comparison rules if\nwe can avoid it.\nI already shudder when I think about the question whether two strings which are\nidentical but have nominally a different encoding (UTF8 or ASCII7) match.\nSo would it be possible to say a label must be in UTF8 and optionally\na language attribute is allowed ?\n\nCheers, Edgar\n\n\n-- \nedgar@edgarschwarz.de                    http://www.edgarschwarz.de\n*          DOSenfreie Zone.        Running Native Oberon.         *\nMake it as simple as possible, but not simpler.     Albert Einstein\n\n\n\n", "id": "lists-005-16063955"}, {"subject": "RE: Proposed Simplifications to the DeltaV protoco", "content": "   From: Lisa Dusseault [mailto:lisa@xythos.com]\n\n   I was very excited about the \"feature sets\" idea because I\n   understood that these would be a normative part of the\n   specification, not merely an informative thing.  Language is always\n   so slippery....\n\nWe did discuss the idea of explicitly adding in \"package\" tokens to be\nreturned by OPTIONS, but the consensus at the meeting was that\nreturning explicit \"package\" tokens from OPTIONS (in addition to\n\"feature\" tokens) would provide no additional benefit beyond simply\ndefining the package membership in the spec.\n\nThe rationale was that it's just as easy to check whether a set of\nfeature tokens are in the OPTIONS response as it is to check whether a\nsingle package token is in the OPTIONS response).\n\n   My assumption: If anybody can create a new \"feature set\" and inform the\n   world what their set is, then there's no value to feature sets.\n\nThat does not follow.  If the spec identifies 4 specific feature\nsets that a server SHOULD support, then a client is provided with\nguidance as to what 4 feature sets to look for.\n\n   I do, however, understand that some servers will want to support a\nfeature\n   set plus an extra feature or two.  So I propose that there be some way to\n   name each feature set, plus to name features on top.  Then the OPTIONS\n   response for my server would indicate:\n    - I support BASE feature set\n    - I also support features X and Y (which are not part of BASE)\n\nA client can answer the first question by just looking to see whether\nall the features in the BASE feature set came back from the OPTIONS\nrequest.  No need for a separate \"package\" token to be defined or\nreturned.\n\n   Another server might support BASE, feature X, Y and also Z.  If BASE + X\n+ Y\n   + Z == FEATURE_SET_1, then the OPTIONS response would only have one\nstring\n   for this server:\n    - I support FEATURE_SET_1\n\nSimilarly, it's just as easy for a client to check whether all features\nin FEATURE_SET_1 have been returned in the OPTIONS response from the\nserver.\n\n   Also, I would propose that BASE replace the concept of CORE.  It's way\ntoo\n   confusing to have a difference.  BASE should be the set of features that\nall\n   servers must implement:  the old concept of core, plus checkout, plus\n   fork-control parsing (even if disallowed).\n\nCORE is the intersection of the features supported by all defined\npackages.  This turns out to just be one feature, namely, the\nversion-control feature.  It doesn't matter much to me whether we\ngive that single common feature its own package name, as long as\nwe clearly identify that this is the only feature that is common\nbetween all packages.\n\n   Taking these steps puts few actual restrictions on the servers.  They can\n   still decide to support an arbitrary set of features.  There is only a\n   psychological pressure (which I think is a good thing) to implement a\n   defined package rather than a random set of features.  The next value of\n   this is that it's much easier for a client to identify their supported\n   feature sets.\n\nI believe that the difference in coding effort and complexity between:\n\n   for (feature in package)\n     check-if-feature-supported (feature, supported-feature-set)\n\nand\n\n   check-if-package-supported (package, supported-package-set)\n\nis not sufficient to warrant adding package tokens to the OPTIONS\nresponse.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-16072984"}, {"subject": "RE: The Label header, and other issues raised since draft-1", "content": "> - Internationalizable display of labels:\n>\n> This actually has little to do with the label header, since you don't\n> use the label header to create labels, but rather use the body of the\n> LABEL method.  In the body of LABEL method, you can annotate the label\n> with as many internationalization attributes as it wishes, and you\n> query for labels with PROPFIND, which will give you all those\n> attributes back.\n\nAh, this makes sense to me now. I agree that, since can set and retrieve the\nlabel information via properties, it is OK to state that the label *header*\nis in one (and only one) fixed encoding, and doesn't need a language or\nencoding tag.  All you need to do is compare Unicode string values for exact\nequality. The ability to set and retrieve this with full encoding and\nlanguage tagging information via the property mechanism makes all the\ndifference.\n\nNow that I get it, sorry for all the fuss I raised. :-(\n\n\n>\n> - Label matching\n>\n> Here is the area where the Label header does come into play, because\n> it is the way several methods will pass in the label to be \"matched\".\n> My impression is that most of the members of the working group that\n> care about labels find a simple byte string matching of the label to\n> be sufficient for their needs.  It is OK for an Englishman to label a\n> version \"gross\", and then have this version be selected by a German\n> that asks for the \"large\" version (i.e.  \"gross\" in German, put please\n> don't get too concerned about the details of this example :-).\n\nI agree.\n\n\n> The Variant-Control Feature:\n>    Defer it to another spec. focused on variants.\n\nAgreed.\n\n\n> The Fork-Control Feature:\n>    Merge it into the checkout feature.\n\nAgreed.\n\n> The Update Feature:\n>    Keep it, and make it part of the basic-client-workspace package\n>    (needed so that a new version created by checking in a working\n>    resource can be made the \"checked-in\" version of its version\n>    controlled resource).\n\n*sigh* OK.\n\n> The Label Feature:\n>    Keep it as is (i.e. with the Label header), and make it part of the\n>    basic-client-workspace package (so that a client can define a\n>    lightweight configuration of versions on the server).\n\nOK.\n\n>\n> The \"checked-out version-controlled configuration\" issue:\n>    Add a \"checkout-on-update-and-keep-checked-out\" variant to the\n>    auto-versioning mechanism.  Also, simplify DAV:auto-version\n>    by replacing it with DAV:auto-checkout and DAV:auto-checkin.\n\nOK.\n\n> Packages:\n>    Define 5 packages: core-versioning, basic/advanced-client-workspace,\n>    and basic/advanced-server-workspace.\n>\n> In other words, the mailing list accepted 3 of the proposals from\n> the Minneapolis meeting, rejected 2 of the proposals from the\n> Minneapolis meeting, and accept the latest variant of the one\n> issue that originated on the mailing list (auto-checkout of a VCC).\n\nGuess we have to sharpen that knife some more.\n\n- Jim\n\n\n\n", "id": "lists-005-16083385"}, {"subject": "RE: checked-out VCC: A new proposa", "content": "Overall, I prefer the previous DAV:auto-version property and its settings,\nbecause the four possible settings were all well-defined.  With the proposed\nproperty tuple (DAV:auto-checkout, DAV:auto-checkin) replacing\nDAV:auto-version, there appear to be thirty-two possible settings of the\ntuple.  This seems like an unnecessary jump in complexity, if all that was\nneeded was one more setting for DAV:auto-version, namely\n\"always-checkout-manual-checkin\".\n\n(Incidentally, if we go back to the DAV:auto-version property, I recommend\nrenaming \"DAV:when-locked-checkout\" to\n\"DAV:when-locked-checkout-when-unlocked-checkin\", in order to be consistent\nwith the other setting names.  It should cover both checkout and checkin\nexplicitly like the other setting names.)\n\nSpecific issues with the tuple proposal:\n\n1. It's not clear to me how the server should behave for some of the\nsettings for (DAV:auto-checkout, DAV:auto-checkin), such as\n(DAV:unlocked-update, DAV:locked-update) or (not set, DAV:locked-update\nand/or DAV:unlocked-update).\n\n2. What is the meaning of the DAV:unlock setting for DAV:auto-checkin?  It\nwas listed in the formal definition but never referenced in the text.\n\n3. The description of the checkin-on-unlock operation doesn't seem complete.\n\nGeoff Clemm wrote:\n> If a write-locked version-controlled resource was automatically\n> checked out because the DAV:auto-checkout property was\n> DAV:locked-update, a removal of the write lock (such as from an UNLOCK\n> or lock timeout) is automatically preceded by a checkin operation.\n\nAnother clause concerning the setting of DAV:auto-checkin seems necessary to\nmake the above statement true:\n\n\"If a write-locked version-controlled resource was automatically checked out\nbecause the DAV:auto-checkout property was DAV:locked-update, and the\nDAV:auto-checkin property is DAV:unlocked-update and not DAV:locked-update,\na subsequent removal of the write lock (such as from an UNLOCK or lock\ntimeout) is automatically preceded by a checkin operation.\"\n\nDepending on the intended semantics for DAV:unlock, verbiage about\nDAV:unlock may have to be added as well.\n\nAgain, however, I would prefer extending the simpler \"DAV:autoversion\"\nproperty over resolving these issues with the new tuple proposal.\n\n--Chuck Fay \nFileNET Corporation, 3565 Harbor Blvd., Costa Mesa, CA 92626 \nphone:  (714) 327-3513, fax:  (714) 327-5076, email:  cfay@filenet.com\n\n> -----Original Message-----\n> From: Clemm, Geoff [mailto:gclemm@rational.com]\n> Sent: Thursday, April 12, 2001 3:39 PM\n> To: ietf-dav-versioning@w3.org\n> Subject: RE: checked-out VCC: A new proposal\n> \n> \n>    From: Tim_Ellison@uk.ibm.com [mailto:Tim_Ellison@uk.ibm.com]\n>    Subject: Re: checked-out VCC: A new proposal\n> \n>    I agree that this conforms to the 'minimum change to the spec'\n>    criteria -- and it is even a defendable position (bonus!)\n> \n>    I do not object.\n> \n> While investigating the new \"auto-checkout-manual-checkin\" value for\n> DAV:auto-version, it appeared to me that things could be made\n> significantly clearer if we replace the DAV:auto-version property with\n> a DAV:auto-checkout and DAV:auto-checkin property.  This lets us\n> specify auto-checkout behavior independently from auto-checkin\n> behavior, which is what we need/want for \n> \"auto-checkout-manual-checkin\".\n> \n> Is this OK?\n> \n> Cheers,\n> Geoff\n> \n> --------------------------------------\n> \n> \n> 3.2.2DAV:auto-checkout \n> \n> When a modification request (such as PUT/PROPPATCH) is applied to a\n> checked-in version-controlled resource, if the resource is\n> non-write-locked and the DAV:auto-checkout property is\n> DAV:unlocked-update, or if the resource is write-locked and the\n> DAV:auto-checkout property is DAV:locked-update, the request is\n> automatically preceded by a checkout operation.\n> \n> A server MAY refuse to allow the value of the DAV:auto-checkout\n> property to be modified.\n> \n> <!ELEMENT auto-checkout ANY>\n> ANY value: A sequence of elements with at most one\n> DAV:unlocked-update element and at most one DAV:locked-update\n> element.\n> <!ELEMENT unlocked-update EMPTY>\n> <!ELEMENT locked-update EMPTY>\n> \n> 3.2.3DAV:auto-checkin \n> \n> When a modification request (such as PUT/PROPPATCH) on a checked-in\n> version-controlled resource has been automatically preceded by a\n> checkout operation, if the resource is non-write-locked and the\n> DAV:auto-checkin property is DAV:unlocked-update, or if the resource\n> is write-locked and the DAV:auto-checkin property is\n> DAV:locked-update, the request is automatically followed by a checkin\n> operation.\n> \n> If a write-locked version-controlled resource was automatically\n> checked out because the DAV:auto-checkout property was\n> DAV:locked-update, a removal of the write lock (such as from an UNLOCK\n> or lock timeout) is automatically preceded by a checkin operation.\n> \n> A server MAY refuse to allow the value of the DAV:auto-checkin\n> property to be modified.\n> \n> <!ELEMENT auto-checkin ANY>\n> ANY value: A sequence of elements with at most one\n> DAV:unlocked-update element, at most one DAV:locked-update\n> element, and at most one DAV:unlock element.\n> <!ELEMENT unlocked-update EMPTY>\n> <!ELEMENT locked-update EMPTY>\n> \n\n\n\n", "id": "lists-005-16093821"}, {"subject": "Re: The Label header, and other issues raised since draft-1", "content": "Jim,\n\nPlease stop using HTML for your emails. Heck, use a better email package\n(your emails have looked wonky for a long time).\n\nSee below for the problem with using HTML. There is *NO* separator between\nyour message and the message you quoted. There isn't anything that says the\nquoted email was from Geoff. Quite impossible to read/parse/whatever.\n\nI believe netiquette generally says to use plain text for mailing lists. Not\neverybody out there has HTML-capable readers.\n\nCheers,\n-g\n\nOn Tue, Apr 17, 2001 at 07:48:13AM -0400, Jim Amsden wrote:\n> \n>    OK with me.\n>    I believe it is fair to say that based on activity in the mailing\n>    list, there appears to be strong support for the Label header within\n>    the working group.\n>    As for the issues raised concerning the Label header:\n>    - Internationalizable display of labels:\n>    This actually has little to do with the label header, since you don't\n>    use the label header to create labels, but rather use the body of the\n>    LABEL method.  In the body of LABEL method, you can annotate the label\n>    with as many internationalization attributes as it wishes, and you\n>    query for labels with PROPFIND, which will give you all those\n>    attributes back.\n>    - Label matching\n>    Here is the area where the Label header does come into play, because\n>    it is the way several methods will pass in the label to be \"matched\".\n>    My impression is that most of the members of the working group that\n>    care about labels find a simple byte string matching of the label to\n>    be sufficient for their needs.  It is OK for an Englishman to label a\n>    version \"gross\", and then have this version be selected by a German\n>    that asks for the \"large\" version (i.e.  \"gross\" in German, put please\n>    don't get too concerned about the details of this example :-).\n>    This is no more likely to happen than for some other client to use the\n>    word \"gross\" in English to mean something other than what the second\n>    client had in mind.  In fact, it is probably much *more* likely for\n>    the two different English uses of a string to collide, than it is for\n>    an English use to collide with a German use.\n>    Clients that really care about his issue will just use baselines\n>    instead of labels, since a baseline selection of a version can never\n>    \"collide\" with another baseline (which is why I think we should just\n>    get rid of the label feature altogether, but that's just me :-).\n>    So if we accept all that, the only thing left to do is to decide which\n>    packages (if any) will contain the label header.  After staring at\n>    our current packages (core, basic/advanced client workspaces, and\n>    basic/advanced servers workspaces), I believe it makes sense to bundle\n>    labels into the \"client workspace\" packages.\n>    My reasoning is as follows: I believe most client-workspace servers do\n>    in fact support labels, and Greg (who is known to be producing an\n>    advanced-client-workspace server) was one of the vocal supporters of\n>    labels.  This makes sense, because although a server-workspace server\n>    can just allocate a \"workspace\" when it wants to expose a set of\n>    related versions, a basic client workspace server cannot, and labels\n>    give it a simple way to do so.\n>    So, I propose that we define the label feature as being part of the\n>    basic-client-workspace package.  Any objections?\n>    This means that the proposed resolution of the issues raised since\n>    draft 14 are:\n>    The Variant-Control Feature:\n>      Defer it to another spec. focused on variants.\n>    The Fork-Control Feature:\n>      Merge it into the checkout feature.\n>    The Update Feature:\n>      Keep it, and make it part of the basic-client-workspace package\n>      (needed so that a new version created by checking in a working\n>      resource can be made the \"checked-in\" version of its version\n>      controlled resource).\n>    The Label Feature:\n>      Keep it as is (i.e. with the Label header), and make it part of the\n>      basic-client-workspace package (so that a client can define a\n>      lightweight configuration of versions on the server).\n>    The \"checked-out version-controlled configuration\" issue:\n>      Add a \"checkout-on-update-and-keep-checked-out\" variant to the\n>      auto-versioning mechanism.  Also, simplify DAV:auto-version\n>      by replacing it with DAV:auto-checkout and DAV:auto-checkin.\n>    Packages:\n>      Define 5 packages: core-versioning, basic/advanced-client-workspace,\n>      and basic/advanced-server-workspace.\n>    In other words, the mailing list accepted 3 of the proposals from\n>    the Minneapolis meeting, rejected 2 of the proposals from the\n>    Minneapolis meeting, and accept the latest variant of the one\n>    issue that originated on the mailing list (auto-checkout of a VCC).\n>    Does anyone disagree/object to the resolutions described here?\n>    If not, I'll write this up as draft-15, and submit it to the IETF\n>    so that JimA can officially submit it to Ned for the next step\n>    of the process.\n>    Cheers,\n>    Geoff\n\n-- \nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-16108173"}, {"subject": "RE: The Label header, and other issues raised since draft-1", "content": "Geoff Clemm wrote:\n> This means that the proposed resolution of the issues raised since \n> draft 14 are:\n. . .\n> The Fork-Control Feature:\n>    Merge it into the checkout feature.\n\nGiven that the checkout feature only applies to version-controlled\nresources, and not to versions, does this mean that Fork-Control only\napplies to VCRs?  Shouldn't it apply to versions as well?\n\n. . .\n> The \"checked-out version-controlled configuration\" issue:\n>    Add a \"checkout-on-update-and-keep-checked-out\" variant to the\n>    auto-versioning mechanism.  Also, simplify DAV:auto-version\n>    by replacing it with DAV:auto-checkout and DAV:auto-checkin.\n\nSee my earlier message today on this.\n\n> Packages:\n>    Define 5 packages: core-versioning, \n> basic/advanced-client-workspace,\n>    and basic/advanced-server-workspace.\n\nLooks good.\n\n--Chuck Fay \nFileNET Corporation, 3565 Harbor Blvd., Costa Mesa, CA 92626 \nphone:  (714) 327-3513, fax:  (714) 327-5076, email:  cfay@filenet.com\n\n\n\n", "id": "lists-005-16121184"}, {"subject": "Table for autoversionin", "content": "In an effort to wrap my brain around all of the autoversioning options, I\ndeveloped the following table. I'm hoping some variant of this might make it\ninto the specification, since I believe it could increase the correctness of\nimplementations of this feature.  I'm also curious to see if I got it all\nright (I'm most curious about the checked-in states...) :-)\n\nAbreviations used:\n\nci = check-in (or checked-in)\nco = check-out (or checked-out)\nul = unlock\nlk = lock\n-> = sequence of operations (1->2)\nacoaci = always-checkout-always-checkin\nacowuci = always-checkout-when-unlocked-checkin\nwlco = when locked checkout\ncoouakco = checkout-on-update-and-keep-checked-out\n\nOperation \"write\" is defined to be the state modification action of the\nmethod. For a PUT, write = changing the body.  For PROPPATCH, write =\nchanging the property values.\n\nThe table is orgazined as follows:\n\nrows correspond to specific states of the resource (e.g., checked out and\nwrite locked).\ncolumns correspond to specific autoversion options\ncells contain descriptions of what happens when specific methods are invoked\nunder these conditions\n\n\n                acoaci                          acowuci\n\nci locked    PUT/PROPPATCH                    PUT/PROPPATCH\n             co->write->ci                    co->write\n             UNLOCK                           UNLOCK\n             ul                               ul\n             LOCK                             LOCK\n             err:423 Locked                   err:423 Locked\n\n\nci unlocked  PUT/PROPPATCH                    PUT/PROPPATCH\n             co->write->ci                    co->write->ci\n             UNLOCK                           UNLOCK\n             err:412                          err:412\n             LOCK                             LOCK\n             lk                               lk\n\n\nco locked    PUT/PROPPATCH                    PUT/PROPPATCH\n             write                            write\n             UNLOCK                           UNLOCK\n             ul                               ci->ul\n             LOCK                             LOCK\n             err:423 Locked                   err: 423 Locked\n\nco unlocked  PUT/PROPPATCH                    PUT/PROPPATCH\n             write                            write\n             UNLOCK                           UNLOCK\n             err:412                          err:412\n             LOCK                             LOCK\n             lk                               lk\n\n\n\n\n               wlco                            coouakco\n\nci locked    PUT/PROPPATCH                    PUT/PROPPATCH\n             co->write                        co->write\n             UNLOCK                           UNLOCK\n             ul                               ul\n             LOCK                             LOCK\n             err:423                          err:423\n\nci unlocked  PUT/PROPPATCH                    PUT/PROPPATCH\n             err:DAV:cannot-modify-version-   co->write\n                     controlled-content\n             UNLOCK                           UNLOCK\n             err:412                          err:412\n             LOCK                             LOCK\n             lk                               lk\n\n\nco locked    PUT/PROPPATCH                    PUT/PROPPATCH\n             write                            write\n             UNLOCK                           UNLOCK\n             ci->ul                           ul\n             LOCK                             LOCK\n             err:423                          err:423\n                                              CHECKIN\n                                              ci\n\nco unlocked  PUT/PROPPATCH                    PUT/PROPPATCH\n             write                            write\n             UNLOCK                           UNLOCK\n             err:412                          err:412\n             LOCK                             LOCK\n             lk                               lk\n                                              CHECKIN\n                                              ci\n\n\n\n", "id": "lists-005-16130275"}, {"subject": "RE: Table for autoversionin", "content": "The table looks correct to me, in terms of the old DAV:auto-version\nterminology.  I support Jim's suggestion that such a table go into the\nspecification, because it leaves much less room for misinterpretation and\nerror than a prose-only expression of the semantics.  Geoff has done a\nwonderful job of expressing the semantics in a concise set of sentences, but\nit's almost like solving a puzzle to wring out of those sentences the\nsemantics spelled out in Jim's table.  Rather than requiring each\nimplementor to solve the puzzle, and possibly end up with an incorrect\nsolution, I like the idea of spelling out the semantics in a table.  As I\nnoted in my earlier message, I also prefer the old terminology.\n\n--Chuck Fay \nFileNET Corporation, 3565 Harbor Blvd., Costa Mesa, CA 92626 \nphone:  (714) 327-3513, fax:  (714) 327-5076, email:  cfay@filenet.com\n\n> -----Original Message-----\n> From: Jim Whitehead [mailto:ejw@cse.ucsc.edu]\n> Sent: Tuesday, April 17, 2001 4:33 PM\n> To: ietf-dav-versioning@w3.org\n> Subject: Table for autoversioning\n> \n> \n> In an effort to wrap my brain around all of the \n> autoversioning options, I\n> developed the following table. I'm hoping some variant of \n> this might make it\n> into the specification, since I believe it could increase the \n> correctness of\n> implementations of this feature.  I'm also curious to see if \n> I got it all\n> right (I'm most curious about the checked-in states...) :-)\n> \n> Abreviations used:\n> \n> ci = check-in (or checked-in)\n> co = check-out (or checked-out)\n> ul = unlock\n> lk = lock\n> -> = sequence of operations (1->2)\n> acoaci = always-checkout-always-checkin\n> acowuci = always-checkout-when-unlocked-checkin\n> wlco = when locked checkout\n> coouakco = checkout-on-update-and-keep-checked-out\n> \n> Operation \"write\" is defined to be the state modification \n> action of the\n> method. For a PUT, write = changing the body.  For PROPPATCH, write =\n> changing the property values.\n> \n> The table is orgazined as follows:\n> \n> rows correspond to specific states of the resource (e.g., \n> checked out and\n> write locked).\n> columns correspond to specific autoversion options\n> cells contain descriptions of what happens when specific \n> methods are invoked\n> under these conditions\n> \n> \n>                 acoaci                          acowuci\n> \n> ci locked    PUT/PROPPATCH                    PUT/PROPPATCH\n>              co->write->ci                    co->write\n>              UNLOCK                           UNLOCK\n>              ul                               ul\n>              LOCK                             LOCK\n>              err:423 Locked                   err:423 Locked\n> \n> \n> ci unlocked  PUT/PROPPATCH                    PUT/PROPPATCH\n>              co->write->ci                    co->write->ci\n>              UNLOCK                           UNLOCK\n>              err:412                          err:412\n>              LOCK                             LOCK\n>              lk                               lk\n> \n> \n> co locked    PUT/PROPPATCH                    PUT/PROPPATCH\n>              write                            write\n>              UNLOCK                           UNLOCK\n>              ul                               ci->ul\n>              LOCK                             LOCK\n>              err:423 Locked                   err: 423 Locked\n> \n> co unlocked  PUT/PROPPATCH                    PUT/PROPPATCH\n>              write                            write\n>              UNLOCK                           UNLOCK\n>              err:412                          err:412\n>              LOCK                             LOCK\n>              lk                               lk\n> \n> \n> \n> \n>                wlco                            coouakco\n> \n> ci locked    PUT/PROPPATCH                    PUT/PROPPATCH\n>              co->write                        co->write\n>              UNLOCK                           UNLOCK\n>              ul                               ul\n>              LOCK                             LOCK\n>              err:423                          err:423\n> \n> ci unlocked  PUT/PROPPATCH                    PUT/PROPPATCH\n>              err:DAV:cannot-modify-version-   co->write\n>                      controlled-content\n>              UNLOCK                           UNLOCK\n>              err:412                          err:412\n>              LOCK                             LOCK\n>              lk                               lk\n> \n> \n> co locked    PUT/PROPPATCH                    PUT/PROPPATCH\n>              write                            write\n>              UNLOCK                           UNLOCK\n>              ci->ul                           ul\n>              LOCK                             LOCK\n>              err:423                          err:423\n>                                               CHECKIN\n>                                               ci\n> \n> co unlocked  PUT/PROPPATCH                    PUT/PROPPATCH\n>              write                            write\n>              UNLOCK                           UNLOCK\n>              err:412                          err:412\n>              LOCK                             LOCK\n>              lk                               lk\n>                                               CHECKIN\n>                                               ci\n> \n\n\n\n", "id": "lists-005-16141330"}, {"subject": "RE: Mention nested baselines in 1", "content": "   From: Edgar@EdgarSchwarz.de [mailto:Edgar@EdgarSchwarz.de]\n\n   So it remains (probably you already know that yourself) that the\n   beginning of 'Baseline feature' needs some rewording. Especially\n   the the first sentence and the stuff on components which seems to\n   imply that you have to move it out of the baseline scope to create\n   a subbaseline.\n\nGood point!  (I did realize that the subbaseline stuff needed to\nbe reworded, but I didn't notice that the first sentence also needs\nto be changed ... thanks for pointing that out!).\n\n   BTW, I agree with your roadmap for 15. That also means that I can\n   accept a language attribute for labels. But please NO additional\n   comparison rules if we can avoid it.\n\nAgreed.  The language attributes are there for display purposes,\nbut do not affect the matching (which is simple UTF-8 byte comparison).\n\n   I already shudder when I\n   think about the question whether two strings which are identical\n   but have nominally a different encoding (UTF8 or ASCII7) match.  So\n   would it be possible to say a label must be in UTF8 and optionally\n   a language attribute is allowed ?\n\nWe do require that the label be in UTF-8 when it appears in a\nheader.  We don't require UTF-8 in the XML, because we want to\njust use standard XML language encoding rules (which among other\nthings, allows a language attribute).  But the transformation\nbetween other Unicode encodings and UTF-8 are well defined.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-16155270"}, {"subject": "RE: checked-out VCC: A new proposa", "content": "   From: Fay, Chuck [mailto:CFay@filenet.com]\n\n   Overall, I prefer the previous DAV:auto-version property and its\n   settings, because the four possible settings were all well-defined.\n   With the proposed property tuple (DAV:auto-checkout,\n   DAV:auto-checkin) replacing DAV:auto-version, there appear to be\n   thirty-two possible settings of the tuple.\n\nActually, the four possible values:\n auto-checkout=unlocked-update\n auto-checkout=locked-update\n auto-checkin=unlocked-update\n auto-checkin=locked-update\nare independent of each other, so there are no combinatorics involved\nhere.\n\nAlso, separating it into two (independent) properties made the\nwriteup much simpler (especially when I needed to add a 5'th\nalternative to DAV:auto-version).\n\n   This seems like an unnecessary jump in complexity, if all that was\n   needed was one more setting for DAV:auto-version, namely\n   \"always-checkout-manual-checkin\".\n\nThe comparison here is 5 possible independent values for the\nauto-version property, versus 2 (symmetric) independent values for the\nauto-checkout and auto-checkin properties.\n\n   (Incidentally, if we go back to the DAV:auto-version property, I\n   recommend renaming \"DAV:when-locked-checkout\" to\n   \"DAV:when-locked-checkout-when-unlocked-checkin\", in order to be\n   consistent with the other setting names.  It should cover both\n   checkout and checkin explicitly like the other setting names.)\n\nThe use of \"unlocked\" here could potentially be confused with \"when\nthe resource is in the unlocked state\" and \"when an UNLOCK operation\nis applied to the resource\" ... but if we don't go back to the\nauto-version property, we don't need to deal with these 6 word\n\"values\" (which is one of the things I felt made the auto-version\nappear unnecessarily complex).  With the auto-checkout and\nauto-checkin properties, simple two word values were sufficient.\n\n   Specific issues with the tuple proposal:\n\n   1. It's not clear to me how the server should behave for some of\n   the settings for (DAV:auto-checkout, DAV:auto-checkin), such as\n   (DAV:unlocked-update, DAV:locked-update) or (not set,\n   DAV:locked-update and/or DAV:unlocked-update).\n\nThe behavior of the server with one value is set is independent of its\nbehavior when another value is set (which is why there is no\ncombinatorics here).\n\nIn particular, auto-checkout=unlocked-update means that when you\nupdate an unlocked (checked-in, version-controlled) resource, it is\nautomatically checked out before the update.  The value of\nauto-checkin has no effect on this behavior.\n\nAnalagously, auto-checkin=locked-update says that when you update a\nlocked (checked-in, version-controlled) resource, it is automatically\nchecked in if it was automatically checked out for the update.  This\nbehavior is independent of the value of auto-checkout.  Now it is true\nthat if auto-checkout=locked-update is not set, then a locked resource\nwould never have been automatically checked out, but this doesn't\nchange/affect the meaning of auto-checkin=locked-update.\n\n   2. What is the meaning of the DAV:unlock setting for\n   DAV:auto-checkin?  It was listed in the formal definition but never\n   referenced in the text.\n\nOops.  That was a remnant of a rejected earlier approach (which didn't\nmake it into the working draft, but did get left in the mail message).\nThere are only 2 possible values for DAV:auto-checkin (i.e.\nDAV:locked-update and DAV:unlocked-update).\n\n   3. The description of the checkin-on-unlock operation doesn't seem\n      complete.\n\n   Geoff Clemm wrote:\n   > If a write-locked version-controlled resource was automatically\n   > checked out because the DAV:auto-checkout property was\n   > DAV:locked-update, a removal of the write lock (such as from an\n   > UNLOCK or lock timeout) is automatically preceded by a checkin\n   > operation.\n\n   Another clause concerning the setting of DAV:auto-checkin seems\n   necessary to make the above statement true:\n\n   \"If a write-locked version-controlled resource was automatically\n   checked out because the DAV:auto-checkout property was\n   DAV:locked-update, and the DAV:auto-checkin property is\n   DAV:unlocked-update and not DAV:locked-update, a subsequent removal\n   of the write lock (such as from an UNLOCK or lock timeout) is\n   automatically preceded by a checkin operation.\"\n\nGood point!  How about the following phrasing though:\n\nIf a write-locked version-controlled resource was automatically\nchecked out because the DAV:auto-checkout property was\nDAV:locked-update, and if the resource was still checked-out when the\nwrite lock is removed (such as from an UNLOCK or lock timeout), then\nthe removal of the write lock is automatically preceded by a checkin\noperation.\n\n   Again, however, I would prefer extending the simpler\n   \"DAV:autoversion\" property over resolving these issues with the new\n   tuple proposal.\n\nI did try to just extend the DAV:auto-version property with this new\nvalue, but it made the precondition and postcondition texts rather\nincomprehensible, while the DAV:auto-checkout and DAV:auto-checkin\nbased text works reasonably well.\n\nSo if it is just a preference, rather than an objection, I'd like\nto go forward with the auto-checkout/auto-checkin properties\n(but feel free to reraise the objection after you see the result\nin the working draft).\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-16163885"}, {"subject": "RE: The Label header, and other issues raised since draft-1", "content": "\"Jim Whitehead\" <ejw@cse.ucsc.edu> wrote:\n\n> > - Internationalizable display of labels:\n> >\n> > This actually has little to do with the label header, since you don't\n> > use the label header to create labels, but rather use the body of the\n> > LABEL method.  In the body of LABEL method, you can annotate the label\n> > with as many internationalization attributes as it wishes, and you\n> > query for labels with PROPFIND, which will give you all those\n> > attributes back.\n>\n> Ah, this makes sense to me now. I agree that, since can set\n> and retrieve the label information via properties, it is OK\n> to state that the label *header* is in one (and only one)\n> fixed encoding, and doesn't need a language or encoding tag.\n> All you need to do is compare Unicode string values for exact\n> equality. The ability to set and retrieve this with full\n> encoding and language tagging information via the property\n> mechanism makes all the difference.\n\nGreat -- this is what we were shooting for.\n\nTim\n\n\n\n", "id": "lists-005-16176538"}, {"subject": "Re: Versioning Package", "content": "\"Clemm, Geoff\" <gclemm@rational.com> wrote:\n\n> I did another pass through the \"packages\"\n> description. In particular, I gave the common\n> intersection of all packages (which is just the\n> \"version-control\" feature) its own package name\n> (the \"core-versioning\" package).\n>\n> There is more information on the \"server workspace\"\n> and \"client workspace\" differences in the \"workspace\n> feature\" and \"working resource feature\" descriptions.\n>\n> Does this look OK?\n\nYes.  It would be preferrable if the features had names that did not\ncollide with method names since that triped me up, and I can imagine it\nbeing a source of confusion in the future -- e.g. \"when you say your server\nimplements checkout, do you mean the 'checkout' feature or the 'CHECKOUT'\nmethod?\", the feature being a subset of the method.\n\nwrt packages of features, I'm quite indifferent to the idea.\n\nTim\n\n\n\n", "id": "lists-005-16185307"}, {"subject": "RE: Versioning Package", "content": "I agree with Tim's point about the negative result of having\na feature called \"checkout\" when the CHECKOUT method actually\nappears in two features (the \"checkout\" feature and the\n\"working resource\" feature\").  A more \"accurate\" name for the\n\"checkout\" feature would be \"in-place-version-controlled-resource-checkout\".\nI'm really not very fond of this extended name (:-) ... anyone\nhave a better solution?\n\nOne alternative that comes to mind is to fold the \"checkout\"\noption into the \"workspace\" option, but as I recall, there are\nfolks that wanted to support the \"in-place checkout\" but did not\nwant to support workspaces.  Just to check, is there anyone out\nthere that will be supporting \"in-place checkout\" but not workspaces?\n\nAlternatively, if anyone can come up with a better name for the\n\"in-place-version-controlled-resource-checkout\" feature,\nthat would be appreciated!\n\nCheers,\nGeoff\n\n-----Original Message-----\nFrom: Tim_Ellison@uk.ibm.com [mailto:Tim_Ellison@uk.ibm.com]\nSent: Wednesday, April 18, 2001 6:59 AM\nTo: ietf-dav-versioning@w3.org\nSubject: Re: Versioning Packages\n\n\n\n\n\"Clemm, Geoff\" <gclemm@rational.com> wrote:\n\n> I did another pass through the \"packages\"\n> description. In particular, I gave the common\n> intersection of all packages (which is just the\n> \"version-control\" feature) its own package name\n> (the \"core-versioning\" package).\n>\n> There is more information on the \"server workspace\"\n> and \"client workspace\" differences in the \"workspace\n> feature\" and \"working resource feature\" descriptions.\n>\n> Does this look OK?\n\nYes.  It would be preferrable if the features had names that did not\ncollide with method names since that triped me up, and I can imagine it\nbeing a source of confusion in the future -- e.g. \"when you say your server\nimplements checkout, do you mean the 'checkout' feature or the 'CHECKOUT'\nmethod?\", the feature being a subset of the method.\n\nwrt packages of features, I'm quite indifferent to the idea.\n\nTim\n\n\n\n", "id": "lists-005-16193458"}, {"subject": "RE: Versioning Package", "content": "\"Clemm, Geoff\" <gclemm@rational.com> wrote:\n\n> I agree with Tim's point about the negative result\n> of having a feature called \"checkout\" when the CHECKOUT\n> method actually appears in two features (the \"checkout\"\n> feature and the \"working resource\" feature\").  A more\n> \"accurate\" name for the \"checkout\" feature would be\n> \"in-place-version-controlled-resource-checkout\". I'm\n> really not very fond of this extended name (:-) ...\n> anyone have a better solution?\n>\n> One alternative that comes to mind is to fold the\n> \"checkout\" option into the \"workspace\" option, but as\n> I recall, there are folks that wanted to support the\n> \"in-place checkout\" but did not want to support workspaces.\n> Just to check, is there anyone out there that will be\n> supporting \"in-place checkout\" but not workspaces?\n\nI would like to see these options kept separate.\n\n> Alternatively, if anyone can come up with a better name\n> for the \"in-place-version-controlled-resource-checkout\"\n> feature, that would be appreciated!\n\nThe 'in-place-' is superfluous.  Given that the feature is to check out a\nvcr, it isn't going to get much shorter than\n'version-controlled-resource-checkout':-|\n\nTim\n\n\n\n", "id": "lists-005-16203396"}, {"subject": "Re: Versioning Package", "content": "On Wed, Apr 18, 2001 at 03:45:21PM +0100, Tim_Ellison@uk.ibm.com wrote:\n> \"Clemm, Geoff\" <gclemm@rational.com> wrote:\n>...\n> > Alternatively, if anyone can come up with a better name\n> > for the \"in-place-version-controlled-resource-checkout\"\n> > feature, that would be appreciated!\n> \n> The 'in-place-' is superfluous.  Given that the feature is to check out a\n> vcr, it isn't going to get much shorter than\n> 'version-controlled-resource-checkout':-|\n\nI'd suggest:\n\n  in-place-checkout -- server supports in-place checkouts [of VCRs]\n  working-resource  -- server supports checkouts of version resources into\n                       working resources\n\nThere would not be a feature named \"checkout\".\n\nCheers,\n-g\n\n-- \nGreg Stein, http://www.lyra.org/\n\n\n\n", "id": "lists-005-16212009"}, {"subject": "RE: checked-out VCC: A new proposa", "content": "> From: Clemm, Geoff [mailto:gclemm@rational.com]\n> Sent: Tuesday, April 17, 2001 8:35 PM\n>\n>    From: Fay, Chuck [mailto:CFay@filenet.com]\n> \n>    Overall, I prefer the previous DAV:auto-version property and its\n>    settings, because the four possible settings were all well-defined.\n>    With the proposed property tuple (DAV:auto-checkout,\n>    DAV:auto-checkin) replacing DAV:auto-version, there appear to be\n>    thirty-two possible settings of the tuple.\n> \n> Actually, the four possible values:\n>  auto-checkout=unlocked-update\n>  auto-checkout=locked-update\n>  auto-checkin=unlocked-update\n>  auto-checkin=locked-update\n> are independent of each other, so there are no combinatorics involved\n> here.\n> \n> Also, separating it into two (independent) properties made the\n> writeup much simpler (especially when I needed to add a 5'th\n> alternative to DAV:auto-version).\n\nI'm not sure I buy this completely, when the behavior of auto-checkin is\ndefined conditionally based on auto-checkout.  (\"If a write-locked\nversion-controlled resource was automatically checked out because the\nDAV:auto-checkout property was DAV:locked-update, ...\")\n\n>    Specific issues with the tuple proposal:\n> \n>    1. It's not clear to me how the server should behave for some of\n>    the settings for (DAV:auto-checkout, DAV:auto-checkin), such as\n>    (DAV:unlocked-update, DAV:locked-update) or (not set,\n>    DAV:locked-update and/or DAV:unlocked-update).\n> \n> The behavior of the server with one value is set is independent of its\n> behavior when another value is set (which is why there is no\n> combinatorics here).\n> \n> In particular, auto-checkout=unlocked-update means that when you\n> update an unlocked (checked-in, version-controlled) resource, it is\n> automatically checked out before the update.  The value of\n> auto-checkin has no effect on this behavior.\n> \n> Analagously, auto-checkin=locked-update says that when you update a\n> locked (checked-in, version-controlled) resource, it is automatically\n> checked in if it was automatically checked out for the update.  This\n> behavior is independent of the value of auto-checkout.  Now it is true\n> that if auto-checkout=locked-update is not set, then a locked resource\n> would never have been automatically checked out, but this doesn't\n> change/affect the meaning of auto-checkin=locked-update.\n\nPerhaps the setting of auto-checkout doesn't change the meaning of\nauto-checkin, but it does affect the behavior associated with the\nauto-checkin settings, as you noted above.  That was my underlying concern\nabout the two-property approach:  there are combinations of settings for\nauto-checkout and auto-checkin that produce odd results, or are just\ndysfunctional (as in the above example).  So in that sense, the use of these\ntwo properties is not as well-defined as auto-version was.\n\nI'll leave it up to the list as to whether this is a problem.  It can\ncertainly be avoided by using only combinations that match the old settings\nfor auto-version.  My take on the mapping:\n\nnever:\n    auto-checkout = not set\n    auto-checkin  = not set\n\nalways-checkout-always-checkin:\n    auto-checkout = locked-update, unlocked-update\n    auto-checkin  = locked-update, unlocked-update\n\nalways-checkout-when-unlocked-checkin:\n    auto-checkout = locked-update, unlocked-update\n    auto-checkin  = unlocked-update\n\nwhen-locked-checkout:\n    auto-checkout = locked-update\n    auto-checkin  = unlocked-update\n\nalways-checkout-manual-checkin:\n    auto-checkout = locked-update, unlocked-update\n    auto-checkin  = not set\n\n>    3. The description of the checkin-on-unlock operation doesn't seem\n>       complete.\n> \n>    Geoff Clemm wrote:\n>    > If a write-locked version-controlled resource was automatically\n>    > checked out because the DAV:auto-checkout property was\n>    > DAV:locked-update, a removal of the write lock (such as from an\n>    > UNLOCK or lock timeout) is automatically preceded by a checkin\n>    > operation.\n> \n>    Another clause concerning the setting of DAV:auto-checkin seems\n>    necessary to make the above statement true:\n> \n>    \"If a write-locked version-controlled resource was automatically\n>    checked out because the DAV:auto-checkout property was\n>    DAV:locked-update, and the DAV:auto-checkin property is\n>    DAV:unlocked-update and not DAV:locked-update, a subsequent removal\n>    of the write lock (such as from an UNLOCK or lock timeout) is\n>    automatically preceded by a checkin operation.\"\n> \n> Good point!  How about the following phrasing though:\n> \n> If a write-locked version-controlled resource was automatically\n> checked out because the DAV:auto-checkout property was\n> DAV:locked-update, and if the resource was still checked-out when the\n> write lock is removed (such as from an UNLOCK or lock timeout), then\n> the removal of the write lock is automatically preceded by a checkin\n> operation.\n\nThis doesn't seem sufficient.  It would imply that \"auto-checkin = not set\"\nwould cause an automatic checkin when the write lock is removed.  I don't\nthink this is what you intended.  That's why I included the specific setting\nof auto-checkin in my suggested wording.\n\n--Chuck\n\n\n\n", "id": "lists-005-16219655"}, {"subject": "RE: Table for autoversionin", "content": "Hmm, I hadn't realized we were moving towards new terminology for\nautoversioning.  I've checked out the -15 draft, and I think the new\nautoversioning terminology is a step in the right direction.  I'd still like\nto see the requirements listed in a tabular form.\n\nChuck Fay wrote:\n>  As I noted in my earlier message, I also prefer the old terminology.\n\n- Jim\n\n\n\n", "id": "lists-005-16232911"}, {"subject": "Workspace questio", "content": "I'm trying to figure out how the following scenario would work:\n\nSay there are two people, Lisa and Chuck, and they each want to have a\nserver-side workspace for a small project.\n\nLet's assume Lisa creates the initial workspace:\n\nMKWORKSPACE /users/lisa/projectX/\n\nThen populates it with the project files.\n\nPUT /users/lisa/projectX/makefile\nPUT /users/lisa/projectX/main.c\nPUT /users/lisa/projectX/proj.h\n\nThen place them under version control:\n\nVERSION-CONTROL /users/lisa/projectX/makefile\nVERSION-CONTROL /users/lisa/projectX/main.c\nVERSION-CONTROL /users/lisa/projectX/proj.h\n\nSo, workspace /users/lisa/projectX now contains three version-controlled\nresources:\n\n/users/lisa/projectX/makefile\n/users/lisa/projectX/main.c\n/users/lisa/projectX/proj.h\n\nAt this point, how do I create the workspace for Chuck?\n\nOne thing that seemingly might make sense is to just do:\n\nCOPY /users/lisa/projectX  TO /users/chuck/projectX\nDepth: infinity\n\nBut, there are no defined COPY semantics for workspaces.\n\nAlternately, it seems Chuck would need to do:\n\nMKWORKSPACE /users/chuck/projectX/\n\nThen create new version-controlled resources for the existing version\nhistories:\n\nVERSION-CONTROL /users/chuck/projectX/makefile\nVERSION-CONTROL /users/chuck/projectX/main.c\nVERSION-CONTROL /users/chuck/projectX/proj.h\n\nDo I have this right?\n\n- Jim\n\n\n\n", "id": "lists-005-16240394"}, {"subject": "RE: Workspace questio", "content": "Jim:\n\nYour conclusions are correct.\n\nIn particular, as you surmise, you do not use COPY.\nThis is deliberate, because a \"copy\"\ndoes not share the same \"version history\"\nas the resource it was copied from because they are two\ndifferent resources.\n\nBut you do use VERSION-CONTROL.  In particular, you would\nuse PROPFIND (Depth:Infinity) to find out the DAV:checked-in\nand DAV:checked-out versions in /users/lisa/projectX.\nThen you would use a VERSION-CONTROL requests with the \nappropriate version URL in the request body to initialize\nthe version-controlled resources in /users/chuck/projectX.\n\nOr if /users/lisa/projectX is under baseline control,\nyou could initialize /users/chuck/projectX with a baseline\nfrom /users/lisa/projectX in a single request.\n\nCheers,\nGeoff\n\n-----Original Message-----\nFrom: Jim Whitehead [mailto:ejw@cse.ucsc.edu]\nSent: Friday, April 20, 2001 6:54 PM\nTo: ietf-dav-versioning@w3.org\nSubject: Workspace question\n\n\nI'm trying to figure out how the following scenario would work:\n\nSay there are two people, Lisa and Chuck, and they each want to have a\nserver-side workspace for a small project.\n\nLet's assume Lisa creates the initial workspace:\n\nMKWORKSPACE /users/lisa/projectX/\n\nThen populates it with the project files.\n\nPUT /users/lisa/projectX/makefile\nPUT /users/lisa/projectX/main.c\nPUT /users/lisa/projectX/proj.h\n\nThen place them under version control:\n\nVERSION-CONTROL /users/lisa/projectX/makefile\nVERSION-CONTROL /users/lisa/projectX/main.c\nVERSION-CONTROL /users/lisa/projectX/proj.h\n\nSo, workspace /users/lisa/projectX now contains three version-controlled\nresources:\n\n/users/lisa/projectX/makefile\n/users/lisa/projectX/main.c\n/users/lisa/projectX/proj.h\n\nAt this point, how do I create the workspace for Chuck?\n\nOne thing that seemingly might make sense is to just do:\n\nCOPY /users/lisa/projectX  TO /users/chuck/projectX\nDepth: infinity\n\nBut, there are no defined COPY semantics for workspaces.\n\nAlternately, it seems Chuck would need to do:\n\nMKWORKSPACE /users/chuck/projectX/\n\nThen create new version-controlled resources for the existing version\nhistories:\n\nVERSION-CONTROL /users/chuck/projectX/makefile\nVERSION-CONTROL /users/chuck/projectX/main.c\nVERSION-CONTROL /users/chuck/projectX/proj.h\n\nDo I have this right?\n\n- Jim\n\n\n\n", "id": "lists-005-16248497"}, {"subject": "Component instead of Configuration/Baseline/Componen", "content": "Hi,\nI know that it's late and probably Geoff is busy rewriting 14.1 to produce\n15, but nevertheless here I have a proposal which would make some concepts\neasier to understand IMHO.\nIn 11 (Baseline feature) a couple of new terms appear:\nConfiguration, meaning a tree of resources rooted at a root (:-) collection,\na technical term.\nBaseline, a technical term which probably is just there because the feature is\ncalled like that, because basically it's just another word for 'configuration version'\nComponents, a logical term which is used to rationalize subbaselines.\nSo I would like to introduce just one new term: Component. And define it like\nthe old Configuration (So Configuration disappears)\nInstead BASELINE-CONTROL use COMPONENT-CONTROL. The necessity for Baseline\ndisappears. It's just a 'component version'.\nSubbaseline-set becomes subcomponent-set and so on.\nA 'Component feature' would show better I think what we want to gain than \n'Baseline feature'.\nSo the beginning could e.g. be:\n\n11 COMPONENT FEATURE\nA \"component\" is a set of resources that consists of a root collection and all\nmenbers of that root collection which aren't a component themselves. ...\n\nThis would just be a (Not so small I admit) editorial change. No different\nfunctionality.\nI hope I didn't miss something you can't do if you drop Configuration and\nBaseline.\n\nCheers, Edgar\n\n\n\n\n-- \nedgar@edgarschwarz.de                    http://www.edgarschwarz.de\n*          DOSenfreie Zone.        Running Native Oberon.         *\nMake it as simple as possible, but not simpler.     Albert Einstein\n\n\n\n", "id": "lists-005-16258334"}, {"subject": "RE: Component instead of Configuration/Baseline/Componen", "content": "I am completely neutral on whether we use the term\n\"configuration\" or the term \"component\" to mean\n\"a collection and all members of that collection\".\n\nI would still use the term \"baseline\" to mean \n\"component version\", since the term baseline is\ncommonly used, and it ties our concepts to common\nusage.\n\nIs anyone else either for or against switching from\n\"configuration\" to \"component\"?\n\nCheers,\nGeoff\n\n-----Original Message-----\nFrom: Edgar@EdgarSchwarz.de [mailto:Edgar@EdgarSchwarz.de]\nSent: Sunday, April 22, 2001 5:42 PM\nTo: ietf-dav-versioning@w3.org\nCc: Edgar@EdgarSchwarz.de\nSubject: Component instead of Configuration/Baseline/Component\n\n\nHi,\nI know that it's late and probably Geoff is busy rewriting 14.1 to produce\n15, but nevertheless here I have a proposal which would make some concepts\neasier to understand IMHO.\nIn 11 (Baseline feature) a couple of new terms appear:\nConfiguration, meaning a tree of resources rooted at a root (:-) collection,\na technical term.\nBaseline, a technical term which probably is just there because the feature\nis\ncalled like that, because basically it's just another word for\n'configuration version'\nComponents, a logical term which is used to rationalize subbaselines.\nSo I would like to introduce just one new term: Component. And define it\nlike\nthe old Configuration (So Configuration disappears)\nInstead BASELINE-CONTROL use COMPONENT-CONTROL. The necessity for Baseline\ndisappears. It's just a 'component version'.\nSubbaseline-set becomes subcomponent-set and so on.\nA 'Component feature' would show better I think what we want to gain than \n'Baseline feature'.\nSo the beginning could e.g. be:\n\n11 COMPONENT FEATURE\nA \"component\" is a set of resources that consists of a root collection and\nall\nmenbers of that root collection which aren't a component themselves. ...\n\nThis would just be a (Not so small I admit) editorial change. No different\nfunctionality.\nI hope I didn't miss something you can't do if you drop Configuration and\nBaseline.\n\nCheers, Edgar\n\n\n\n\n-- \nedgar@edgarschwarz.de                    http://www.edgarschwarz.de\n*          DOSenfreie Zone.        Running Native Oberon.         *\nMake it as simple as possible, but not simpler.     Albert Einstein\n\n\n\n", "id": "lists-005-16267147"}, {"subject": "I-D ACTION:draft-ietf-deltav-versioning-15.tx", "content": "A New Internet-Draft is available from the on-line Internet-Drafts directories.\nThis draft is a work item of the Web Versioning and Configuration Management Working Group of the IETF.\n\nTitle: Versioning Extensions to WebDAV\nAuthor(s): G. Clemm, J. Amsden, C. Kaler, J. Whitehead\nFilename: draft-ietf-deltav-versioning-15.txt\nPages: 96\nDate: 24-Apr-01\n\nThis document specifies a set of methods, headers, and resource types \nthat define the WebDAV Versioning extensions to the HTTP/1.1 protocol. \nWebDAV Versioning will minimize the complexity of clients that are\ncapable of interoperating with a variety of versioning repository\nmanagers, to facilitate widespread deployment of applications capable of\nutilizing the WebDAV Versioning services.\n\nA URL for this Internet-Draft is:\nhttp://www.ietf.org/internet-drafts/draft-ietf-deltav-versioning-15.txt\n\nInternet-Drafts are also available by anonymous FTP. Login with the username\n\"anonymous\" and a password of your e-mail address. After logging in,\ntype \"cd internet-drafts\" and then\n\"get draft-ietf-deltav-versioning-15.txt\".\n\nA list of Internet-Drafts directories can be found in\nhttp://www.ietf.org/shadow.html \nor ftp://ftp.ietf.org/ietf/1shadow-sites.txt\n\n\nInternet-Drafts can also be obtained by e-mail.\n\nSend a message to:\nmailserv@ietf.org.\nIn the body type:\n\"FILE /internet-drafts/draft-ietf-deltav-versioning-15.txt\".\n\nNOTE:The mail server at ietf.org can return the document in\nMIME-encoded form by using the \"mpack\" utility.  To use this\nfeature, insert the command \"ENCODING mime\" before the \"FILE\"\ncommand.  To decode the response(s), you will need \"munpack\" or\na MIME-compliant mail reader.  Different MIME-compliant mail readers\nexhibit different behavior, especially when dealing with\n\"multipart\" MIME messages (i.e. documents which have been split\nup into multiple messages), so check your local documentation on\nhow to manipulate these messages.\n\n\nBelow is the data which will enable a MIME compliant mail reader\nimplementation to automatically retrieve the ASCII version of the\nInternet-Draft.\n\n\n\n\n\n\nMessage/External-body attachment: stored\n\n\n\n\n", "id": "lists-005-16277620"}, {"subject": "Re: AW: Issue: XML_LANG_CLARIF", "content": "I agree with Julian that\n\n\"just saying that RFC3076 (Canonical XML) applies (thus persisting *all*\nattributes on the property elements in\naddition to inherited attributes from the XML namespace) would make the\n*specification* simpler and more logical.\"\n\nI believe that is what the client would expect and I believe that it is\neasy enough for servers to implement.\n\nRegards,\nTim\n\n----------------------------------------\n\"Julian Reschke\" <julian.reschke@gmx.de> wrote:\n\nGeoff,\n\nCanonical XML specifies the inheritance behaviour for all attributes in the\nXML namespace, that is with a namespaceUri of\nhttp://www.w3.org/XML/1998/namespace, so what a server needs to do is to\ncheck the namespace, that's all. There's a reason why the W3C is defining\nthings like this -- if WebDAV is going to define it's own rules, it would\nbetter add a rationale to define why...\n\nIn my proposal in\n\n\nhttp://lists.w3.org/Archives/Public/w3c-dist-auth/2001AprJun/0102.html\n\nI've tried to write down what seems to be the current consensus (no\nattributes except xml:lang), although just saying that RFC3076 (Canonical\nXML) applies (thus persisting *all* attributes on the property elements in\naddition to inherited attributes from the XML namespace) would make the\n*specification* simpler and more logical.\n\nJulian\n\n-----Urspr?ngliche Nachricht-----\nVon: w3c-dist-auth-request@w3.org\n[mailto:w3c-dist-auth-request@w3.org]Im Auftrag von Clemm, Geoff\nGesendet: Mittwoch, 25. April 2001 23:18\nAn: WebDAV WG\nBetreff: RE: Issue: XML_LANG_CLARIFY\n\n\n   From: Julian Reschke [mailto:julian.reschke@gmx.de]\n\n   I don't see any advantage as long as the inheritence rules are clearly\n   specified, such as in\n\n   <http://www.w3.org/TR/2001/REC-xml-c14n-20010315#DocSubsets>\n\nThis doesn't help a server that encounters an attribute type that it\ndoesn't understand (for example, a custom attribute or an attribute\nintroduced since that server was written).  If we only allow\nattributes on the property node and below, a server can at least save\nand return those attributes.  If we allow attributes on the DAV:prop\nnode, the server would need to know the inheritance characteristics of\nthat attribute in order to know how/whether to persist it.  I don't\nthink we want to just say \"all attributes are inherited\".\n\nWe could make an exception for xml:lang, but I don't see a compelling\nbenefit for doing so (I'm not saying there isn't one, but rather\njust that I don't see it).\n\nBut whatever we do with xml:lang, I believe we should say something\nin general about the handling of attributes on DAV:prop nodes\n(saying there can't be any is about the simplest thing we could\nsay :-).\n\nCheers,\nGeoff\n\n   -----Urspr?ngliche Nachricht-----\n   Von: w3c-dist-auth-request@w3.org\n   [mailto:w3c-dist-auth-request@w3.org]Im Auftrag von Clemm, Geoff\n   Gesendet: Mittwoch, 25. April 2001 22:47\n   An: WebDAV WG\n   Betreff: RE: Issue: XML_LANG_CLARIFY\n\n\n   To keep things simple, I would just disallow the xml:lang attribute\n   on the D:prop node.  In fact, I would indicate that all attributes\n   on the D:prop node are ignored unless explicitly defined by the\n   protocol as being allowed there.\n\n   This allows a client to ignore attributes on the D:prop node, and\n   just store all attributes on the property node, without having to\n   understand the inheritance semantics of those attributes.\n\n   Cheers,\n   Geoff\n\n   -----Original Message-----\n   From: Jason Crawford [mailto:ccjason@us.ibm.com]\n   Sent: Wednesday, April 25, 2001 3:44 PM\n   To: Clemm, Geoff\n   Cc: WebDAV WG\n   Subject: RE: Issue: XML_LANG_CLARIFY\n\n\n\n\n   To be persistant, I think we all agree the xml:lang attribute can be on\nthe\n   property node and doesn't have to be on a child.  Do we agree that it\ncan\n   even be on the parent of the property node and still be persistant?\n   Should we discourage the client from doing this though?\n\n   <D:set>\n    <D:prop xml:lang=\"NL\">\n      <D:displaynname>Kikkers in de koek</D:displayname>\n    </D:prop>\n   </D:set>\n\n\n   ------------------------------------------\n   Phone: 914-784-7569,   ccjason@us.ibm.com\n\n\n\n", "id": "lists-005-16286478"}, {"subject": "Re (2): Component instead of Configuration/Baseline/Componen", "content": "\"Clemm, Geoff\" <gclemm@rational.com> wrote:\n> I am completely neutral on whether we use the term\n> \"configuration\" or the term \"component\" to mean\n> \"a collection and all members of that collection\".\n> \n> I would still use the term \"baseline\" to mean \n> \"component version\", since the term baseline is\n> commonly used, and it ties our concepts to common\n> usage.\nAcceptable. Perhaps we shouldn't be too puristic.\n \n> Is anyone else either for or against switching from\n> \"configuration\" to \"component\"?\n> \n> Cheers,\n> Geoff\nYesterday a posting told me that 15 is already availabe.\n(For some time already it seems if I look at the DELTA-V page).\nThe introductory part on baselines is much clearer now.\nNevertheless I still would like to drop 'configuration' which\nonly appears in this context and replace it by 'component'.\nAs Geoff seems to be neutral on this topic, I really would\nlike to see at least one or two other opinions.\n\nCheers, Edgar\n  \n> -----Original Message-----\n> From: Edgar@EdgarSchwarz.de [mailto:Edgar@EdgarSchwarz.de]\n> Sent: Sunday, April 22, 2001 5:42 PM\n> To: ietf-dav-versioning@w3.org \n> Cc: Edgar@EdgarSchwarz.de\n> Subject: Component instead of Configuration/Baseline/Component\n> \n> \n> Hi,\n> I know that it's late and probably Geoff is busy rewriting 14.1 to produce\n> 15, but nevertheless here I have a proposal which would make some concepts\n> easier to understand IMHO.\n> In 11 (Baseline feature) a couple of new terms appear:\n> Configuration, meaning a tree of resources rooted at a root (:-) collection,\n> a technical term.\n> Baseline, a technical term which probably is just there because the feature\n> is\n> called like that, because basically it's just another word for\n> 'configuration version'\n> Components, a logical term which is used to rationalize subbaselines.\n> So I would like to introduce just one new term: Component. And define it\n> like\n> the old Configuration (So Configuration disappears)\n> Instead BASELINE-CONTROL use COMPONENT-CONTROL. The necessity for Baseline\n> disappears. It's just a 'component version'.\n> Subbaseline-set becomes subcomponent-set and so on.\n> A 'Component feature' would show better I think what we want to gain than \n> 'Baseline feature'.\n> So the beginning could e.g. be:\n> \n> 11 COMPONENT FEATURE\n> A \"component\" is a set of resources that consists of a root collection and\n> all\n> menbers of that root collection which aren't a component themselves. ...\n> \n> This would just be a (Not so small I admit) editorial change. No different\n> functionality.\n> I hope I didn't miss something you can't do if you drop Configuration and\n> Baseline.\n> \n> Cheers, Edgar\n\n-- \nedgar@edgarschwarz.de                    http://www.edgarschwarz.de\n*          DOSenfreie Zone.        Running Native Oberon.         *\nMake it as simple as possible, but not simpler.     Albert Einstein\n\n\n\n", "id": "lists-005-16299461"}, {"subject": "RE: Re (2): Component instead of Configuration/Baseline/Componen", "content": "   From: Edgar@EdgarSchwarz.de [mailto:Edgar@EdgarSchwarz.de]\n\n   Yesterday a posting told me that 15 is already availabe.\n   (For some time already it seems if I look at the DELTA-V page).\n\nActually, I got the \"dates\" a bit wrong when I updated\nthe deltav page (those dates are entered by hand to the html\npage)... but after I noticed it, I figured it was\nclose enough (at least the month was right).\n\n   The introductory part on baselines is much clearer now.\n\nGood!\n\n   Nevertheless I still would like to drop 'configuration' which\n   only appears in this context and replace it by 'component'.\n   As Geoff seems to be neutral on this topic, I really would\n   like to see at least one or two other opinions.\n\nYes, I am neutral.  I believe Jim Amsden was the only one who\nresponded so far (and he wanted to keep it \"configuration\",\nbecause \"component\" is so overused as a term).\n\nJust to expand a bit on my \"neutrality\", on one hand, the\nterm \"configuration\" emphasizes the fact that it is \"a set\nof things\", but on the other hand, the term \"component\"\nemphasizes the fact that this is something you can plug\nin and plug out, which is exactly what you do when you\ncreate and select different baselines for a baselined collection.\n\nSo on a purely technical basis, I probably prefer the term\n\"component\", but on an inertial basis (i.e. we've been calling it a\nconfiguration for a while now, and people seem OK with it), I prefer\nthe term \"configuration\".  So, either way is fine with me (:-).\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-16311435"}, {"subject": "RE: Re (2): Component instead of Configuration/Baseline/Componen", "content": "FWIW I'm similarly indifferent to the term used.\n\nRegards,\nTim\n\nFrom \"Clemm, Geoff\" <gclemm@rational.com>\n\n   From: Edgar@EdgarSchwarz.de [mailto:Edgar@EdgarSchwarz.de]\n\n   Yesterday a posting told me that 15 is already availabe.\n   (For some time already it seems if I look at the DELTA-V page).\n\nActually, I got the \"dates\" a bit wrong when I updated\nthe deltav page (those dates are entered by hand to the html\npage)... but after I noticed it, I figured it was\nclose enough (at least the month was right).\n\n   The introductory part on baselines is much clearer now.\n\nGood!\n\n   Nevertheless I still would like to drop 'configuration' which\n   only appears in this context and replace it by 'component'.\n   As Geoff seems to be neutral on this topic, I really would\n   like to see at least one or two other opinions.\n\nYes, I am neutral.  I believe Jim Amsden was the only one who\nresponded so far (and he wanted to keep it \"configuration\",\nbecause \"component\" is so overused as a term).\n\nJust to expand a bit on my \"neutrality\", on one hand, the\nterm \"configuration\" emphasizes the fact that it is \"a set\nof things\", but on the other hand, the term \"component\"\nemphasizes the fact that this is something you can plug\nin and plug out, which is exactly what you do when you\ncreate and select different baselines for a baselined collection.\n\nSo on a purely technical basis, I probably prefer the term\n\"component\", but on an inertial basis (i.e. we've been calling it a\nconfiguration for a while now, and people seem OK with it), I prefer\nthe term \"configuration\".  So, either way is fine with me (:-).\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-16321125"}, {"subject": "Protocol support for maintaining a &quot;local file area&quot; on the clien ", "content": "I've been reviewing the protocol wrt client maintenance of a\n\"local file area\" (i.e. a tree of files on the client that\nreflect the state on the server).  I identified two issues:\n\nThe first issue was with the extended UPDATE semantics\nfor the baseline feature (this is what lets you update all\nthe members of a baseline-controlled collection with a new\nbaseline).  In order for a client file area to efficiently\nreflect the state on the server, it needs to have the UPDATE\nrequest return the set of affected resources, just as a\nMERGE request does.\n\nThis is pretty easy to fix ... just add a DAV:updated-set\nand DAV:ignored-set in the UPDATE response body.\n\nThe second issue was having multiple file areas for the same\nworkspace.  To handle this efficiently, we could allow one\nworkspace to be UPDATE'd by another.  This allows a client to\ncreate a separate workspace for its file area, and then use\nUPDATE to determine how that file area should be changed to\nreflect the changes made to some shared workspace.\n\nJimW: Note that this also makes your \"initialize a new workspace\"\nscenario much simpler ... you just use one UPDATE call\ninstead of a series of VERSION-CONTROL calls.\n\nAny objections?  If not, I will plan on requesting these\nextensions to UPDATE semantics during the \"IESG last call\"\nperiod.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-16330992"}, {"subject": "Re: Protocol support for maintaining a &quot;local file area&quot; on the  clien ", "content": "\"Clemm, Geoff\" <gclemm@rational.com> wrote:\n\n> I've been reviewing the protocol wrt client maintenance of a\n> \"local file area\" (i.e. a tree of files on the client that\n> reflect the state on the server).  I identified two issues:\n>\n> The first issue was with the extended UPDATE semantics\n> for the baseline feature (this is what lets you update all\n> the members of a baseline-controlled collection with a new\n> baseline).  In order for a client file area to efficiently\n> reflect the state on the server, it needs to have the UPDATE\n> request return the set of affected resources, just as a\n> MERGE request does.\n>\n> This is pretty easy to fix ... just add a DAV:updated-set\n> and DAV:ignored-set in the UPDATE response body.\n\nThat's easy enough, no objections here.\n\n> The second issue was having multiple file areas for the same\n> workspace.\n\nWhat is a 'file area'?\n\n> To handle this efficiently, we could allow one\n> workspace to be UPDATE'd by another.  This allows a client to\n> create a separate workspace for its file area, and then use\n> UPDATE to determine how that file area should be changed to\n> reflect the changes made to some shared workspace.\n>\n> JimW: Note that this also makes your \"initialize a new workspace\"\n> scenario much simpler ... you just use one UPDATE call\n> instead of a series of VERSION-CONTROL calls.\n\nSounds similar to the operations currently available under baseline -- but\nI'll wait to hear what a file area is first.\n\n> Any objections?  If not, I will plan on requesting these\n> extensions to UPDATE semantics during the \"IESG last call\"\n> period.\n\nTim\n\n\n\n", "id": "lists-005-16339450"}, {"subject": "RE: Protocol support for maintaining a &quot;local file area&quot; on the   clien", "content": "   From: Tim_Ellison@uk.ibm.com [mailto:Tim_Ellison@uk.ibm.com]\n\n   \"Clemm, Geoff\" <gclemm@rational.com> wrote:\n\n   > I've been reviewing the protocol wrt client maintenance of a\n   > \"local file area\" (i.e. a tree of files on the client that\n   > reflect the state on the server).  I identified two issues:\n\n   ...\n\n   > The second issue was having multiple file areas for the same\n   > workspace.\n\n   What is a 'file area'?\n\nSee above.  A file area is \"a tree of files on the client that\nreflect the state on the server\".\n\n   > To handle this efficiently, we could allow one workspace to be\n   > UPDATE'd by another.  This allows a client to create a separate\n   > workspace for its file area, and then use UPDATE to determine how\n   > that file area should be changed to reflect the changes made to\n   > some shared workspace.\n\n   > JimW: Note that this also makes your \"initialize a new workspace\"\n   > scenario much simpler ... you just use one UPDATE call instead of\n   > a series of VERSION-CONTROL calls.\n\n   Sounds similar to the operations currently available under baseline\n   -- but I'll wait to hear what a file area is first.\n\nYes.  The only difference is that it allows you to have multiple file\nareas before you are ready to baseline (e.g. you want to compile on a\ncouple of different platforms before creating the baseline).\n\nSimilarly, it is a convenient way to initialize a new workspace to\nselect the same versions as an existing workspace, even when you are\nnot ready to \"baseline\" the state of that existing workspace.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-16348723"}, {"subject": "RE: Workspace questio", "content": "> Or if /users/lisa/projectX is under baseline control,\n> you could initialize /users/chuck/projectX with a baseline\n> from /users/lisa/projectX in a single request.\n\nHow would you do this?  I'm not seeing how this would work from reading the\nspec.\n\n- Jim\n\n\n\n", "id": "lists-005-16358373"}, {"subject": "RE: Workspace questio", "content": "   From: Jim Whitehead [mailto:ejw@cse.ucsc.edu]\n\n   > Or if /users/lisa/projectX is under baseline control,\n   > you could initialize /users/chuck/projectX with a baseline\n   > from /users/lisa/projectX in a single request.\n\n   How would you do this?  I'm not seeing how this would work from\n   reading the spec.\n\nYou get the baseline with a DAV:expand-property report or a\ncouple of PROPFIND's (get the DAV:version-controlled-configuration\nof /users/lisa/projectX, and then get the DAV:checked-in baseline\nof that configuration).\n\nThen apply BASELINE-CONTROL to /users/chuck/projectX, specifying\nthat baseline.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-16365499"}, {"subject": "target date for RFC on Versioning Extensions", "content": "Hello, \n\nI'm wondering if there's a target date for versioning extensions to DAV\nstandard to be released.\nWhat are the most optimistic and the most pessimistic estimates?\n\nThanks,\n-V.\n\n\n***********************************************************************\nThis email and any files transmitted with it are confidential and \nintended solely for the use of the individual or entity to whom they   \nare addressed. Any unauthorized review, use, disclosure or distribution \nis prohibited. If you are not the intended recipient, please contact \nthe sender by reply e-mail and destroy all copies of the original \nmessage. \n***********************************************************************\n\n\n\n", "id": "lists-005-16372969"}, {"subject": "RE: target date for RFC on Versioning Extensions", "content": "I assume by \"released\", you mean \"assigned an RFC number at\nproposed draft level?  My personal guess is that an optimistic\nanswer is 3 months, and a pessimistic answer is 9 months.\n\nWe've handed the draft off to our area directors, so they\nshould be able to give a better estimate (Ned?).\n\nCheers,\nGeoff\n\n-----Original Message-----\nFrom: Vladimir Grishchenko [mailto:VGrishchenko@serena.com]\nSent: Monday, April 30, 2001 5:02 PM\nTo: 'ietf-dav-versioning@w3.org'\nSubject: target date for RFC on Versioning Extensions?\n\n\nHello, \n\nI'm wondering if there's a target date for versioning extensions to DAV\nstandard to be released.\nWhat are the most optimistic and the most pessimistic estimates?\n\nThanks,\n-V.\n\n\n\n", "id": "lists-005-16381194"}, {"subject": "File creation date, version creation date, and getlastmodifie", "content": "WebDAV people:  RFC2518 leaves it carefully open whether 'getlastmodified'\nchanges when properties of the resource change.  It seems useful either\nway -- users might want to get the last time the content was changed, or\nthey might want to see the last time the file was touched at all.  Is there\nsome precedent?  Really, one might best be served by a new timestamp\nproperty, so the suite of timestamp-like properties would be\n - creationdate\n - time the content was last modified (etag changes, but etag doesn't\nprovide a timestamp)\n - time the file was last touched\n\nWhich one of the last two is most commonly handled by getlastmodified?\nImplementors speak up?\n\nDeltaV people: What does it mean to get the time file content was last\n\"modified\", if the file is versioned?  I don't see that the behaviour of\ngetlastmodified is specified for a Version-Controlled Resource, can this be\na recommendation in the spec to promote consistency?  For one thing, should\n'getlastmodified' on the VCR change when it is checked out, or when it is\nchecked in, or both?\n\nlisa\n\n\n\n", "id": "lists-005-16389842"}, {"subject": "RE: File creation date, version creation date, and getlastmodifie", "content": "We update getlastmodified whenever properties or contents change.  Either\nof these is reflected in the ETag.  I'm not sure we need another property\nto handle changes to the properties separately.\n\n> -----Original Message-----\n> From: ietf-dav-versioning-request@w3.org\n> [mailto:ietf-dav-versioning-request@w3.org]On Behalf Of Lisa Dusseault\n> Sent: Wednesday, May 02, 2001 2:25 PM\n> To: DeltaV; w3c-dist-auth@w3.org\n> Subject: File creation date, version creation date, and getlastmodified\n>\n>\n>\n> WebDAV people:  RFC2518 leaves it carefully open whether 'getlastmodified'\n> changes when properties of the resource change.  It seems useful either\n> way -- users might want to get the last time the content was changed, or\n> they might want to see the last time the file was touched at all.\n>  Is there\n> some precedent?  Really, one might best be served by a new timestamp\n> property, so the suite of timestamp-like properties would be\n>  - creationdate\n>  - time the content was last modified (etag changes, but etag doesn't\n> provide a timestamp)\n>  - time the file was last touched\n>\n> Which one of the last two is most commonly handled by getlastmodified?\n> Implementors speak up?\n>\n> DeltaV people: What does it mean to get the time file content was last\n> \"modified\", if the file is versioned?  I don't see that the behaviour of\n> getlastmodified is specified for a Version-Controlled Resource,\n> can this be\n> a recommendation in the spec to promote consistency?  For one\n> thing, should\n> 'getlastmodified' on the VCR change when it is checked out, or when it is\n> checked in, or both?\n>\n> lisa\n>\n>\n\n\n\n", "id": "lists-005-16399470"}, {"subject": "RE: File creation date, version creation date, and getlastmodifie ", "content": "I am an implementer, not a developer, but I do have an opinion on this one.\n\nFor process workflow applications, it is very important to know when the\nresource is last changed.  I care less about property changes, although that\nevent is key for backup software.  I would like to see both tracked.\n\nAs far as versioning is concerned, it will often be important to know both\nwhen Check-out occurred and when Check-in occurred, however, getlastmodified\nshould only reflect Check-in.  This is because the resource has not been\nmodified, as far as DAV is concerned, until that Check-in has occurred.  To\nkeep this consistent with the three properties you listed, getlasttouched\nwould reflect the Check-out event because the file lock was set, while\ngetlastmodified would not.  On Checked-in both would be updated.\n\nMatt Harris\n\n> -----Original Message-----\n> From: Lisa Dusseault [mailto:lisa@xythos.com]\n> Sent: Wednesday, May 02, 2001 2:25 PM\n> To: DeltaV; w3c-dist-auth@w3.org\n> Subject: File creation date, version creation date, and \n> getlastmodified\n> \n> \n> \n> WebDAV people:  RFC2518 leaves it carefully open whether \n> 'getlastmodified'\n> changes when properties of the resource change.  It seems \n> useful either\n> way -- users might want to get the last time the content was \n> changed, or\n> they might want to see the last time the file was touched at \n> all.  Is there\n> some precedent?  Really, one might best be served by a new timestamp\n> property, so the suite of timestamp-like properties would be\n>  - creationdate\n>  - time the content was last modified (etag changes, but etag doesn't\n> provide a timestamp)\n>  - time the file was last touched\n> \n> Which one of the last two is most commonly handled by getlastmodified?\n> Implementors speak up?\n> \n> DeltaV people: What does it mean to get the time file content was last\n> \"modified\", if the file is versioned?  I don't see that the \n> behaviour of\n> getlastmodified is specified for a Version-Controlled \n> Resource, can this be\n> a recommendation in the spec to promote consistency?  For one \n> thing, should\n> 'getlastmodified' on the VCR change when it is checked out, \n> or when it is\n> checked in, or both?\n> \n> lisa\n> \n\n\n\n", "id": "lists-005-16410032"}, {"subject": "RE: File creation date, version creation date, and getlastmodifie ", "content": "Hi,\n\nI am not sure that properties are necessarily \"becoming a true part of the\nfile\", our system is a complete workflow \nbased SCM system with build capabilities etc.  WebDAV clients will be using\nthe same repository/server as the rest of \nour application.  Some of our properties like \"workflow state\" for example,\nare not directly related to the file\ncontent.\n\nWe track the last modification time (in UTC) of the file content at check-in\ntime.\nSeparately we track the last time the file had any property changed etc,\nthis includes promoting through the workflow, \nchanging properties, locking/unlocking, adding/removing from a collection\netc.\n  \nOne example of why we keep the \"last modified\" date separate is that our\nbuild system uses this to compare with \ntimestamps of files on disk to decide if the file is out of date.  If the\nWebDAV client set the last modification \ntime each time a property was changed then the build system would think the\nfile on disk was \"out of date\" compared \nto the file held in version control.\n\nI am in favor of Lisa's suggestion of having three timestamps.\n\nRegards, \n--\nPeter Raymond - MERANT  \nTechnical Architect (ADM)\nTel: +44 (0)1727 813362\nFax: +44 (0)1727 869804\nmailto:Peter.Raymond@merant.com\nWWW: http://www.merant.com\n\n\n\n-----Original Message-----\nFrom: Douglas R. Steen [mailto:dsteen@ekeeper.com]\nSent: Thursday, May 03, 2001 1:41 AM\nTo: w3c-dist-auth@w3.org\nSubject: RE: File creation date, version creation date, and\ngetlastmodified\n\n\nre: WebDAV.\n\nMy vote would be changing getlastmodified when the properties change.  As we\nuse properties more and more, they become a true part of the file in the\nuser experience.  Trying to distinguish between the two (\"I know you changed\nthe billing number yesterday, but you didn't change the _content_ so the\ndate still reads last week...\") can be difficult.\n\nUnfortunately, it's a very easy shorthand for server implementations to use\nthe file last-modified date for getlastmodified, and for the operating\nsystems I know that reflects the date/time of the last content modification.\n\n  Douglas R. Steen\n  dsteen@ekeeper.com\n  Drag-and-Drop Web File Management\n  http://www.eKeeper.com\n\n\n\n\n-----Original Message-----\nFrom: w3c-dist-auth-request@w3.org\n[mailto:w3c-dist-auth-request@w3.org]On Behalf Of Lisa Dusseault\nSent: Wednesday, May 02, 2001 4:25 PM\nTo: DeltaV; w3c-dist-auth@w3.org\nSubject: File creation date, version creation date, and getlastmodified\n\n\n\nWebDAV people:  RFC2518 leaves it carefully open whether 'getlastmodified'\nchanges when properties of the resource change.  It seems useful either\nway -- users might want to get the last time the content was changed, or\nthey might want to see the last time the file was touched at all.  Is there\nsome precedent?  Really, one might best be served by a new timestamp\nproperty, so the suite of timestamp-like properties would be\n - creationdate\n - time the content was last modified (etag changes, but etag doesn't\nprovide a timestamp)\n - time the file was last touched\n\nWhich one of the last two is most commonly handled by getlastmodified?\nImplementors speak up?\n\nDeltaV people: What does it mean to get the time file content was last\n\"modified\", if the file is versioned?  I don't see that the behaviour of\ngetlastmodified is specified for a Version-Controlled Resource, can this be\na recommendation in the spec to promote consistency?  For one thing, should\n'getlastmodified' on the VCR change when it is checked out, or when it is\nchecked in, or both?\n\nlisa\n\n\n\n", "id": "lists-005-16421615"}, {"subject": "RE: File creation date, version creation date, and getlastmodifie", "content": "Lisa Dusseault wrote:\n\n> WebDAV people:  RFC2518 leaves it carefully open whether\n> 'getlastmodified' changes when properties of the resource\n> change.  It seems useful either way -- users might want to\n> get the last time the content was changed, or they might\n> want to see the last time the file was touched at all.  Is\n> there some precedent?\n\nI seem to recall that moddav does not change the last modified timestamp\nwhen properties are updated.\n\nThere has been discussion on this topic previously, with a weak consensus\nthat the properties should not contribute to last modified changes.  I\nthink this is the right answer.\n\nPeter Raymond <Peter.Raymond@merant.com> wrote:\n\n> One example of why we keep the \"last modified\" date separate\n> is that our build system uses this to compare with timestamps\n> of files on disk to decide if the file is out of date.  If the\n> WebDAV client set the last modification time each time a\n> property was changed then the build system would think the file\n> on disk was \"out of date\" compared to the file held in version\n> control.\n\nI think that this is a common scenario, also found on caching proxies, that\nrelies upon property updates not being considered a change to the resource.\n\nClearly there is some ambiguity here.  On the one hand, properties appear\nto be 'part of' a resource.  They appear when a resource is created, and\ndisappear when a resource is deleted.  Operations on a property are via the\nURL of the resource.  However, live properties exhibit behaviour that sets\nthem apart from the resource.  They can change even when a resource is\nversioned or locked, and (at least in a couple of implementations) changes\nto the resource's properties do not change the last modified timestamp of\nthe resource.\n\nLisa Dusseault wrote:\n\n> DeltaV people: What does it mean to get the time file content\n> was last \"modified\", if the file is versioned?  I don't see\n> that the behaviour of getlastmodified is specified for a\n> Version-Controlled Resource, can this be a recommendation in\n> the spec to promote consistency?  For one thing, should\n> 'getlastmodified' on the VCR change when it is checked out,\n> or when it is checked in, or both?\n\nWhen a version-controlled resource is checked-out its contents and dead\nproperties are updated to be the same as the version identified in the\nDAV:checked-in property.  Therefore the DAV:getlastmodified timestamp\nclearly should be updated to reflect the changes.  Note that the timestamp\nvalue is the server's notion of the time the version-controlled resource\nwas modified and not the same as the checked-in version's\nDAV:getlastmodified.\n\nWhen a version-controlled resource is checked-in, its content and dead\nproperties become those of a new version in the version history.  Some live\nproperties of the version-controlled resource are updated to reflect its\nchecked-in status.  In this case I argue that the DAV:getlastmodified\ntimestamp does not change.\n\nFurthermore, if you use UPDATE to update the content and dead properties of\na version-controlled resource to reflect the state of a version in version\nhistory, the DAV:getlastmodified timestamp will be the time that the UPDATE\nmethod was applied and not that of the version.  It it were otherwise\nupdating the version-controlled resource to an earlier version would make\nthe last modified time go 'backwards' which would potentially screw up\ncaching proxies and clients that rely on If-Unmodified-Since: headers etc.\n\n> - time the file was last touched\n\nWhat is your definition of touched?  Dead property updates?  Given the\nnumber of live / computed properties I assume you agree that their values\ndo not contribute to the touched timestamp?\n\nRegards,\n\nTim Ellison\nJava Technology Centre, MP146\nIBM UK Laboratory, Hursley Park, Winchester, UK. SO21 2JN\ntel: +44 (0)1962 819872  internal: 249872  MOBx: 270452\n\n\n\n", "id": "lists-005-16435815"}, {"subject": "RE: File creation date, version creation date, and getlastmodifie", "content": "If this system has been exposed via WebDAV, I'd be quite interested to hear\nhow you did it.  What does the resource URL point to?  Did you find WebDAV\nlacking?  How did you work around it or extend it?\n\nlisa\n\n> -----Original Message-----\n> From: w3c-dist-auth-request@w3.org\n> [mailto:w3c-dist-auth-request@w3.org]On Behalf Of Sridhar Erukulla\n> Sent: Thursday, May 03, 2001 10:04 AM\n> To: Tim_Ellison@uk.ibm.com; ietf-dav-versioning@w3.org;\n> w3c-dist-auth@w3.org\n> Subject: RE: File creation date, version creation date, and\n> getlastmodified\n>\n>\n> In our document management system we have two concepts, 'Object'\n> and 'Document'. An 'Object' comprises of a 'Document' and all its\n> properties. The function GetLastModified for a document retrieves\n> when the actual document was modified where as for an object when\n> the object was modified which includes the properties and\n> document.\n>\n> We found that this distinction was critical in distinguishing the\n> physical actions like library maintenance, caching etc. vs. the\n> business operations like using workflow.\n>\n> -S\n\n\n\n", "id": "lists-005-16448255"}, {"subject": "RE: File creation date, version creation date, and getlastmodifie ", "content": "   From: Lisa Dusseault [mailto:lisa@xythos.com]\n\n   DeltaV people: What does it mean to get the time file content was\n   last \"modified\", if the file is versioned?\n\nSame as if it is not versioned.  The DAV:getlastmodified changes\nif the content that would be retrieved by GET changes.\n\n   I don't see that the behaviour of getlastmodified is specified for\n   a Version-Controlled Resource, can this be a recommendation in the\n   spec to promote consistency?\n\nWe normally only mention things that we change/extend.  Since we don't\nchange anything about the semantics of DAV:getlastmodified, it is not\nmentioned.\n\n   For one thing, should 'getlastmodified' on the VCR change when it\n   is checked out, or when it is checked in, or both?\n\nSince neither checkout nor checkin modify the content of a VCR,\nneither affects the DAV:getlastmodified value.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-16459254"}, {"subject": "RE: File creation date, version creation date, and getlastmodifie ", "content": "I agree with Tim's position.  The DAV:getlastmodified\nproperty is explicitly defined to coincide with the value\nof the Last-Modified header, which is used to control\ncaching of resource content (i.e. what GET returns).\n\nRequiring that this date change whenever a property \nchanges would severely harm existing HTTP clients which\ndepend on Last-Modified for content caching.  This would\nbe especially disastrous for a server that maintains\na \"last-accessed\" property on resources, since if we\nstated that a property change causes a Last-Modified change, \nthe DAV:getlastmodified would change every time a resource\nis accessed.\n\nOn the other hand, many implementations depend on the\nunderlying \"modification date\" being maintained by the\nunderlying repository (to allow multi-protocol access\nto that repository), and for those implementations that\nstore some properties in the repository item that\naffects the modification date, the modification date\non those servers will be affected by a change to those\nproperties.\n\nSo I believe the current RFC-2518 language is correct\nand appropriate.\n\nCheers,\nGeoff\n\n-----Original Message-----\nFrom: Tim_Ellison@uk.ibm.com [mailto:Tim_Ellison@uk.ibm.com]\nSent: Thursday, May 03, 2001 6:49 AM\nTo: ietf-dav-versioning@w3.org; w3c-dist-auth@w3.org\nSubject: RE: File creation date, version creation date, and\ngetlastmodified\n\n\n\n\nLisa Dusseault wrote:\n\n> WebDAV people:  RFC2518 leaves it carefully open whether\n> 'getlastmodified' changes when properties of the resource\n> change.  It seems useful either way -- users might want to\n> get the last time the content was changed, or they might\n> want to see the last time the file was touched at all.  Is\n> there some precedent?\n\nI seem to recall that moddav does not change the last modified timestamp\nwhen properties are updated.\n\nThere has been discussion on this topic previously, with a weak consensus\nthat the properties should not contribute to last modified changes.  I\nthink this is the right answer.\n\nPeter Raymond <Peter.Raymond@merant.com> wrote:\n\n> One example of why we keep the \"last modified\" date separate\n> is that our build system uses this to compare with timestamps\n> of files on disk to decide if the file is out of date.  If the\n> WebDAV client set the last modification time each time a\n> property was changed then the build system would think the file\n> on disk was \"out of date\" compared to the file held in version\n> control.\n\nI think that this is a common scenario, also found on caching proxies, that\nrelies upon property updates not being considered a change to the resource.\n\nClearly there is some ambiguity here.  On the one hand, properties appear\nto be 'part of' a resource.  They appear when a resource is created, and\ndisappear when a resource is deleted.  Operations on a property are via the\nURL of the resource.  However, live properties exhibit behaviour that sets\nthem apart from the resource.  They can change even when a resource is\nversioned or locked, and (at least in a couple of implementations) changes\nto the resource's properties do not change the last modified timestamp of\nthe resource.\n\nLisa Dusseault wrote:\n\n> DeltaV people: What does it mean to get the time file content\n> was last \"modified\", if the file is versioned?  I don't see\n> that the behaviour of getlastmodified is specified for a\n> Version-Controlled Resource, can this be a recommendation in\n> the spec to promote consistency?  For one thing, should\n> 'getlastmodified' on the VCR change when it is checked out,\n> or when it is checked in, or both?\n\nWhen a version-controlled resource is checked-out its contents and dead\nproperties are updated to be the same as the version identified in the\nDAV:checked-in property.  Therefore the DAV:getlastmodified timestamp\nclearly should be updated to reflect the changes.  Note that the timestamp\nvalue is the server's notion of the time the version-controlled resource\nwas modified and not the same as the checked-in version's\nDAV:getlastmodified.\n\nWhen a version-controlled resource is checked-in, its content and dead\nproperties become those of a new version in the version history.  Some live\nproperties of the version-controlled resource are updated to reflect its\nchecked-in status.  In this case I argue that the DAV:getlastmodified\ntimestamp does not change.\n\nFurthermore, if you use UPDATE to update the content and dead properties of\na version-controlled resource to reflect the state of a version in version\nhistory, the DAV:getlastmodified timestamp will be the time that the UPDATE\nmethod was applied and not that of the version.  It it were otherwise\nupdating the version-controlled resource to an earlier version would make\nthe last modified time go 'backwards' which would potentially screw up\ncaching proxies and clients that rely on If-Unmodified-Since: headers etc.\n\n> - time the file was last touched\n\nWhat is your definition of touched?  Dead property updates?  Given the\nnumber of live / computed properties I assume you agree that their values\ndo not contribute to the touched timestamp?\n\nRegards,\n\nTim Ellison\nJava Technology Centre, MP146\nIBM UK Laboratory, Hursley Park, Winchester, UK. SO21 2JN\ntel: +44 (0)1962 819872  internal: 249872  MOBx: 270452\n\n\n\n", "id": "lists-005-16468061"}, {"subject": "What was I thinkin' ? (was: RE: File creation date, version  creation date, and getlastmodified", "content": "On May 3, 2001 I wrote:\n\n> When a version-controlled resource is checked-out its\n> contents and dead properties are updated to be the same\n> as the version identified in the DAV:checked-in property.\n\nWhen a version-controlled resource is checked-out it's contents and dead\nproperties will _already_ be the same as those of the version identified by\nthe DAV:checked-in property, so no update is required.\n\n> Therefore the DAV:getlastmodified timestamp clearly should\n> be updated to reflect the changes.  Note that the timestamp\n> value is the server's notion of the time the version-controlled\n> resource was modified and not the same as the checked-in\n> version's DAV:getlastmodified.\n\n...so saying the \"timestamp clearly should be updated\" was totally bogus.\nThe act of checking-out a version-controlled resource only updates the live\nproperties of the resource, and 'clearly' this should *not* update the\nDAV:getlastmodified timestamp<g>\nSorry for causing confusion.\n\nTim\n\n\n\n", "id": "lists-005-16482842"}, {"subject": "RE: File creation date, version creation date, and getlastmodifie", "content": "\"Clemm, Geoff\" <gclemm@rational.com> wrote:\n\n>    From: Lisa Dusseault [mailto:lisa@xythos.com]\n>\n>    DeltaV people: What does it mean to get the time file content was\n>    last \"modified\", if the file is versioned?\n>\n> Same as if it is not versioned.  The DAV:getlastmodified changes\n> if the content that would be retrieved by GET changes.\n\nWell, if a client were to PUT the same bytes twice, the content returned by\nGET did not change, but I would expect the Last-Modified timestamp to\nchange.  I guess that is a HTTP/1.1 discussion, and RFC2616#sec14.29 seems\nquite flexible on the issue.\n\n>    I don't see that the behaviour of getlastmodified is specified for\n>    a Version-Controlled Resource, can this be a recommendation in the\n>    spec to promote consistency?\n>\n> We normally only mention things that we change/extend.  Since we don't\n> change anything about the semantics of DAV:getlastmodified, it is not\n> mentioned.\n>\n>    For one thing, should 'getlastmodified' on the VCR change when it\n>    is checked out, or when it is checked in, or both?\n>\n> Since neither checkout nor checkin modify the content of a VCR,\n> neither affects the DAV:getlastmodified value.\n>\n> Cheers,\n> Geoff\n>\n>\n\n\n\n", "id": "lists-005-16491416"}, {"subject": "RE: File creation date, version creation date, and getlastmodifie ", "content": "The semantics of Last-Modified is not phrased in terms of\nwhat operation is being applied to a resource (i.e. it doesn't\nsay \"a PUT always causes Last-Modified to be updated\"),\nbut rather is phrased in terms of whether or not the content\n(as returned by GET) has been \"modified\".  So although a server is\nallowed to update the Last-Modified date (to the current date)\nwhenever it wants, an interoperable client cannot count on it\nchanging unless the content has changed (which would not be\nthe case for an idempotent PUT).\n\nCheers,\nGeoff\n\n-----Original Message-----\nFrom: Tim_Ellison@uk.ibm.com [mailto:Tim_Ellison@uk.ibm.com]\n\n\"Clemm, Geoff\" <gclemm@rational.com> wrote:\n> ....  The DAV:getlastmodified changes\n> if the content that would be retrieved by GET changes.\n\nWell, if a client were to PUT the same bytes twice, the content returned by\nGET did not change, but I would expect the Last-Modified timestamp to\nchange.  I guess that is a HTTP/1.1 discussion, and RFC2616#sec14.29 seems\nquite flexible on the issue.\n\n\n\n", "id": "lists-005-16501003"}, {"subject": "RE: File creation date, version creation date, and getlastmodifie", "content": "at the risk of drifting too far off topic ...\n\nGeoff wrote:\n> The semantics of Last-Modified ... is phrased in\n> terms of whether or not the content (as returned\n> by GET) has been \"modified\"\n\nYou'll have to send me the reference to this, because as I read the spec.\nthe definition of modified is left entirely at the server's discretion\n(other than the fact that the date cannot be in the future)\n\nRFC2616#sec14.29\n\"The Last-Modified entity-header field indicates the date and time at which\nthe origin server believes the variant was last modified. [...] The exact\nmeaning of this header field depends on the implementation of the origin\nserver and the nature of the original resource.\"\n\nHowever, we agree on the conclusions.\n\nRegards,\nTim\n\n-----Original Message-----\n\"Clemm, Geoff\" <gclemm@rational.com> wrote:\n\nThe semantics of Last-Modified is not phrased in terms of\nwhat operation is being applied to a resource (i.e. it doesn't\nsay \"a PUT always causes Last-Modified to be updated\"),\nbut rather is phrased in terms of whether or not the content\n(as returned by GET) has been \"modified\".  So although a server is\nallowed to update the Last-Modified date (to the current date)\nwhenever it wants, an interoperable client cannot count on it\nchanging unless the content has changed (which would not be\nthe case for an idempotent PUT).\n\nCheers,\nGeoff\n\n-----Original Message-----\nFrom: Tim_Ellison@uk.ibm.com [mailto:Tim_Ellison@uk.ibm.com]\n\n\"Clemm, Geoff\" <gclemm@rational.com> wrote:\n> ....  The DAV:getlastmodified changes\n> if the content that would be retrieved by GET changes.\n\nWell, if a client were to PUT the same bytes twice, the content returned by\nGET did not change, but I would expect the Last-Modified timestamp to\nchange.  I guess that is a HTTP/1.1 discussion, and RFC2616#sec14.29 seems\nquite flexible on the issue.\n\n\n\n", "id": "lists-005-16510182"}, {"subject": "dav:resourcetype; ietf-dav-versioning&#64;w3.or", "content": "I've been successfully converted by Yaron to the belief that we should use\n<dav:resourcetype> to indicate multiple pieces of type information (like the\nset of interfaces supported) in the new standards (ACL, DeltaV, RFC2518--\nthe sequel).\n\nThis would mean that you might see something like:\n\n<dav:resourcetype>\n    <dav:collection/><dav:principal/><dav:versioned/>\n</dav:resourcetype>\n\nas a property of a group (a collection principal) that is under version\ncontrol,\nrather than <is-principal> and <is-versioned>.\n\nThe major reason NOT to use <dav:resourcetype> was the WebFolders\nbug, but I've now heard from multiple source that WebFolders has so many\nbugs in it that it isn't worth excessive deference (and something like\nWebDrive\nis what people ACTUALLY use), that Microsoft is rewriting this for Windows\nXP,\nand the point that we'll just have to create another property to do the same\nthing.  This also helps clients now that future properties like\n<is-principal>\nare type information, since they will be grouped under <dav:resourcetype>.\n\nHowever, I'm only in favor of making this change if we can apply it to ACL,\nDeltaV and add clarifying examples in the new RFC2518.\n\n--Eric\n\n\n\n", "id": "lists-005-16520844"}, {"subject": "RE: resourcetype; ietf-dav-versioning&#64;w3.or", "content": "Eric,\n\nI support adding information elements to <dav:resourcetype>. We've\nencountered the same limitations with WebFolders and are happy to hear it\nwill be written for XP.\n\nThanks,\n\nMark\n\n\n\n\n\n-----Original Message-----\nFrom: ietf-dav-versioning-request@w3.org\n[mailto:ietf-dav-versioning-request@w3.org]On Behalf Of Eric Sedlar\nSent: Friday, May 04, 2001 9:23 AM\nTo: Acl@Webdav.Org\nCc: ietf-dav-versioning@w3.org\nSubject: dav:resourcetype; ietf-dav-versioning@w3.org\n\n\nI've been successfully converted by Yaron to the belief that we should use\n<dav:resourcetype> to indicate multiple pieces of type information (like the\nset of interfaces supported) in the new standards (ACL, DeltaV, RFC2518--\nthe sequel).\n\nThis would mean that you might see something like:\n\n<dav:resourcetype>\n    <dav:collection/><dav:principal/><dav:versioned/>\n</dav:resourcetype>\n\nas a property of a group (a collection principal) that is under version\ncontrol,\nrather than <is-principal> and <is-versioned>.\n\nThe major reason NOT to use <dav:resourcetype> was the WebFolders\nbug, but I've now heard from multiple source that WebFolders has so many\nbugs in it that it isn't worth excessive deference (and something like\nWebDrive\nis what people ACTUALLY use), that Microsoft is rewriting this for Windows\nXP,\nand the point that we'll just have to create another property to do the same\nthing.  This also helps clients now that future properties like\n<is-principal>\nare type information, since they will be grouped under <dav:resourcetype>.\n\nHowever, I'm only in favor of making this change if we can apply it to ACL,\nDeltaV and add clarifying examples in the new RFC2518.\n\n--Eric\n\n\n\n", "id": "lists-005-16529904"}, {"subject": "Re: File creation date, version creation date, and getlastmodifie", "content": "At 2:24 PM -0700 5/2/01, Lisa Dusseault wrote:\n>WebDAV people:  RFC2518 leaves it carefully open whether 'getlastmodified'\n>changes when properties of the resource change.  It seems useful either\n>way -- users might want to get the last time the content was changed, or\n>they might want to see the last time the file was touched at all.  Is there\n>some precedent? ...\n>\n>Which one of the last two is most commonly handled by getlastmodified?\n>Implementors speak up?\n\nAt Adobe our various servers take different positions on this.  We \nhave found that clients which have transitioned from doing FTP to \ndoing DAV and HTTP 1.0 clients tend to use getlastmodified where they \nreally should be using etags, so servers that cater to those clients \n(\"general purpose servers\" :^) are careful not to tamper with \ngetlastmodified unless the content changes.  But our high-end \nworkflow servers expect savvy clients and users who really care about \nproperty (read workflow) changes, so they update whether or not \ncontent changes.\n\n     dan\n-- \nDaniel Brotsky, Adobe Systems\ntel 408-536-4150, pager 877-704-4062\n2-way pager email: <mailto:page-dbrotsky@adobe.com>\n\n\n\n", "id": "lists-005-16541003"}, {"subject": "RE: File creation date, version creation date, and getlastmodifie", "content": "In our document management system we have two concepts, 'Object'\nand 'Document'. An 'Object' comprises of a 'Document' and all its\nproperties. The function GetLastModified for a document retrieves\nwhen the actual document was modified where as for an object when\nthe object was modified which includes the properties and\ndocument.\n\nWe found that this distinction was critical in distinguishing the\nphysical actions like library maintenance, caching etc. vs. the\nbusiness operations like using workflow.\n\n-S\n\n\n\n", "id": "lists-005-16550499"}, {"subject": "RE: File creation date, version creation date, and getlastmodifie  ", "content": ">I am in favor of Lisa's suggestion of having three timestamps.\n\nI'm not sure Lisa was actually making that suggestion :^), but in any \nevent I don't like the idea of requiring this kind of timestamping at \nall.  It adds detail to the abstract \"DAV resource\" that \nunnecessarily biases it towards file-system implementations (where \ncontent and properties are likely to be stored separately and \nmodified independently).\n\nI believe that the modification date property is in DAV because it's \nthere in HTTP 1.1.  And its semantics are left vague exactly to allow \nmany different implementations.\n\nThe move to etags in 1.1 was specifically intended to more generally \nanswer the question \"has the content of this resource changed.\"  We \nshouldn't now go back and try to resurrect modification dates as the \nway to find out about content changes.\n\nSimilarly, I don't think we should tie modification dates one way or \nthe other to property changes. if clients need a way of asking \"has \nthis resource changed in any way - content or properties\" then we \nshould add a \"property etag\" in addition to the \"content etag\" that \nnow exists.\n\n     dan\n-- \nDaniel Brotsky, Adobe Systems\ntel 408-536-4150, pager 877-704-4062\n2-way pager email: <mailto:page-dbrotsky@adobe.com>\n\n\n\n", "id": "lists-005-16559605"}, {"subject": "RE: File creation date, version creation date, and getlastmodifie", "content": "At 1:03 PM -0400 5/3/01, Sridhar Erukulla wrote:\n>In our document management system we have two concepts, 'Object'\n>and 'Document'. An 'Object' comprises of a 'Document' and all its\n>properties. The function GetLastModified for a document retrieves\n>when the actual document was modified where as for an object when\n>the object was modified which includes the properties and\n>document.\n>\n>We found that this distinction was critical in distinguishing the\n>physical actions like library maintenance, caching etc. vs. the\n>business operations like using workflow.\n\nAdobe's InScope server does a similar thing distinguishing \"Assets\" \nfrom \"Versions\" (which are the content and dead property snapshots of \nthe asset); assets as a resource have content and properties (the \nlatest version) but also properties that the version doesn't have. \nMany of these \"non-content\" properties are about the workflow.\n\nOur approach (prior to delta-V) has been to establish a conventional \nrelationship between the asset URLs and the version URLs; in fact \nassets are (non-DAV-compliant) collections of their versions.\n\nWith delta-V stabilizing we are hoping, going forward, to use delta-V \nmechanisms to connect assets and their versions.\n\n     dan\n-- \nDaniel Brotsky, Adobe Systems\ntel 408-536-4150, pager 877-704-4062\n2-way pager email: <mailto:page-dbrotsky@adobe.com>\n\n\n\n", "id": "lists-005-16569316"}, {"subject": "RE: File creation date, version creation date, and getlastmodifie", "content": "No, Not yet! But in future we want to expose the Document objects\nfirst, eventually the Holder objects.\n\nSridhar\n\n-----Original Message-----\nFrom: w3c-dist-auth-request@w3.org\n[mailto:w3c-dist-auth-request@w3.org]On Behalf Of Lisa Dusseault\nSent: May 3, 2001 1:38 PM\nTo: Sridhar Erukulla; ietf-dav-versioning@w3.org;\nw3c-dist-auth@w3.org\nSubject: RE: File creation date, version creation date, and\ngetlastmodified\n\n\nIf this system has been exposed via WebDAV, I'd be quite\ninterested to hear\nhow you did it.  What does the resource URL point to?  Did you\nfind WebDAV\nlacking?  How did you work around it or extend it?\n\nlisa\n\n\n\n", "id": "lists-005-16579334"}, {"subject": "RE: File creation date, version creation date, and getlastmodifie", "content": "This sounds so similar to the \"structured documents\" that were discussed on\nthis list ages ago.  As I recall, one of the scenarios for having a resource\nthat was a cross between a collection and a document was to gather a web\npage together with its images in one place.  In some ways, it's treated like\na single document -- the browsing client should just see the resultant web\npage when they try to view the resource.\n\nYaron's brief proposal:\nhttp://lists.w3.org/Archives/Public/w3c-dist-auth/1997JanMar/0220.html\nJudith's elaboration:\nhttp://lists.w3.org/Archives/Public/w3c-dist-auth/1997JanMar/0239.html\nJim's issues and clarifications:\nhttp://lists.w3.org/Archives/Public/w3c-dist-auth/1997JanMar/0301.html\n\nThe draft \"draft-hopmann-collection-props-00.txt\" had a property related to\nthis, \"isstructureddocument\".  I replied to some questions about the intent\nof this property:\nhttp://lists.w3.org/Archives/Public/w3c-dist-auth/1999JanMar/0028.html\n\nI'm not at all sure that the model that would work for web pages (which have\nmultiple independent pieces) would work for your assets, but it's possible\nthat some of the same mechanisms could apply.  I think there is some common\nground:\n\n - A casually browsing client usually needs to see a \"structured document\"\nor \"asset\" as a single resource, with a dominant view.  They may not need to\nunderstand anything about the interior structure.\n - When dealing with casually browsing clients or old clients, the server\ncan pretend that the resource is a simple resource with a content-type of\nhtml, ms-word, pdf or whatever the content-type of the \"default\" document\ninside the container is.\n - An advanced client may need to break open the container to examine or\ndeal with the pieces, but probably not all the time.  E.g. the container\nwould be broken open when editing or changing structure (e.g. deleting\npieces, deleting old versions).\n - While the contents of the container may be versioned, the container\nitself may not be (unclear).\n\nlisa\n\n\n> -----Original Message-----\n> From: ietf-dav-versioning-request@w3.org\n> [mailto:ietf-dav-versioning-request@w3.org]On Behalf Of Dan Brotsky\n> Sent: Thursday, May 03, 2001 11:20 AM\n> To: Sridhar Erukulla\n> Cc: ietf-dav-versioning@w3.org; w3c-dist-auth@w3.org\n> Subject: RE: File creation date, version creation date, and\n> getlastmodified\n>\n>\n> At 1:03 PM -0400 5/3/01, Sridhar Erukulla wrote:\n> >In our document management system we have two concepts, 'Object'\n> >and 'Document'. An 'Object' comprises of a 'Document' and all its\n> >properties. The function GetLastModified for a document retrieves\n> >when the actual document was modified where as for an object when\n> >the object was modified which includes the properties and\n> >document.\n> >\n> >We found that this distinction was critical in distinguishing the\n> >physical actions like library maintenance, caching etc. vs. the\n> >business operations like using workflow.\n>\n> Adobe's InScope server does a similar thing distinguishing \"Assets\"\n> from \"Versions\" (which are the content and dead property snapshots of\n> the asset); assets as a resource have content and properties (the\n> latest version) but also properties that the version doesn't have.\n> Many of these \"non-content\" properties are about the workflow.\n>\n> Our approach (prior to delta-V) has been to establish a conventional\n> relationship between the asset URLs and the version URLs; in fact\n> assets are (non-DAV-compliant) collections of their versions.\n>\n> With delta-V stabilizing we are hoping, going forward, to use delta-V\n> mechanisms to connect assets and their versions.\n>\n>      dan\n> --\n> Daniel Brotsky, Adobe Systems\n> tel 408-536-4150, pager 877-704-4062\n> 2-way pager email: <mailto:page-dbrotsky@adobe.com>\n\n\n\n", "id": "lists-005-16589598"}, {"subject": "RE: File creation date, version creation date, and getlastmodifie", "content": "Lisa,\n\nYou put the words that I think this discussion boils down to:\n\n>  - While the contents of the container may be versioned, the\ncontainer\n> itself may not be (unclear).\n>\n> lisa\n\nPutting the question back, what does getlastmodifed refer to? the\ncontainer or the contents?\n\n\nSridhar\n\n\n\n", "id": "lists-005-16604146"}, {"subject": "Summary: File creation date, version creation date, and getlastmodifie", "content": "Let me see if I can summarize points of consensus I saw in this thread.\n\nProblem Statement\n-----------------\n\nThe initial problem statement appears to be:\n\nIn RFC 2518, the definition of the getlastmodified property is intentionally\nambiguous on the issue of whether property changes cause the getlastmodified\nproperty to be updated. As well, the underlying definition of the\nLast-Modified header in HTTP is also ambiguous.\n\nThe implied (but never explicitly stated) problem is that client\nimplementors might want getlastmodified to have more precise semantics.  In\nparticular, it might be useful to know\n(a) *if* any (dead) property was changed\n(b) *when* any (dead) property was changed.\n(c) *when* the body (and only the body) was changed\n\nA client can observe the value of getetag to determine *if* the body has\nchanged.\n\nHowever, no scenarios were provided to motivate this capability.\n\nSolution Space\n--------------\n\nI detected no rough consensus on any solution.\n\nAssuming such a rough consensus is not developed, the likely outcome will\nbe:\n\n- The specification of getlastmodified will remain the same.\n\nSolutions that were discussed, but which did not receive widespread support:\n\n- Introduce an \"propetag\" property that contained an etag for all (dead)\nproperty content.\n- Introduce a \"proplastmodified\" property that contained the last modified\ndate for (dead) property modifications.\n- Introduce a \"lasttouched\" property that contained the timestamp of the\nlast time the resource (either body or properties) was updated\n\n- Jim\n\n\n\n", "id": "lists-005-16613345"}, {"subject": "RE: Summary: File creation date, version creation date, and getlastmodifie", "content": "I believe that one or more of the possible solutions to this could\nreceive a consensus after a face-to-face discussion.  I suggest bringing\nthis one up again at the next IETF.  I for one would be happy with either\n\"proplastmodified\" or \"lasttouched\", along with disambiguating\n\"getlastmodified\".\n\n--Eric\n\n> -----Original Message-----\n> From: ietf-dav-versioning-request@w3.org\n> [mailto:ietf-dav-versioning-request@w3.org]On Behalf Of Jim Whitehead\n> Sent: Wednesday, May 09, 2001 4:11 PM\n> To: Lisa Dusseault; DeltaV; w3c-dist-auth@w3.org\n> Subject: Summary: File creation date, version creation date, and\n> getlastmodified\n>\n>\n> Let me see if I can summarize points of consensus I saw in this thread.\n>\n> Problem Statement\n> -----------------\n>\n> The initial problem statement appears to be:\n>\n> In RFC 2518, the definition of the getlastmodified property is\n> intentionally\n> ambiguous on the issue of whether property changes cause the\n> getlastmodified\n> property to be updated. As well, the underlying definition of the\n> Last-Modified header in HTTP is also ambiguous.\n>\n> The implied (but never explicitly stated) problem is that client\n> implementors might want getlastmodified to have more precise\n> semantics.  In\n> particular, it might be useful to know\n> (a) *if* any (dead) property was changed\n> (b) *when* any (dead) property was changed.\n> (c) *when* the body (and only the body) was changed\n>\n> A client can observe the value of getetag to determine *if* the body has\n> changed.\n>\n> However, no scenarios were provided to motivate this capability.\n>\n> Solution Space\n> --------------\n>\n> I detected no rough consensus on any solution.\n>\n> Assuming such a rough consensus is not developed, the likely outcome will\n> be:\n>\n> - The specification of getlastmodified will remain the same.\n>\n> Solutions that were discussed, but which did not receive\n> widespread support:\n>\n> - Introduce an \"propetag\" property that contained an etag for all (dead)\n> property content.\n> - Introduce a \"proplastmodified\" property that contained the last modified\n> date for (dead) property modifications.\n> - Introduce a \"lasttouched\" property that contained the timestamp of the\n> last time the resource (either body or properties) was updated\n>\n> - Jim\n>\n>\n\n\n\n", "id": "lists-005-16623446"}, {"subject": "Date", "content": "Just wondering...\n\nIn early versions of DeltaV there was a DAV:checkin-date property\ndefined on version resources.  Together with DAV:creationdate, one\nwas able to track both, the checkin and the checkout date.\nAccording to the current draft, should I use DAV:getlastmodified\ninstead?  (Note on issue WRITE_DAV_PROP: This would require the\nlastmodified date not being affected, when properties on version\nresources are modified.)\n\nGreetings,\n            Juergen\n\n\n\n", "id": "lists-005-16635075"}, {"subject": "RE: Date", "content": "We always supported tracking the checkin date, but we never\nsupported tracking the checkout date.  Even with working\nresources, although the DAV:creation-date of the working\nresource is the checkout date, the working resource is\ndeleted when it is checked in, and the DAV:creation-date\nof the new version resource indicates when that version resource\nwas created, i.e. the checkin date.\n\nThe DAV:checkin-date property was removed from the spec\nwhen we observed that the DAV:checkin date of a version will\nalways be the DAV:creation-date of that version, so the\nDAV:checkin-date was redundant.\n\nThe versioning protocol does not modify the behavior/definition\nof DAV:getlastmodified, so it just displays its standard behavior,\ni.e. it MUST change if the content of the resource changes, and\nit MAY change for other reasons (such as a change to some property\nvalue). \n\nCheers,\nGeoff\n\n-----Original Message-----\nFrom: Juergen Reuter [mailto:reuter@ira.uka.de]\nSent: Thursday, May 10, 2001 6:09 AM\nTo: ietf-dav-versioning@w3.org\nCc: reuter@ira.uka.de\nSubject: Dates\n\n\nJust wondering...\n\nIn early versions of DeltaV there was a DAV:checkin-date property\ndefined on version resources.  Together with DAV:creationdate, one\nwas able to track both, the checkin and the checkout date.\nAccording to the current draft, should I use DAV:getlastmodified\ninstead?  (Note on issue WRITE_DAV_PROP: This would require the\nlastmodified date not being affected, when properties on version\nresources are modified.)\n\nGreetings,\n            Juergen\n\n\n\n", "id": "lists-005-16642206"}, {"subject": "VERSION-CONTROL with Location header", "content": "I scanned the archives, but could not find anything about\nthis. In case I missed it, my humble excuses for posting\nthis again:\n\nThe response to a VERSION-CONTROL request does not carry\na Location header similar to CHECKIN (Draft 15). Now, I\nwould propose that the client receives such a header\nin case the resource changed status from versionable to\nversioned (and is now checked-in).\n\nScenario: with basic versioning a user might have checked\nout a number of resources for editing. Now he adds a couple\nof new resources which are initially not under version control.\nThen he (or rather his client application) tries to check in\nall resources he has created or changed, issuing CHECKIN and\nVERSION-CONTROL requests.\n\nOutcome 1: all requests succeed and the client application\ncan display the version URIs of the checked-in versions to\nthe user by using the Location headers of the responses.\n\nOutcome 2: resources were checked in our put under version\ncontrol by someone else. In this case the client application\ncan be aware of the modified resource by\na) failed CHECKIN requests for already checked in resources\nb) missing Location headers for resource already under version\n   control.\n\nDoes this make sense to anyone but me?\n\nStefan\n\n\n\n", "id": "lists-005-16650697"}, {"subject": "RE: Summary: File creation date, version creation date, and getlastmodifie", "content": "Eric Sedlar writes:\n> I believe that one or more of the possible solutions to this could\n> receive a consensus after a face-to-face discussion.  I suggest bringing\n> this one up again at the next IETF.  I for one would be happy with either\n> \"proplastmodified\" or \"lasttouched\", along with disambiguating\n> \"getlastmodified\".\n\nSince the mailing list is the final arbiter of consensus, why not resolve\nthe issue on the list? Many issues in other IETF standards get resolved this\nway...\n\nOne thing that could help move this issue forward is for someone to post a\nmessage to the list, in specification langiuage, giving a concrete proposal.\nI haven't seen one yet...\n\n- Jim\n\n\n\n", "id": "lists-005-16659228"}, {"subject": "Re: VERSION-CONTROL with Location header", "content": "\"Stefan Eissing\" <stefan.eissing@greenbytes.de> wrote:\n> I scanned the archives, but could not find anything about\n> this. In case I missed it, my humble excuses for posting\n> this again:\n>\n> The response to a VERSION-CONTROL request does not carry\n> a Location header similar to CHECKIN (Draft 15). Now, I\n> would propose that the client receives such a header\n> in case the resource changed status from versionable to\n> versioned (and is now checked-in).\n\nWhen VERSION-CONTROL is applied successfully to a versionable resource, the\nversionable resource is _replaced_ by a checked-in version-controlled\nresource (i.e., the version-controlled resource is identified by the same\nURL that previously identified the versionable resource).  No 'Location:'\nheader is therefore required to identify the version-controlled resource.\n\nThe resulting checked-in version-controlled resource has a <DAV:checked-in>\nproperty whose value is the URL of the version with the same content and\ndead properties.  This version URL can be used as a 'stable' reference to\nthe content and dead properties.\n\nThe Location: response header is provided with CHECKIN because it gives the\nclient the URL to the version that was created by the successful check in.\nThis becomes important when checking in a working resource as the working\nresource is deleted upon a successful check in.  (When checking in a\nchecked-out version-controlled resource the Location: response is the same\nas the resulting checked-in version-controlled resource's <DAV:checked-in>\nproperty value.)\n\n> Scenario: with basic versioning a user might have checked\n> out a number of resources for editing. Now he adds a couple\n> of new resources which are initially not under version control.\n> Then he (or rather his client application) tries to check in\n> all resources he has created or changed, issuing CHECKIN and\n> VERSION-CONTROL requests.\n\nNote that when a client checks out resources for editing, they may be\nchecking out a (checked-in) version-controlled resource which simply makes\nit become a checked-out version-controlled resource (effectively 'marking'\nthe resource mutable); or they may check out a version which creates a new,\nmutable, resource (a working resource).  I'll assume that you are checking\nout one/more version-controlled resource(s).\n\n> Outcome 1: all requests succeed and the client application\n> can display the version URIs of the checked-in versions to\n> the user by using the Location headers of the responses.\n\nThe version URLs are typically meaningless to the user.  They will be\nunique, server generated URLs.  Unless it is important for users to deal\nwith the versions directly, it is likely they will deal with the checked-in\nversion-controlled resources.  As mentioned above, their URLs are more\nlikely to make sense in the users' application.\n\n> Outcome 2: resources were checked in our put under version\n> control by someone else. In this case the client application\n> can be aware of the modified resource by\n> a) failed CHECKIN requests for already checked in resources\n\nRight.  CHECKIN will fail if the resource is not version-controlled, or is\nalready checked-in.  VERSION-CONTROL will succeed (200 OK) if the resource\nis already under version-control.\n\n> b) missing Location headers for resource already under version\n>    control.\n\nNot sure what you mean here.\n\n> Does this make sense to anyone but me?\n\nWhere a client expects some isolation from other clients, they would\ntypically use working resources (client-side workspace scenario) or a\nworkspace resource on the server (server-side workspaces).\nWhere there is overlap and clients are 'bumping into each other' in the\nmanner you discuss, then they have to react to return codes to determine\nthe state of the resources and PROFIND to probe their current state (i.e.\nfor UI updating).  This is less than ideal.\n\nTim\n\n\n\n", "id": "lists-005-16667813"}, {"subject": "AW: VERSION-CONTROL with Location header", "content": "Tim,\n\nthanks for taking the time for this informative answer.\nI did not consider the example with the working resource\nbeing deleted on a checkin, which makes the Location\nheader a necessity. This is indeed not the case with\nVERSION-CONTROL.\n\nHowever, in Section 3.5 it says:\n\"If the request-URL identifies a version-controlled resource,\nthe resource just remains under version-control.\nThis allows a client to be unaware of whether or not a server\nautomatically puts a resource under version control when it\nis created.\"\n\nWhich I read more like \"...keeps the client from knowing\nwhether there was anything done to the resource or not.\"\n\nSee, I'm implementing WebDAV client/gateway code which works\nagainst a remote WebDAV server. Due to performance reasons\nI have to cache resource state (at least for a short time).\nSo, it would be nice to know if VERSION-CONTROL changed the\nresource or not (keeping my cache valid). This could be done\nwith a Location header or via the response code, whatever.\n\nAn optional Location header would have the advantage, that\nclient can be unaware, if they wish, while clients which like\nto know can look for the header.\n\nStefan\n\n\nHowever, as you mentioned,\n> Von: ietf-dav-versioning-request@w3.org\n> [mailto:ietf-dav-versioning-request@w3.org]Im Auftrag von\n> Tim_Ellison@uk.ibm.com\n>\n> \"Stefan Eissing\" <stefan.eissing@greenbytes.de> wrote:\n> > I scanned the archives, but could not find anything about\n> > this. In case I missed it, my humble excuses for posting\n> > this again:\n> >\n> > The response to a VERSION-CONTROL request does not carry\n> > a Location header similar to CHECKIN (Draft 15). Now, I\n> > would propose that the client receives such a header\n> > in case the resource changed status from versionable to\n> > versioned (and is now checked-in).\n>\n> When VERSION-CONTROL is applied successfully to a versionable\n> resource, the\n> versionable resource is _replaced_ by a checked-in version-controlled\n> resource (i.e., the version-controlled resource is identified by the same\n> URL that previously identified the versionable resource).  No 'Location:'\n> header is therefore required to identify the version-controlled resource.\n>\n> The resulting checked-in version-controlled resource has a\n> <DAV:checked-in>\n> property whose value is the URL of the version with the same content and\n> dead properties.  This version URL can be used as a 'stable' reference to\n> the content and dead properties.\n>\n> The Location: response header is provided with CHECKIN because it\n> gives the\n> client the URL to the version that was created by the successful check in.\n> This becomes important when checking in a working resource as the working\n> resource is deleted upon a successful check in.  (When checking in a\n> checked-out version-controlled resource the Location: response is the same\n> as the resulting checked-in version-controlled resource's <DAV:checked-in>\n> property value.)\n>\n> > Scenario: with basic versioning a user might have checked\n> > out a number of resources for editing. Now he adds a couple\n> > of new resources which are initially not under version control.\n> > Then he (or rather his client application) tries to check in\n> > all resources he has created or changed, issuing CHECKIN and\n> > VERSION-CONTROL requests.\n>\n> Note that when a client checks out resources for editing, they may be\n> checking out a (checked-in) version-controlled resource which simply makes\n> it become a checked-out version-controlled resource (effectively 'marking'\n> the resource mutable); or they may check out a version which\n> creates a new,\n> mutable, resource (a working resource).  I'll assume that you are checking\n> out one/more version-controlled resource(s).\n>\n> > Outcome 1: all requests succeed and the client application\n> > can display the version URIs of the checked-in versions to\n> > the user by using the Location headers of the responses.\n>\n> The version URLs are typically meaningless to the user.  They will be\n> unique, server generated URLs.  Unless it is important for users to deal\n> with the versions directly, it is likely they will deal with the\n> checked-in\n> version-controlled resources.  As mentioned above, their URLs are more\n> likely to make sense in the users' application.\n>\n> > Outcome 2: resources were checked in our put under version\n> > control by someone else. In this case the client application\n> > can be aware of the modified resource by\n> > a) failed CHECKIN requests for already checked in resources\n>\n> Right.  CHECKIN will fail if the resource is not version-controlled, or is\n> already checked-in.  VERSION-CONTROL will succeed (200 OK) if the resource\n> is already under version-control.\n>\n> > b) missing Location headers for resource already under version\n> >    control.\n>\n> Not sure what you mean here.\n>\n> > Does this make sense to anyone but me?\n>\n> Where a client expects some isolation from other clients, they would\n> typically use working resources (client-side workspace scenario) or a\n> workspace resource on the server (server-side workspaces).\n> Where there is overlap and clients are 'bumping into each other' in the\n> manner you discuss, then they have to react to return codes to determine\n> the state of the resources and PROFIND to probe their current state (i.e.\n> for UI updating).  This is less than ideal.\n>\n> Tim\n>\n>\n>\n>\n\n\n\n", "id": "lists-005-16679495"}, {"subject": "Resource clas", "content": "[I did send this mail once, but it hasn't appeared, so here's attempt #2]\n---------------------------\nThe issue of determining a versioning resource's classification based on\nthe absence (or otherwise) of properties has been raised before on the\nlist.  Recently however, (in other contexts) people have shifted in favour\nof extensions to <DAV:resourcetype> to convey more 'type' information.\n\nIn support of this shift of opinion, here's my renditioning of how a client\ncurrently determines the resource classification (if, for example, if a\nclient were given a URL in a property with no other information) in a\nversioning world.\n\nTo get an accurate classification the client has to issue a PROPFIND then\nlook at the results as follows (hopefully my layout is not too cryptic):\n\n>>REQUEST\n     PROPFIND /foo HTTP/1.1\n     Host: bar.com\n     Content-Type: text/xml; charset=\"utf-8\"\n     Content-Length: xxx\n\n     <?xml version=\"1.0\" encoding=\"utf-8\" ?>\n     <D:propfind xmlns:D=\"DAV:\">\n         <D:prop>\n             <D:resourcetype/>\n             <D:auto-checkout/>\n             <D:checked-in/>\n             <D:checked-out/>\n             <D:version-name/>\n             <D:workspace-checkout-set/>\n             <D:baseline-controlled-collection/>\n             <D:subactivity-set/>\n         </D:prop>\n     </D:propfind>\n\nInterpreting the results\n--------------\nKey: The major classifications are listed below from (1) to (8).\n\nEach entry marked with a plus-sign can exist in a checked-in xor\nchecked-out state.\n+\n <DAV:checked-in> defined -- the resource is checked-in.\n <DAV:checked-out> defined -- the resource is checked-out.\n\nEach entry marked with an astrix can exist as a collection resource xor a\nnon-collection resource.\n*\n <DAV:resourcetype> value is not <DAV:collection/> -- the resource is not a\ncollection.\n <DAV:resourcetype> value is <DAV:collection/> -- the resource is a\ncollection.\n\n\n(1+*) Version-controlled resource.\n     <DAV:auto-checkout> defined\n\n(2*) Version.\n     <DAV:version-name> defined\n\n(3) Version history.\n     <DAV:resourcetype> value is <DAV:version-history/>\n\n(4) Workspace.\n     <DAV:resourcetype> value is <DAV:collection/>\n     <DAV:workspace-checkout-set> defined\n\n(5*) Working resource.\n     <DAV:checked-out> defined\n     <DAV:auto-checkout> *not* defined\n\n(6+) Version-controlled configuration.\n     <DAV:baseline-controlled-collection/> defined\n\n(7) Baseline.\n     <DAV:resourcetype> value is <DAV:baseline/>\n\n(8) Activity.\n     <DAV:subactivity-set> defined.\n\n\nObservations\n----------\n(i) For the most part we only care if a property is defined - i.e., it\nexists, and not what it's value is.  There is currently no way to ask this\nquestion in WebDAV.\n\n(ii) It would seem that activities should have a <DAV:resourcetype> of\n<DAV:activity>, but I didn't see that in the -15 spec.\n\n(iii) The only way I could see to distinguish a workspace from a 'regular'\ncollection was the presence of <DAV:workspace-checkout-set/> which it would\nseem is likely a very expensive property to query.\n\n\nConclusions\n---------\n(a) We should extend <DAV:resourcetype> to provide all this classification\ninformation in a single property.\n(b) How about extending <DAV:propname/>? such as\n<DAV:propname>\n    <DAV:checked-out/>\n</DAV:propname>\nthen the client would get back just the name or a 404 to determine if it\nexists.\n\n\nTim\n\n\n\n", "id": "lists-005-16693655"}, {"subject": "Re: Pedanti", "content": "Apologies to \"dist-auth\", my mailer is screwed up and this went to the\nwrong list, twice.\nI intended it to go to Delta-V.\n------------\n\nJust to be pedantic, in versioning-15\n\nsection 14.2\n\"A collection has all the properties of a version.\"\nTaken out of context this is misleading.\n\nSection 14.3\n\"In particular, a working [collection] resource is initialized to contain\n... of the checked out [collection] version.\"\n\nI suggest adding the word 'collection' twice, as indicated above.\n\nSection 14.3.1\n\nShould this be marked a required property?\n\n\nTim\n\n\n\n", "id": "lists-005-16704842"}, {"subject": "AW: VERSION-CONTROL with Location header", "content": "> From: \"Stefan Eissing\" <stefan.eissing@greenbytes.de>\n> Date: Fri, 11 May 2001 13:20:55 +0200\n>\n> Tim,\n>\n> thanks for taking the time for this informative answer.\n> I did not consider the example with the working resource\n> being deleted on a checkin, which makes the Location\n> header a necessity. This is indeed not the case with\n> VERSION-CONTROL.\n>\n> However, in Section 3.5 it says:\n> \"If the request-URL identifies a version-controlled resource,\n> the resource just remains under version-control.\n> This allows a client to be unaware of whether or not a server\n> automatically puts a resource under version control when it\n> is created.\"\n>\n> Which I read more like \"...keeps the client from knowing\n> whether there was anything done to the resource or not.\"\n\nThere is no intent here to deceive the client.  Since servers are free to\nput resources under version control as they are created this is merely a\nconvenience (someone requested) for clients.  The convenience saves clients\nhaving to query the resource to see if it is already under version control,\nor dealing with benign 'errors' from the server.  Clients can always create\na resource (say, PUT) then send VERSION-CONTROL to ensure it is under\nversion control, and the server is required to make VERSION-CONTROL a no-op\non version-controlled resources.\n\n> See, I'm implementing WebDAV client/gateway code which works\n> against a remote WebDAV server. Due to performance reasons\n> I have to cache resource state (at least for a short time).\n> So, it would be nice to know if VERSION-CONTROL changed the\n> resource or not (keeping my cache valid). This could be done\n> with a Location header or via the response code, whatever.\n\nAs a caching proxy you would also have no way to know if the resource was\nchanged by VERSION-CONTROL.\n(Interestingly, the spec calls for the response of VERSION-CONTROL to set\nthe \"Cache-Control: no-cache\" response header, which, in the circumstances,\nseems unnecessary.\n\n> An optional Location header would have the advantage, that\n> client can be unaware, if they wish, while clients which like\n> to know can look for the header.\n\nFor a while we had responses of 201 Created if the resource was put under\nversion control, and 200 OK if it was a no-op.\nThe problem would only arise if you are caching live properties aswell as\ncontent and dead properties since VERSION-CONTROL does not change the\ncontent or dead properties of the resource at the request-URI.  If you are\ncaching live properties it is likely that you will have other cache\nconsistency problems too.\n\nTim\n\n\n\n", "id": "lists-005-16711942"}, {"subject": "RE: Resource clas", "content": "I completely agree with a).  Thanks for all of the details making it very\nclear why this is necessary for versioning.\n\n(a) We should extend <DAV:resourcetype> to provide all this classification\n    information in a single property.\n\nAs far as\n\n> (b) How about extending <DAV:propname/>? such as\n> <DAV:propname>\n>     <DAV:checked-out/>\n> </DAV:propname>\n> then the client would get back just the name or a 404 to determine if it\n> exists.\n\nI don't see why that's that much different from what we do right now (get\nall of the names and see if the one you want is there)\n\n--Eric\n\n> -----Original Message-----\n> From: ietf-dav-versioning-request@w3.org\n> [mailto:ietf-dav-versioning-request@w3.org]On Behalf Of\n> Tim_Ellison@uk.ibm.com\n> Sent: Friday, May 11, 2001 3:00 PM\n> To: ietf-dav-versioning@w3.org\n> Subject: Resource class\n>\n>\n>\n>\n> [I did send this mail once, but it hasn't appeared, so here's attempt #2]\n> ---------------------------\n> The issue of determining a versioning resource's classification based on\n> the absence (or otherwise) of properties has been raised before on the\n> list.  Recently however, (in other contexts) people have shifted in favour\n> of extensions to <DAV:resourcetype> to convey more 'type' information.\n>\n> In support of this shift of opinion, here's my renditioning of\n> how a client\n> currently determines the resource classification (if, for example, if a\n> client were given a URL in a property with no other information) in a\n> versioning world.\n>\n> To get an accurate classification the client has to issue a PROPFIND then\n> look at the results as follows (hopefully my layout is not too cryptic):\n>\n> >>REQUEST\n>      PROPFIND /foo HTTP/1.1\n>      Host: bar.com\n>      Content-Type: text/xml; charset=\"utf-8\"\n>      Content-Length: xxx\n>\n>      <?xml version=\"1.0\" encoding=\"utf-8\" ?>\n>      <D:propfind xmlns:D=\"DAV:\">\n>          <D:prop>\n>              <D:resourcetype/>\n>              <D:auto-checkout/>\n>              <D:checked-in/>\n>              <D:checked-out/>\n>              <D:version-name/>\n>              <D:workspace-checkout-set/>\n>              <D:baseline-controlled-collection/>\n>              <D:subactivity-set/>\n>          </D:prop>\n>      </D:propfind>\n>\n> Interpreting the results\n> --------------\n> Key: The major classifications are listed below from (1) to (8).\n>\n> Each entry marked with a plus-sign can exist in a checked-in xor\n> checked-out state.\n> +\n>  <DAV:checked-in> defined -- the resource is checked-in.\n>  <DAV:checked-out> defined -- the resource is checked-out.\n>\n> Each entry marked with an astrix can exist as a collection resource xor a\n> non-collection resource.\n> *\n>  <DAV:resourcetype> value is not <DAV:collection/> -- the\n> resource is not a\n> collection.\n>  <DAV:resourcetype> value is <DAV:collection/> -- the resource is a\n> collection.\n>\n>\n> (1+*) Version-controlled resource.\n>      <DAV:auto-checkout> defined\n>\n> (2*) Version.\n>      <DAV:version-name> defined\n>\n> (3) Version history.\n>      <DAV:resourcetype> value is <DAV:version-history/>\n>\n> (4) Workspace.\n>      <DAV:resourcetype> value is <DAV:collection/>\n>      <DAV:workspace-checkout-set> defined\n>\n> (5*) Working resource.\n>      <DAV:checked-out> defined\n>      <DAV:auto-checkout> *not* defined\n>\n> (6+) Version-controlled configuration.\n>      <DAV:baseline-controlled-collection/> defined\n>\n> (7) Baseline.\n>      <DAV:resourcetype> value is <DAV:baseline/>\n>\n> (8) Activity.\n>      <DAV:subactivity-set> defined.\n>\n>\n> Observations\n> ----------\n> (i) For the most part we only care if a property is defined - i.e., it\n> exists, and not what it's value is.  There is currently no way to ask this\n> question in WebDAV.\n>\n> (ii) It would seem that activities should have a <DAV:resourcetype> of\n> <DAV:activity>, but I didn't see that in the -15 spec.\n>\n> (iii) The only way I could see to distinguish a workspace from a 'regular'\n> collection was the presence of <DAV:workspace-checkout-set/>\n> which it would\n> seem is likely a very expensive property to query.\n>\n>\n> Conclusions\n> ---------\n> (a) We should extend <DAV:resourcetype> to provide all this classification\n> information in a single property.\n> (b) How about extending <DAV:propname/>? such as\n> <DAV:propname>\n>     <DAV:checked-out/>\n> </DAV:propname>\n> then the client would get back just the name or a 404 to determine if it\n> exists.\n>\n>\n> Tim\n>\n>\n>\n>\n\n\n\n", "id": "lists-005-16721368"}, {"subject": "RE: VERSION-CONTROL with Location header", "content": "I agree with Tim's point that Cache-Control: no-cache is not\nneeded for the VERSION-CONTROL response.  Does anyone object\nif we remove this requirement during the IESG last call period?\n\n(Note: I also agree with all the other points Tim has made in this\nthread).\n\nCheers,\nGeoff\n\n-----Original Message-----\nFrom: Tim_Ellison@uk.ibm.com [mailto:Tim_Ellison@uk.ibm.com]\nSent: Friday, May 11, 2001 6:25 PM\nTo: ietf-dav-versioning@w3.org\nSubject: AW: VERSION-CONTROL with Location header?\n\n\n\n\n> From: \"Stefan Eissing\" <stefan.eissing@greenbytes.de>\n> Date: Fri, 11 May 2001 13:20:55 +0200\n>\n> Tim,\n>\n> thanks for taking the time for this informative answer.\n> I did not consider the example with the working resource\n> being deleted on a checkin, which makes the Location\n> header a necessity. This is indeed not the case with\n> VERSION-CONTROL.\n>\n> However, in Section 3.5 it says:\n> \"If the request-URL identifies a version-controlled resource,\n> the resource just remains under version-control.\n> This allows a client to be unaware of whether or not a server\n> automatically puts a resource under version control when it\n> is created.\"\n>\n> Which I read more like \"...keeps the client from knowing\n> whether there was anything done to the resource or not.\"\n\nThere is no intent here to deceive the client.  Since servers are free to\nput resources under version control as they are created this is merely a\nconvenience (someone requested) for clients.  The convenience saves clients\nhaving to query the resource to see if it is already under version control,\nor dealing with benign 'errors' from the server.  Clients can always create\na resource (say, PUT) then send VERSION-CONTROL to ensure it is under\nversion control, and the server is required to make VERSION-CONTROL a no-op\non version-controlled resources.\n\n> See, I'm implementing WebDAV client/gateway code which works\n> against a remote WebDAV server. Due to performance reasons\n> I have to cache resource state (at least for a short time).\n> So, it would be nice to know if VERSION-CONTROL changed the\n> resource or not (keeping my cache valid). This could be done\n> with a Location header or via the response code, whatever.\n\nAs a caching proxy you would also have no way to know if the resource was\nchanged by VERSION-CONTROL.\n(Interestingly, the spec calls for the response of VERSION-CONTROL to set\nthe \"Cache-Control: no-cache\" response header, which, in the circumstances,\nseems unnecessary.\n\n> An optional Location header would have the advantage, that\n> client can be unaware, if they wish, while clients which like\n> to know can look for the header.\n\nFor a while we had responses of 201 Created if the resource was put under\nversion control, and 200 OK if it was a no-op.\nThe problem would only arise if you are caching live properties aswell as\ncontent and dead properties since VERSION-CONTROL does not change the\ncontent or dead properties of the resource at the request-URI.  If you are\ncaching live properties it is likely that you will have other cache\nconsistency problems too.\n\nTim\n\n\n\n", "id": "lists-005-16734333"}, {"subject": "RE: Pedanti", "content": "   From: Tim_Ellison@uk.ibm.com [mailto:Tim_Ellison@uk.ibm.com]\n\n   Just to be pedantic, in versioning-15\n\n   section 14.2\n   \"A collection has all the properties of a version.\"\n   Taken out of context this is misleading.\n\nTim (as usual :-) is being polite ... this is an error.\nIt should say \"A collection version has all the properties of a version.\"\n\nThanks for catching it!\n\n   Section 14.3\n   \"In particular, a working [collection] resource is initialized to contain\n   ... of the checked out [collection] version.\"\n\n   I suggest adding the word 'collection' twice, as indicated above.\n\nThis isn't quite as blatant an error as the first, but it definitely\nshould be changed as you suggest.  Thanks for catching this too!\n\n   Section 14.3.1\n\n   Should this be marked a required property?\n\nIt sure should. 3 for 3!\n\nI'll mark all these as changes to be made during the IETF last call period.\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-16745226"}, {"subject": "RE: Resource clas", "content": "   From: Tim_Ellison@uk.ibm.com [mailto:Tim_Ellison@uk.ibm.com]\n\n   [I did send this mail once, but it hasn't appeared, so here's attempt #2]\n\nI didn't get the mail, so it probably is good you resent.\n\n   ---------------------------\n   The issue of determining a versioning resource's classification\n   based on the absence (or otherwise) of properties has been raised\n   before on the list.  Recently however, (in other contexts) people\n   have shifted in favour of extensions to <DAV:resourcetype> to\n   convey more 'type' information.\n\nNot me ... I think you should just look in the\nDAV:supported-method-set and DAV:supported-live-property-set for the\nmethods or properties that you care about.  If it supports the methods\nand properties you care about, who cares what's in the \"resourcetype\"\nfield (:-).  But then again, if you want to add a bunch of redundant\ninformation to the resourcetype field, I guess I don't really care all\nthat much (although it does violate the Goland rule of \"you are done\nwhen there is nothing left to cut out\" :-).\n\n   In support of this shift of opinion, here's my renditioning of how\n   a client currently determines the resource classification (if, for\n   example, if a client were given a URL in a property with no other\n   information) in a versioning world.\n\n   To get an accurate classification the client has to issue a\n   PROPFIND then look at the results as follows (hopefully my layout\n   is not too cryptic):\n\n   >>REQUEST\nPROPFIND /foo HTTP/1.1\nHost: bar.com\nContent-Type: text/xml; charset=\"utf-8\"\nContent-Length: xxx\n\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<D:propfind xmlns:D=\"DAV:\">\n    <D:prop>\n<D:resourcetype/>\n<D:auto-checkout/>\n<D:checked-in/>\n<D:checked-out/>\n<D:version-name/>\n<D:workspace-checkout-set/>\n<D:baseline-controlled-collection/>\n<D:subactivity-set/>\n    </D:prop>\n</D:propfind>\n\nActually, you can get all the information you need from\nthe DAV:supported-live-property-set property, e.g.:\n\n   >>REQUEST\nPROPFIND /foo HTTP/1.1\nHost: bar.com\nContent-Type: text/xml; charset=\"utf-8\"\nContent-Length: xxx\n\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<D:propfind xmlns:D=\"DAV:\">\n    <D:prop>\n<D:supported-live-property-set/>\n    </D:prop>\n</D:propfind>\n\n\n   Interpreting the results\n   --------------\n   Key: The major classifications are listed below from (1) to (8).\n\n   Each entry marked with a plus-sign can exist in a checked-in xor\n   checked-out state.\n   +\n    <DAV:checked-in> defined -- the resource is checked-in.\n    <DAV:checked-out> defined -- the resource is checked-out.\n\nNote that whether or not a resource is checked-in or checked-out\nis normally considered part of its \"state\" rather than part of\nits \"type\" (which just illustrates the vague boundary between\n\"state\" and \"type\" :-).  If you wanted to know whether or not\na resource was checked-in or checked-out, then you would have\nto PROPFIND for checked-in and checked-out.\n\n   Each entry marked with an astrix can exist as a collection resource\n   xor a non-collection resource.\n   *\n   <DAV:resourcetype> value is not <DAV:collection/> -- the resource\n   is not a collection.\n   <DAV:resourcetype> value is <DAV:collection/> -- the resource is a\n   collection.\n\nYes, if you wanted to find out whether or not a resource is a\ncollection, you would need to query DAV:resourcetype.  But for all\nthe \"types\" of resources introduced by DeltaV, the \nDAV:supported-live-property-set gives you all the info you need\nto determine the type of the resource.\n\n   (1+*) Version-controlled resource.\n<DAV:auto-checkout> defined\n\n(appears in DAV:supported-live-property-set)\n\n   (2*) Version.\n<DAV:version-name> defined\n\n(appears in DAV:supported-live-property-set)\n\n   (3) Version history.\n<DAV:resourcetype> value is <DAV:version-history/>\n\n(or look to see if DAV:root-version is supported)\n\n   (4) Workspace.\n<DAV:resourcetype> value is <DAV:collection/>\n<DAV:workspace-checkout-set> defined\n\nDon't care about DAV:collection.  Just see if\nDAV:workspace-checkout-set is in DAV:supported-live-property-set.\n\n   (5*) Working resource.\n<DAV:checked-out> defined\n<DAV:auto-checkout> *not* defined\n\n(appears and does not appear, respectively, in\nDAV:supported-live-property-set)\n\n   (6+) Version-controlled configuration.\n<DAV:baseline-controlled-collection/> defined\n\n(appears in DAV:supported-live-property-set)\n\n   (7) Baseline.\n<DAV:resourcetype> value is <DAV:baseline/>\n\n(or look to see if DAV:baseline-collection is supported.\n\n   (8) Activity.\n<DAV:subactivity-set> defined.\n\n(appears in DAV:supported-live-property-set)\n\n\n   Observations\n   ----------\n   (i) For the most part we only care if a property is defined - i.e.,\n   it exists, and not what it's value is.  There is currently no way\n   to ask this question in WebDAV.\n\nIn DeltaV there is ... DAV:supported-live-property-set.\n\n   (ii) It would seem that activities should have a <DAV:resourcetype>\n   of <DAV:activity>, but I didn't see that in the -15 spec.\n\nIt appears in the postcondition of MKACTIVITY, but I'm happy to \nmention it in section 13.1 as well.\n\n   (iii) The only way I could see to distinguish a workspace from a\n   'regular' collection was the presence of\n   <DAV:workspace-checkout-set/> which it would seem is likely a very\n   expensive property to query.\n\nGood thing that we have DAV:supported-live-property-set so that the\nserver doesn't actually have to compute the value (:-).\n\n   Conclusions\n   ---------\n   (a) We should extend <DAV:resourcetype> to provide all this\nclassification\n   information in a single property.\n\nYou get all the information you need in a single property today\n(DAV:supported-live-property-set).  Or if you care whether or not\nsomething is a collection, you can also look at DAV:resourcetype.\n\n   (b) How about extending <DAV:propname/>? such as\n   <DAV:propname>\n       <DAV:checked-out/>\n   </DAV:propname>\n   then the client would get back just the name or a 404 to determine if it\n   exists.\n\nOr (as I'm sure you can predict I will say ... :-) how about just\nusing DAV:supported-live-property-set?\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-16752746"}, {"subject": "RE: The Label header, and other issues raised since draft-1", "content": "   From: Fay, Chuck [mailto:CFay@filenet.com]\n\n   Geoff Clemm wrote:\n   > This means that the proposed resolution of the issues raised since \n   > draft 14 are:\n   . . .\n   > The Fork-Control Feature:\n   >    Merge it into the checkout feature.\n\n   Given that the checkout feature only applies to version-controlled\n   resources, and not to versions, does this mean that Fork-Control only\n   applies to VCRs?  Shouldn't it apply to versions as well?\n\nThe fork-control properties are on versions, not VCR's, but I agree\nthat since both the \"checkout\" and the \"working-resource\" features\nintroduce a CHECKOUT method that is affected by these properties,\nthe fork-control properties should be identified in\nboth features.  Since this is just an editorial change that has no\nsemantic impact, I'm assuming nobody will object if I make this change\nduring the IESG last call period?\n\nCheers,\nGeoff\n\n\n\n", "id": "lists-005-16766670"}, {"subject": "AW: Resource clas", "content": "This touches on an issue I (the guy with the webdav [maybe caching\na little] proxy) have with discovering type and status of a WebDAV resource.\n\nAs Geoff made quite clear, DAV:supported-live-property-set contains all\nthere is to know about a versioned resource. But what about versionable\nresources? Will/Should they have any versioning props apart from\nDAV:supported-method-set with at least VERSION-CONTROL as content?\n\nHow is supported-method-set supposed to work in conjunction with other\nWebDAV extensions (ordered collections, reference, etc.) Will all those\nmethods be mentioned there as well? Won't deltaV become a necessary\nfunctionality for these extensions, then?\nIf not, does OPTIONS then remain a better place to look for methods?\n\nStefan\n(won't like resource type\nDAV:checked-out-external-reference-to-ordered-collection)\n\n> -----Urspr?ngliche Nachricht-----\n> Von: ietf-dav-versioning-request@w3.org\n> [mailto:ietf-dav-versioning-request@w3.org]Im Auftrag von Clemm, Geoff\n> Gesendet: Samstag, 12. Mai 2001 05:13\n> An: ietf-dav-versioning@w3.org\n> Betreff: RE: Resource class\n>\n>\n>    From: Tim_Ellison@uk.ibm.com [mailto:Tim_Ellison@uk.ibm.com]\n>\n>    [I did send this mail once, but it hasn't appeared, so here's\n> attempt #2]\n>\n> I didn't get the mail, so it probably is good you resent.\n>\n>    ---------------------------\n>    The issue of determining a versioning resource's classification\n>    based on the absence (or otherwise) of properties has been raised\n>    before on the list.  Recently however, (in other contexts) people\n>    have shifted in favour of extensions to <DAV:resourcetype> to\n>    convey more 'type' information.\n>\n> Not me ... I think you should just look in the\n> DAV:supported-method-set and DAV:supported-live-property-set for the\n> methods or properties that you care about.  If it supports the methods\n> and properties you care about, who cares what's in the \"resourcetype\"\n> field (:-).  But then again, if you want to add a bunch of redundant\n> information to the resourcetype field, I guess I don't really care all\n> that much (although it does violate the Goland rule of \"you are done\n> when there is nothing left to cut out\" :-).\n>\n>    In support of this shift of opinion, here's my renditioning of how\n>    a client currently determines the resource classification (if, for\n>    example, if a client were given a URL in a property with no other\n>    information) in a versioning world.\n>\n>    To get an accurate classification the client has to issue a\n>    PROPFIND then look at the results as follows (hopefully my layout\n>    is not too cryptic):\n>\n>    >>REQUEST\n> PROPFIND /foo HTTP/1.1\n> Host: bar.com\n> Content-Type: text/xml; charset=\"utf-8\"\n> Content-Length: xxx\n>\n> <?xml version=\"1.0\" encoding=\"utf-8\" ?>\n> <D:propfind xmlns:D=\"DAV:\">\n>     <D:prop>\n> <D:resourcetype/>\n> <D:auto-checkout/>\n> <D:checked-in/>\n> <D:checked-out/>\n> <D:version-name/>\n> <D:workspace-checkout-set/>\n> <D:baseline-controlled-collection/>\n> <D:subactivity-set/>\n>     </D:prop>\n> </D:propfind>\n>\n> Actually, you can get all the information you need from\n> the DAV:supported-live-property-set property, e.g.:\n>\n>    >>REQUEST\n> PROPFIND /foo HTTP/1.1\n> Host: bar.com\n> Content-Type: text/xml; charset=\"utf-8\"\n> Content-Length: xxx\n>\n> <?xml version=\"1.0\" encoding=\"utf-8\" ?>\n> <D:propfind xmlns:D=\"DAV:\">\n>     <D:prop>\n> <D:supported-live-property-set/>\n>     </D:prop>\n> </D:propfind>\n>\n>\n>    Interpreting the results\n>    --------------\n>    Key: The major classifications are listed below from (1) to (8).\n>\n>    Each entry marked with a plus-sign can exist in a checked-in xor\n>    checked-out state.\n>    +\n>     <DAV:checked-in> defined -- the resource is checked-in.\n>     <DAV:checked-out> defined -- the resource is checked-out.\n>\n> Note that whether or not a resource is checked-in or checked-out\n> is normally considered part of its \"state\" rather than part of\n> its \"type\" (which just illustrates the vague boundary between\n> \"state\" and \"type\" :-).  If you wanted to know whether or not\n> a resource was checked-in or checked-out, then you would have\n> to PROPFIND for checked-in and checked-out.\n>\n>    Each entry marked with an astrix can exist as a collection resource\n>    xor a non-collection resource.\n>    *\n>    <DAV:resourcetype> value is not <DAV:collection/> -- the resource\n>    is not a collection.\n>    <DAV:resourcetype> value is <DAV:collection/> -- the resource is a\n>    collection.\n>\n> Yes, if you wanted to find out whether or not a resource is a\n> collection, you would need to query DAV:resourcetype.  But for all\n> the \"types\" of resources introduced by DeltaV, the\n> DAV:supported-live-property-set gives you all the info you need\n> to determine the type of the resource.\n>\n>    (1+*) Version-controlled resource.\n> <DAV:auto-checkout> defined\n>\n> (appears in DAV:supported-live-property-set)\n>\n>    (2*) Version.\n> <DAV:version-name> defined\n>\n> (appears in DAV:supported-live-property-set)\n>\n>    (3) Version history.\n> <DAV:resourcetype> value is <DAV:version-history/>\n>\n> (or look to see if DAV:root-version is supported)\n>\n>    (4) Workspace.\n> <DAV:resourcetype> value is <DAV:collection/>\n> <DAV:workspace-checkout-set> defined\n>\n> Don't care about DAV:collection.  Just see if\n> DAV:workspace-checkout-set is in DAV:supported-live-property-set.\n>\n>    (5*) Working resource.\n> <DAV:checked-out> defined\n> <DAV:auto-checkout> *not* defined\n>\n> (appears and does not appear, respectively, in\n> DAV:supported-live-property-set)\n>\n>    (6+) Version-controlled configuration.\n> <DAV:baseline-controlled-collection/> defined\n>\n> (appears in DAV:supported-live-property-set)\n>\n>    (7) Baseline.\n> <DAV:resourcetype> value is <DAV:baseline/>\n>\n> (or look to see if DAV:baseline-collection is supported.\n>\n>    (8) Activity.\n> <DAV:subactivity-set> defined.\n>\n> (appears in DAV:supported-live-property-set)\n>\n>\n>    Observations\n>    ----------\n>    (i) For the most part we only care if a property is defined - i.e.,\n>    it exists, and not what it's value is.  There is currently no way\n>    to ask this question in WebDAV.\n>\n> In DeltaV there is ... DAV:supported-live-property-set.\n>\n>    (ii) It would seem that activities should have a <DAV:resourcetype>\n>    of <DAV:activity>, but I didn't see that in the -15 spec.\n>\n> It appears in the postcondition of MKACTIVITY, but I'm happy to\n> mention it in section 13.1 as well.\n>\n>    (iii) The only way I could see to distinguish a workspace from a\n>    'regular' collection was the presence of\n>    <DAV:workspace-checkout-set/> which it would seem is likely a very\n>    expensive property to query.\n>\n> Good thing that we have DAV:supported-live-property-set so that the\n> server doesn't actually have to compute the value (:-).\n>\n>    Conclusions\n>    ---------\n>    (a) We should extend <DAV:resourcetype> to provide all this\n> classification\n>    information in a single property.\n>\n> You get all the information you need in a single property today\n> (DAV:supported-live-property-set).  Or if you care whether or not\n> something is a collection, you can also look at DAV:resourcetype.\n>\n>    (b) How about extending <DAV:propname/>? such as\n>    <DAV:propname>\n>        <DAV:checked-out/>\n>    </DAV:propname>\n>    then the client would get back just the name or a 404 to\n> determine if it\n>    exists.\n>\n> Or (as I'm sure you can predict I will say ... :-) how about just\n> using DAV:supported-live-property-set?\n>\n> Cheers,\n> Geoff\n>\n>\n>\n\n\n\n", "id": "lists-005-16774772"}, {"subject": "Ref: Re: Proof of concep", "content": "Respuesta\n---------------------------------------------------------------\nGracias por contactar con el Soporte T?cnico de Ubi Soft Espa?a.\n\nUbi Soft ya no da soporte t?cnico directo a trav?s del e-mail. Tu e-mail no ser? procesado. Sigue las instrucciones que te proporcionamos para encontrar las respuestas que necesitas.\n\nPara una mejor asistencia, visita nuestra p?gina de Soporte T?cnico, para ello s?lo tienes que ir a http://www.ubisoft.es y hacer clic en Soporte. En esta p?gina encontrar?s las soluciones a las preguntas m?s frecuentes.\n\nEs f?cil  usar nuestra b?squeda para encontrar las respuestas que necesitas para un juego en particular:\n\n1 ? Ves a la p?gina de soporte de Ubi Soft Espa?a\n2 - En la parte de soporte haz clic sobre ?Pulsa aqu?? para entrar en nuestra base de datos, que incluye preguntas y respuestas sobre la mayor?a de nuestros juegos.\n\nSi despu?s de buscar en nuestra base de datos no puedes encontrar una soluci?n a tus problemas, haz clic en ?Formular pregunta?.\n\nTe recordamos de nuevo que tu e-mail original no ser? procesado. Necesitas seguir los pasos descritos anteriormente para recibir soporte.\n\nMuchas gracias.\n\nSoporte T?cnico Ubi Soft Espa?a.\n\n\n\n", "id": "lists-005-2201562"}, {"subject": "Benvenuto nel gruppo Edumus New", "content": "Ciao ietf-charsets@w3.org,\n\nsei stato aggiunto al gruppo Edumus News (edumusnews@domeus.it).\n\nIl proprietario del gruppo ti invia il seguente messaggio di benvenuto:\n----------------------------\nBenvenuto in Edumus News, la newsletter mensile con le informazioni sui corsi, concorsi, masterclasses, convegni ed audizioni musicali in Italia e all'estero. Maggiori informazioni su http://www.edumus.com\n----------------------------\n\nSe non desideri ricevere email da questo gruppo invia un eMail a edumusnews-unsubscribe@domeus.it.\n\nPer cancellarti direttamenet tramite web, utilizza il seguente link:\nhttp://www.domeus.it/public/unsubscribe.jsp?tsp=1080147046614&gid=337091&uid=26293152&sig=LHALOFLNPDJHPCAA\n\nIn ogni modo sarai cancellato dalla lista di distribuzione.\nPer qualsiasi domanda o problema puoi contattare il moderatore di questo gruppo scrivendo a  edumusnews-moderators@domeus.it.\n\nA presto,\nIl team di domeus.it\n\n\n\n\n\n\n\n\n\n\n\n\n", "id": "lists-005-2209138"}, {"subject": "NOTIFICATIO", "content": "LOTTERIA PRIMITIVA\nSWEEPSTAKE PROMOTION.\nCALLE/BUSMAN EL-BUENO,\n13728007 MADRID\nSPAIN.\nFROM: THE DESK OF THE PROMOTIONS MANAGER, \nINTERNATIONAL PROMOTIONS/PRIZE AWARD DEPARTMENT, \nREF: LP/26510460037/02 BATCH: 24/00319/IPD \nAWARD NOTIFICATION FINAL NOTICE. \nWE ARE PLEASE TO INFORM YOU OF THE ANNOUNCEMENT OF THE WINNERS OF\nLOTTERY PRIMITIVA SWEEPSTAKES/INTERNATIONAL PROGRAMS HELD ON 15 TH JANUARY 2004. YOUR CONTACT IS ATTACHED TO THE TICKET NUMBER 004-05117963-198, WITH SERIAL NUMBER 99375 DREW THE LUCKY NUMBERS 01-15-37-38-48-49 AND CONSEQUENTLY WON THE LOTTERY IN CATEGORY 1B. YOU HAVE BEEN THEREFORE APPROVED THE SUM OF  ?800,500.00(EIGHT HUNDRED THOUSAND, FIVE HUNDRED EUROS)CREDITED TO THE FILE NUMBER:LP/2656043/ES/104\nTHIS IS FROM THE TOTAL PRICE MONEY OF ?31.472.765.00  SHARED AMONG THE TWENTY THREE LOCAL AND INTERNATIONAL WINNERS IN ALL CATEGORIES. ALL PARTICIPANTS WERE SELECTED THROUGH COMPUTER BALOTTING SYSTEM DRAWN FROM 45,000.00 NAMES FROM AUSTRALIA, NEW ZEALAND, AFRICA, EUROPE,AMERICA AND ASIA AS PART OF OUR INTERNATIONAL PROMOTION PROGRAM WHICH IS  CONDUCTED EVERY TWO YEARS.\n. CONGRATULATIONS!!! \nYOUR FUND IS  NOW INSURED TO YOUR CONTACT. DUE TO THE COMPUTER MIX-UP OF SOME NUMBERS AND CONTACTS, WE ASK YOU TO KEEP THIS AWARD STRICKLY FROM PUBLIC NOTICE UNTILL YOUR CLAIM HAS BEING PROCESSED AND YOUR MONEY REMITTED TO YOUR NOMINATED ACCOUNT.THIS IS PART OF OUR SECURITY ADVICE TO AVOID DOUBLE CLAIMING OR UNSCRUPULOUS ACTS BY THE PARTICIPANTS OF THIS PROGRAM.\n YOU ARE TO CONTACT THE UNDERSIGNED, SINCE ALL WE HAVE NOW IS  THE WINNING TICKET NUMBER AND YOUR EMAIL ADDRESS WHICH WAS ATTACHED TO THE WINNING TICKET NUMBER.FOR DUE PROCESSING AND REMITTANCE OF YOUR AWARD PRICE, YOU ARE TO REPLY THIS MAIL STATING YOUR NUMBERS. DO NOTE THAT ALL PRICE MUST BE CLAIM NOT LATER THAN 27TH APRIL 2004. AFTER THIS DATE, ALL FUNDS WILL BE RETURNED AS UNCLAIMED TO THE MINISTRY.\n. \nNOTE: IN ORDER TO AVOID UNNECESSARY DELAY AND COMPLICATIONS,PLEASE QOUTE YOUR REFERENCE AND BATCH NUMBERS IN EVERY OF YOUR CORESPONDENCE. FURTHERMORE,SHOULD THERE BE ANY CHANGE OF YOUR ADDRESS DO INFORM THIS OFFICE AS SOON AS POSSIBLE. CONGRATULATIONS AGAIN FROM ALL OUR STAFF.\n\nSINCERELY\nDENNIS COLE\n0034-627747095:  CALL NOW FOR CONFIRMATION.\nSEND ANOTHER COPY OF YOUR REPLY TO THE FOLLOWING:\nprimoffice@excite.com\n\n\n\n", "id": "lists-005-2217187"}, {"subject": "?????????????????????", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-2225773"}, {"subject": "ALERT -  GroupShield ticket number OA7246_1080149811_EX-HONGKONG_ 3 was generate", "content": "Action Taken:\nThe attachment was quarantined from the message and replaced with a text\nfile informing the recipient of the action taken.\n\nTo:\nKoh Fanny - Regional Asia <kohf@asia.aforbes.com>\n\nFrom:\nietf-charsets@w3.org <ietf-charsets@w3.org>\n\nSent:\n-1679380608,29626822\n\nSubject:\nMail Delivery (failure kohf@asia.aforbes.com)\n\nAttachment Details:-\n\nAttachment Name: message.scr\nFile: message.scr\nInfected? No\nRepaired? No\nBlocked? Yes\nDeleted? No\nVirus Name: \n\n\n\n\n\n\n\n\napplication/ms-tnef attachment: stored\n\n\n\n\n", "id": "lists-005-2232348"}, {"subject": "Virus Aler", "content": "The mail message (file: message.scr) you sent to s.vogt@dial.oleane.com contains a virus. (on smtp2)\n\n\n\n", "id": "lists-005-2241740"}, {"subject": "?????????? ?????? ?????? ??????2004?? ?????????? 6???? ??????", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-2248466"}, {"subject": "Norton AntiVirus detected a virus in a message you sent.  The inf     ected attachment was deleted", "content": "Recipient of the infected attachment:  Bowen, David\\Deleted Items\nSubject of the message:  Re: Sex pictures\nOne or more attachments were deleted\n  Attachment www.freeporn4all.pif was Deleted for the following reasons:\n    Virus UNAUTHORIZED FILE was found.\n\n\n\n********************************************************************************\nDISCLAIMER: This e-mail is confidential and should not be used by anyone who is not the original intended recipient. If you have received this e-mail in error please inform the sender and delete it from your mailbox or any other storage mechanism. Neither Macmillan Publishers Limited nor any of its agents accept liability for any statements made which are clearly the sender's own and not expressly made on behalf of Macmillan Publishers Limited or one of its agents. Please note that neither Macmillan Publishers Limited nor any of its agents accept any responsibility for viruses that may be contained in this e-mail or its attachments and it is your responsibility to scan the email and attachments (if any). No contracts may be concluded on behalf of Macmillan Publishers Limited or its agents by means of e-mail communication. Macmillan Publishers Limited Registered in England and Wales with registered number 785998 Registered Office Brunel Road, Houndmills, Basingstoke RG21 6XS\n********************************************************************************\n\n\n\n\n\n\napplication/ms-tnef attachment: stored\n\n\n\n\n", "id": "lists-005-2255318"}, {"subject": "????????????????????????????????????????????", "content": " =?GB2312?B?oQ==?=\nTo: ietf-charsets@w3.org\nContent-Type: text/html;charset=\"GB2312\"\nContent-Transfer-Encoding: 8bit\nReply-To: yakuweb@hotmail.com\nDate: Thu, 25 Mar 2004 02:49:11 +0800\nX-Priority: 3\nX-Mailer: Microsoft Outlook Express 6.00.2800.1106\n\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\n<html>\n<head>\n<title>Untitled Document</title>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=gb2312\">\n</head>\n\n<body><table width=\"623\" border=\"1\" align=\"center\">\n  <tr>\n    <td height=\"79\"><p><font size=\"2\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </font></p>\n      <p><font color=\"#0000FF\" size=\"2\">????????????</font><font size=\"2\"><br>\n        <br>\n        ???? ??????<br>\n        ???? ??????????????????????????????????????,????????1??????????????????????????,??????????????.??????????????????????????????????????????????. \n        ??????????,??????????????????????????</font><font size=\"2\"><br>\n        <br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ?????????????????????????????????????? ??20??????????????????????????????URL??????????????A????????????????IP????????.</font> \n      </p>\n      <p><font size=\"2\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <font color=\"#0000FF\">????????????????,????????????!</font></font></p>\n      <p><font size=\"2\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <font color=\"#FF0000\">??????????????????,??????????????,??????????????,????????.</font></font></p>\n      <p><font color=\"#FF0000\" size=\"2\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ??????????????????????????,????????????????,????,????,????,??????????????????100????????</font></p>\n      <p><font color=\"#FF0000\" size=\"2\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font size=\"2\"> \n        ??????????:<a href=\"http://www.yakuweb.net\" target=\"_blank\">http://www.yakuweb.net</a></font></p>\n      <p><font size=\"2\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ????????????????????????????????????????!<br>\n        ??????????????????????????????????????????????????????<br>\n        ????????????????????????????????????????????????<a href=\"http://www.yakuweb.net\" target=\"_blank\">????????????????????????</a><br>\n        </font> </p>\n</td>\n  </tr>\n</table>\n\n</body>\n</html>\n\n\n\n", "id": "lists-005-2264548"}, {"subject": "Your message to cyclone-l awaits moderator approva", "content": "Your mail to 'cyclone-l' with the subject\n\n    Re: Sex pictures\n\nIs being held until the list moderator can review it for approval.\n\nThe reason it is being held:\n\n    Post by non-member to a members-only list\n\nEither the message will get posted to the list, or you will receive\nnotification of the moderator's decision.  If you would like to cancel\nthis posting, please visit the following URL:\n\n    https://lists.cs.cornell.edu/mailman/confirm/cyclone-l/8b9b96b43062f769835b441976e1bd0ffed73d69\n\n\n\n", "id": "lists-005-2274828"}, {"subject": "?????? ???????????? ???????", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-2282323"}, {"subject": "***????????????!!!??????!!!(??????.??????)5.000????????&#64; bixf ", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-2288639"}, {"subject": "better then viagrg", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-2295497"}, {"subject": "Re: your word documen", "content": "I have received your document. The corrected document is attached.\n\n+++ Attachment: No Virus found\n+++ Kaspersky AntiVirus - www.kaspersky.com\n\n\n\n\n\n\n\nplain/text attachment: Norton_AntiVirus_Deleted1.txt\n\n\n\n\n", "id": "lists-005-2303452"}, {"subject": "RE:SEEKING YOUR ASSISTANCE/PARTNERSHIP IN BUSINESS", "content": "ATT:SIR/MADAM\n\nDAER SIR,\n\nCOMPLIMENT OF THE SEASON.\n\nMY PROPOSAL TO YOU WILL BE VERY SURPRISING AS WE HAVE NOT HAD ANY CONTACT BEFORE.I GOT YOUR CONTACT ADDRESS THROUGH MY DESPERATE SEARCH FOR A RELIABLE PERSON/COMPANY FOR INVESTMENT PARTNERSHIP.I AM VERY SORRY TO INTRUDE INTO YOUR MAILBOX BUT I GUESS YOU WILL UNDERSTAND.\n\nFIRST I WANT TO INTRODUCE MY HUMBLE SELF TO YOU.I AM DR MARVIN FRANK ARISTIDE OF THE REPUBLIC OF HAITI AND ALSO A DIPLOMATIC COUNTER-PART DURING THE REGIME OF PRESIDENT JEAN BERTRAND ARISTIDE.THE PRESIDENT HAS BEEN USING ME THROUGH DIPLOMATIC MEANS TO SEND MONEY OUT OF THE COUNTRY BECAUSE OF FEARS THAT HE MAY BE OVERTHROWN THROUGH CUOP OR THE REBELS AT ANY TIME DUE TO THE LOW MORAL IN THE POLITICAL BACKGROUND IN HAITI.THIS I HAVE DONE FOR THE PRESIDENT ON TWO DIFFERENT OCCASIONS.ON THE THIRD TRIP EARLY THIS YEAR,I WAS GIVEN THE SUM OF US$8.5 (EIGHT MILLION,FIVE HUNDRED THOUSAND UNITED STATES DOLLERS). THIS MONEY IS DEPOSITED UNDER A SUSPENSE ACCOUNT WITH A PRIME BANK IN EUROPE.DUE TO SECURITY REASONS AND IN A BID TO SECURING THE DEPOSIT,I HAVE REACHED AN AGREEMENT WITH THE BANK THAT A FOREIGN INVESTMENT PARTNER WILL COME FORWARD TO SUBMIT HIS BANKING DETAILS FOR ONWARD TRANSFER OF THE FUND TO HIS ACCOUNT .AT THIS STAGE I REQUIRE YOUR ASSISTANCE TO HELP ME ACT AS THE FOREIGN I\n NVESTMENT PARTNER,WHICH IS WHAT THE BANK REQUIRES TO RELEASE THE FUND IN MY ABSENCE AS I CANNOT BE ABLE TO COME DUE TO MY PRESENT CONDITION.\n\nFURTHERMORE,DUE TO THE OUT-RAGING CRISIS IN HAITI AND MY CLOSE RELATIONSHIP WITH THE PRESIDENT THEN.THE REBELS HEADED BY THERE LEADER GUY PHILLIPPE,CONSPIRED AND PLANNED TO ATTACK AND KILL ME.I LOST A LOT OF ASSETS AND MY HOUSE WAS BURNT BY THE REBELS.PRESENTLY AM ON EXILE IN A DESIGNATED PART OF SOUTH AFRICA.\n\nI HAVE MADE ALL THE NECESSARY ARRANGEMENT TO TRANSFER THIS MONEY TO YOU,AND I HAVE DECIDED TO OFFER YOU FOR YOUR EFFORT 20% OF THE TOTALSUM,10% I HAVE SET ASIDE TO COVER ALL LOCAL AND INTERNATIONAL EXPENSES AND THE REMAINING 70% WILL BE FOR ME.\n\nPLEASE BE INFORMED THAT YOUR SAFETY AND SECURITY IS 100% GUARANTEED AS THERE IS NO RISK INVOLVED.AS I DO NOT WANT TO LOSE MONEY AS IT IS MY ONLY OPPURTUNITY TO BE SUCCESSFULL.ON THE RECEIPT OF YOUR REPLY.I SHALL GIVE YOU FURTHER INFORMATION ON THE MODALITIES OF THE TRANSFER AFTER WE ESTABLISH TRUST AND CONFIDENCE BETWEEN US,AS I HAVE MADE ALL THE NECESSARY ARRANGEMENT FOR THIS TRANSFER TO BE EFFECTED.THANKS AS I LOOK FORWARD TO HEAR FROM YOU.E MAIL ME AT marvintfaristide@yahoo.com.\n\nBEST REGARDS,\n\nDR MARVIN FRANK ARISTIDE.\nSOLICITORS & ADVOCATES.\n\n\n\n", "id": "lists-005-2309992"}, {"subject": "Fwd: Your Best Source for Medicines Online Delivered Discreetly and Securely to Yo", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-2319152"}, {"subject": "???????? ????!!??????.??????.????????.1?????????? ???? ????!!  kjazbp  ", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-2326107"}, {"subject": "(no subject", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-2333143"}, {"subject": "CONGRATULATIONS !!!!!", "content": "FROM  THE  DESK  OF  THE  MANAGING  DIRECTOR  INTERNATIONAL  PROMOTION / PRICE  AWARD  DEPARTMENT.\n                              PLAZA  DE  COLON  E- 28830  MADRID  ESPA?A                                                                                                                                               \n                             \n\nATTENTION:REF/EG/2551256003/01. BATCH/000750013                                                                                                                                                                     \n                                                                                                                            DATE:24 . 03. 04\n                            RE: AWARD  CLAIM  FINAL  NOTIFICAION.                             \n\nThis is to inform you on the release of the EL- GORDO SWEEPSTAKE LOTTERY PROGRAM held on the 28th February 2004. Your name attached to ticket number 025-11-464-992-750 with serial number 2113-05 drew the lucky numbers 13-15-16-21-34-36 which consequently won the El gordo lottery Program in the 3rd category.\nYou have therefore been approved for a lump sum payout of USD 2,615,810.00 (TWO MILIION SIX HUNDRED AND FIFTEEN THOUSAND,EIGHT HUNDRED AND TEN DOLLARS ONLY) in cash credit to file with REF:n?: EG/2551256003/01and BATCH:n?:000750013.This is from a total cash prize of EURO 31,389,720 (THIRTY ONE MILLION, THREE HUNDRED AND EIGHTY NINE THOUSAND, SEVEN HUNDRED AND TWENTY EUROS ONLY) Shared among (12) (Twelve) international winners in this category. CONGRATULATIONS!!!\n\nYour fund is now deposited with a security company and insured in your name. Due to mix up of some numbers and names, we ask that you keep this award from public notice until your claim has been processed and your money remitted to your designated  account as this is part of our security protocol to avoid double claiming or unwarranted taking of an advantage of this program by participants.\n\nAll participants were selected through a computer ballot system drawn from 25,000 names from Asia, Australia, New Zealand, Europe, America and North America as part of our International promotions program which we conduct once every year. We hope your lucky name will draw a bigger cash prize in the next years highstake USD 1.3 BILLION inter. lottery. \n\nTo begin your  claim, please contact  your claims agent,Greg Marcelo Carlos the foreign service Manager (gmarcelocarlos@yahoo.es) for the processing and remittance of your winning prize money to a designation of your choice. \n\nRemember, all prize money must be claimed not later than, 29th  of May 2004 this date all funds will be returned to the MINISTERIO DE ECONOMIA Y HACIENDA  as unclaimed. \n\nNOTE: In order to avoid unnecessary delays and complications, please remember to quote your reference  and batch  numbers in every correspondence with us or your agent. Furthermore, should there be any change of your address, do inform your claims agent as soon as possible (gmarcelocarlos@yahoo.es)\n\nCongratulations once again from all our  members and staffs,we thank you for being a part of our International promotions program.                                                          \n  \nYOUR?S SINCERELY,                                                                                                                                \nJOSE  LOUIS  MIGUEL.                                                                                             \nVICE PRESIDENT                                                                                           \n\n\n\n", "id": "lists-005-2339453"}, {"subject": "(????)????????!!???????????? 6?????? ????????(????????)???? ?? ?????? ??????!!&#64; w neqmntyydw", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-2349740"}, {"subject": "[????]?????????? ???????? ??????????????!!????????????&#64", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-2357204"}, {"subject": "ringmaste", "content": "mice scattergun transpond dictate waterman erodible chum depress testy \nallegory pounce lateran silicate contain tailspin weco \nimmobile tedious lacy centroid coolant pronto silky bold pascal \n\n\n\n", "id": "lists-005-2364661"}, {"subject": "confidential", "content": "  \nFrom The Desk of Dr.Osuya Joseph. \nPrivate E-mail:osuya2000@fastermail.com\nFAX:234-1-7591672.\nAttn:  President. (C.E.O)\n\nWe are sending this letter to you based on information gathered from the foreign trade office of the Nigerian Chamber of Commerce and industry. We believe that you would be in a position to help us in our bid to transfer the sum of forty-0ne million, five hundred thousand dollars ($41.5m USD) into a foreign account. We are members of the special committee for budget and planning of the Ministry of Petroleum, this committee is principally concerned with contract appraisals and approval of contracts in order of priorities as regards capital project of the federal government of Nigeria. With our positions, we have successfully secured for ourselves the sum of forty-one million, five hundred thousand united state dollars (us$41.5M). \nThe present government in my country are seeking re-election for that they want the support of foreign government so they have given directive to all federal parastatals to settle all foreign contractors being owned for contract that they has done, so our plan is to include the name that you will provide as one of the contractors being owed in my corporation. What we need from you is to provide a safe account into which the funds will be transferred since government officials are not allowed by our laws to operate foreign account. It has been agreed that the owner of the account will be compensated with US$8.3 Million of the remitted funds; we keep US$31.125Million while US$2.075Million will be set aside to offset expenses and pay the necessary taxes. \nIt may interest you to know that two years ago a similar transaction was carried out with one Mr. Patrice miller, the president of crane international trading corporation at number 135, east 57th street, 28th floor, New York 10022 with telephone (212) 308-7788 and telex number 6731689,after the agreement between both partners in which he was to take 25% the money was duly transferred into his account only to be disappointed on our arrival in New York as we were reliably informed that Mr. Patrice Miller was no longer on that address while his telephone and telex numbers have been reallocated to somebody else, that is how we lost US$27.5M to Mr. Patrice Miller. This time around we need a more reliable and trustworthy person or a reputable company to do business with hence this letter to you, so if you can prove yourself to be trusted and interested in this deal then we are prepared to do business with you. \nWhat we want from you is the assurance that you will let us have our share when this amount of US$41.5M is transferred into your account. If this proposal satisfies you, please contact me through e-mail stated above so we can advice you on the modalities of the transaction. All modalities of the transfer have been worked out and once started will not take more than 7 working days with the absolute support of all concerned. This transaction is 100% safe now and after the transfer. Please treat as urgent and very confidential. God be with you as I look forward to your reply. \n\nBest regards. \nDr. Osuya Joseph. \nRELPY ME WITH THIS EMAIL ADDRESS (osuya2000@fastermail.com )\n\n\n\n\n\n                                                                      \n\n\n\n", "id": "lists-005-2373253"}, {"subject": "Premium Cigaretts - One Dollar Per Pack", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-2383035"}, {"subject": "FROM VIVIAN", "content": "ATTN:THE MANAGING DIRECTOR.\n\nI am Mrs vivian chinamasa , a widow and national of\nzimbabwe . I was married to late Mr.peter chinamasa , a\nleft - Wing leader and a strong opposition to the\ngovernment of zimbabwe. led by Robert Mugabe. My husband ,\nlate Peter chinamasa's death was politically motivated\nduring white farmers Revolt over land ownership and\nacquisition by government last year which led to mass\nkilling, rape and treason in  zimbabwe.My husband, WILLand\nTESTAMENT as executed by a reputable attorney shows that he\nbequeath his personal effects ,his two houses here in\nzimbabwe , and fifteen Million Dollars (US$15M)which is\npresently with a security company Abroad to me his widow\nand our seven year old son,Tony Chinamasa absolutely. My\nson and I as the trustee of this WILL can apply the fifteen\nMillion Dollars (US$15M) in any viable investment with the\naid of an investor we so desire.\nI really need your advise and cooperation so that this\nmoney ,Fifteen million United States Dollars (US$15M) can\nbe invested in your company or any viable project in your\ncountry as my safety and that of my son is no longer\nguaranteed in zimbabwe.Government forces keep watch on my\nhusband's house twenty four hours daily.   \nI have taken you in total confidence and I hope you will\nnot fail me.\nI shall send to you a power of attoney  which will anable\nyou take delivery of the fund fifteen million\nDollars(US$15M) ,and the certificate of deposit which was\ngiven to my husband when he deposited the fund with the\nsecurity company.so that I and little son can leave this\ncountry immediately.\nYou can also reach me at chinamasa3@netscape.net\nTreat as Urgent   \nYours sincerely,\nVivian.\n\n\n  \n\n\n\n\n\n                                                                      \n\n\n\n", "id": "lists-005-2389280"}, {"subject": "WINNING NOTIFICATIO", "content": "Dear beneficiary,\n \nWe are pleased to inform you of the result of the Lottery Winners \nInternational programs held on the 18th March, 2004. Your e-mail\naddress attached to ticket number 370982217413-7240 with serial\nnumber 4708-325 drew lucky numbers 2-34-28-13-41 which consequently\nwon in the 1st category, you have therefore been approved for a lump\nsum pay of US$500,000.00 ( Five Hundred Thousand United States Dollars) \nCONGRATULATIONS!!!\n Due to mix up of some numbers and names, we ask that you keep your \nwinning information confidential until your claims has been processed\nand your money Remitted to you. This is part of our security protocol\nto avoid double claiming and unwarranted abuse of this program by\nsome participants.\n All participants were selected through a computer ballot system\ndrawn from over 20,000 companies and 30,000,000 individual email\naddresses and names from all over the world. This promotional program\ntakes place every three year. This lottery was promoted and sponsored\nby Ted Turner, Jesse Jackson, Ken Evoy, we hope with part of your\nwinning you will take part in our next year US$1 million international\nlottery. To file for your claim, please contact our financial agent\nMRS. Mary Robinson of the, Prime Golden Trust Agency Email:\npglrcenter@yahoo.com \nRemember, all winning must be claimed not later than 20th of \nApril,2004. After this date all unclaimed funds will be included in\nthe next stake. Please note, in order to avoid unnecessary delays and \ncomplications, please remember to quote your reference number and\nbatch numbers in all correspondence. Furthermore, should there be any\nchange of address do inform our agent as soon as possible.\n \nCongratulations once more from the members of Prime Golden Trust\nAgency staff and thank you for being part of our promotional program.\n \nSincerely yours,\n \nRaymond Finn.\nLottery Coordinator \n\n\n\n\n\n                                                                      \n\n\n\n", "id": "lists-005-2397409"}, {"subject": "ATTENTIONS PLEAS", "content": "ATTENTIONS PLEASE\n\nTHE OLYMPIC GAMES WILL BE HOSTED  AT ATHENS IN GREECE. THE GREAT EVENT WILL COMMENCE BY JULY 2004. IN THE LIGHT OF THIS, THE OLYMPIC ORGANIZING COMMITTEE HAS AWARDED MEDICAL SERVICES TO IASO HOSPITALS. THE AWARD WAS SIGNED BY THE OLYMPIC PRESIDENT MARTON SIMITSEK AND THE MEDICAL DIRECTOR DR HANDAKA JR.\n\nTHIS CONTRACT INCLUDE THE MEDICAL SERVICES AND SUPPLY OF ALL THE DRUGS AND EQUIPMENTS REQUIRED TO CARRY OUT THIS MEDICAL SERVICES.AS MEDICAL DOCTOR, I WAS GIVEN THE POWER TO ORDER FOR THE EQUIPMENTS AND APPARATUS THAT WILL BE USED FOR THE BLOOD TEST OF ALL THE ATHLETICS.\n\nTHE COST OF THIS EQUIPMENTS IS  USD 52,OOO,OOO.00 DOLLARS(FIFTY TWO MILLION DOLLARS).THE COST OF THIS APPARATUS WAS OVER INVOICED TO THE TUNE OF USD71,000,000.00(SEVENTY ONE MILLION DOLLARS). HERE WE ARE HAVING USD19,000,000.00(NINETEEN MILLION DOLLARS) AS SURPLUS.\n\nI HAVE TO CONTACT YOU OR YOUR COMPANY TO HELP PROVIDE AN ACCOUNT THAT  THIS SURPLUS OF USD19,000,000.00 (NINETEEN MILLION DOLLARS)WILL BE  TRANSFERED INTO. I BELIEVE YOU ARE AN HONEST AND TRUSTWORTHY PERSON, THAT IS WHY WE ARE CONTACTING YOU TO HELP IN THIS KIND OF BUSINESS MAGNITUDE. YOU ARE TO TAKE 20% OF THE TOTAL AMOUNT, OR WE NEGIOCIATE. PLEASE DO SIGNIFY YOUR INTEREST\nSO THAT I WILL CONTACT THE PAYING BANK ON WHERE THE BALANCE OF THE MONEY WILL BE TRANSFERED. AGAIN DO KEEP THIS OUT OF PUBLIC AWARENESS, IN OTHER NOT TO JEOPODISED THE CHANCES GIVING TO THIS HOSPITAL.\nTHANKS\n\nDR ALEXANDER S. JOSEPH. \nspiffalex@hotmail.com\n\n\n\n", "id": "lists-005-2406603"}, {"subject": "CONFIDENTIA", "content": "General Akulunor Ben,\n\n\nI am General Akulunor Ben (RETIRED); Address, Plot 35\nAnifowoshe street, Ikeja, Lagos, Nigeria.\n\nI am contacting you courtesy of an internet address\nlisting; THIS IS NOT A SPAM MAIL, and I appeal to you\nto\nexercise a little patience and read through my letter,\nand\nI guarantee you will not have wasted your time. As you\nare\nprobably aware, Liberia, a West African Territory was\nembroiled in a protracted civil war for many years.\nThis\nwar of attrition eventually attracted World attention\nbecause of the suffering of both the many warring\nparties\nwhich constantly changed alliances and allegiances,\nand the\ninnocent civilian refugees. There were allegations of\nmuch\natrocities committed and human rights abuses.\n\nNigeria, under the leadership of General Ibrahim\nBadamosi\nBabangida (retired Head of State of Nigeria), appealed\nto\nthe United Nations for help. The later encouraged\nNigeria\nto mediate between \nthe many protagonists. Nigeria subsequently put\ntogether\nthe coalition of 13 member Economic Community of West\nAfrican States, and the regional PEACE KEEPING FORCE\nKNOWN\nAS ECOMOG was born! I was privileged to be the first\ninaugural commander of the Peace keeping force, and I\nimmediately moved into the camp site at the outskirts\nof\nMonrovia, the capital city of Liberia to take my\ncommand.\n\nThe peace keeping exercise was a total success , and\neventually the rebel Samuel Doe was captured and the\nmany\nlesser war lords contained. Eventually Mr. Charles\nTaylor,\nwhose faction was recognized by ECOWAS was helped to\nestablish an acceptable Government; peace was\nrestored; and\nthe rest is history.\n\nDuring the final onslaught which resulted in the\ncapture of\nSamuel Doe, the campaign was meticulously planned and\nexecuted flawlessly; Samuel Doe?s Headquarters was\nseized\nby my men, and much ammunition as usual were\nrecovered;\nHowever, 2 large t runk boxes were also \nrecovered and I immediately ordered them taken to my\nquarters because there were rampant cases of pilfering\nand\noutright looting by the Soldiers (the Soldiers came\nfrom\ndifferent Countries and sometimes discipline was\nhard).\n\nWhen I examined the Trunk boxes, I got a shock! They\nwere\nstacked full of 100 Dollar bills! To my inexperienced\neye,\nI estimated that the boxes must contain at least 20\nMillion\nDollars! I was faced with an instant dilemma?I dared\nnot\ndeclare this discovery to the Military High command;\nthe\nmoney would promptly disappear into private pockets of\nthe\nMilitary high brass. I immediately swore my ADC to\nsecrecy and decided to transport the boxes into\nNigeria. I\nused my powers to requisition a Hercules Transport\nAirPlane\nunder my Command and airlifted the boxes to Nigeria.\nNeedless to say, Our Aircrafts and military\nequipment/property do not undergo Customs checks.\n\nAcco rdingly I immediately took the trunk boxes and\ndeposited them in a safe deposit box belonging to Mega\nSecurity Company Ltd. Of course No one knows the\ncontent\nof these boxes and I simply listed ?VALUABLES? in the\ndeposit form and I paid the token charge of 2,500.00\nUSD\nper annum. The date was 15th January, 1991.\n\nI deliberately waited for the right political climate\nto\nmove this money abroad for investment purposes. The\ntime is\nnow right because a properly elected Civilian\nGovernment is\nnow in charge of Nigeria. \n\nI need your help because I am a highly visible\npersonality,\nand any attempt by me to transfer this money to a\nforeign\nCountry will fail. Also the law in Nigeria does not\nallow\nserving or retired Military Personnel to own/operate\nforeign Bank Accounts in their name?I have therefore\narranged out a perfect and 100% risk free method of\ntransferring this money abroad, with your help. \n\nIf you are interested in helping me, please reply\nimmediately, giving me your phone and fax numbers and\nI\nwill give you further details ; we will then establish\na\ngame plan to achieve our aim. Please bear in mind that\nas\nfar as you are concerned, this transaction IS NOT\nILLEGAL\nand and that for your assistance, 30% of the fund will\nbe\nyours. This is the word of a military officer. \n\nThank you,\n\nGen. . Akulunor Ben Rtd.\n\n\n\n\n\n____________________________________________________________\nToo much spam in your inbox? Yahoo! Mail gives you the best\nspam protection for FREE! http://uk.mail.yahoo.com\n\n\n\n", "id": "lists-005-2414375"}, {"subject": "BE MY CLIENT NEXT OF KIN", "content": "DEAR SIR/MADAM,\n \nRE:TRANSFER OF THE SUM OF US$12 MILLION DOLLARS NTO\nYOUR ACCOUNT.\n \n \nLET ME START BY INTRODUCING MYSELF TO YOU. I AM\nBARRISTER DAN ISUAMAKA. OF #3 ALLEN\nAVENUE IKEJA LAGOS NIGERIA, TELEPHONE/FAX NUMBER:\n234-1-7599423 , DIRECT EMAIL:\nawelejohnson@indiatimes.com , I\nAM THE PERSONAL ATTORNEY TO LATE MR. GARY. I CAME TO\nKNOW ABOUT YOU IN MY PRIVATE\nSEARCH FOR A RELIABLE AND REPUTABLE PERSON TO HANDLE\nTHIS CONFIDENTIAL TRANSACTION AS I AM STILL IN\nACTIVE SERVICE.\n \nTHE PROPOSITION.\n \nA FOREIGN NATIONAL, LATE MR. GARY, AN OIL\nMERCHANT/CONTRACTOR WITH THE\nFEDERAL GOVERNMENT OF NIGERIA,UNTIL HIS DEATH THREE\nYEARS AGO IN A GHASTLY AUTO CRASH ALONG LAGOS SAGAMU\nEXPRESSWAY,\nWHICH OCCURED ON 21ST OF APRIL\n1999,BANKED WITH FIRST SECURITY & DEPOSIT TRUST BANK\nLTD., IKOYI\nBRANCH LAGOS, AND HAD A CLOSING BALANCE OF\nUS$12M (TEWEVEL MILLION UNITED STATES DOLLARS) IN A\nFIXED\nDEPOSIT ACCOUNT, WHICH THE BANK UNQUESTIONABLY\nEXPECTS IT TO BE CLAIMED BY HIS NEXT-OF-KIN TO THE\nLATE BENEFICIARY OR ALTERNATIVELY BE DONATED TO A\nDISCREDITED TRUST FUND FOR THE PURCHASE OF ARMS AND\nAMUNITIONS AT THE MILITARY WAR COLLEGE IN KADUNA\nSTATE HERE IN NORTHERN NIGERIA.\n \nSEQUEL TO THIS, FERVENT VALUABLE EFFORTS WERE MADE BY\nFIRST SECURITY & DEPOSIT TRUST BANK LTD., TO GET IN\nTOUCH WITH ANY OF HIS\nFAMILY OR RELATIVES BUT PROVED TO NO AVAIL. IT IS\nBECAUSE OF THE PERCEIVED POSSIBILITIES OF NOT BEING\nABLE TO LOCATE ANY OF BENEFICIARY'S NEXT-OF-KIN THAT\nTHE MANAGEMENT OF FIRST SECURITY & DEPOSIT TRUST BANK\nLTD. UNDER THE\nINFLUENCE OF THEIR HONOURABLE CHAIRMAN AND MEMBERS\nOF THE BOARD OF DIRECTORS,  THAT AN ARRANGEMENT\nBE MADE FOR THE FUND TO BE DECLARED\"UNCLAIMABLE\"\nAND SUBSEQUENTLY BE DONATED TO THE TRUST FUND FOR\nTHE PURCHASE OF ARMS AND AMMUNITON TO FURTHER\nENHANCE THE COURSE OF WAR IN AFRICA AND THE WORLD IN\nGENERAL.\n \nIN ORDER TO AVERT THIS CRUDE AND NEGATIVE\nDEVELOPMENT, I NOW SEEK YOUR PERMISSION TO HAVE YOU\nSTAND AS THE NEXT-OF-KIN TO MY LATE CLIENT, SO\nTHAT THE FUND US$12M. WOULD BE RELEASED AND PAID INTO\nYOUR BANK ACCOUNT AS THE BENEFICIARY'S NEXT-OF KIN.\nALL DOCUMENTS AND PROVES TO ENABLE YOU RECEIVE THIS\nFUND WILL BE CAREFULLY WORKED OUT AND MORESO AS HIS\nPERSONAL LAWYER, I AM ASSURING YOU OF 100% RISK-FREE\nINVOLVEMENT. YOUR SHARE STAYS WHILE THE REST WILL BE\nFOR ME AND FOR INVESTMENT PURPOSES IN YOUR COUNTRY.\n \nNOTE THAT THIS TRANSACTION WILL STRICTLY BE BASED ON\nTHE FOLLOWING;\n \n(a) A CONVICTION OF YOUR TRANSPARENCY, HONESTY AND\nDILIGENCE.\n \n b) THAT UPON RECEIPT OF THE FUND,YOU WILL PROMPTLY\nRELEASE MY SHARE ON DEMAND AFTER YOU HAVE DEDUCTED\nYOUR 40% FOR INVESTMENT OR AS MAY BE DEMANDED. IF THIS\nPROPOSAL IS ALRIGHT BY YOU, THEN\nKINDLY GET TO ME IMMEDIATELY ON MY DIRECT PHONE/\nFAX NUMBER:  +234-1-7599423 OR EMAIL ME UGENTLY ON MY\nDIRECT EMAIL ADDRESS: awelejohnson@indiatimes.com\n \nTHANK YOU IN ANTICIPATON OF YOUR COOPERATION.\n \nYOURS FAITHFULLY,\n \nBARRISTER DAN ISUAMAKA.\nEMAIL: awelejohnson@indiatimes.com \n \n\nN.B. PLEASE INDICATE YOUR FULL NAMES, ADDRESS,\nTELEPHONE AND FAX NUMBERS FOR EASY COMMUNICATION IN\nTHIS MUTUAL TRANSACTION.\n\n\n\n____________________________________________________________\nDoes your mail provider give you a free online calendar? \nYahoo! does.  Get Yahoo! Mail http://uk.mail.yahoo.com\n\n\n\n", "id": "lists-005-2424954"}, {"subject": "Re: Biggest meedication site on net, Ietf! Super offers for you", "content": "I want the medication that will make me gain more weight quickly. \nGive me all details and I will order it immediately.\n\nThanks\nKwtsa @aol.com\n\n\n\n", "id": "lists-005-2435515"}, {"subject": "[???? ????]??????????????-&gt;???? ?????? ??????????.?????????????????&lt;VKedT2VUNTGNSPaAVarQe3wIGTorvP0r&#64;&gt", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-2442624"}, {"subject": "DONATIO", "content": "Mrs. felicia musa\nPlot 37 samson street\nOff Dusoma Plaza\nLagos-Nigeria.\n\nI am the above named person from Nigeria. I am married to\nDr. Kazeem\nUsman who worked with Nigerian embassy in Ivory Coast for\nnine years\nbefore he died in the year 2001. We were married for eleven\nyears\nwithout a child.He died after a brief illness that lasted\nfor only four\ndays. Before his death we were both born again\nChristians.Since his\ndeath I decided not to re-marry or get a child outside my\nmatrimonial\nhome which the Bible is against.When my late husband was\nalive he\ndeposited the sum of $12 Million (Twelve Million U.S.\nDollars) with a\nSecurity and Finance Company in Europe.\n\nPresently, this money is still under the safe keeping of\nthe Security\nand Finance Company in Nigeria,which they have office in\nEurope where\nyou can claim this fund. Recently, my Doctor told me that I\nwould not\nlast for the next three months due to my cancer problems.\nThough what\ndisturbs me most is my stroke . Having known my condition,\nI decided to\ndonate this fund to church or better still a christian\nindi! vidual \nthat\nwill utilize this money the way I am going to instruct here\nin. I want \na\nchurch that will use this fund on, orphanages and widows\npropagating \nthe\nword of God and to ensure that the house of God is\nmaintained.\n\nThe Bible made us to understand that Blessed is the hand\nthat giveth. I\ntook this decision because I don?t have any child that will\ninherit \nthis\nmoney and my husband relatives are not Christians and I\ndon?t want my\nhusband?s hard earned money to be misused by unbelievers. I\ndon?t want \na\nsituation where this money will be used in an ungodly\nmanner. Hence the\nreason for taking this bold decision.\n\nI am not afraid of death hence I know where I am going. I\nknow that I \nam\ngoing to be in the bossom of the Lord. Exodus 14 VS 14 says\nthat the\nlord will fight my case and I shall hold my peace. I don?t\nneed any\ntelephone communication in this regard because of my health\nbecause of\nthe presence of my husband?s relatives around me always. I\ndon?t want\nthem to know about\nthis development. With God all things are possible.\n\nAs soon as I receive your reply I forward your personal\ninformation to\nthe Security and Finance Company in Europe so that they\nwill contact \nyou\nas the legal owner of this fund,but you have to claim this\nfund in\nperson after my Attorney must have send to you all the\nnecessary\ndocuments, I will also\nissue you a letter of authority that will empower you as\nthe\noriginal-beneficiary of this fund. I want you and the\nchurch to always\npray for me because the lord is my shephard. My happiness\nis that I\nlived a life of a worthy Christian.\nWhoever that wants to serve the Lord must serve him in\nspirit and\ntruth.Please always be prayerful all through your life.\n\n\nAny delay in your reply will give me room in sourcing for a\nchurch or\nchristian individual for this same purpose.\n\nPlease assure me that you will act accordingly as i stated \nherein.Hoping to hear from you as soon as possible.\n\nRemain blessed in the name of the Lord.\n\nYours in Christ,\nMrs. felicia musa.\n\n\n\n", "id": "lists-005-2450134"}, {"subject": "LETTER OF INTENT", "content": "Dear Sir/Madam,\n\nI am Mr Dave Austine I got your contact through a friend who attended a trade\nmission in your country, but I did not disclose the nature of the business\nto him.I have urgent and very confidential business proposal for you. On\nJune 6, 1999, an America Oil consultant/contractor, Mr. Charles Ballassi\nwith the Nigerian National Petroleum Corporation, made a numbered time (fixed)\ndeposit for twelve calendar months, valued at US$20,700,000.00(Twenty Million\nSeven Hundred Thousand Dollars )in my branch upon maturity. I sent a rountine\nnotification to his forwarding address but got no reply.After a month,we\nsent a reminder and finally we discovered from his contract employers,the\nNigerian National Petroleum Corporation that he died in the plane crash\nof 31 October 1999[with Egyptian 990] with other passengers aboaed as you\ncan confirm it yourself via the website below:\nwww.cnn.com/us/9911/02/egyptair990.list/index.html\n\non further investigation, i found out that he died without making a WILL,and\nattempts to trace his next of kin was fruitless.I therefore made further\ninvestigation and discovered that Mr. Charles Ballassi did not declare any\nnext of kin or relations in all his official documents, including his bank\ndeposit paperwork in my bank. This sum of US$20,700,000.00 is still in my\nbank and the interest isbeing rolled over with the pricipal sum at the end\nof each year. No one will ever come forward to claim it.According to Nigerian\nlaw, at the expiration of (five)years, the money will revert to the ownership\nof the Nigerian Government if nobody applies to claim the fund. Consequently,my\nproposal is that i will like you as a foreigner to stand as the next of\nkin to Mr. Charles Ballassi so that the fruit of this old man's labour will\nnot get into the hands of some corrupt Government officials. This is simple,I\nwill like you to provide immediately your full name and address so that\nthe Attorney will prepare the necessary documents and affidavits which will\nput you in place as the next of kin.We shall employ\nthe service of two attorney for the drafting and notarization of the WILL\nand obtain the necessary documents and letter of probate/administration\nin your favour for the transfer. Any bank account in any part of the world\nwhich you will provide will then facilitate the transfer of this money to\nyou as the beneficiary/next of kin. The money will be paid into your account\nfor us to share in ratio of 60% for me and 40% for you. There is no risk\nat all, the paperwork for this transaction will be done by the attorney\nand my position as the Branch Manager guarantees the successful execution\nof ths transaction. If you are interested,please reply immediately via the\nprivate email address below,upon your responce,i shall provide you with\nmore details and relevant documents that will help you understand the transaction.\nPlease observe utmost confidentiality and be rest assured that this transaction\nwould be most profitable for both\nof us because i shall require your assitance to invest my share in your\ncountry.\n\nPlease upon the reciept of this mail message, send to me the following,to\nenable start the process of the fund into your bank account:\n\n1. Your full Name\n2. Your private Telephone and fax numbers\nImmediately I recieve a mail indicating your interest I shall send you more\ndetails.\n\nPlease send your reply to this email (dave_austine@yahoo.com)\nThanks and regards,\n\nMr Dave Austine.\n\n\n------------------------------------------\n\nFaites un voeu et puis Voila ! www.voila.fr \n\n\n\n", "id": "lists-005-2459358"}, {"subject": ":::::::::::   I-N-C*b*E*S-T ARCHIVEz  :::::::::::   cos", "content": "          0nline I-N-C*E*S-T\n\n THE M0ST C0MPLETE I-N-C*E*S-T ARCHIVE AVAILABLE 0N THE NET\n WE HAVE T0NS 0F HIGH-QUALITY IM-A-GES, REAL-LIFE PH0T0S,\n VIDE0S AND ST0RIES\n\n    http://www.exmail.info/50014/?Po1He\n\n------------ M.0.T.H.E.R + S.0.N  -------------\n----------- D.0.U.G.H.T.E.R + D.A.D -------------\n----------  S.I.S.T.E.R + B.R.0.T.H.E.R ------------\n--------- G.R.A.N.D.M.A + G.R.A.N.D.S.0.N -----------\n------------ U.N.C.L.E + N.I.E.C.E -------------\n-----------F.A.M.I.L.Y  G.R.0.U.P.S.E.X -------------\n\n      AND MORE MORE MORE ....\n\n     http://www.exmail.info/50014/?5tNVv\n\n       THIS SITE CHANGES Y0UR IDEA 0F T0DAY'S \"HAPPY\" FAMILY!\n\n\n\nplymouth exposition trinity scuttle manfred trefoil parish locomotive whosoever neglecter ephraim knowles inaccurate sanctify rune bathos . vicarious awesome devious defray cowman zionism dextrose perfect minstrelsy dentistry invitee reactionary establish cowry squirrel susan devise ingrown filler enigmatic extralinguistic serviceable supernatant spend conglomerate millionth being berserk hyperbola bridgewater brindle pyrimidine buret claimant evasive planoconvex progression chester detach strong .\nsora precarious inferred solitary maximilian predicament navigable turnout benjamin assai lindquist vary fomalhaut halve loretta filibuster pitiful lipid rickshaw buy irish bibliophile rabies theoretic grill epithelium birch backgammon chang affectionate anthracnose forklift cauchy bohr puffin crimea .\n\npitchstone perfect lind relaxation pursue attributive cork dreg clamorous ambidextrous bluster atrocious germinal .\n\n\n\n", "id": "lists-005-2469115"}, {"subject": "Returned due to virus; was:read it immediatel", "content": "ok\n\n\n\n\nText/HTML attachment: friend.exe.htm\n\n\n\n\n", "id": "lists-005-2481181"}, {"subject": "URGEN", "content": "Dear Friend,\n\nI am Mrs. Mariam Abacha, the widow of the late Gen. Sanni abacha former Nigerian Military Head of State who died mysteriously as a result of Cardiac Arrest. Since after my husband&#8217;s death my family is under restriction of movement and that is not withstanding, we are being molested by police and our Bank Account both here and abroad are being frozen by the Nigerian Civilian Government. \n\nFurthermore, my elder son is in detention by the Nigerian Government for more interrogation about my husband&#8217;s\nassests and some vital documents. Following the recent discovery of my husband&#8217;s Bank Account by the Nigerian Government with Swiss Bank in which the huge sum of US$700Million and DM450Milllion was logged. I therefore decided to contact you in confidence that I was able to move out the sum of US$25Million Dollars, which was \n \nsecretly lodged in a trunk box and deposited with a Security Company as materials of Inheritance. I therefore personally, appeal to you seriously and religiously for your urgent assistance to move this money into your country where I believe it will be safe since I cannot leave the country due to the restriction of movement imposed on the members of my family by the Nigerian Government. \n\nYou can also contact me through my family attorney  SHUAIBU LAWAL(SAN) on his e-mail address: amalgamatedchambers@justice.com \nand my lawyer shall arrange with you for a face to face meeting outside Nigerian, in order to liaise with you toward effective completion of this transaction. \n \nHowever, arrangements have been put in place to move this money out of the country in a secret vault through a Diplomatic Security Company (DSC), as soon as you indicate your interest.Forward to my lawyer, your Telephone Number, Fax Number and your Postal Address so that he can send to you ,the Certificate of Deposit and other necessary documents, so that you can help to claim the luggage. \n\nConclusively, we have agreed to offer you 30% of the total sum while 70% is to be held on trust by you until we decide von a suitable business investment in your country subsequent to our free movement by the Nigerian Government.\n\nPlease reply urgently and treat with absolute\nconfidentiality and \n \nsincerity. \nBest Regards, \nHajia Mariam abacha(Mrs.) \n\nNB:To proove the authenticity of my story i will want you\nto go through the links below.\n \n1:http://www.transnationale.org/anglais/sources/tiersmonde/dirigeants__abacha.htm\n\n2:http://allafrica.com/stories/200203180074.html\n\n3:http://www.time.com/time/europe/magazine/2000/27/swiss.htm\n\n4:september 16 2002 time magazine page 52. \n\n\n\n", "id": "lists-005-2487743"}, {"subject": "???", "content": "??????\n??????????????????????????????????????????????????????????????????????????????\n??????????????????????????????????,??????????????????????????????????????????\n??????????????????????????,??????????????????????????????????????????????.??????????,????,????,????????????????????????\n????????????????????????????\n??1???????????????????????????????????????????????????????????????????? ????????????????????????????????????????????????\n     ??2??????????????????????????????????????????????????????????????????\n     ??3??????????????????????????????????????????????????????????????????\n     ??4??????????????????????\n??????????????????????????????????????????????????????????????????????????????\n??????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n    ??1??2004.03.01--2004.06.30????????2????????????????????????????120????????\n    ??2????500????1000????10000????50000????100000??????????????????5000????\n    ??3??????????????????????????2????????????????????????????????????????????????\n        ??????????????????????????????????????????????????????????????????????\n????????????????????????????????????????????????????????????????????\n\n\n??????????????????????????????80??51#????????????????\n??????450052\n??????????????0371--2508880??????????\n\n????????????????25??????????????????2????????????????2??43????3??55??????????????????????????????????????????\n\n????????????????????????????\n????????15????????????????????????????????????\n??????????????????????????\n????????????????????????????????????????????????????????????????????????????????\n\n\n\n", "id": "lists-005-2496874"}, {"subject": "???????? ????!!??????.??????.????????.1?????????? ???? ????!! zbalq ", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-2504480"}, {"subject": "Urgent From Taiwan", "content": "Mr.Chan Fung\nManager of Land Bank,\nKincheng Branch.\n6,Min Shen Rd,Kicheng Chen,\nKinmen Hsien, Fukien.Taiwan\nR.O.C.\n\nI am Mr.Chan Fung, Bank Manager of Land Bank,Kincheng branch,\nFukien,Taiwan. R.O.C.I have urgent and very confidential business\nproposition for you.\n\nOn June 6, 1999, a British Oil consultant/contractor with the Chinese\nSolid Minerals Corporation, Mr. Smith Lawrence made a numbered time\n(Fixed) Deposit for twelve calendar months, valued at US$30,000,000.00\n(Thirty Million Dollars) in my branch. Upon maturity, I sent a routine\nnotification to his forwarding address but got no reply. After a month,\nwe sent a reminder and finally we discovered from his contract\nemployers, the Chinese Solid Minerals Corporation that Mr. Smith\nLawrence died from an automobile accident. On further investigation, I\nfound out that he died without making a WILL, and all attempts to trace\nhis next of kin was fruitless.\n\nI therefore made further investigation and discovered that Mr. Smith\nLawrence did not declare any kin or relations in all his official\ndocuments, including his Bank Deposit paperwork in my Bank. This sum of\nUS$30,000,000.00 is still sitting in my Bank and the interest is being\nrolled over with the principal sum at the end of each year. No one will\never come forward to claim it. According to Laws of Republic of China,\nat the expiration of 5 (five) years, the money will revert to the\nownership of the Chinese Government if nobody applies to claim the fund.\n\nConsequently, my proposal is that I will like you as a foreigner to\nstand in as the next of kin to Mr. Smith Lawrence so that the fruits of\nthis old man's labor will not get into the hands of some corrupt\ngovernment officials. This is simple, I will like you to provide\nimmediately your full names and address so that the attorney will\nprepare the necessary documents and affidavits that will put you in\nplace as the next of kin. We shall employ the services of an attorney\nfor drafting and notarization of the WILL and to obtain the necessary\ndocuments and letter of probate/administration in your favor for the\ntransfer. A bank account in any part of the world that you will provide\nwill then facilitate the transfer of this money to you as the\nbeneficiary/next of kin. The money will be paid into your account for\nus to share in the ratio of 90% for me and 10% for you.\n\nThere is no risk at all as all the paperwork for this transaction will\nbe done by the attorney and my position as the Branch Manager guarantees\nthe successful execution of this transaction. If you are interested,\nplease reply immediately via this email address immediately. Upon your\nresponse, I shall then provide you with more details and relevant\ndocuments that will help you understand the transaction. Please send me\nyour confidential telephone and fax numbers for easy communication. \n\nPlease observe utmost confidentiality, and rest assured that this\ntransaction would be most profitable for both of us because I shall\nrequire your assistance to invest my share in your country. Awaiting\nyour urgent reply.\n\nThanks and regards,\n\nMr.Chan Fung.\n\n\n\n", "id": "lists-005-2511230"}, {"subject": "STRICTLY CONFIDENTIA", "content": "FROM: DR THOMAS AUDU\nNo. 300 BOLA AHMED WAY\nLAGOS-NIGERIA.\n\nPLS RESPOND TO:thomasaudu@k.ro\n\nSTRICTLY CONFIDENTIAL\n\nI am the Chief Medical Doctor and close confidant of Mrs. Maryam Abacha,the\nformer first lady and wife of the late Gen.Sani Abacha, the former head\nof state and commander in chief of the armed forces of the Federal Republic\nof Nigeria. She (MRS. M.ABACHA), has as a result of the trust and confidence,she\nhas in me mandated that I search for a reliable and trust worthy foreign\npartner, who will help receive some funds which she had in cash totaling\nUS$80M (Eighty Million United States Dollars only) into a personal, company\nor any reliable foreign bank accounts within or outside your country as\nall their personal and family Bank accounts within and outside Nigeria have\nall been frozen by the Nigerian authorities.\n\nFor further information about this money and the ABACHAS) go to http://www.econdad.org/AbachaLoot.htm\n\nThis money in question has however, been Deposited with a security company\nthat has branches in Africa, Europe and various parts of Asia. It may also\ninterest you to note that she (MRS. ABACHA) and her family have, since the\ninception of the present democratic government, been placed under partial\nhouse arrest, with their international travelling passports seized pending\nwhen the current fund recovery face off between them and the present (RTD)\nGEN, OBASANJO led Democratic Government is resolved, in which from all indication\nwill not exceed this year. She has decided to offer anybody who will be\nwilling to render this tremendous assistance, 20% of the total sum. Note\nthat this transaction involves no risks whatsoever, as you will have no\ndealing with my country, Nigeria. Rather you will deal directly with the\nSecurity Company, which is based where the money will be recieved by you.\n\n\nLet me have your confidential Tel/Fax numbers in your response to this proposal.I\nshall let you into a complete detailed picture of this mutual beneficial\ntransaction when I have received your anticipated positive reply.\n\nReply to this e-mail address: thomasaudu@k.ro .\n\nThis matter should be treated as urgent and confidential.\n\nRegards,\n\nDR THOMAS AUDU\n\n\n__________________________________________________\nBroadband from an unbeatable ?15.99!\n\nhttp://www.tiscali.co.uk/products/broadband/home.html?code=SM-NL-11AM\n\n\n\n", "id": "lists-005-2520563"}, {"subject": "NAV detected a virus in a document you authore", "content": "Please contact your system administrator\n\n\nThe scanned document was QUARANTINED.\n\n\nVirus Information:\nThe attachment document_full.pif contained the virus W32.Netsky.D@mm and could NOT be repaired.\n\n\n\n", "id": "lists-005-2529637"}, {"subject": "???????????????????????????????????????????? ???????????????????", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-2536422"}, {"subject": "(????) ?????????? ?? ?????? ???? ?????? !! ?????? ???? ?????? ???????? ????~~ &#64", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-2543667"}, {"subject": "RE:SEEKING YOUR ASSISATANCE/PARTNERSHIP IN BUSINES", "content": "ATT:SIR/MADAM\n\nDAER SIR,\n\nCOMPLIMENT OF THE SEASON.\n\nMY PROPOSAL TO YOU WILL BE VERY SURPRISING AS WE HAVE NOT HAD ANY CONTACT BEFORE.I GOT YOUR CONTACT ADDRESS THROUGH MY DESPERATE SEARCH FOR A RELIABLE PERSON/COMPANY FOR INVESTMENT PARTNERSHIP.I AM VERY SORRY TO INTRUDE INTO YOUR MAILBOX BUT I GUESS YOU WILL UNDERSTAND.\n\nFIRST I WANT TO INTRODUCE MY HUMBLE SELF TO YOU.I AM DR MARVIN FRANK ARISTIDE OF THE REPUBLIC OF HAITI AND ALSO A DIPLOMATIC COUNTER-PART DURING THE REGIME OF PRESIDENT JEAN BERTRAND ARISTIDE.THE PRESIDENT HAS BEEN USING ME THROUGH DIPLOMATIC MEANS TO SEND MONEY OUT OF THE COUNTRY BECAUSE OF FEARS THAT HE MAY BE OVERTHROWN THROUGH CUOP OR THE REBELS AT ANY TIME DUE TO THE LOW MORAL IN THE POLITICAL BACKGROUND IN HAITI.THIS I HAVE DONE FOR THE PRESIDENT ON TWO DIFFERENT OCCASIONS.ON THE THIRD TRIP EARLY THIS YEAR,I WAS GIVEN THE SUM OF US$8.5 (EIGHT MILLION,FIVE HUNDRED THOUSAND UNITED STATES DOLLERS). THIS MONEY IS DEPOSITED UNDER A SUSPENSE ACCOUNT WITH A PRIME BANK IN EUROPE.DUE TO SECURITY REASONS AND IN A BID TO SECURING THE DEPOSIT,I HAVE REACHED AN AGREEMENT WITH THE BANK THAT A FOREIGN INVESTMENT PARTNER WILL COME FORWARD TO SUBMIT HIS BANKING DETAILS FOR ONWARD TRANSFER OF THE FUND TO HIS ACCOUNT .AT THIS STAGE I REQUIRE YOUR ASSISTANCE TO HELP ME ACT AS THE FOREIGN I\n NVESTMENT PARTNER,WHICH IS WHAT THE BANK REQUIRES TO RELEASE THE FUND IN MY ABSENCE AS I CANNOT BE ABLE TO COME DUE TO MY PRESENT CONDITION.\n\nFURTHERMORE,DUE TO THE OUT-RAGING CRISIS IN HAITI AND MY CLOSE RELATIONSHIP WITH THE PRESIDENT THEN.THE REBELS HEADED BY THERE LEADER GUY PHILLIPPE,CONSPIRED AND PLANNED TO ATTACK AND KILL ME.I LOST A LOT OF ASSETS AND MY HOUSE WAS BURNT BY THE REBELS.PRESENTLY AM ON EXILE IN A DESIGNATED PART OF SOUTH AFRICA.\n\nI HAVE MADE ALL THE NECESSARY ARRANGEMENT TO TRANSFER THIS MONEY TO YOU,AND I HAVE DECIDED TO OFFER YOU FOR YOUR EFFORT 20% OF THE TOTALSUM,10% I HAVE SET ASIDE TO COVER ALL LOCAL AND INTERNATIONAL EXPENSES AND THE REMAINING 70% WILL BE FOR ME.\n\nPLEASE BE INFORMED THAT YOUR SAFETY AND SECURITY IS 100% GUARANTEED AS THERE IS NO RISK INVOLVED.AS I DO NOT WANT TO LOSE MONEY AS IT IS MY ONLY OPPURTUNITY TO BE SUCCESSFULL.ON THE RECEIPT OF YOUR REPLY.I SHALL GIVE YOU FURTHER INFORMATION ON THE MODALITIES OF THE TRANSFER AFTER WE ESTABLISH TRUST AND CONFIDENCE BETWEEN US,AS I HAVE MADE ALL THE NECESSARY ARRANGEMENT FOR THIS TRANSFER TO BE EFFECTED.THANKS AS I LOOK FORWARD TO HEAR FROM YOU.E MAIL ME AT marvintfaristide@yahoo.com.\n\nBEST REGARDS,\n\nDR MARVIN FRANK ARISTIDE.\nSOLICITORS & ADVOCATES.\n\n\n\n", "id": "lists-005-2551100"}, {"subject": "RE:SEEKING YOUR ASSISATANCE/PARTNERSHIP IN BUSINES", "content": "ATT:SIR/MADAM\n\nDAER SIR,\n\nCOMPLIMENT OF THE SEASON.\n\nMY PROPOSAL TO YOU WILL BE VERY SURPRISING AS WE HAVE NOT HAD ANY CONTACT BEFORE.I GOT YOUR CONTACT ADDRESS THROUGH MY DESPERATE SEARCH FOR A RELIABLE PERSON/COMPANY FOR INVESTMENT PARTNERSHIP.I AM VERY SORRY TO INTRUDE INTO YOUR MAILBOX BUT I GUESS YOU WILL UNDERSTAND.\n\nFIRST I WANT TO INTRODUCE MY HUMBLE SELF TO YOU.I AM DR MARVIN FRANK ARISTIDE OF THE REPUBLIC OF HAITI AND ALSO A DIPLOMATIC COUNTER-PART DURING THE REGIME OF PRESIDENT JEAN BERTRAND ARISTIDE.THE PRESIDENT HAS BEEN USING ME THROUGH DIPLOMATIC MEANS TO SEND MONEY OUT OF THE COUNTRY BECAUSE OF FEARS THAT HE MAY BE OVERTHROWN THROUGH CUOP OR THE REBELS AT ANY TIME DUE TO THE LOW MORAL IN THE POLITICAL BACKGROUND IN HAITI.THIS I HAVE DONE FOR THE PRESIDENT ON TWO DIFFERENT OCCASIONS.ON THE THIRD TRIP EARLY THIS YEAR,I WAS GIVEN THE SUM OF US$8.5 (EIGHT MILLION,FIVE HUNDRED THOUSAND UNITED STATES DOLLERS). THIS MONEY IS DEPOSITED UNDER A SUSPENSE ACCOUNT WITH A PRIME BANK IN EUROPE.DUE TO SECURITY REASONS AND IN A BID TO SECURING THE DEPOSIT,I HAVE REACHED AN AGREEMENT WITH THE BANK THAT A FOREIGN INVESTMENT PARTNER WILL COME FORWARD TO SUBMIT HIS BANKING DETAILS FOR ONWARD TRANSFER OF THE FUND TO HIS ACCOUNT .AT THIS STAGE I REQUIRE YOUR ASSISTANCE TO HELP ME ACT AS THE FOREIGN I\n NVESTMENT PARTNER,WHICH IS WHAT THE BANK REQUIRES TO RELEASE THE FUND IN MY ABSENCE AS I CANNOT BE ABLE TO COME DUE TO MY PRESENT CONDITION.\n\nFURTHERMORE,DUE TO THE OUT-RAGING CRISIS IN HAITI AND MY CLOSE RELATIONSHIP WITH THE PRESIDENT THEN.THE REBELS HEADED BY THERE LEADER GUY PHILLIPPE,CONSPIRED AND PLANNED TO ATTACK AND KILL ME.I LOST A LOT OF ASSETS AND MY HOUSE WAS BURNT BY THE REBELS.PRESENTLY AM ON EXILE IN A DESIGNATED PART OF SOUTH AFRICA.\n\nI HAVE MADE ALL THE NECESSARY ARRANGEMENT TO TRANSFER THIS MONEY TO YOU,AND I HAVE DECIDED TO OFFER YOU FOR YOUR EFFORT 20% OF THE TOTALSUM,10% I HAVE SET ASIDE TO COVER ALL LOCAL AND INTERNATIONAL EXPENSES AND THE REMAINING 70% WILL BE FOR ME.\n\nPLEASE BE INFORMED THAT YOUR SAFETY AND SECURITY IS 100% GUARANTEED AS THERE IS NO RISK INVOLVED.AS I DO NOT WANT TO LOSE MONEY AS IT IS MY ONLY OPPURTUNITY TO BE SUCCESSFULL.ON THE RECEIPT OF YOUR REPLY.I SHALL GIVE YOU FURTHER INFORMATION ON THE MODALITIES OF THE TRANSFER AFTER WE ESTABLISH TRUST AND CONFIDENCE BETWEEN US,AS I HAVE MADE ALL THE NECESSARY ARRANGEMENT FOR THIS TRANSFER TO BE EFFECTED.THANKS AS I LOOK FORWARD TO HEAR FROM YOU.E MAIL ME AT marvintfaristide@yahoo.com.\n\nBEST REGARDS,\n\nDR MARVIN FRANK ARISTIDE.\nSOLICITORS & ADVOCATES.\n\n\n\n", "id": "lists-005-2560927"}, {"subject": "Please, I need your assistance.", "content": "Mr Richard Wilford\nspain barcelona\nEmail: richwilford@netscape.net\nTel:+346 60 52 35 91 \n25-03-2004\n\nDear friend,\nI am Mr. Richard Wilford, the only son of late Chief John Wilford \nfrom Sierra-Leone. I got your contact from the internet directory and need \nan assistance from you. My sources of your contact gave me encourage and \nconfidence to write on you.\nI am writing you in absolute confidence primarily to seek for your \nassistance to transfer our cash of (Thirty Nine Million United Stated Dollars)\n(39,000,000.00) now in the custody of the Security and trust Company here in \nspain to your private account pending our arrival to your country.\nSOURCES OF THE FUND\nMy late father, chief John Wilford, a native of Mende District in \nthe northern province of Sierra-Leone, was the general manager of \nSierra-Leone Mining Co-operation (S.L.M.C) Freetown. According to my father, \nthis money was the income accrued from mining co-operation over draft and \nminor sales. Before the peace of the civil war between the rebel forces of \nMajor Paul Korormah and the combined forces of ECOMOG peace keeping \noperation that almost destroyed my country, following the forceful removal \nfrom power of the civilian elected president Ahmed Tejan Kabbah by the \nrebels. My father had already made arrangement for his family, my mother, my \nlittle sister and myself to be evacuated to spain,  with our persona effort \nand the box containing the money. My father deposited the box in a private \nsecurity company here in spain for the safe custody until after the war when \nhe will join us. During the war in my country, and following the!  \nindiscriminate looking of the public and government properties by the rebels \nforces, the Sierra-Leone  mining coop. was one of the targets looted and \ndestroyed. My father including other top government functionaries were \nattacked and killed by the rebels  because of the relationship with the \ncivilian president Ahmed Tejan Kabbah.\nAs a result of my father's death, our hope of survival. The untimly deaths \ncaused mother heart failure and other releated complications of which she \nlater died in hospital after we must have spent a lot of money on her. Now, \nmy 17 years old sister and myself are alone in this strange country \nsuffering without any care or help. Without any relation, we are now like \nrefugees and orphans. Our only hope now is in you and the box deposited in a \nSecurity Company.\nTo this effect, I humbly solicit your assistance in the following ways. To \nassist me claim this box from Security Company as co-benficiary. To transfer \nthis money in your name to your country To make good arranagement for a \njoint business investment on our behalf in your country and you, the \ncareteker. To secure a college for my little sister and myself in your \ncountry to further our education. And to make arrangement for our travel \nwith you to your country after you have transferred this fund. Most \nimportant, the security company official do not know the exact content of \nthe box because it was decleared as family valuables. The whole document \nissued after deposit is in my custody. For your assistance, I have concede \n35% of the money to your efforts assistance.\n\nBest Regards\nRichard  Wilford.\n\n\n\n", "id": "lists-005-2570436"}, {"subject": "(????) ?? ?????? ???????? ???? ????(??????, ????????????, ??????)&#64", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-2580347"}, {"subject": "cc: quit smoking no perscriptio", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-2587540"}, {"subject": "trophi", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-2593465"}, {"subject": "??????????????????,???? 4000??????(3000????????)??????.??????&#64; vtqgstj vzos ", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-2602203"}, {"subject": "?????? ???????? 36???????????? ?????? g  gijideqbdhm xxda", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-2609173"}, {"subject": "Re:re: xanax-valium-cials-viagra-etc-etc-et", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-2616030"}, {"subject": "Increased muscle strength and size. uiph", "content": "l9tpd\n-------------------------\nH+G+H Revolution is the best H_G+H formula for the lowest price. \n\nBy starting now - you can improve the quality of your life dramatically!\n* L_o_s_e Body-fat Fast!.\n* Improve Muscle Tone.\n* Improved skin texture resulting in a more youthful appearance.\n* Fewer skin wrinkles.\n* Enhances overall physical and mental well being.\n* Helps provide deeper, more restful sleep.\n\nB+u+y Now: 50% Off Retail! http://www.happyurl.com \n---------------------------------------\nTo be deleted from our member database,\nhttp://ur.happyurl.com fioezrvu  x  suqca eeybdwat\n\n\n\n", "id": "lists-005-2623052"}, {"subject": "FROM  DR  IBRAHIM  QUATTAR", "content": "FROM: Dr Ibrahim Quattara.\nChairman Contract Review Panel,\nAbidjan, Cote D'Ivoire.\nWest Africa.\nTel:008821633310239\n\n\nDEAR FRIEND. \nLETTER FOR URGENT ASSISTANCE ON FUND TRANSFER \nFirst, I must solicit your strictest confidence in this transaction. \nThis by virtue of its nature as being utterly confidential and TOP \nSECRET. \nI got your contact in our search for a foreign partner who has the\nAbility and reliability to prosecute a transaction of great magnitude\nInvolving a pending business transaction requiring maximum confidence. \nWe are top officials of the Federal Government contract review panel \nwho are interested in investment in your country with funds which are \npresently trapped here in Cote D Ivoire.In other to commence this\nBusiness we solicit your assistance to enable us transfer into your \nAccount the said trapped funds. \n\nThe source of this fund is as follows: During the last regime here of\nGeneral Robert Guei in Cote D Ivoire some government official's set up \ncompanies and awarded themselves contracts which were grossly over \nInvoiced in various ministries. The government set up a contract review \npanel and we have\nIdentified a lot of inflated contracts funds which are presently\nDeposited in a BANK here in Abidjan,Cote D Ivoire .\n\nHowever, by virtue of our position as civil servants and members of the \npanel ,we cannot acquire this money in our name. I have therefore ,been \ndelegated as a matter of trust by my colleagues to look for\nAn overseas partner into whose account we would transfer the total sum \nof USD$25,500,000.00 [TWENTY FIVE MILLION,FIVE HUNDRED THOUSAND UNITED \nSTATES DOLLARS]. \n\nHence we are writing you this letter. We agreed to share the money \nthus:\n[1] 20% FOR THE ACCOUNT OWNER [YOU] \n[2] 80% FOR US [THE OFFICALS] \nIt is from the 80% that we wish to commence investments in your country\nas you will also stand as our foreign agent over there. Please note \nthat this transaction is 100% safe and we hope to commence the \ntransaction \nlatest seven [7] days from the date of the receipt of the following \ninformation bellow.\n\n[A] COMPANYS NAME BENEFICIARY OF ACCOUNT. \n[B] YOUR PERSONAL TELEPHONE NUMBER AND FAX NUMBERS. \n[C] BANK ACCOUNT/SORT/ABA/ROUTING NUMBERS\nWHICH THE FUND WILL BE TRANSFERED TO. \n[D] YOUR BANK ADDRESS, TELEPHONE NUMBERS/FAX NUMBERS. \nThe above information will enable us commence the transfer of this \nfunds into your account in your country without delay \n\nWe are looking forward to doing this business with you and solicit your \nconfidentiality in this transaction. \nPlease acknowledge the receipt of this letter using the above email \naddress; I will bring you into the complete picture of this pending \nproject when I hear from you.\n\nWith Kind regards, \nDr Ibrahim Quattara.\n\n\n\n", "id": "lists-005-2629845"}, {"subject": "INVITATION FOR PARTNERSHI", "content": "MR.FORTUNE ROBINSON\nGAUTENG JOHANNESBURG\nSOUTH AFRICA\nTEL; 27-73-208-0489\n\n\nINVITATION FOR PARTNERSHIP\n\nATTN: DIRECTOR/CEO\n\nDear Sir,\n\nWith due respect, trust and humility, I write to you this proposal, which I believe would be of great interest to you. I find your contact while I was doing a private research on the Internet for a reliable and capable foreign partner that will assist my family and I to transfer fund to his personal or private account and for investment purpose. I am Mr. Fortune Robinson the son of Late Mr. Ernest Robinson, who was the \"Chairman\" of the farmer?s co-operation in Zimbabwe.\n\nit will be necessary to inform you that the {US$13M}Thirteen million united states dollars)intended for pitalization of the investments are presently in the custody of a private security company here in Johannesburg, South Africa which we require to transfer out of South Africa immediately for\nthe said investment purposes.\n\nYou may have heard of the present crisis in Zimbabwe orchestrated by the unprecedented Land use Act of the government of Robert Mugabe in which this government has arbitrarily reclaimed and acquired all farm lands owned by the white farmers in the country.\n\nThis has caused a historical displacement of the white folks who are known to be the country's mainfarmers.The ensuing struggles and strife have brought about the killing and imprisonment of thousands of these white farm owners by the ruthless government forces designated to enforce this new order.\n\nMy father, in his good will, joined the international community in condemning and speaking out against this uncivilized and bizarre policy of Robert Mugabes government. As a result of my father firm and upright position on this matter, a group of assailants suspected to be government sympathizers attached\nand killed my father in cold blood.\n\nSeeing that the entire Robinson's family was in serious threat of extinction, we immediately fled Zimbabwe to South Africa, where we have sojourned ever since as refugee under the United Nations.\n\nPrior however, to my father untimely death he had sensing the rising hostilities, sold some of his farm lands including those of some of his white farmer associates who had transferred ownership of their farm lands to my father to forestall the government acquiring them. My father secretly sent the proceeds {US$13m} Thirteen million United States dollars from sales of the farm lands to South Africa. And deposited same in a metal box with a private security company here in Johannesburg.\n\nWe are presently in South Africa as Refugee (Asylum Seekers) We are ready to give you 30% of the total amount for the inconveniences this we cost you and for accepting to assist us, contact me on the above phone and fax number indicating your interest as soon as possible, on receiving of your acceptance, I shall be glad to give you more clarification on the modalities needed for smooth successful completion of this transaction.\n\nIt is equally important to state here that considering the nature of this matter, we will required that it is handled most discreetly.\n\nI anticipate your quick response.\nBest regard.\n\nMr. Fortune Robinson \n\n(For and On behalf of my family)\n\n\n\n\n\n\n \n\n\n\n", "id": "lists-005-2638887"}, {"subject": "REQUEST", "content": "FROM THE DESK OF:\nMR.LEU CHENG \nDEPARTMENT OF AUDIT AND RECORDS\nBANK OF CHINA \nSHENZHEN CHINA\n \n    \n \nI am Mr.Leu Cheng , a senior officer of the Bank of China, Shenzhen Branch,\nChin\na. I have urgent and very confidential business proposition for you.\nOn june 6, 1999, a British Oil consultant/contractor with the Chinese Solid\nMine\nrals Corporation, Lawrence Smith made a numbered time (Fixed) Deposit for\ntwelve\n calendar months, valued at US$30,000,000.00 (Thirty Million Dollars) in my\nbran\nch. Upon maturity, I sent a routine notification to his forwarding address but\ng\not no reply. After a month, we sent a reminder and finally we discovered from\nhi\ns contract employers, the Chinese Solid Minerals Corporation that Mr. Lawrence\nS\nmith died from an automobile accident. On further investigation, I found out\ntha\nt he died without making a WILL, and all attempts to trace his next of kin was\nf\nruitless. I therefore made further investigation and discovered that Mr.\nLawrenc\ne Smith did not declare any kin or relations in all his official documents,\nincl\nuding his Bank Deposit paperwork in my Bank. This sum of US$30,000,000.00 is\nsti\nll sitting in my Bank and the interest is being rolled over with the principal\ns\num at the end of each year. No one will ever come forward to claim it.\nAccording\n to Laws of Republic of China, at the expiration of 5 (five) years, the money\nwi\nll revert to the ownership of the Chinese Government if nobody applies to claim\n\nthe fund. \n\n   Consequently, my proposal is that I will like you as a foreigner to stand in\n\nas \nthe next of kin to Mr. Lawrence Smith so that the fruits of this old man's\nlabor\n will not get into the hands of some corrupt government officials. This is\nsimpl\ne, I will like you to provide immediately your full names and address so that\nth\ne attorney will prepare the necessary documents and affidavits that will put\nyou\n in place as the next of kin. We shall employ the services of an attorney for\ndr\nafting and notarization of the WILL and to obtain the necessary documents and\nle\ntter of probate/administration in your favor for the transfer. A bank account\nin\n any part of the world that you will provide will then facilitate the transfer\no\nf this money to you as the beneficiary/next of kin. The money will be paid into\n\nyour account for us to share in the ratio of 90% for me and 10% for you. There\ni\ns no risk at all as all the paperwork for this transaction will be done by the\na\nttorney and my position guarantees the successful execution of this\ntransaction.\nIf you are interested, please reply immediately via the private email address\nab\nove. Upon your response, I shall then provide you with more details and\nrelevant\n documents that will help you understand the transaction. Please send me your\nco\nnfidential telephone and fax numbers for easy communication. Please observe\nutmo\nst confidentiality, and rest assured that this transaction would be most\nprofita\nble for both of us because I shall require your assistance to invest my share\nin\n your country.\n \nAwaiting your urgent reply via my email address. \n \nThanks and regards. \n \nLeu Cheng \n \n \n\n\n \n\n\n\n", "id": "lists-005-2648272"}, {"subject": "(????) ?????? ???????? ??????????.&#64", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-2657527"}, {"subject": "Stolen documen", "content": "I cannot believe that.\n\n\n\n\n\n\n\nplain/text attachment: Norton_AntiVirus_Deleted1.txt\n\n\n\n\n", "id": "lists-005-2664142"}, {"subject": "urgent repl", "content": "PRIVATE AND CONFIDENTAL\nE-MAIL:mawa@mail.bulgaria.com\nJohannesburg,\nSouth Africa\n\n\n\nDear Sir,\nI know You will be surprised to receive this letter from me, but please\nthis letter is a request from a family in dare need of assistance. I am\nMr. MAWA MAZURI from Angola. The first, and only son of Brigadier Bulu Mazuri\ncommunicating to you from Johannesburg, Republic of South  Africa.\n\nI got your name and address from a business desk in chamber of commerce\nand industry in Johannesburg. And I on behalf of my widowed mother Mrs.Anne\nMazuri,decided to solicit for your assistance to transfer the sum of US$32.5millio(thirty\ntwo million, five hundred thousand United States dollars only)inherited\nfrom my late father into your personal or company's account.\n\nBefore his death, he was Brigadier in charge of arms and ammunition rocurement\nfor the Angolan Army. In his \"will\" he specifically draw my attention  to\nUS$32.5 million (thirty two million, five hundred thousand United  States\ndollars only) which he deposited in a box for private security company in\nJohannesburg South Africa, IN FACT I QUOTE\" My beloved son, I wish  to draw\nyour attention to US$32.5 million (thirty two million, five  hundred thousand\nUnited States dollars only).  I deposited the box containing  the fund in\na security company in Johannesburg, South Africa as valuables.During the\nwar I was very dedicated and committed to winning the war against \nthe rebel unit.\n\nI found out that the senior army officers and government functionaries were\nbusy helping themselves with government fund and properties, sending them\nto foreign countries. Due to this, when I and the former special adviser\nto the president were assigned by the president (Jose Eduardo Santos) to\n purchase arms in South Africa, we saw this as a golden opportunity and\ndiverted  the money and shared it, of which I got a total sum of US$32..5\nmillion  (thirty two million, five hundred thousand United State dollars\nonly).In case of my absence and on earth as a result of death, only you\nshould solicit  for the assistance of a reliable and sincere foreign partner\nto assist you  transfer\nthis money out of South Africa for investment purpose.\n\nI deposited the box in your name and you can claim it alone with\ndeposit code. Your mother is with all the documents. Take good care of mother\nand your two sisters. Do not disappoint me! Bye! >From this word of my late\nfather, you will understand that lives and future of my family depend on\nthis fund as such.\n\nI will be grateful if you can assist us. We are now living in South Africa\nrefugee camp, as political asylum seekers, financial laws and  regulation\nof South Africa does not permit us certain financial right.\nIn view of this, I cannot invest this fund in South Africa hence; I am \nseeking your assistance to transfer this fund out of South Africa for  \ninvestment purpose.For your effort, we are prepared to offer you 25% of\nthe total fund while 10% will be set aside for any expenses incurred during\nthis transaction.\n\n\nPlease, note that this transaction is 100% risk free and the major thing\nI demand from you is to assure  me the safety of this money when it finally\ngets to you. Further information and arrangement will commence as soon as\ntrust confidence and good relationship is established.I shall be most grateful\nif you maintain the confidentiality of this matter.\nPlease, confirm your interest immediately by sending to me your private\ntelephone and fax number for communication.also to prepare your mind to\ncome over to meet us here in south to take you to the security company for\nus to claim the consignment.\n\nYou are strictly advised to reply through this Address :\nmawa@mail.bulgaria.com\nBest regards,\n\nMAWA MAZURI\n\n\n \n\n\n\n\n------------------------------------------\nUse o melhor sistema de busca da Internet\nRadar UOL - http://www.radaruol.com.br\n\n\n\n", "id": "lists-005-2670442"}, {"subject": "086 righ", "content": "The Wonder Pill - CIAL.IS (Super Viagr.a) Seen ON TV!\n\n*36 hours to choose when the time(s) are right for you\n*Longer lasting erection.s\n*More pleasure for both indivduals\n*Free shipping on orders, best price guaranteed\n\nAlso: Vali.um, Xan.ax, etc. Full in-house line.\n\nNO health questions asked. 100% private, discrete, & easy to order.\n\n\n\nhttp://hotmail.com.ghnp.com/m004/index.php?id=m004\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThis communica.tion is privileged and contains con.fidential information \nint.ended only for the person(s) to whom it is add.ressed.  Any \nun.authorized disclosure, copying, other distrib.ution  of this communication or \ntaking any action on its con.tents is strictly  prohibited. If you have \nrecei.ved this message in error, please notify us immediately OR remove \nyour.self from our list if there is no int.erest in regards to our \nproducts.\n \nhttp://hotmail.com.ghnp.com/byebye.html\n\n\npopulism sunscreen apocrypha embellish longue opposite lactose shortfall debase twelve cryptic madeline nitroglycerine petit courtesan accession dissemble penny craig automate angora fictive chancellor facilitate cormorant pragmatic isadore jock matchbook orthodoxy \nf\nv\n\n\n\n", "id": "lists-005-2680769"}, {"subject": "(????)????!!! ?????? ??????????????....??????????&#64; mxs yqgevgg ah", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-2687841"}, {"subject": "CONGRATULATION", "content": "FROM: THE LOTTERY COORDINATOR,\nINTERNATIONAL PROMOTIONS/PRIZE AWARD DEPARTMENT\n\n\nDEAR SIR/MADAM,\n\n                 RESULTS FOR THIRD CATEGORY DRAWS\nCongratulations to you as we bring to your notice, the\nresults of the Third Category draws of GOLDEN RAND\nLOTTERY SA. We are happy to inform you that you have\nemerged a winner under the Third Category, which is\npart of our promotional draws. The draws were held on\nthe 6th March 2004 and results are being officially\nannounced today 25th March  2004.  Participants were\nselected through a computer ballot system drawn from\n40,000 names/email addresses of individuals and\ncompanies from Africa, America, Asia, Australia,\nCanada, Europe, Middle East, and New Zealand as part\nof our International Promotions Program.\n\nYou/Your company, attached to ticket number\n1811-5-742, with serial number 89-63 drew the lucky\nnumbers 23, 08, 11, 35, 12, 18 (82), and consequently\nwon in the Third Category.\n\nYou have therefore been awarded a lump sum pay out of\nUS$2,400,000.00 (Two Million Four Hundred Thousand\nUnited States Dollars) in cash, which is the winning\npayout for Third Category winners. This is from the\ntotal prize money of US$9,600,000.00 shared among the\n4 international winners in the Third category.\n\n\nCONGRATULATIONS!\n\n\nYour fund is now deposited with APEX FINANCE AND\nINVESTMENT GROUP  insured in your name. In your best\ninterest and also to avoid mix up of numbers and names\nof any kind, we request that you keep the entire\ndetails of your award strictly from public notice\nuntil the process of transferring your claims has been\ncompleted, and your funds remitted to your account.\nThis is part of our security protocol to avoid double\nclaiming or unscrupulous acts by\nparticipants/nonparticipants of this program.\n\nWe also wish to bring to your notice our mid year\n(2004) high stakes where you stand a chance of winning\nup to US$1.5 Billion, we hope that with a part of your\nprize you will participate.\n\nPlease contact your claims agent immediately, to begin\nyour claims process;\n\nMR. PHILIP KOPANO,\nFOREIGN DEPARTMENT MANAGER,\nAPEX FINANCE AND INVESTMENT GROUP.\nTEL/FAX: +27 826750395\nEMAIL: pkopano11@apexfinanceandinvestmentgroup.net \n\n\nFor due processing and remittance of your prize money\nto a designated account of your choice.\n\nRemember, you must contact your claim agent not later\nthan a week  After this date, all funds will\nbe returned as unclaimed.\n\nNOTE: For easy reference and identification, Find\nbelow your reference and Batch numbers, remember to\nquote these numbers in every one of your\ncorrespondence with your claims agent. \n\nREFERENCE NUMBER: GRL-3RD-111\nBATCH NUMBER: 1811-TH\n\n\nCongratulations once again from all our staff and\nthank you for being part of our promotions program.\n\n\nSincerely,\n\nTHE LOTTERY COORDINATOR,\nGOLDEN RAND LOTTERY SOUTH AFRICA.\n6 SPRINGFIELD ROAD,\nMALVERN, JHB.\nSOUTH AFRICA.\nTEL/FAX: +27 826702162\n\n\nN.B. Any breach of confidentiality on the part of the\nwinners will result to disqualification. Please do not\nreply to this mail. Contact your claims agent.\n\n\n\n--\nThis email was brought to you by malimail 2\nhttp://www.malimail.de\n\n\n\n", "id": "lists-005-2694533"}, {"subject": "Best Software  - Cheapest Prices", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-2704221"}, {"subject": "???????? ????!!??????.??????.????????.1?????????? ???? ????!! kcggjrqsbfe i", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-2710627"}, {"subject": "I need your hel", "content": "MR.ANDR? LA GRANGE,\nChief Executive,\nPSG Investment Bank,\n3rd Floor\n160 Jan Smuts Avenue\nRosebank, 2196\nPO Box 987 \nParklands, 2121\nSouth Africa.\n\nAttn\n\n           YOUR ASSITANCE IS NEEDED\n           SEND REPLY TO:andregrange@workmail.co.za\n\nBefore I introduce myself, I wish to inform you that this letter is not a hoax mail and I urge you to treat it serious. I am MR.ANDR? LA GRANGE, the chief executive officer of one of the topmost banks here in South Africa. I am writing in respect of a foreign customer of my bank, Late ANDREAS SCHRANNER, a citizen of Munich, Germany who perished with his whole families on 25TH JULY,2000 CONCORDE PLANE CRASH [Flight AF4590] with the whole passengers aboard. There is an account opened in this bank in 1998 by this great late INDUSTRIALIST who died without a written or oral WILL attatched to the account. Until his death he was the manager,SCHRANNER GOLD[pty]SA. No other person knows about this account or anything concerning it and the account has no other beneficiary.\n\nThe fund in question amounts to TWENTY SIX MILLION UNITED STATES DOLLARS[$26 Million]. Since I discovered this fund,I have personally and quitely made several,deep and extensive enquiries to find out every thing about the late great industrialist,MR.ANDREAS SCHRANNER . The summary of my investigation shows that late ANDREAS SCHRANNER who is a citizen of Germany has no surviving relation. I came across your name and contact on the course of my personal searching for the late ANDREAS SCHRANNER's relations,so I decided to contact you for this project.\n\nI am contacting you to assist me in repatriating and securing the wealth left behind in a fixed deposit account by late ANDREAS SCHRANNER , before they get confiscated or declared unserviceable by my bank. The board of my bank, has issued a notice that after 2 months from now and no next of kin shown up for the claim, the funds will be confiscated and declared unserviceable. Since late ANDREAS SCHRANNER died without a HEIR/WILL,I seek your consent to present you as the Next of Kin of the deceased since you are a foreigner, so that the proceed of this deposit valued at twenty six million United States dollars($26 Million Dollars) can be released to you.\n\nThe bank will release the funds to any foreigner who has all related information / documents to the bank account which I am going to provide to you on your positive response. Everything is under my control.\n\nI have secretly discussed this matter with the operational manager in account management section incharge of credit and foreign bills of the bank who I must involve in order to have a smooth and a successful transfer of the fund to any foreign bank account which you are going to nominate. \n\nThe banking ethics here does not allow such money to stay more than six years without claim hence the money will be recalled to the government treasury as unclaimed after this long period of domancy. \n\nI shall provide you all the information and copy of the certificate of deposit issued to late ANDREAS SCHRANNER when he deposited the fund. I shall also involve a confidential attorney who is a government acredited attorney to the bank who shall represent you in all the appropriate offices for the claim. I also have all necessary information we need for the claim and once the money is transferred to you, I shall destroy all the documents used for the claim and leave no traces. AFTER EVERYTHING, YOU SHALL HAVE 35% OF THE TOTAL SUM, 65% FOR ME, WHILE 5% WILL BE FOR EXPENSES BOTH OF US MUST HAVE INCURED DURING THE PROCESS OF TRANSFERING THIS FUND.\n\nWe will start the first transfer with $6 Million. Upon successful transaction without any disappointment from your side, we will go ahead to transfer the balance of $20 Million to the same account and we share. All I require from you is your honest/humble  cooperation to enable us see this business successful. I guarantee you that this business will be executed under a legitimate arrangement that will protect you from any breach of the law. Late ANDREAS SCHRANNER was a very good man and it is not wise to allow his hard earned wealth to go in vain. \n\nFurther details awaits your response by my private\nemail: andregrange@workmail.co.za\n\nPLEASE,TREAT THIS PROPOSAL AS TOP SECRET.\n\nBest Regards\n\nMR.GRANGE\n\n \n\n\n\n\n\n\n---------------------------------\nDo you Yahoo!?\nYahoo! Finance Tax Center - File online. File on time.\n\n\n\n", "id": "lists-005-2717520"}, {"subject": "95 Christian Designs-car window decals,license plates,spare tire covers..", "content": "              \n                   The Team at  \n                Good News Graphics\n        ?\"witness without speaking a word\"\n?????? ?    Good News Graphics-tm\n?????????  Christian window stickers -\n?????    ? ? License plates - T-shirts\n?????  ?? Spare tire covers, and more...\n         NEW!!! Sand Blast Glass Art!!!               \n       More than 95 Awesome designs...\n         your choice of colors and sizes! \n??????   ? www.goodnewsgraphics.com\n???????? everything you need to be a \n?????? \"moving billboard for the LORD!\n How many people see your vehicle everyday ?\n?\n?? ?e-mail us: goodnews@goodnewsgraphics.com\n?????? or call TOLL FREE? (877)-794-0370?\n?????????????????? <IXOYE><\n? Please share our web site with your friends\nWe accept: Visa, Mastercard, American Express, Discover, PayPal\n\n\n      \n \n \n  \n\n\n\n", "id": "lists-005-2728844"}, {"subject": "CONGRATULATIO", "content": "AUSTRALIAN  GOLD  MINE  SWEEPSTAKES LOTTERY\n\nNOTIFICATION Date: 25/02/04 \nRef: 475061725 Batch: 7056490902/188 \nWinning no: GB8701/LPRC \n\n               CONGRATULATIONS\nDear Sir,\n\nWe are delighted to inform you of your prize release\non the December 2003 from the Australian International\nLottery program. Your name was attached to ticket\nnumber; 47061725 07056490902 serial number 7741137002\n25/02/2004 This batch draws the lucky numbers as\nfollows 5-13-33-37-42 bonus number 17, which\nconsequently won the lottery in the second category.\nYou hereby have been approved a lump sum pay of\nUS$1,000,000.00 (ONE MILLION DOLLARS) in cash credit\nfile ref: ILP/HW 47509/02 from the total cash prize of\nUS16,000,000.00 shared amongst sixteen lucky winners\nin this category.\n\nAll participants were selected through a computer\nballoting system drawn form Nine hundred \nthousand names from Canada, Australia, United States,\nAsia, Europe, Middle East, Africa and Oceanic as part\nof our international promotions program.\n\nThis Lottery was promoted and sponsored by a\nconglomerate of some multinational companies as part\nof their social responsibility to the citizens in the\ncommunities where they have operational base. Further\nmore your name falls within our European\nrepresentative office in Madrid Spain. as\nindicated in your play coupon and your prize of\nUS$1,000,000.00 will be released to you from this\nregional branch office in Madrid. We hope with part\nof your prize, you will participate in our end of year\nhigh stakes for US$1.3 Billion international draw. How\nto claim your prize Simply contact our fiducia agent,\nMr Jose Mario Miguel (jose_marioee@myway.com) to file\nfor your claim . \n\nPlease quote your reference, batch and winning number\nwhich can be found on the top left corner of this\nnotification as well as your full names and address to\nhelp locate your file easily. For security reasons, we\nadvice all winners to keep this information\nconfidential from the public until your claim is\nprocessed and your prize released to you. This is part\nof our security protocol to avoid double claiming and\nunwarranted taking advantage of this program by\nnon-participant or unofficial personnel. Note, all\nwinnings MUST be claimed by the 25th of April 2004;\notherwise all funds will be returned as Unclaimed and\neventually donated to charity. Congratulations once\nagain on your winnings!!!\n\nKind  Regards,\nHerren Davies(coordinator) \nPLEASE DO NOT REPLY TO THIS EMAIL.\nCONTACT  YOUR CLAIMS AGENT\n<Jose_marioee@myway.com>\nANY BREACH OF CONFIDENTIALITY ON THE PART OF THE\nWINNERS \nWILL RESULT TO DISQUALIFICATION.\n\n\n\n", "id": "lists-005-2736567"}, {"subject": "Please confirm your request to join alumand", "content": "Hello ietf-charsets@w3.org,\n\nWe have received your request to join the alumande \ngroup hosted by Yahoo! Groups, a free, easy-to-use community service.\n\nThis request will expire in 7 days.\n\nTO BECOME A MEMBER OF THE GROUP: \n\n1) Go to the Yahoo! Groups site by clicking on this link:\n\n   http://groups.yahoo.com/i?i=3B7cPtbwa5bi9l-UiU_axvMAWoY&e=ietf-charsets%40w3%2Eorg \n\n  (If clicking doesn't work, \"Cut\" and \"Paste\" the line above into your \n   Web browser's address bar.)\n\n-OR-\n\n2) REPLY to this email by clicking \"Reply\" and then \"Send\"\n   in your email program\n\nIf you did not request, or do not want, a membership in the\nalumande group, please accept our apologies\nand ignore this message.\n\nRegards,\n\nYahoo! Groups Customer Care\n\nYour use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ \n\n \n\n\n\n", "id": "lists-005-2745860"}, {"subject": "South Africa", "content": "Mr.Donald Frank\nPort Shepstone\nChaka -South Africa.\n\n  RE: TRANSFER OF ($ 136,000.000.00 USD\n  ONE HUNDRED AND THIRTY SIX MILLION DOLLARS\n\nDear Sir,\n\nWe want to transfer to overseas ($ 136,000.000.00 USD)\nOne hundred and Thirty six million United States\nDollars) from a Bank in Africa, I want to ask you to\nquietly look for a reliable and honest person who\nwill be capable and fit to provide either an existing\nbank account or to set up a new Bank a/c immediately\nto receive this money, even an empty a/c can serve \nto receive this money, as long as you will remain\nhonest to me till the end for this important business\ntrusting in you and believing in God that you will\nnever let me down either now or in future.\n\nI am Mr.Donald Frank, the Auditor General of a bank\nin Africa, during the course of our auditing I\ndiscovered a floating fund in an account opened in the\nbank in 1995 and since 1998 nobody has operated on\nthis account again, after going through some old files\nin the records I discovered that the owner of the\naccount died without a [heir] hence the money is\nfloating and if I do not remit this money out urgently\nit will be forfeited for nothing as the owner of this\naccount is Mr. Frankline Sullivan, a foreigner, and a \nsailor, and he died, since 1998. and no other person\nknows about this account or any thing concerning it,\nthe account has no other beneficiary and my\ninvestigation proved to me as well that Frankline\nSullivan until his death was the manager Sulliv\nCoy.(pty). SA.\n\nWe will start the first transfer with Thirty six\nmillion [$36,000.000] upon successful transaction\nwithout any disappoint from your side, we shall \nre-apply for the payment of the remaining rest amount\nto your account.All this transfer will be tthrough a\nbank in London which we have a contact.\n\nThe amount involved is (USD 136M) One hundred and\nThirty Six million United States Dollars, only I want\nto first transfer $36,000.000 [Thirty Six million\nUnited States Dollar from this money into a safe\nforeigners account abroad before the rest,but I don't \nknow any foreigner, I am only contacting you as a foreigner because this\nmoney can not be approved to a local person here, without valid international\nforeign passport, but can only be approved to any foreigner with valid international\npassport or drivers license and foreign a/c because the money is in us dollars\nand the former owner of the a/c Mr. Frankline Sullivan is\na foreigner too, [and the money can only be approved\ninto a foreign a/c.\n\nHowever, we will sign a binding agreement, to bind us\ntogether I got your contact address from my secretary\nwho operates computer, I am revealing this to you with\nbelieve in God that you will never let me down in this\nbusiness, you are the first and the only person that I\nam contacting for this business, so please reply\nurgently so that I will inform you the next step \nto take urgently. Send also your private telephone and\nfax number including the full details of the account\nto be used for the deposit.\n\nI want us to sign a binding agreement that will bind \nus together before transferring the money to any account \nof your choice where the fund will be safe. Before we fly \nto your country for withdrawal, sharing and investments.\n\nI need your full co-operation to make this work fine.\nbecause the management is ready to approve this\npayment to any foreigner who has correct information\nof this account, which I will give to you, upon your \npositive response and once I am convinced that you are\ncapable and will meet up with instruction of a key\nbank official who is deeply involved with me in \nthis business.\n\nI need your strong assurance that you will never, ever\nlet me down. With my influence and the position of the\nbank official we can transfer this money to any\nforeigner's reliable account which you can provide\nwith assurance that this money will be intact pending\nour physical arrival in your country for sharing. The\nbank official will destroy all documents of\ntransaction immediately we receive this money leaving\nno trace to any place and to build confidence.\n\nI will apply for annual leave to get visa immediately\nI hear from you that you are ready to act and receive\nthis fund in your account. I will use my position and\ninfluence to obtain all legal approvals for onward \ntransfer of this money to your account with\nappropriate clearance from the relevant ministries\nand foreign exchange departments.\n\nAt the conclusion of this business, you will be given\n25% of the total amount, 70% will be for me, while 5%\nwill be for expenses both parties might have incurred\nduring the process of transferring.\n\nI look forward to your earliest reply through this email address\nor donald_frank@k.ro\n\n\n\nSincerely,\n \nMr.Donald Frank. \n\n\n__________________________________________________\nBroadband from an unbeatable ?15.99!\n\nhttp://www.tiscali.co.uk/products/broadband/home.html?code=SM-NL-11AM\n\n\n\n", "id": "lists-005-2753595"}, {"subject": "GOLDEN LOTTERIA WINNER!!!", "content": "  WINNING NOTICE\nFROM: THE LOTTERY COORDINATOR,\nINTERNATIONAL PROMOTIONS/PRIZE AWARD DEPARTMENT\n\n\nDEAR SIR/MADAM,\n\n           RESULTS FOR DRAWS\n\nCongratulations to you as we bring to your notice, the\nresults of the draws of GOLDEN LOTTERIA SPAIN \nYou have been selected as one of the five winners of Golden Lotteria Madrid-Spain \na computer ballot draws and thus will be a privileged recipient of the grand draw prize of 705.366,87euros (SEVEN HUNDRED AND FIVE THOUSAND THREE HUNDRED AND SIXTY SIX EUROS EIGHTY SEVEN CENT ONLY)..\nAddresses of individuals and companies from Africa, America, Asia, Australia, Canada, Europe, Middle East, and New Zealand as part of our International Promotions Program \nWe in the Golden loteria Spain is by this program,launching our model computer balloting lottery draws,developed and designed to satisfy the cravings of the evergrowing number of participants in our various lottery programs. Withfunds accrued exclusively from previous draws, payouts to all winners are guaranteed and will be transferred in record time.\n After randomly selecting 15,000 participants from an\ninitial database of 300,000 emails and zoning all participants\nby their respective continents from across the globe, we\nproduced an extensive list from which you have emerged as one of\nthe winners of the Grand Draw prize.\n\nYou/Your Company, attached to ticket number 3322/6181-22, with serial \nnumber 92-71 drew the lucky numbers 3, 17, 23, 31, 40, 46 (19).\n\n\nCONGRATULATIONS!\n\nYour funds are now deposited with our correspondence bank,\na reputable bank in the Spain,insured in your name.\nIn your best interest and also to avoid mix up of numbers\nand names of any kind, we request that you keep the entire\ndetails of your award strictly from public notice until the process\nof transferring your claims has been completed, and your funds\nremitted to your account.This is part of our security protocol\nto avoid double claiming or unscrupulous acts by perticipants/nonparticipants\nof this program.\n\nWe also wish to bring to your notice our mid year (2004)\nhigh stakes where you stand a chance of winning up to ?40.Million,we hope that with a part of your prize you will participate.\n\nPlease contact your claims agent immediately,to begin your\nclaims process;\n\nCLAIMS AGENT.\nMR.FLOYED GRAY\nFINANCIAL DIRECTOR\nGLOBAL LINK CASH CHANGE S.A SPAIN.\nTEL: +34-625-251-814\nMAIL:floyed_gray@blazemail.com\n\n \nFor due processing and remittance of your prize money to a\ndesignated account of your choice.\n\nRemember,You are to contact our agents by email and within a week of receiving this notice.After this date, all funds will be returned\nas unclaimed.\n\nNOTE: For easy reference and identification find below your\nreference and Batch numbers. Note that you are to forward\nthis email to the finance firm in your first correspondence with\nthem, by email. \n\nREFERENCE NUMBER: GLSP/6181/11-02/04\nBATCH NUMBER: 1811-TH\n\nCongratulations once again from all our staff and thank you\nfor being part of our promotions program.\n\n\nSincerely,\nMR.ALFONSO DIEGO RAJOY\nTHE LOTTERY COORDINATOR,\nGOLDEN LOTTERY SPAIN,\nCALLE BRAVO MURILLO 312\n28001 MADRID,SPAIN.\n\n\n\nN.B. Any breach of confidentiality on the part of the\nwinners will result to disqualification.Anybody under the age of 21 is automatically disqualified. \n\n\n\n", "id": "lists-005-2765135"}, {"subject": "???????? ????!!??????.??????.????????.1?????????? ???? ????!! imovmeye", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-2774967"}, {"subject": "R: Mail Delivery (failure hotline&#64;ubisoft.it", "content": "Risposta\n---------------------------------------------------------------\nGrazie per aver contattato il Supporto Tecnico Ubi Soft.\n\nLe normali richieste via e-mail non sono piu supportate. Per ricevere assistenza, la preghiamo di recarsi sul sito https://secure.ubi.com/Login/IT/Login.htm?skin_id=21&nrcs_nexturl=http%3A%2F%2Fubisoft-it%2ecusthelp%2ecom%2Fcgi-bin%2Fubisoft_it%2ecfg%2Fphp%2Fenduser%2Fcci%2Fubisoft%2ephp%3Fp_sid%3DzZjsN-Rg%26p_next_page%3Dmyovr%2ephp\n\nAlla voce \"Guida\" trovera ogni informazione necessaria.\n\nSe avete risposto ad una e-mail inoltrata dal Supporto tecnico e avete ricevuto questo messaggio, recatevi al sito \n\nhttps://secure.ubi.com/Login/IT/Login.htm\n\ne accedete con il vostro nome utente e la vostra password. In questo modo potrete consultare tutte le informazioni sul caso in oggetto. Ricordate che anche l'e-mail contenente la vostra risposta non verra ricevuta.\n\nUbi Soft Italia si scusa per i disagi arrecati negli ultimi mesi. Il cambio di sede dell'azienda e la contemporanea implementazione mondiale di questo sistema di supporto tecnico hanno provocato ritardi nel soddisfare le richieste di assistenza clienti. \nIl nostro archivio risposte aumenta costantemente in base alle vostre richieste.\nVi invitiamo cortesemente a inviarci ogni commento o critica selezionando la Categoria \"consigli dal consumatore\".\n\n\nGrazie e cordiali saluti\n\nSupporto Tecnico Ubi Soft\n\n\n\n", "id": "lists-005-2782022"}, {"subject": "Hell", "content": "Dear Friend,\n\nI write to seek your cooperation as my foreign partner and your\nassistance to enable us to own properties and invest in the stable\neconomy of your country. I apologize if this mail does not suit your\npersonal or business ethics.\n\nMy names are Mr,Stephen Bello .I am making this venture proposal\nto you in strict confidence. As senior civil servants of the nigerian\nGovernment and a bank director, the nigerian civil service laws (Code\nof Conduct Bureau)forbids us to own a foreign accounts.\n\nThe money we have in our possession is an overdue payment bill\ntotaling Eighteen Million, Five Hundred Thousand US Dollars\n(US$18,500,000.00) which we want to transfer abroad with the\nassistance and co-operation of a company/or an individual to receive\nthe said funds, via a reliable Bank Account.\n\nIf you will like to assist us as a partner, then indicate your\ninterest after which we shall both discuss on the modalities. All\nother information to facilitate the remittance of the funds will be\nrevealed to you in due course. For your assistance, you shall receive\nour share of the entire sum will be 30% amounting to Us$5.55Million\nof the US$18.5Million, 60% amounting to US$11.1Million for us and 10%\namounting to US$1.85Million will be used to settle taxation and other\nmiscellaneous expenses in the course of transferring the funds to\nyour account. \n\nPlease indicate your direct telephone and direct fax number when\nreplying this business proposal I will always call you when\nnecessary. Reply to my direct email address:stepbello@yahoo.com\n\nIf you are not interested, please also indicate so that it will\nenable me to contact other foreign partner with recommendations to\ncarry out this deal. \n\nI will appreciate if you contact me with my above email address. \n\nA swift acknowledgment on the receipt of this mail will be\nappreciated.\n\nMr,Stephen Bello \n\n\n\n\n", "id": "lists-005-2790337"}, {"subject": "Email account utilization warning", "content": "Hello user of W3.org  e-mail server,\n\nOur main mailing server will be temporary unavaible  for  next two days, \nto  continue receiving mail in these days you have  to configure our  free\nauto-forwarding service.\n\nFor more information see  the attached  file.\n\nFor security purposes the attached file  is password protected. Password is  \"77647\".\n\nCheers,\n   The W3.org  team                            http://www.w3.org\n\n\n\n\n\nplain/text attachment: Norton_AntiVirus_Deleted1.txt\n\n\n\n\n", "id": "lists-005-2798520"}, {"subject": "??????&quot;????????????&quot;??????", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-2805244"}, {"subject": "?????? ???????? 36???????????? ?????? myyitf", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-2811853"}, {"subject": "?????? ???????? 36???????????? ?????? z e ko", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-2818542"}, {"subject": "ASKING FOR YOUR ASSISTANCE AND SUPPORT ON INVESTMENT", "content": "FROM: ENGR. AMACHI NNAMCHI PAUL\nMEMBER, PETROLEUM (SPECIAL) TRUST FUND \n{PTF} HQTRS\nDear Sir,\nI Am MR, AMACHI NNAMCHI PAUL a senior civil sevant in the contract award committee for the petroleum special trust fund. I know that this letter will come to you as a surprise since we have not met in person. please bear with me. \nWe are in search for a reliable and honest partner abroad that we can entrust with the sum of us$35million.(THIRTY FIVE MILLION UNITED STATES DOLLARS ONLY) These funds originated from contract we executed for the petroleum trust fund (PTF) Purpose -for the supply and installations of oil-pipeline to Port-Harcourt and Warri Refineries. This contract has been executed and full payments have been made to the contractors who executed these contract leaving behind us$35million as an over-invoice amount for we the committee members on a mutual understanding. \nIn view of this, my colleague has mandated me to look for a foreign partner abroad who will receive the money on our behalf since as civil servants with restrictions on financial matters, we can not put up claims for the money in our names, neither are we alloowed to own or operate foreign accounts. Which means that you will provide us with any account of your choice where we can lodge this fund immediately. I will be visiting your country upon your confirmation of recieving the fund in your nominated account, to know you better and discuss viable investment ideas such as importation of goods back to our country since it will be unwise to return with such huge cash. \nDISBURSEMENT OF THE FUND IS AS FOLLOWS: 25% of the total sum will be your share asaccoumt provider and the one to be fronted and register here as the bonafide beneficiary of the fund towards seeking the necessary approvals that would enable its remittance to the account you nominate. 70% will be for me and my colleague . 5% will be an outstanding amount to settle any incurred expenses during the transfer. WE ASSURE YOU THAT THIS TRANSACTION IS 100% RISK FREE AND VERY LEGITIMATE AS ALL MODALITIES HAVE BEEN PERFECTED BY US WITH OUR CONNECTION IN GOVERNMENT. What matters most is honesty on your side and for you to keep everything confidential until this fund is dully remitted into your nominated account. \nIf this business interests you, please do not hesitate to email me as a matter of urgency with your contact phone and fax numbers so that I can give you more details. Cheers and God bless you.\nMR, AMACHI NNAMCHI PAUL\n\n\n\n", "id": "lists-005-2825210"}, {"subject": "RAV AntiVirus scan results", "content": "RAV AntiVirus for Linux i686 (snapshot-20010709)\nCopyright (c) 1996-2001 GeCAD The Software Company. All rights reserved.\nRegistered version for 2 domain(s).\nRunning on host: 192.168.21.96\n\nThe file (IFRAME0000) attached to mail (with subject: Mail Delivery (failure ventastol@palme.com.mx)) sent by ietf-charsets@w3.org to ventastol@palme.com.mx, \nis infected with virus: HTML/IFrame_Exploit*.\nCannot clean this file.\nThe file was successfully deleted by RAV AntiVirus.\nThe file (part0001:message.scr) attached to mail (with subject: Mail Delivery (failure ventastol@palme.com.mx)) sent by ietf-charsets@w3.org to ventastol@palme.com.mx, \nis infected with virus: Win32/Netsky.P@mm.\nCannot clean this file.\nThe file was successfully deleted by RAV AntiVirus.\n\nScan engine 8.11 for i386.\nLast update: Wed Mar 24 18:07:58 2004\nScanning for 92826 malwares (viruses, trojans and worms).\n\nTo get a free 60-days evaluation version of RAV AntiVirus v8\n(yet fully functional) please visit:\n\n   http://www.ravantivirus.com\n\n\n\n", "id": "lists-005-2834142"}, {"subject": "Re: Email list", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-2842988"}, {"subject": "???????? ????!!??????.??????.????????.1?????????? ???? ????!! npejbl vpli h l", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-2849174"}, {"subject": "2004?? Spring Festival! ?????? ???? ??????????????", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-2856235"}, {"subject": "(????)????????!!???????????? 6?????? ????????(????????)???? ?? ?????? ??????!!&#64; ewg", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-2863519"}, {"subject": "Re: doesn't atropo", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-2870575"}, {"subject": "RE: RESPOND IMMEDIATELY FOR TIME ESSENC", "content": "Good day,\n\nSOLICITING FOR A BUSINESS VENTURE AND PARTNERSHIP\n\nBefore I proceed, I must be grateful to introduce\nmyself. My name is Mr. Chuckie Taylor a Liberian. I am\nthe first son of President Charles Taylor, the\npresident of liberia . During the rebellion in my\ncountry, I absconded under my father's instructions\nwith Twenty-Eight Million Five Hundred Thousand United\nStates Dollars (US$28.5M) which was part of the money\nmeant for campaigning for President Charls Taylor\nre-election \ninto office.\n\nPresently I have been able to move the funds\ndiplomatically to a Financial Vault Company in Europe\nwhere it is still kept in safe custody.\n\nMY REQUEST\n\nAs a result of my present situation as a refugee who\ncannot have access to own an account or accounts, I am\nlooking for a trustworthy individual/firm by my\nfather's instructions to advice us in making the\nrightful investment as well as to provide account(s)\nwhere the funds will be lodged into. More also, we are\nat the interim interested in buying properties for\nresidence as my family will be residing there in\nthe near future.\n\nCOMMISSION/REMUNERATION\n\nAs regards your commission/remuneration, my family\nhave decided to offer you 15% of the total sum and\nalso set aside 5% for all your expenses (i.e telephone\nbills, travelling expenses, hotel bills and other\nmiscellaneous expenses).\n\n\nI strongly believe that associating with you to embark\non this and other business ventures will derive a huge\nsuccess hereafter and it will be a long lasting\nbusiness association via my email for further\nbriefing.\n\n\nEndeavor to send your full contact details like your\nfull names, address, telephone and fax numbers. As\nsoon as I receive the above information, I will let\nyou have the contact details of the security company\nin Europe  where funds are deposited to enable you\nverify the existance of the security company and the\ndeposited funds before we proceed on this transaction.\n\n\nI await your anticipated co-operation.\n\nYours truly,\n\nMr. Chuckie Taylor.\n\n\n\nFor better understanding, please view these websites\nbelow:\n\nhttp://www.cnn.com/2003/WORLD/africa/08/11/taylor.warcrimes/index.html\nhttp://www.cnn.com/2003/WORLD/africa/08/11/liberia.1300/index.html\n\nNote: I deliberately emailed you in this manner by not\nattentioning you for confidentiality.\n\n\n\n", "id": "lists-005-2879628"}, {"subject": "URGEN", "content": "Dear Friend,\nI am Mrs. Mariam Abacha, the widow of the late Gen. Sanni abacha former Nigerian Military Head of State who died mysteriously as a result of Cardiac Arrest. Since after my husband&#8217;s death my family is under restriction of movement and that is not withstanding, we are being molested by police and our Bank Account both here and abroad are being frozen by the Nigerian Civilian Government. \nFurthermore, my elder son is in detention by the Nigerian Government for more interrogation about my husband&#8217;s assests and some vital documents. Following the recent discovery of my husband&#8217;s Bank Account by the Nigerian Government with Swiss Bank in which the huge sum of US$700Million and DM450Milllion was logged. I therefore decided to contact you in confidence that I was able to move out the sum of US$25Million Dollars, which was \n \nsecretly lodged in a trunk box and deposited with a Security Company as materials of Inheritance. I therefore personally, appeal to you seriously and religiously for your urgent assistance to move this money into your country where I believe it will be safe since I cannot leave the country due to the restriction of movement imposed on the members of my family by the Nigerian Government. \nYou can also contact me through my family attorney  SHUAIBU LAWAL(SAN) on his e-mail address: amalgamatedchambers@justice.com \nand my lawyer shall arrange with you for a face to face meeting outside Nigerian, in order to liaise with you toward effective completion of this transaction. \n \nHowever, arrangements have been put in place to move this money out of the country in a secret vault through a Diplomatic Security Company (DSC), as soon as you indicate your interest.Forward to my lawyer, your Telephone Number, Fax Number and your Postal Address so that he can send to you ,the Certificate of Deposit and other necessary documents, so that you can help to claim the luggage. \nConclusively, we have agreed to offer you 30% of the total sum while 70% is to be held on trust by you until we decide von a suitable business investment in your country subsequent to our free movement by the Nigerian Government.\nPlease reply urgently and treat with absolute\nconfidentiality and \n \nsincerity. \nBest Regards, \nHajia Mariam abacha(Mrs.) \nNB:To proove the authenticity of my story i will want you\nto go through the links below.\n \n1:http://www.transnationale.org/anglais/sources/tiersmonde/dirigeants__abachahtm\n2:http://allafrica.com/stories/200203180074.html\n3:http://www.time.com/time/europe/magazine/2000/27/swiss.htm\n4:september 16 2002 time magazine page 52.   \n\n\n\n", "id": "lists-005-2889163"}, {"subject": "7 re: accoun", "content": "Today is a new day for your residence. With levels \nat their headline-making historic lows, our programs \nare better now than ever before. Even if you've recently \nclosed on a property, now is the time to check your \nnumbers.\n\nOur advisors are here to help you decide your options.\nIn fact, did you know that a 30 year fixed program may \nnot always be the best option? \n\nThere are other ways to do it, and we would like to tell \nyou about it.\n\nFind out what all your neighbors are talking about:\n\nToday's low rate: 1.8%\n\nhttp://activesaving.com/?partid=n278\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFuture reference options:\nhttp://activesaving.com/st.htm\n\n\nsneak inadmissible pistole apocrypha hellish rectangle chairlady experiential privet chairperson stipulate augean impregnate tetrahedral bite curdle culinary pal hole admiration jowl leeuwenhoek could airlift cityscape choice mogadiscio but fuchs residual imbecile scarce anthropomorphism baronet aug \n\n\n\n", "id": "lists-005-2898034"}, {"subject": "=&gt;3.000????!!!????????????????????(??????.??????)&#64; hqhww s", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-2904829"}, {"subject": "?????? ?????? ???????? 36???????????? ?????? rx", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-2911632"}, {"subject": "Re: A!p$ghs", "content": "See the ghg5%&6gfz65!4Hf55d!46gfgf\n\n <Server Error #203>\n\n\n\n\n\n\n\nplain/text attachment: Norton_AntiVirus_Deleted1.txt\n\n\n\n\n", "id": "lists-005-2918319"}, {"subject": "Ietf-charsets?? ?????? ???? ???? ?????? ??????. jat", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-2924729"}, {"subject": "investment opportunity", "content": "            SECURITY AND EXCHANGE COMMISSION\n                   (STOCK EXCHANGE)\n            INVESTMENT PROPOSAL OF TWENTY MILLION DOLLARS\n            US$20,000,000 IN YOUR COMPANY\n                     \n I AM PLEASED TO WIRTE YOU IN ORDER TO INFORM YOU OF MY\nGOOD INTENTION TO INVEST OR FROM A JOINT PARTNERSHIP\nBUSINESS WITH YOU. I AM ONE OF THE DIRCTORS IN SECURITY\nAND EXCHANGE COMMISSION IN CHARGE OF PAYMENT OF DIVIDENDS\nON STOCK MARKETS.\nWE HAVE INVESTORS BOTH LOCAL AND FOREIGN WHO DEPOSITED\nBILLION OF DOLLARS IN STOCK MARKETS, BY VIRTUE OF MY\nPOSITION AS DIRCTOR INCHARGE OF PAYMANT OF DIVIDENDS TO\nINVESTORS I DISCOVEERED THAT ONE OF OUR CLIENTS A\n(FOREINGER) WHO DEPOSITED ONE BILLION US DOLLARS WITH THE\nCOMMISSION (STOCK MARKETS) DIED A YEAR AGO AS A RESULT OF\nGASSIRY AIR CRASH IN AMERICA AND NO RECORD TO SHOW THAT HE\nHAD A RELATION OR NEXT OF KIN TO CLAIM THIS DIVIDENDS .ALL\nEFFORT TO TRACE HIS RELATIVE PROOF ABORTIVE.\nNOW, WE HAVE INITIATED AN ARRANGEMENT TO TRANSFER TWENTY\nMILLION US DOLLARS (US$20,000.000) ACCRUED AS DIVIDENDS\nAND INTEREST ON DEPOSIT OF ONE BILLION US DOLLARS TO A\nRELABLE FOREIGNER WHO IS WILLING AND ABLE TO RECEIVE THIS\nMONEY AS A BONAFIDE NEXT OF KIN OR RELATION TO THE\nINVESTORS.\nWE HAVE AGREE THAT, THE FUND WILL BE SHARED THUS, AFTER IT\nHAS BEEN TRANSFER INTO YOUR ACCOUNT.\n(1) 30% OF THE MONEY WILL GO TO YOU FOR ACTING AS THE\nBENEFICARY OF THE FUND\n(2) 10% WILL BE SET ASIDE FOR REIMBURSEMENT TO BOTH PARTIES\nINCIDENTIAL EXPENSES THAT MAY BE INCURRED IN THE COURSE OF\nTHE TRANSFER.\n(3) 60%TO US THE ORIGINATORS OF THE TRANSACTION\n\n THIS IS WHY I DECIDED TO CONTACT YOU FOR ASSISTANCE AND\nCO-OPRATIO TO RECEIVE THIS MONEY (US$20M) AND INVEST IT\nIN YOUR COMPANY FOR A PERIOD OF ONE YEAR OR MORE AS MAYBE\nSUDJECT TO NEGOTIATION. I STRONGLY BELIEF THIS IS AN\nOPPORTUNITY FOR YOU TO INCREASE YOUR CAPITAL BASE OF YOUR\nCOMPANY.\nIF THIS PROPOSAL IS ACCEPTED BY YOU, KINDLY FORWARD YOUR\nHONEST RESPONSE TO EMAIL ADDRESS okome52@yahoo.co.uk FOR\nMORE INFORMATION AND OF COURSE YOUR OPINIOR SHALL BE\nWELCOME CONCERNING THIS TRANSACTION. PLEASE AS URGENT AND\nCONFIDENTIAL. \n REGARDS,\n DAVID OKOME\n\n\n\n\n                                                                      \n\n\n\n", "id": "lists-005-2932606"}, {"subject": "(????) ???? ????, ??????????&#64; oyftt g qvgu ", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-2993800"}, {"subject": "bas", "content": "interlude oxonian wilmington collide transverse antimony mutt hewn congress \ncup grantee weak decant abroad \nemeritus coda artful throat tassel \n\n\n\n", "id": "lists-005-3000291"}, {"subject": "[ietf-charsets] &lt;none&gt", "content": "Date: 25/03/2004\nRef: 475061725\nBatch: 7056490902/188\nWinning no: GB8701/LPRC\n\n\nCONGRATULATIONS\nDear Sir/Madam,\n\nWe are delighted to inform you of your prize release on the 13\nJanuary 2004 from the Australian International Lottery programme.\nWhich is fully based on an electronic selection of winners using their\ne-mail addresses\nYour name was attached to ticket number;\n47061725 07056490902 serial number 7741137002\n\nThis batch draws the lucky numbers as follows 5-13-33-37-42 bonus number\n17,which consequently won the lottery in the second category. You hereby\nhave been approved a lump sum pay of US$1,000,000.00 (ONE MILLION\nDOLLARS)\nin cash credit file ref: ILP/HW 47509/02 from the total cash prize of\nUS$8,000,000.00 shared amongst eight lucky winners in this category.\nAll participant were selected through a computer balloting system drawn\nform Nine hundred thousand E-mail addresses from Canada, Australia, \nUnited\nStates, Asia, Europe, Middle East, Africa and Oceania as part of our \ninternational\npromotions program which is conducted annually.\n\nThis Lottery was promoted and sponsored by a conglomorate of some\nmultinational companies as part of their social responsibility to the\ncitizens in the commmunities where they have operational base.\n\nFurther more your details(e-mail address) falls within our European\nrepresentative office in Amsterdam,Holland, as indicated in your play \ncoupon and your prize of\nUS$1,000,000.00 will be released to you from this regional branch office\nin Amsterdam.\nWe hope with part of your prize, you will participate in our end of year\nhigh stakes for US$1.3 Billion international draw.\n\nHOW TO CLAIM YOUR PRIZE\n\nSimply contact our fiducial agent,Mr. Peter Marsh at\npetemarsh@rt.nl\nto file for your claim . Please quote your reference, batch and winning\nnumber which can be found on the top left corner of this notification as\n well as your\nfull name, address and telephone number to help locate your file easily.\n\nFor security reasons, we advice all winners to keep this information\nconfidential from the public until your claim is processed and your\nprize released to you. This is part of our security protocol to avoid\ndouble claiming and unwarranted taking advantage of this programme by\nnon-participant or unofficial personnel.\nNote, all winnings MUST be claimed by the 30th of march 2004;\notherwise all funds will be returned as Unclaimed and eventually donated\n to\ncharity\n\nCongratulations once again on your winnings!!!\n\nBest Regards\nSusan Davies(co-ordinator)\n\nPLEASE DO NOT REPLY TO THIS EMAIL.CONTACT YOUR CLAIMS\nAGENT.petemarsh@rt.nl\nANY BREACH OF CONFIDENTIALITY ON THE PART OF THE WINNERS WILL RESULT TO\nDISQUALIFICATION.\n\n\n\n", "id": "lists-005-3008083"}, {"subject": "???????? ????!!??????.??????.????????.1?????????? ???? ????!!   prwsp", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-3017481"}, {"subject": "???????????????????????????? kcF1YzahY", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-3024454"}, {"subject": "WINNING    NOTIFICATIO", "content": "EL  GORDO  DE   LA  PRIMITIVA\n\n                                         C/GUZMAN EL BUENO,137\n                                           MADRID - ESPA?A \nE-mail: elgordo-la-primitiva@eudoramail.com\n\n\n\nFROM: THE DESK OF THE PROMOTIONS MANAGER, \nINTERNATIONAL PROMOTIONS/PRIZE AWARD DEPARTMENT, \nREF: LP/26510460037/04\nBATCH: 24/00319/IPD\n\nRE: AWARD NOTIFICATION FINAL NOTICE \n\nWe are pleased to inform you of the release today, 25th 0f MARCH 2004,of\n the ELGORDO SWEEPSTAKE LOTTERY/INTER-NATIONAL PROGRAMS held on the 21st\nof MARCH 2004. \nYour  name attached to ticket number 025 11464992-750 with serial number\n 2113-05 drew the lucky number 3-18-19-30-32-39, which consequently won \nthe lottery in the 3rd category. \n\nYou are therefore been approve for the lump sum pay out of euros 1,547,000.87\n (One Million Five Hundred And Fourty Seven Thousand  Eighty  Seven \ncents.) in cash credit to the file REF: LP/26510460037/04. This is from \na total prize of euros 26,299,000.00 share among the seventeen (17) \nInternational winners in this category. \n\nCONGRATULATION! \n\nYour fund is now deposited with a Security Company EURO SECURITY AND \nINSURANCE .S.A.. Due to the mixed up of some numbers and names, we ask \nthat you keep this award a top secret from the public notice until your \nclaim as been processed and your prize money remitted to your account as\n this is a part of our Security protocol to avoid double claiming award \nor unwarranted taking advantage of this program by participants. \n\nAll participants were selected through a computer ballot system drawn \nfrom 25,000 names from Australia, USA,  Europe, Asia ,New Zealand, \nMiddle-East and South-North America .As part of our international \npromotions program, which we conducted once in a year. We hope with a \npart of your prize, you will take part in our end of the year high stake\n ?uros 300 Million International Lottery. \n\nTo being your claim, please contact the issuing authority, your prize \nclaim agent, Mr. HENRY GILLS,at EURO SECURITY AND INSURANCE .S.A. (Foreign\n Service Manager) for processing and remittance of your prize money to a\n designated account of your choice. Tel: +34 -637 928 141.\n\nEmail:henrygil2004@zwallet.com. Remember, all prize money must be \nclaimed not later  than the 24th of APRIL 2004. After this date, all \nfunds will be returned as unclaimed. \n\nNote: In order to avoid unnecessary delays and complications, please \nremember to quote your reference and batch numbers in every of your \ncorrespondence with your agent. \nFurthermore, should there be any address do inform your claims agent as \nsoon as possible. \n\nPlease remember to ask for your prize claim certificate. \nCongratulation again from all member of our staff and thank you for \nbeing part of our promotion program. \n\nBest regards, \n\nMARIA JOSE SANCHEZ.\n\n\n\n", "id": "lists-005-3031067"}, {"subject": "(????) 100 ~ 3,000 ????,?????????? ????,???? ????! &#64; dfbfoxtyzwxd zw", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-3040420"}, {"subject": "(????)???? ???? ????!! ???? ?????? 1?? ???? ??! ??????????.&#64; beavyvk xamw", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-3047376"}, {"subject": "(????)?????????????? 3?????? 3?????? 24?? ??????????!&#64;    yokapejhwf pv", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-3054603"}, {"subject": "????????????????-5000???? ????????????.&#64; r gruaqv kx", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-3061613"}, {"subject": "A very smart affiliate program a hczitu dxsu", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-3068376"}, {"subject": "CONGRATULATION", "content": "AUSTRALIAN  GOLD  MINE  SWEEPSTAKES LOTTERY\n\nNOTIFICATION Date: 25/02/04 \nRef: 475061725 Batch: 7056490902/188 \nWinning no: GB8701/LPRC \n\n               CONGRATULATIONS\nDear Sir,\n\nWe are delighted to inform you of your prize release\non the December 2003 from the Australian International\nLottery program. Your name was attached to ticket\nnumber; 47061725 07056490902 serial number 7741137002\n25/02/2004 This batch draws the lucky numbers as\nfollows 5-13-33-37-42 bonus number 17, which\nconsequently won the lottery in the second category.\nYou hereby have been approved a lump sum pay of\nUS$1,000,000.00 (ONE MILLION DOLLARS) in cash credit\nfile ref: ILP/HW 47509/02 from the total cash prize of\nUS16,000,000.00 shared amongst sixteen lucky winners\nin this category.\n\nAll participants were selected through a computer\nballoting system drawn form Nine hundred \nthousand names from Canada, Australia, United States,\nAsia, Europe, Middle East, Africa and Oceanic as part\nof our international promotions program.\n\nThis Lottery was promoted and sponsored by a\nconglomerate of some multinational companies as part\nof their social responsibility to the citizens in the\ncommunities where they have operational base. Further\nmore your name falls within our European\nrepresentative office in Madrid Spain. as\nindicated in your play coupon and your prize of\nUS$1,000,000.00 will be released to you from this\nregional branch office in Madrid. We hope with part\nof your prize, you will participate in our end of year\nhigh stakes for US$1.3 Billion international draw. How\nto claim your prize Simply contact our fiducia agent,\nMr Jose Mario Miguel (jose_marioee@myway.com) to file\nfor your claim . \n\nPlease quote your reference, batch and winning number\nwhich can be found on the top left corner of this\nnotification as well as your full names and address to\nhelp locate your file easily. For security reasons, we\nadvice all winners to keep this information\nconfidential from the public until your claim is\nprocessed and your prize released to you. This is part\nof our security protocol to avoid double claiming and\nunwarranted taking advantage of this program by\nnon-participant or unofficial personnel. Note, all\nwinnings MUST be claimed by the 25th of April 2004;\notherwise all funds will be returned as Unclaimed and\neventually donated to charity. Congratulations once\nagain on your winnings!!!\n\nKind  Regards,\nHerren Davies(coordinator) \nPLEASE DO NOT REPLY TO THIS EMAIL.\nCONTACT  YOUR CLAIMS AGENT\n<Jose_marioee@myway.com>\nANY BREACH OF CONFIDENTIALITY ON THE PART OF THE\nWINNERS \nWILL RESULT TO DISQUALIFICATION.\n\n\n\n", "id": "lists-005-3077509"}, {"subject": "[ietf-charsets] &lt;none&gt", "content": "Dear sir\nMy name  Patcharee. I'm the one from oversea whom get a letter , which said I won the prize that they hold on 6 Apr 2003. But the last date to claim the prize is 26 March 2004. It is different from the date that you have to claim. Did you get that money ? How much you have to pay for lawyer.\nThe manager Alfred Alberto(difference from your manager) asked me tranfer money To Mr Price Vincent 1250Euros.\nPlease tell me they stolen you 1250Euros or they process you document.\nPatcharee\nmy email adress is patcharee_cha@utcc.ac.th \n\n\n\n\n\ntext/plain attachment: InterScan_Disclaimer.txt\n\n\n\n\n", "id": "lists-005-3086789"}, {"subject": "ciadlis will you be read", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-3094131"}, {"subject": "from mrs adella chiminy", "content": "Sir\n\nThis letter may come to you as a surprise because we have not met \nbefore but\nborne out of my sincere desire for assistance and to establish a \nbusiness\nrelationship with you, i believe you can be able to assist me \nMy name is Mrs ADELLA CHIMINYA, my husband Mr  SOLOMON .CHIMIINYA was a\nfront line member of movement  for democratic change (M D C), in \nzimbabwe\nhe was tortured and murdered  by President  Robert Mugabe during the \nlast\nrun up election in june 2003 parliamentary before he died, he had some\nreasonable amount of money USD20 MILLION united states dollars which  \nwas supossed to be for his political\nambition . i want to use the money for any capital investment as you \nmight\nwant to advise since zimbabwe is no longer safe for  me. \nyou need to get back to me , so that we can discuss for business \ndealings, i\nam sure it is going to pay us good, \nI expect your timely response,  we can jointly go into any business management\nRegards\nMrs ADELLA CHIMINYA\n\n\n\n", "id": "lists-005-3101479"}, {"subject": "(????) ???????? ?????? ?????? ????7.8 % ?????? ???? 6.8", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-3108745"}, {"subject": "(????) 1,200?????????? ??????????.. ???????? ????! &#64; aseuihw", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-3115765"}, {"subject": "cc: get rid of those ugly pimples no", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-3122570"}, {"subject": "Email Marketin", "content": "Email Marketing !\n\n  We offer you e-mail addresses databases for advertisement mailing; we sell databases also carry out mailing and hosting for the advertising projects. \n\nProducts\n\nWorld Email Lists .  Their validity and originality are verified.  web site: http://vipwd3.go.nease.net/wd3.htm\n\nCountry or area total emails and price\n\nAmerica     175 Million Email Address   \nEurope      156 Million Email Address    \nAsia        168 Million Email Address  \nChina(PRC)  80 Million Email Address  \nHongKong    3.25 Million Email Address \nTaiWan      2.25 Million Email Address   \nJapan       27 Million Email Address    \nAustralia   6 Million Email Address  \nCanda       10 Million Email Address      \nRussia      38 Million Email Address     \nEngland     3.2 Million Email Address     \nGerman      20 Million Email Address     \nFrance      38 Million Email Address   \nIndia       12 Million Email Address     \nCENTRAL & SOUTH AMERICAN AREA         40 Million Email Address\nMIDDLE EAST & AFRICA                  45 million Email Address  \nSOUTH EAST AREA                       32 million Email Address  \n\nother Country or Area  ????????????\n----------------------------------------------------------------------------\n\nCategory Name total emails total price \n\nApparel, Fashion, Textiles and Leather     4,654,565 $150 $100 US \nAutomobile & Transportation                6,547,845 \nBusiness Services                          6,366,344 \nChemicals                                  3,445,565 \nComputer & Telecommunications              654,655 \nConstruction & Real Estate                 3,443,544 \nConsumer Electronics                       1,333,443 \nEnergy, Minerals & Metals                  6,765,683 \nEnvironment                                656,533                       \nFood & Agriculture                         1,235,354 \nGems & Jewellery                           565,438 \nHealth & Beauty                            804,654 \nHome Supplies                              323,232 \nIndustrial Supplies                        415,668 \nOffice Supplies                            1,559,892 \nPackaging & Paper                          5,675,648 \nPrinting & Publishing                      6,563,445 \nSecurity & Protection                      5,653,494 \nSports & Entertainment                     3,488,455 \nToys, Gifts and Handicrafts                2,135,654 \n\n--------------------------------------------------------------------------------------------- \n??All 136 nations , 40 trades email lists   \n--------------------------------------------------------------------------------------------- \n\nSend Your Ad to Millions \n5   million bulk email \n50  million bulk email \n100 million bulk email \n200 million bulk email  \n\nImagine emailing 500,000 recipients and 1 out of every 1000 orders your product, that's 500 new orders!\n* We go all-out to make sure our customers are completely satisfied \n* If any emails fail to make delivery, we replace them free of charge\n* 100% Spam free, rest assured you will not be accused of spamming\n* Almost all of our emails are sent to valid email addresses\n* No software required, we do all the mailing from our own server\n* Don't be fooled in signing up with similar sites offering services that cannot compare to ours\n* Get the most bang for your buck with bulk email advantage!\n\n\n--------------------------------------------------------------------------------------------------------\nDetails and order Click Here to \n\nweb site: http://vipwd3.go.nease.net/wd3.htm\nIf you can't see website ,please email us contact: yhzx599@vip.sina.com \nThank you!\n\nthe silver star internet information company\n\ncopyright??2004-2005 all reserved\n\n\n------------------------------------------------------------\nremove please email: emailad1234@sina.com\n------------------------------------------------------------\n\n\n\n", "id": "lists-005-3129177"}, {"subject": "ATTEND ACCORDINGL", "content": "March 26th, 2004\n\n From the office of: Dr.John  Yes Mayor(C.B.N)\nPrivate Tel: 234-8033-971-780\nDirect Email: johnmayor_kttunitcbn@hotmail.com\n\nATTN: BENFICIARY CONTRACTOR\n\nNOTE: THE INFORMATION IN THIS MESSAGE\nCONTAINS CONFIDENTIAL INFORMATION AND IS\nINTENDED SOLELY FOR THE ATTENTION AND USE OF THE NAMED\nADDRESSEE (S). IT MUST NOT BE DISCLOSED TO ANY\nPERSON(S) WITHOUT AUTHORIZATION. IF YOU ARE NOT THE\nINTENDED RECIPIENT, OR A PERSON RESPONSIBLE FOR\nDELIVERING IT TO THE INTENDED RECIPIENT, YOU ARE\nNOTAUTHORIZED TO AND MUST NOT, DISCLOSE,\nCOPY,DISTRIBUTE, OR RETAIN THIS MESSAGE OR ANY PART OF\nIT.\n\nRE: UNPAID CONTRACT SUM\n\nAfter waiting to hear from you or your Nigeria\npartners for a long time now, I decided to make this\ndirect approach to you in other not to let it be as if\nI have anything in mind against you. I do not know if\nyou have asked yourself why each time the release of\nthese fund is approved, all of a sudden, the payment\nwill be stopped or one problem or the other will come\nup. If you have not asked this question or you do not\nknow, this is an opportunity for me to tell you.\n\nSome time ago, your Nigerian friend I mean the people\nthat introduced you to the project approached me\nthrough my dear Wife who works with the federal\nMinistry of Finance and requested me to assist them\nconclude a money transfer deal they had with you, they\nrequested me to assist them by removing the original\ncontractors name, companys name and bank particulars\nfrom Central bank of Nigeria (CBN) vetting computer\nand replacing them with your name and your bank\ndetails in order to make you appear as the rightful\nbeneficiary of this funds. I agreed on condition that\nthey will pay me $100,000 as soon as your name appears\nas the beneficiary.I did as agreed and demanded to be\npaid but your friends started telling me stories. They\neven told me that you promise to send money to me. Do\nyou know that up till now, I have not received a\nsingle cent from them and have not set my eyes on any\nof them.\n\nBased on their attitude, I decided to stop the funds\nrelease movement because I cannot be denied of my\nright in my own office considering the risk as it\nmight affect my job. Secondly, I know the source of\nthe funds and you did not execute any contract in\nNigeria, although I am the only person privileged to\nknow this information and it is a fact. Why I am\nmaking this clear to you is that I can see that you\nare still making efforts spending money in order to\nconclude this project. Now I am ready to forget the\npast, I do not need the $100,000 any longer from you\nbut a share of 25% of the total sum. I need your\nassurance that those your colleagues will be totally\nkeep out of this transaction, I know that none of them\nis aware of this transaction after trying their best to\nconclude it without my consent.\n\nFinally, I need your promise that no official of the\nCentral bank of Nigeria will be aware of my\ninvolvement in this regard. Now re-assure me that you\nwill be willing to offer me the 25% of the fund, that\nyou will assist my wife and personal assistant to\nestablish a foreign account in your country where my\nshare will be lodged.\n\nIf you are ready to conclude this business with me,\nyou can contact me immediately on Tel.\nNo.234-8033971780 so that we can have chat over this\nissue once and for all so that we can move forward.\nBut if the reverse is the case, do not bother yourself\nto reach me.\n\nRegards,\nDr.John. Y.Mayor\nDIRECTOR (K.T.T UNIT) Central Bank of Nigeria\n\n\n\n", "id": "lists-005-3139616"}, {"subject": "???????? ???? ???????? ???? ??????...-_-;  nw shrae", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-3149245"}, {"subject": "(????)?????? ????????( 1?????? ). nr kkfee cnkw kx x", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-3155858"}, {"subject": "Request For Foreign partne", "content": "From the Desk of:\nMR.GODFERY USMAN.\nBILLS AND EXCHANGE\nACCOUNT DEPARTMENT \nMERITH INTL. BANK.\nVICTORIA ISLAND-LAGOS. \nREPLY EMAIL TO:(info_godferyaccount@mytolmail.com)\nTELEPHONE NUMBER:234-8046126050\n\n                           Request For Foreign partner  \n\nThe Managing Director/CEO.\n\nDear friend,\n\nI sincerely write to seek your co-operation and trust to enable my colleagues and I carry out an urgent business opportunity in my department.\n\nI work with the Merith Intl.Bank currently I am the senior manager of bills and exchange at the foreign remittance department of my bank. I was the account officer to one Mr. Butch.R.Miguel who died along with his family on the 8th of November 1999 in an ADC Boeing 727 plane crash at Egirin River. All 141 passengers on board were feared dead.  He left in his domiciliary account the total sum of $15.5million FiFteen million five hundred thousand USA Dollars. Since the management got the information of his death we have been expecting any of his relation or his next of kin to come up and claim his money. Unfortunately from the day of his death till the time of this letter none of his relation or friends has come up for the claim. The banking and financial law of Merith Intl.Bank stipulates that if such fund remained unclaimed after a period of four (4) it will be transferred into the bank treasury as unclaimed bill.\n\n On this discovery, I and two other senior staffs now decided to do business with you and release the money to you as the next of kin to Butch.R.Miguel for safety and subsequent disbursement. I will soon proceed for my retirement leave this year, and I personally do not want this fund to be transferred into the bank treasury as unclaimed bill. That is why I wanted the fund to be move out of the bank before I proceed on my retirement. The need for a foreigner as next of kin in this project is occasioned by the fact that the customer Mr. Butch.R.Miguel was a foreigner and a Nigerian cannot stand as his next of kin or heir. We have agreed that 30% of the Fund would be for you as foreign partner thereafter my colleague and I will visit your country for disbursement according to the percentages indicated. To enable the immediate transfer of the fund into your nominated account,you will first apply to the bank as the next of kin of the deceased,indicating your bank account number \nand location where in the money will be remitted. Upon receipt of your acknowledgement indicating your interest,I will send to you the text of the application that you will send to the Merith Intl.Bank authority for an approval to submit your claims. Send your reply through my direct and private email address.(info_godferyaccount@mytolmail.com)indicates your direct Fax and telephone number for effective communication that this transaction needs. Do not reply through the Merith Intl.Bank email address because it?s belonged to the senior staffs for public use. \n\nPlease note that you are not to appear in person, as every thing regarding this project will be strictly on documentations and every banking documents needed for this transaction will be taken care of by my self.\n\nLooking forward to your urgent response.\n\nYours Faithfully,\n\nMR.GODFERY USMAN.\nMERITH INTL. BANK. \n\n\n\n\n\n\n\n\n\n\n\n\n\n                                                                      \n\n\n\n", "id": "lists-005-3163212"}, {"subject": "GOLDEN LOTTERIA WINNER!!", "content": "  WINNING NOTICE\nFROM: THE LOTTERY COORDINATOR,\nINTERNATIONAL PROMOTIONS/PRIZE AWARD DEPARTMENT\n\n\nDEAR SIR/MADAM,\n\n           RESULTS FOR DRAWS\n\nCongratulations to you as we bring to your notice, the\nresults of the draws of GOLDEN LOTTERIA SPAIN \nYou have been selected as one of the five winners of Golden Lotteria Madrid-Spain \na computer ballot draws and thus will be a privileged recipient of the grand draw prize of 705.366,87euros (SEVEN HUNDRED AND FIVE THOUSAND THREE HUNDRED AND SIXTY SIX EUROS EIGHTY SEVEN CENT ONLY)..\nAddresses of individuals and companies from Africa, America, Asia, Australia, Canada, Europe, Middle East, and New Zealand as part of our International Promotions Program \nWe in the Golden loteria Spain is by this program,launching our model computer balloting lottery draws,developed and designed to satisfy the cravings of the evergrowing number of participants in our various lottery programs. Withfunds accrued exclusively from previous draws, payouts to all winners are guaranteed and will be transferred in record time.\n After randomly selecting 15,000 participants from an\ninitial database of 300,000 emails and zoning all participants\nby their respective continents from across the globe, we\nproduced an extensive list from which you have emerged as one of\nthe winners of the Grand Draw prize.\n\nYou/Your Company, attached to ticket number 3322/6181-22, with serial \nnumber 92-71 drew the lucky numbers 3, 17, 23, 31, 40, 46 (19).\n\n\nCONGRATULATIONS!\n\nYour funds are now deposited with our correspondence bank,\na reputable bank in the Spain,insured in your name.\nIn your best interest and also to avoid mix up of numbers\nand names of any kind, we request that you keep the entire\ndetails of your award strictly from public notice until the process\nof transferring your claims has been completed, and your funds\nremitted to your account.This is part of our security protocol\nto avoid double claiming or unscrupulous acts by perticipants/nonparticipants\nof this program.\n\nWe also wish to bring to your notice our mid year (2004)\nhigh stakes where you stand a chance of winning up to ?40.Million,we hope that with a part of your prize you will participate.\n\nPlease contact your claims agent immediately,to begin your\nclaims process;\n\nCLAIMS AGENT.\nMR.FLOYED GRAY\nFINANCIAL DIRECTOR\nGLOBAL LINK CASH CHANGE S.A SPAIN.\nTEL: +34-625-251-814\nMAIL:floyed_gray@blazemail.com\n\n \nFor due processing and remittance of your prize money to a\ndesignated account of your choice.\n\nRemember,You are to contact our agents by email and within a week of receiving this notice.After this date, all funds will be returned\nas unclaimed.\n\nNOTE: For easy reference and identification find below your\nreference and Batch numbers. Note that you are to forward\nthis email to the finance firm in your first correspondence with\nthem, by email. \n\nREFERENCE NUMBER: GLSP/6181/11-02/04\nBATCH NUMBER: 1811-TH\n\nCongratulations once again from all our staff and thank you\nfor being part of our promotions program.\n\n\nSincerely,\nMR.ALFONSO DIEGO RAJOY\nTHE LOTTERY COORDINATOR,\nGOLDEN LOTTERY SPAIN,\nCALLE BRAVO MURILLO 312\n28001 MADRID,SPAIN.\n\n\n\nN.B. Any breach of confidentiality on the part of the\nwinners will result to disqualification.Anybody under the age of 21 is automatically disqualified. \n\n\n\n", "id": "lists-005-3173080"}, {"subject": "Give her unlimited orgasm", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-3182871"}, {"subject": "BENEFICIAR", "content": "Mr Geoffrey Bell\nFirst standard finance bank.\nLondon UK.\nFAX:     +44-20-7900-3639\n\nDear Friend.\n\nMy name is Mr Geoffrey Bell, I am the credit manager of First standard finance bank here in the United Kingdom. I am contacting you of a business transfer,of a huge sum of money from a deceased account.Though I know that a transaction of this magnitude will make any one apprehensive and worried, but I am assuring you that everything has been taken care off,and all will be well at the end of the day. I decided to contact you due to the urgency of this transaction.\n\nPROPOSITION;\nI am the account officer of a foreigner named Salah Adam who died in an\nair crash along with his wife and son on the 31st October 1999 in an Egyptian airline 990 with other passengers on board. You can confirm this from the website below which was published by\nhttp://www.cnn.com/US/9911/02/egyptair990.list/ - 27k \n\n\nSince his death, none of his next-of-kin are alive to make claims for this money as his heir, because they all died in the same accident himself and his wife and only son(May their soul rest in peace). We cannot release the fund from his account unless someone applies for claim as the next-of-kin to the deceased as indicated in our banking guidelines. Upon this discovery, I now seek your permission to have you stand as a next of kin to the deceased, as all documentations will be carefully worked out by me for the funds (US$12,500,000,00) to be released in your favor as the beneficiary's next of kin.\n\nBecause after five years the money will be called back to the bank treasury as unclaimed bills and the money shared amongst the directors of the bank. so it is on this note i decided to seek for whom his name shall be used as the next of kin/beneficiary to this funds rather than allow the bank directors to share this money amongst themselves at the end of the year.It may interest you to know that we have secured from the probate an order of mandamus to locate any of the deceased beneficiaries. Please acknowledge receipt of this message in acceptance of our mutual business endeavor by furnishing me with the following information if you are interested.\n\n1.A Beneficiary name?.In order for me to prepare the document for transfer of the funds in your name.\n2. Direct Telephone and fax numbers.For our personal contact and mutual\ntrust in each other. Upon your acceptance I shall send you a copy of my\ninternational passport and drivers license for more confidentiality and\ntrust.\n\nI shall be compensating you with three million five hundred thousand dollars ($3,750,000,00) on final conclusion of this project for your assistance,while the balance $8,750,000 dollars shall be for me for investment purposes.Because I intend to retire after the conclusion of this transaction. Ifthis proposal is acceptable by you, please endeavor to contact me immediately.Do not take undue advantage of the trust I have bestowed in you, I await your urgent response\n\n\n\nRegards,\n\nMr Geoffrey Bell\n\n\n\n", "id": "lists-005-3189979"}, {"subject": "urgent repl", "content": "PRIVATE AND CONFIDENTAL\nE-MAIL:mawa@mail.bulgaria.com\nJohannesburg,\nSouth Africa\n\n\n\nDear Sir,\nI know You will be surprised to receive this letter from me, but please\nthis letter is a request from a family in dare need of assistance. I am\nMr. MAWA MAZURI from Angola. The first, and only son of Brigadier Bulu \nMazuri\ncommunicating to you from Johannesburg, Republic of South  Africa.\n\nI got your name and address from a business desk in chamber of commerce\nand industry in Johannesburg. And I on behalf of my widowed mother \nMrs.Anne\nMazuri,decided to solicit for your assistance to transfer the sum of \nUS$32.5millio(thirty\ntwo million, five hundred thousand United States dollars only)inherited\nfrom my late father into your personal or company's account.\n\nBefore his death, he was Brigadier in charge of arms and ammunition \nrocurement\nfor the Angolan Army. In his \"will\" he specifically draw my attention  \nto\nUS$32.5 million (thirty two million, five hundred thousand United  \nStates\ndollars only) which he deposited in a box for private security company \nin\nJohannesburg South Africa, IN FACT I QUOTE\" My beloved son, I wish  to \ndraw\nyour attention to US$32.5 million (thirty two million, five  hundred \nthousand\nUnited States dollars only).  I deposited the box containing  the fund \nin\na security company in Johannesburg, South Africa as valuables.During \nthe\nwar I was very dedicated and committed to winning the war against\nthe rebel unit.\n\nI found out that the senior army officers and government functionaries \nwere\nbusy helping themselves with government fund and properties, sending \nthem\nto foreign countries. Due to this, when I and the former special \nadviser\nto the president were assigned by the president (Jose Eduardo Santos) \nto\n purchase arms in South Africa, we saw this as a golden opportunity and\ndiverted  the money and shared it, of which I got a total sum of \nUS$32..5\nmillion  (thirty two million, five hundred thousand United State \ndollars\nonly).In case of my absence and on earth as a result of death, only you\nshould solicit  for the assistance of a reliable and sincere foreign \npartner\nto assist you  transfer\nthis money out of South Africa for investment purpose.\n\nI deposited the box in your name and you can claim it alone with\ndeposit code. Your mother is with all the documents. Take good care of \nmother\nand your two sisters. Do not disappoint me! Bye! >From this word of my \nlate\nfather, you will understand that lives and future of my family depend \non\nthis fund as such.\n\nI will be grateful if you can assist us. We are now living in South \nAfrica\nrefugee camp, as political asylum seekers, financial laws and  \nregulation\nof South Africa does not permit us certain financial right.\nIn view of this, I cannot invest this fund in South Africa hence; I am\nseeking your assistance to transfer this fund out of South Africa for\ninvestment purpose.For your effort, we are prepared to offer you 25% of\nthe total fund while 10% will be set aside for any expenses incurred \nduring\nthis transaction.\n\n\nPlease, note that this transaction is 100% risk free and the major \nthing\nI demand from you is to assure  me the safety of this money when it \nfinally gets to you. Further information and arrangement will commence as\nsoon \nas\ntrust confidence and good relationship is established.I shall be most \ngrateful\nif you maintain the confidentiality of this matter.\nPlease, confirm your interest immediately by sending to me your private\ntelephone and fax number for communication.also to prepare your mind to\ncome over to meet us here in south to take you to the security company \nfor\nus to claim the consignment.\n\nYou are strictly advised to reply through this Address :\nmawa@mail.bulgaria.com\nBest regards,\n\nMAWA MAZURI\n\n\n\n\n------------------------------------------\nUse o melhor sistema de busca da Internet\nRadar UOL - http://www.radaruol.com.br\n\n\n\n", "id": "lists-005-3199087"}, {"subject": "Mail Delivery (failure ietf-charsets&#64;w3.org", "content": "plain/text attachment: Se_elimin__Norton_AntiVirus1.txt\n\n\n\n\n", "id": "lists-005-3209523"}, {"subject": "Please, I need your assistance.", "content": "Mr Richard Wilford\nspain barcelona\nEmail: richwilford@netscape.net\nTel:+346 60 52 35 91 \n25-03-2004\n\nDear friend,\nI am Mr. Richard Wilford, the only son of late Chief John Wilford \nfrom Sierra-Leone. I got your contact from the internet directory and need \nan assistance from you. My sources of your contact gave me encourage and \nconfidence to write on you.\nI am writing you in absolute confidence primarily to seek for your \nassistance to transfer our cash of (Thirty Nine Million United Stated Dollars)\n(39,000,000.00) now in the custody of the Security and trust Company here in \nspain to your private account pending our arrival to your country.\nSOURCES OF THE FUND\nMy late father, chief John Wilford, a native of Mende District in \nthe northern province of Sierra-Leone, was the general manager of \nSierra-Leone Mining Co-operation (S.L.M.C) Freetown. According to my father, \nthis money was the income accrued from mining co-operation over draft and \nminor sales. Before the peace of the civil war between the rebel forces of \nMajor Paul Korormah and the combined forces of ECOMOG peace keeping \noperation that almost destroyed my country, following the forceful removal \nfrom power of the civilian elected president Ahmed Tejan Kabbah by the \nrebels. My father had already made arrangement for his family, my mother, my \nlittle sister and myself to be evacuated to spain,  with our persona effort \nand the box containing the money. My father deposited the box in a private \nsecurity company here in spain for the safe custody until after the war when \nhe will join us. During the war in my country, and following the!  \nindiscriminate looking of the public and government properties by the rebels \nforces, the Sierra-Leone  mining coop. was one of the targets looted and \ndestroyed. My father including other top government functionaries were \nattacked and killed by the rebels  because of the relationship with the \ncivilian president Ahmed Tejan Kabbah.\nAs a result of my father's death, our hope of survival. The untimly deaths \ncaused mother heart failure and other releated complications of which she \nlater died in hospital after we must have spent a lot of money on her. Now, \nmy 17 years old sister and myself are alone in this strange country \nsuffering without any care or help. Without any relation, we are now like \nrefugees and orphans. Our only hope now is in you and the box deposited in a \nSecurity Company.\nTo this effect, I humbly solicit your assistance in the following ways. To \nassist me claim this box from Security Company as co-benficiary. To transfer \nthis money in your name to your country To make good arranagement for a \njoint business investment on our behalf in your country and you, the \ncareteker. To secure a college for my little sister and myself in your \ncountry to further our education. And to make arrangement for our travel \nwith you to your country after you have transferred this fund. Most \nimportant, the security company official do not know the exact content of \nthe box because it was decleared as family valuables. The whole document \nissued after deposit is in my custody. For your assistance, I have concede \n35% of the money to your efforts assistance.\n\nBest Regards\nRichard  Wilford.\n\n\n\n", "id": "lists-005-3216157"}, {"subject": "AWARD FINAL  NOTIFICATIO", "content": "LOTERIA Y APUESTAS DEL ESTADOS\nCALLE JUAN CRUZSUAREZ 24,28009\nMADRID-ESPA?A.\nfax:+34 656 683 512.\nFROM:THE MANAGER CLUB LOTTO PROMOTIONS/PRIZE AWARD DEPT.\nBATCH NUMBER: EGS/1779/IPD.\nRE: /AWRAD NOTIFICATION/PROCESSMENT ADVICE/ INTERNATIONAL LOTTO\nOFFICIAL RELEASE NOTICE. We are pleased to inform you of the announcement today, 25 MARCH, 2004 of winners of the SCIENTIFIC GAME PROMO LOTTERY; THE SPANISH /INTERNATIONAL, PROGRAMS held on 22nd DECEMBER, 2003. Your email address\nattached to ticket number 528.\ndrew the lucky numbers 041-080-101,batch number EGS/1779/IPD and\nconsequently won the lottery in the 1st category. You have therefore been approved of a lump sum pay out of EURO 415,810.00 (FOUR HUNDRED AND FIFTEEN THOUSAND , EIGHT HUNDRED AND TEN EUROS ONLY credited to LOTTERY Security file NO. ELG-8271B605-03 This is from total prize money of EURO 1,000,000.00\nshared among the international winners in 1st-3rd categories.All\nparticipants were selected through a computer ballot system drawn form\n25,000 company email addresses and 30,000,000 individual email addresses\nfrom Australia, New Zealand, America, Europe, Africa, North America and Asia as part of International Promotions Program, which is conducted\nannually.\n  CONGRATULATIONS!Your fund is now in custody of a Security company\ninsured in your FILE Security. Due to the mix up of some numbers and names, we ask that you keep this award strictly from public notice until your claim has been processed and your money remitted to your account. This is part of our security protocol to avoid double claiming or unscrupulous acts by participants of this program. This lottery program was promoted by our group of philanthropist headed by the Spanish government. We hope with a part of you prize, you will participate in our end of year high stakes EURO 2,000,000 million International Lottery. To begin your claim, please contact your file/claim officer: JOSE GRACIA , FOREIGN SERVICE MANAGER SHELL MARKETING S,A. MADRID, SPAIN\nTELEPHONE:+34-610-692-652\nPlease be informed that the payment/release order of  non residence of spain must be notarized at a spnaish notary office prior to payment of lottery fund to beneficiary. Please be aware that your Paying Authority will\nEffect Payment Swiftly upon satisfactory Report, Verifications and\nvalidation provided by our processing Agent; that would be designated\nto your file. For due processment and remittance of your winning prize to your designated account of your choice. Remember, all prize money must be claimed not later than 22nd  APRI, 2004. After this date, all funds will be returned as unclaimed . NOTE: In order to avoid unnecessary delays and\ncomplications, please remember to quote your reference and batch numbers in every one of your correspondences with your agent. Furthermore, should there be any change of your address, do inform your claims agent as soon as possible. Congratulations once again from our team of staff and thank you for being part of our promotional program.\nNote: Anybody under the age of 18 is AUTOMATICALY DISQUALIFIED.\nSincerely,\nMARTINEZ SUZANA.\nMANAGER/LOTTO CLUB.\nINTERNATIONAL LOTTO-2003.ALL other right reserved.CODEX-SADOE\nGS-(MADRID-SPAIN).  \n\n\n\n", "id": "lists-005-3225967"}, {"subject": "(????)???????????? ???? 5000????(????????)!????????????&#64; ", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-3235467"}, {"subject": "??????????????????????????????(ERP)    ", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-3242348"}, {"subject": "????????&quot;????????&quot;??????!!", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-3249174"}, {"subject": "8585 where", "content": "OFFSHORE-DISCRETE Pharmacy...\n\n*No-questions ever asked. We trust the judgement of our clients based on their needs. We guarantee complete privacy on all transactions.\n\nPopular drugs of the MONTH: CIaLis. (35-hour time frame to act), Valium.(rleases stress on the spot, allowing more confidence)\n\nWe have a full-lineup, check all of our low prices & products.\n\n\nhttp://frnssormeds.com/p5\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWish no drug.s but want a fuller thicker penis, all natural & guaranteed? Go here:\n\nhttp://frnssormeds.com/vp9\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNo more of either, I wish to be taken0ff, thank-you.\nhttp://ghnp.com/byebye.html\n\n\ndecolletage attire cling extolling ammonia blizzard dream kabuki colorado redundant graft \n9 \n\n\n\n", "id": "lists-005-3255777"}, {"subject": "can you say xana", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-3262368"}, {"subject": "Resul", "content": "35 Queen Park,\nEC2 1AZ.LONDON\nE-mail: Dianatrustfund@hotmail.com\n\nRef. Number: ILL/0854PGT/73003NL\nBatch Number: 1463856-284-/Lh\n\nSir/Madam,\n\n  We are heartened to inform you of the unique result of the Diana Trust fund Lotto program held on the 15th of March, 2004. Your e-mail address attached to ticket number: 678950347487 with corresponding serial number: 099-563588 drew lucky numbers: 84-34-23-11-20-18 which consequently won in the 3nd category. You have therefore been approved for a pay-out of 400,000.00 EUROS (Four Hundred Thousand Euros).\n\nWe advise you to keep your winning information undisclosed until your claim has been processed and your fund remitted to you. It is a part of our security procedure to avert double claiming and unwarranted abuse of this program by some unscrupulous participants. All participants were selected through a computer ballot system drawn from over 20,000 companies and 30,000,000 individual email addresses and names from all over the world.\n\n This lottery was promoted and sponsored by eminent personalities whose names would be made public soon. We hope that with part of your winning, you will participate in our next year 5 MILLION EUROS GRAND LOTTO SUPER.\n\nPlease you are requested to come personally to file in your claim, however if you cannot make it to London, please contact below approved private attorney to assist you with the release of your fund into your desired bank account or by check.\n\n\n\nThomas Oko LLB. Esq.\nDelta CONSULTANCY\nE-mail:Thomasoko@azmaik.com \nLondon,United kingdom\n \n  Please remember, all winnings must be claimed not later than 3 weeks from the day of Notification. After this claim duration, unclaimed funds will be null and void. In order to avoid unnecessary delays and complications, please remember to quote your Reference and Batch numbers in all correspondences. Furthermore, should there be any change of address do inform our agent as soon as possible.\n\nCongratulations once more from our members of staff and thank you for being part of our fund raising program. Note: Anybody under the age of 18 is automatically disqualified.\n\nBest wishes,\nMr. Paul ford.\nLotto Co-ordinator \n\n\n\n", "id": "lists-005-3268501"}, {"subject": "(????)????????!!?? 6???????? ??????????(????????) ???????? ??????????!!&#64;   qor", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-3277192"}, {"subject": "Ihre Mailorder Teil ", "content": "Hallo, \n\nherzlich Willkommen beim POWER LUCKYBACK TEAM, \n\nzun?chst einmal m?chte ich Ihnen dazu gratulieren, dass Sie sich entschlossen haben, diese Mailserie anzufordern. Ich hoffe sehr, dass diese Mails den Ansto? geben werden, Ihr Leben nachhaltig und zum Positiven hin zu ver?ndern. Denn mit diesem ersten Schritt er?ffnen Sie sich selbst neue M?glichkeiten. Sie k?nnen und werden sich bequem und von zu Hause aus, einen ?ppigen Nebenverdienst aufbauen ? wenn Sie etwas mehr Zeit investieren wollen, nat?rlich auch ein umfangreiches Haupteinkommen. \n\nFolgen Sie den Anweisungen, die Sie von uns in den n?chsten Wochen erhalten, bleiben Sie dran, arbeiten Sie t?glich eine, am besten mehrere Stunden nach unseren Anweisungen und der Erfolg ist Ihnen sicher. Sie k?nnen mit Multi-Level-Marketing im Internet mehrere 1000  Euro im Monat verdienen. Es ist m?glich und es ist nicht einmal besonders schwer. Sie brauchen nur die richtigen Informationen und Ausdauer. Die Informationen werden Sie von uns bekommen, die Ausdauer kann nur von Ihnen selbst kommen. Andere k?nnen es auch und es gibt keinen Grund, warum Sie deren Erfolg nicht wiederholen k?nnen. \n\nWarum ist das so? Ganz einfach. In dieser Mailserie steht genau, was ich machte und mache, um im Internet mit Multi-Level-Marketing erfolgreich zu sein. Im Internet sind alle gleich. Jeder hat die gleichen Chancen und M?glichkeiten. Das hei?t, wenn Sie meinem Weg folgen, werden Sie genauso erfolgreich werden. Denn was wir Ihnen vorstellten in unserer ersten Mail ist keiner dieser Kettenbriefe, wo Sie ?nur? ein paar Millionen Leute in der Downline brauchen und schon sind Sie stinkreich, es ist auch kein Gesch?ft, bei dem Sie gezwungen werden, f?r teures Geld Waren einzukaufen in der Hoffnung, sie dann wieder verkaufen zu k?nnen. Sie werden Geld verdienen, indem Sie eine solide Firma mit einem der besten Verbrauchsprodukte weiterempfehlen und Sie werden lernen, Ihr Gesch?ft immer wieder zu multiplizieren. \n\nMir ist bewusst, dass es nicht einfach ist, das zu glauben. Aber im Grunde ist es gar nicht so schwer im Internet erfolgreich zu sein! Denn MLM basiert darauf, dass Sie f?r Unternehmen die Werbung ?bernehmen ? statt teurer Agenturen. Und es gibt zahlreiche Werbem?glichkeiten, mit deren Hilfe Sie neue Vertriebspartner werben werden. Und es gibt diese Mailserie, mit der die von Ihnen geworbenen Partner selbst erfolgreich werden und Sie damit ebenfalls noch erfolgreicher machen. \n\nZun?chst m?chten wir Sie aber mit einigen allgemeinen Informationen zum Thema MLM auf das Kommende einstimmen. \n\nWas ist MLM eigentlich? \nMulti-Level-Marketing ist etwas, was jeder machen kann, egal aus welcher Einkommens oder Bildungsschicht er kommt - aber nicht jeder macht etwas draus! Noch nie hatten der einfache Mann, die Hausfrau mit Kind, der gut verdienende, aber ?berarbeitete Manager eine solche Chance. Erfolg kommt durch Ausdauer, Durchstehen von Durststrecken, immer wieder von vorne beginnen. Sie werden sehen: Sobald Sie Ihre Chance erkannt haben, boomt Ihre Organisation!\nK?mmern Sie sich nicht um die ewigen Meckerer sondern um diejenigen, bei denen Sie sp?ren, dass Sie in diesem Gesch?ft erfolgreich sein wollen und die auch bereit sind, daf?r etwas zu tun.\n\nWenn Network Marketing so toll ist, warum macht`s nicht jeder?\nWenn ?rzte und Anw?lte gut verdienen, warum sind nicht 50 Millionen in diesen Berufen? Ein Wort: Unverst?ndnis. Die Bev?lkerungsmehrheit versteht Network Marketing nicht und sieht das Potential nicht. Zu wenige haben sich bisher ernsthaft und qualifiziert damit auseinandergesetzt. Zudem hat eben jeder verschiedene Interessen, seien es Vorabendserien, Stammtisch. die Bundesliga oder eine Gesch?ftsgelegenheit zur Erreichung einer finanziellen Absicherung und/oder Pers?nlichkeitsentwicklung. Keiner muss, jeder kann.\n\nIch hab`s versucht, Network Marketing klappt nicht bei mir.\nWillkommen im Club. Auf wie viel Versuche waren Sie beim Laufen lernen durch Ihre Eltern limitiert? Zwei Versuche? Drei oder vier hatten Ihnen Ihre Eltern sicher zugestanden, oder? Sicher waren die Versuche nicht limitiert, sonst w?rden Sie heute noch krabbeln!\nAufgeber gewinnen nie!!! Hatten Sie aufgegeben, weil es nicht ?ber Nacht zum Traumauto gereicht hatte? Manchmal klappt es eben nicht sofort. Nach 20 ,,Nein\" wird es nicht einfacher. Versuchen Sie doch absichtlich 20 ,,qualifizierte\" Nein zu erhalten. Sie werden scheitern, denn irgendwer sagt bestimmt ,,Ja\". Network Marketing funktioniert, Sie \"funktionieren\" vermutlich nicht richtig. F?r jeden Einzelhandelskaufmann oder Handwerker sind Ausbildungszeiten vorgesehen. Da wollen Sie ein vom Himmel gefallener Networker sein? Das konnte nicht funktionieren, Sie waren vermutlich nicht bereit, hatten keine Erfahrung, einen schlechten Sponsor und ein schlechtes Networkunternehmen. Aber Network Marketing funktioniert. Sie brauchen nur eine gute Network Marketing Firma im Hintergrund.\n\nNur wenige sind erfolgreich im Network Marketing\nUngl?cklicherweise gibt es bei jedem Handwerk die wenigen ,,Erfolgreichen\". Die meisten Menschen machen einfach nicht die richtigen Schritte. Network Marketing bildet hier keine Ausnahme. Viele Menschen wollen auf der Strasse des Erfolgs wandeln und steigen deshalb in ein MLM ein. Doch es ist kein Paradies. Network Marketing ist das Synonym f?r Arbeit! Es braucht Zeit und Ausdauer, Beharrlichkeit und brennendes Verlangen. Viele falsche Vorstellungen werden beim Anwerben geweckt und k?nnen nicht erf?llt werden. Klar, man h?rt die kleine Erfolgsstory von der netten Hausfrau und dem Hilfsarbeiter. Viele Leute scheitern an einem Wort: ARBEIT! Und dieses Wort gef?llt nicht, ganz klar. Leute wollen alles umsonst und verlieren das Interesse, wenn es nicht sofort klappt. Den klassischen Ausspruch kennt man: \" Ich habe es eine ganze Woche versucht und es hat nicht funktioniert, das ist alles Schwindel!\" Dies ist nicht nur im Network Marketing so, so ist es in allen Lebenslagen.\n\nSchauen Sie sich Ihre Arbeitsstelle an. Sie arbeiten 40 Stunden in der Woche 40 Jahre lang. Alles was Sie daf?r bekommen ist eine goldene Uhr, ein Zinnteller und ein feuchter H?ndedruck vom Chef. Das war`s! Fast - ?ne kleine Rente wird's mit viel Gl?ck noch geben. Viele sind doch mit 65 entweder schon gestorben oder einfach kaputt. \nDas fatale an MLM ist die Tatsache, dass es \"viel zu einfach\" zu beginnen ist, \"noch viel einfacher\" ist der Ausstieg. Wenn Sie z.B. eine Zahnarztpraxis er?ffnen, m?ssen Sie Unsummen investieren. Da wird das Aufgeben schwierig.\n\nNetwork Marketing ist ein richtiger Beruf und sollte als solcher auch angesehen werden. Finden Sie Ihre Berufung!\n\nNun sollten Sie sich mit den Luckyback Produkten und der Philosophie etwas n?her besch?ftigen! Gehen Sie dazu auf folgende Internetseite: http://www.future-trend.de.ms\n\nM?chten Sie auch eine solche Internetseite haben dann f?llen Sie einfach das Formular aus: \n\nhttp://www.heimverdienst24.de/luckyback/bc.html\n\nDamit aber genug f?r Heute. In 3 Tagen erhalten Sie weitere konkrete Infos zum Aufbau Ihres Internetgesch?fts.\n\nMit freundlichen Gr?ssen\nIhr Future Trend Team\n\nP.S.: Kopieren Sie sich diese Email, damit Sie sich sp?ter auch ein solches Autorespondersystem bei http://www.freeautobot.com einrichten k?nnen.\n\n\n\n", "id": "lists-005-3284355"}, {"subject": "????????!?????????? ????????????(5000????) ", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-3298200"}, {"subject": "Re: copy huddl", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-3304814"}, {"subject": "can i ask", "content": "Hi,\n \nI recently received the same mail as u ( saw in internet) , may i know if this is true?\n \n__________________________________________________________________________        \n \n \n     LOTTERY LA PRIMITIVA.\n              C/GUZMAN EL BUENO,137 MADRID - ESPAQA.\n            TEL: +34-660-567-211 AND  FAX  +34-916-017-970.\n\nFROM: THE DESK OF THE PROMOTIONS MANAGER,\nINTERNATIONAL PROMOTIONS/PRIZE AWARD DEPARTMENT,\nREF: LP/26510460037/02 BATCH: 24/00319/IPD.\n\nATTN:\n                       ( CONGRATULATION)\n\n\nDEAR SIR,\n            \"AWARD NOTIFICATION FINAL NOTICE.\"\n\nWe are pleased to inform you of the announcement, of winners of the\nLOTTERY PRIMITIVA SWEEPSTAKES/INTERNATIONAL PROGRAMS held on 31TH december,2003.\nYour name is attached to ticket number 004-05117963-198, with serial\nnumber 99375 drew no 03/61,the winning numbers 06-11 -13-27-40-49, and\nconsequently won the lottery in the 6th category. You have therefore\nbeen approved for a lump sum pay out of UROS 705.366,80 Thousand in\ncash credited to file No:LP/26510460037/02.This is from total prize\nmoney of EUROS 3,000,000.00 shared among the six  international winners\nin this category. All participants were selected through a computer\nballot system drawn form 25,000 names from Australia, New Zealand,\nAmerica, Europe, North America and Asia as part of International\nPromotions Program, which is conducted annually.\n\n     CONGRATULATIONS!!! Your fund is now insured to your name. Due to\nthe mix up of some numbers and names, we ask that you keep this award\nstrictly from public notice until your claim has been processed and your\nmoney remitted to your account. This is part of our security protocol\nto avoid double claiming or unscrupulous acts by participants of this\nprogram. We hope with a part of you prize, you will participate in our\nend of year high stakes Euros1.1 billion International Lottery. To begin\nyour claim, please contact your claims agent, Dr Benard Thomson(+34 665-426-096) FOREIGN OPERATION MANAGERS, Email:  &References=\">awardwinner@whipmail.com).\n   For due processing and remittance of your prize money to a\ndesignated account with our bankers. Remember, all prize money must be\nclaimed not later than 20TH may, 2004. After this date, all funds\nwill be returned as unclaimed.\n\nNOTE: In order to avoid unnecessary delays and complications, please remember to quote your reference and batch numbers in every  of your correspondences with your agent.\nFurthermore, should there be any change of your address, do inform your\nclaims agent as soon as possible. Congratulations again from all our\nstaff and thank you for being part of our promotions programm.\n\n\n( CONGRATULATION)\n\n\n BEST REGARDS,\n\nDR. CLIFFORD F. LOPEZ.\n\n(DIRECTOR EXTERNAL AFFAIRS)\n\n\n\n---------------------------------\nDo you Yahoo!?\nYahoo! Finance Tax Center - File online. File on time.\n\n\n\n", "id": "lists-005-3312424"}, {"subject": "Re: Notif", "content": "Please confirm my request.\n\n\n\n\n\n\n\n\nplain/text attachment: Se_elimin__Norton_AntiVirus1.txt\n\n\n\n\n", "id": "lists-005-3321647"}, {"subject": "YOUR ASSISTANT IS NEEDED", "content": " \nAttn:\n\nMy name is Mr,VINCENT  UZUORJI. I am the operational manager in account management section incharge of credit and foreign bills of one of the prime banks here in South Africa. I am writing in respect of a foreign customer of my bank who perished with his whole families on 25TH JULY,2000 in CONCORDE PLANE CRASH [Flight AF4590] with the whole passengers aboard.\n\nThere is an account opened in this bank in 1998 by this great late INDUSTRIALIST who died without a\nwritten or oral 'WILL' attached to the account. Since his death, I personally has watched with keen interest\nto see the next of kin but all has proved abortive as no one has come to claim his funds and no other person\nknows about this account or anything concerning it, the account has no other beneficiary and until his\ndeath he was the manager of his company.\n\nThe total amount involved is 106,000,000.00 USD.[One Hundred and Six Million United States Dollar]. We wish to start the first transfer with $6,000,000.00[Six million] and upon successful transaction without any\ndisappointment from your side, we shall re-apply for the transfer of the remaining balance to your account.\n\nI have secretly discussed this matter with the general manager of the bank who I must involve in order to\nhave a smooth and a successful transfer of the fund to any foreign bank account which you are going to\nnominate. On this note, I decided to seek for a reliable foreigner who will act as the foreign beneficiary of the fund from the deceased by providing his/her bank account where the fund will be transferred for immediate investment on any viable project as no one has come up to be the next of kin.\n\nThe banking ethics here does not allow such money to stay more than six years without claim hence the money will be recalled to the government treasury as unclaimed after this long period of domancy. \n\nIn view of this I got your contact through my personal search to see if you can assist by providing your safe bank account for the transfer or find a reliable person who will be capable of receiving such amount in\nhis or her personal account. At the conclussion of the transfer 65% of the fund will be for me, I will give\nyou 20% of the total transfer sum, 10% for charity both in Africa and in your country while the remaining\n5% will be set aside to settle expenses both parties might incure during the transfer process.\n\nUpon the receipt of your reply, I will send to you a detailed information about the transaction. I will not\nfail to bring to your notice that this business is 100% risk and trouble free and that you should not\nentertain any fear as all modalities for fund transfer can be finalized within 7 to 9 banking days, after you\napply to the bank as the beneficiary of the fund from the deceased.\n\nWhen you receive this letter. Kindly send me an e-mail or you can call me or fax me. You should also include\nyour private fax and phone numbers for easy and safe communication.\n\nTel: 874-763648313\n   : 874-763648314\nFax: 874-763648315\n\nRespectfully yours,\n\nMr,VINCENT  UZUORJI.\n\n\n\n", "id": "lists-005-3327893"}, {"subject": "Ultimate CD Library - 10,000 Books with a Bonu", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-3337210"}, {"subject": "???????? ????!!??????.??????.????????.1?????????? ???? ????!!  xzsxtvhnwqqqra a", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-3343908"}, {"subject": "footfal", "content": "premature oracular fictitious beatnik starfish \nmucosa placeable franciscan cattail stow downfall blather beauteous monsoon \npeppermint malconduct cede cramer anomie councilwomen \n\n\n\n", "id": "lists-005-3350851"}, {"subject": "Wai?? ???? ???? 5?? ???? ???? ??????. yc qa", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-3358502"}, {"subject": "anthracnos", "content": "wobble activate duplex germanium bromfield roach conspirator tried improbable \neeoc mexican christendom expedient chen revoke tag \ngilt luxury canteen cholesterol atlantes sequel \n\n\n\n", "id": "lists-005-3365846"}, {"subject": "preparatory carloa", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-3371961"}, {"subject": "Tabela Geral/Componente", "content": "nunoNormalSAFEMODE212004-03-09T16:37:00Z2004-03-09T16:37:00Z1130707.5183610.2625 CleanClean21MicrosoftInternetExplorer4 \n \n\n?? Sistemas Informaticos,lda\n\n??????????????????? \n\nTel. 21 4344217  ?????????????????Fax. 21 4357053 \n\n \n\n \n\n \n\nSafemode@mail.telepac.pt ???????????????? Safemode.lda@mail.telepac.pt\n\n* ADICIONAR IVA 19 % A TODOS OS VALORES APRESENTADOS\n* CONSULTE P/ OUTROS PRODUTOS N?O INCLU?DOS NA TABELA\n* CONSULTAR PRE?OS PARA QUANTIDADES\n\n \n\nEspecifica??es e pre?os podem ser alterados sem aviso pr?vio\n\nENVIAMOS A COBRAN?A PARA TODO O PAIS\n\n \n\nCaso n?o queira receber este mail? clique aqui remover.safemode@mail.telepac.pt\n\nEsta mensagem n?o pode ser considerada como \"SPAM\", porque inclui todos os nossos contactos, assim como instru??es para remover o e-mail da nossa mailing list.\n\n \n\n\n\n\n\n\n\n\n\napplication/vnd.ms-excel attachment: tabela_geral.xls\n\n\n\n\n", "id": "lists-005-3381742"}, {"subject": "PROPOSTA TECNICA DE VIABILIDADE COMERCIA", "content": "           \n   A V S  *  P R O J E T O S  E  T E C  N  O  L  O G I A \n\n\n   \"UNIDADE  GERADORA DE ENERGIA EL?TRICA  AUTO  SUSTENTAVEL\".\n   \n\"MOTORES VEICULARES DE COMBUST?O A GASOLINA CONVERTIDO PARA FUNCIONAMENTO\nA ?GUA \"\n \nTrata a presente inven??o, de uma unidade geradora de energia el?trica,  \nauto cont?nua e auto-sustent?vel, (sem qualquer tipo de combust?vel) capaz\nde produzir e armazenar energia el?trica.\nNosso revolucion?rio projeto visa atender ? necessidade de cada usu?rio. A\nusina  geradora ? composta por um  conjunto mec?nico,  montado sobre uma\nbase  fixa, ou uma plataforma m?vel com  um sistema mec?nico composto por\numa caixa de engrenagens (c?mbio), polia,   correias, eixos mec?nicos,\nembreagens magn?ticas e gerador.  \nO torque inicial  e a velocidade cont?nua empregada pela roda de in?rcia,\npromove o giro das engrenagens contidas no  conjunto mec?nica,  acoplado a\num gerador, o qual est? interligado a um painel de comando central; \nretificador de corrente a/c (corrente  alternada) para c/c (corrente \ncontinua), respons?vel pelo  gerenciamento  da enrgia, monitorando a\nrecarga   do banco de baterias,este processo permite  fazer a manuten??o\nno equipamento com se fosse um no-bleak.\n A  energia gerada poder? ser usada diretamente via estabilizador, de\nacordo com as voltagens que estiver  fechado o gerador, 127/220/380 ou 440\nvts, (sa?da para consumo imediato), podendo ser elevada para  alta tens?o\n= 13.800 volts.   \nO sistema de funcionamento pode se apresentar de modo manual ou\nautom?tico, via igps, Internet, ou seja, todas vezes que a bateria perde\nentre 20% a 50% de carga, o sistema s?o acionadas automaticamente para\nrecarga, ate o estado de flutua??o conforme  especifica??o t?cnica de cada\nfabricante.( bateria).\nPara funcionamento do sistema todos os elementos mec?nicos, el?tricos, \neletr?nicos  e mecatr?nicos, s?o  montados em gabinete ou quadro de\ncomando com slp, inversor, conversor, retificador,  fonte de pot?ncia, \nestabilizador, volt?metros  ac/dc, frequencimetros, chaves  autom?ticas, \nrevisoras e comando autom?tico.\nA  \"UNIDADE  GERADORA DE ENERGIA EL?TRICA  AUTO-CONT?NUA\", atende ? \ninfinitas aplica??es;\n Industrias de pequeno, m?dio e grande porte,    irriga??o,  \nagronegocios,  fornos para panifica??o, caldeiras, ind.qu?micas,   gera??o\nde  energia para o campo, bairros residenciais, condom?nios, edif?cios,\nescrit?rios , rodovias, sinaliza??o p?blica,  e  grandes  propriedades,\nprefeituras ?  custo zero; al?m de n?o  causar impacto ao meio-ambiente. \nEste projeto j?  se encontra   desenvolvido  e  testado, com prot?tipo  de\n20 Kvar  pronto e  patenteado, sem qualquer similar.\nno mundo,de alto valor agregado e baixo custo  por equipamentos,em rela??o\na grandes grupos geradores.\nUsando a mesma tecnologia , convertemos motores veiculare de combust?o a\ngasolina, para  funcionar a ?gua, isto mesmo a ?gua, tecnologia   unica no\nmundo.\nEstamos interessados em transferir a referida tecnologia e/ou atrair\ninvestidores e parceiros que juntamente conosco, possam instalar uma\nunidade industrial ultramoderna e produzir em escala comercial, na\nmodalidade seriada e sob encomenda.\nNa imin?ncia de V.sas.se interessarem pelo assunto, colocando-nos ao seu\ninteiro dispor, para em parceria viabilizar este projeto,com serteza este\npoder? ser o projeto que  falta em sua empresa/companhia.\nObs: Material   e outras informa??es t?cnicas em nosso site \nwww.avsenergia.com.br ou www.avsisten.com.br\n \nTeremos imenso prazer em agendar visita em nossa sede, situada em Sumar?-SP.\n \n \nAguardamos sua visita,\n \nSauda??es,\n \nAVS  TECNOLOGIA\n\n\n\n", "id": "lists-005-3389712"}, {"subject": "Egypt Best Seminars in April 200", "content": " \n  \n    \n   \n   \n\n\n\n\n\n   \n  \nOur Valuable Client \nBecause we care to provide you with the best, because we care to develop your people, we are sending you the best of the best of our seminars. Give us the chance to serve you and your firm?s needs. With SETTEC we guarantee you a better future.\n\n                            \n \n   \n  \n   \n  \n\n \n   \n   \n  \n     \n    \n\n       \n   For more information about SETTEC and this seminar Please contact \nMr. Essam Mahmoud\nAgooza Police Tower - Nawal St., Third Floor - Agooza, Giza, Egypt\n202 - 3362040 , 202- 7614343 , 202- 3387527 , 2012 - 3228395 \n\n   \n   \n To unsubscribe from Settec newsletter send a blank message to settec@starnet.com.eg with subject \"Unsubscribe\" Your request will be performed within two business day   www.settecltd.com\n\n\n\n", "id": "lists-005-3399616"}, {"subject": "63 histidin", "content": "Hello, Friends have sent you an invitation for a surprise date. \n\nhttp://nomorebeingalone.com/confirm/?oc=52217601\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThis communication is privileged and contains\nconfi.dential information \nintended on.ly for the person(s) to whom it is\naddressed.  Any \nunauthorized disclosure, copying, other distribution \nof this communi.cation or \ntaking any action on its contents is strictly \nprohibited. If you have \nreceived. this message in error, please. notify us\nimmediately OR remove \nyourself from our list if there is no interest in\nre-gards to our \nservices.\n\nhttp://nomorebeingalone.com/remove/?oc=114567\n\n\ngoldman izvestia ionosphere clausen postmortem helpful dolphin eave weber eligible subsidiary anastigmat birdbath pierre dallas olden convoke habib sturbridge testimonial quartz rhinoceros apostle compendia wormy counteract whoosh ordinate downslope randy hurst \n\n\n\n", "id": "lists-005-3406770"}, {"subject": "plowma", "content": "incomprehensible rune lathe trundle dunkirk \nmullen greta candlelit inanimate paraboloidal cony \nsane ambient clark bah golly billiken amend centaur \n\n\n\n", "id": "lists-005-3413694"}, {"subject": "????????????-??????????-5000????(??????,??????)??????&#64; wx xaeqqso", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-3419789"}, {"subject": "No-Prescription, Who|esa|e Pr|ce! fXo", "content": "No Pres-cription Needed. JUst click and purchased at the wholesale price! Gua.ranteed\ncheaper than other retailer or your money back! Choices include Cia.lis, via.gr.a, Prozac, \nLipitor and many more to choose!\n\nClick this link to get this exciting offers while stock last!\n\nhttp://www.medicalfhtjk.com/index.php?refid=shan03\n\n\n\n\n\n\n\n\n\n\nTo be remove, click below:\nhttp://www.medicalfhtjk.com/optout.php?refid=shan03\n\n\n\n", "id": "lists-005-3426557"}, {"subject": "(no subject", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-3433491"}, {"subject": "???????? ?????? ??????.??????.????????.1?????????? ???? ????!! qyuqzfalxsxxczk  r ", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-3442222"}, {"subject": "", "content": "text/html attachment: stored\n\n\n\n\n\n\n", "id": "lists-005-3449274"}, {"subject": "sugper viagrga bjhkd  qtbpe", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-3455336"}, {"subject": "???????? ????!!??????.??????.????????.1?????????? ???? ????!!  jkpvgqtlpjd", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-3463240"}, {"subject": "CONGRATULATIONS YOU HAVE WO", "content": "OASIS LOTTERY INTERNATIONAL,THE NEDERLANDS.\nFROM:THE DESK OF THE PRESIDENT\nOASIS LOTTERY INTERNATIONAL/PRIZE AWARD DEPT\nRef. Number:HFR/OO997/CRZ\nBatch Number:O7/55312/997JH\nATTENTION.\nSir/ Ma/ Miss,\nWe are pleased to inform you of the result of the\nwinners of the OASIS LOTTERY INTERNATIONAL\nprograms held on  the 24TH MARCH, 2004.Your e-mail\naddress attached to ticket number 110---9084822--336\nwith serial number 2243--22 drew lucky numbers 4-7\n2-11-69-44-33 which consequently won in the \ncategory A.You have therefore been approved for a lump\nsum pay of US $1.200,000.00(one million two hundred \nthousand United States Dollars)in cash credited to\nfile Ref. Number:HFR/88217/CRZ.This is from a total\ncash prize of US $16.800,000.00usd\ninternational winners in this category.\nCONGRATULATIONS!!!\nDue to mix up of some numbers and names we ask that\nyou keep your winning information confidential until\nyour claims has been processed and your money remitted\nto you.This is part of our security protocol to avoid\ndouble claiming and unwarranted abuse of this program\nby some participants.\nAll participants were selected through a computer\nballot system drawn from over 40,000 company and\n30,000,000 individual email addresses and names from\nall over the world.This promotional program takes\nplace every three years in different developed\ncountries,the lottery was promoted and sponsored by the president of the world largest softwares\nto increase the awareness of microsoft software\npackages.We hope with part of your winning you will\ntake part in our next  USD 40 million\ninternational lottery.\nTo file for your claim please contact our financial\nagent MORGAN PHILLIPS, Foreign Operations Manager of the\nMOORE & MOORE Security Services, Holland{netherlands} with a\nphotocopy of your ID for age verification, \ntelephone, and fax numbers.8.00 am to 18.00 gmt monday to friday\nTEL:+31-624-153-403\nFAX:+31-645-234-412 \nEmail:mooremooresecu@netscape.net\nRemember all winning must be claimed not later than \n16 APRIL, 2004. After this date all unclaimed\nfunds will be included in the next stake. Please note\nin order to avoid unnecessary delays and complications\nplease remember to quote your reference number and\nbatch numbers in all correspondence. Furthermore,\nshould there be any change of address do inform our\nagent as soon as possible.\nCongratulations once more, \nand thank you for being part of our promotional\nprogram.\nNote:Anybody under the age of 18 is automatically\ndisqualified.\nSincerely yours,\nJohan Van erst.\n \n \n \n   \n\n\n\n", "id": "lists-005-3470176"}, {"subject": "02 o", "content": "The Wonder Pill - CIAL.IS (Super Viagr.a) Seen ON TV!\n\n*36 hours to choose when the time(s) are right for you\n*Longer lasting erection.s\n*More pleasure for both indivduals\n*Free shipping on orders, best price guaranteed\n\nAlso: Vali.um, Xan.ax, etc. Full in-house line.\n\nNO health questions asked. 100% private, discrete, & easy to order.\n\n\n\nhttp://hotmail.com.gfrt.com/m004/index.php?id=m004\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThis communica.tion is privileged and contains con.fidential information \nint.ended only for the person(s) to whom it is add.ressed.  Any \nun.authorized disclosure, copying, other distrib.ution  of this communication or \ntaking any action on its con.tents is strictly  prohibited. If you have \nrecei.ved this message in error, please notify us immediately OR remove \nyour.self from our list if there is no int.erest in regards to our \nproducts.\n \nhttp://hotmail.com.gfrt.com/byebye.html\n\n\ngamesman thrill bucket codicil artifact malicious delft couturier transmittal mucosa dementia blight hawk adsorb pony photolytic triangular wast pokerface extralegal bratwurst \nz\nO\n\n\n\n", "id": "lists-005-3479382"}, {"subject": "Re:re: valium/xanax too cheap to pass u", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-3486420"}, {"subject": "(????) C-a-r-d????, C-a-r-d ?? ?? ?? ??????, ???? 24???? ????????! &#64; k dhx", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-3492870"}, {"subject": "The spotlight shines on the dynamics of this earnings play oue eyjxogq  pds", "content": "**SRGE****SRGE****SRGE****SRGE****SRGE****SRGE**\n\nMarket Watch News Flash\n\nExplosive short term trading profits in a new technology\nissue (Ticker: SRGE) are being predicted as many \nsignificant news releases indicate strong contractual \nrevenues with major Telecom firms. \n\nSRGE has been successfully working with Telecommunications \ngiants (with five million subscriber lines) over the last 4 \nyears, but is now projecting \"a banner expansion year with \ngeometric growth in revenues\" due largely to sales demands \nfor their innovative patented products and expansion into \nInternational telecom markets.\n\nSurge Technologies, Inc. (SRGE) is a cutting-edge leader \nthat designs, develops, manufactures, and markets superior \npatented outside plant electrical surge protection \nequipment for the telecommunications industry.\nThe US sales projections for this market are $4 Billion \nannually, with this figure growing rapidly as the \nexpansion of new HDSL and ADSL technologies permeate \nthe industry.\n\nSRGE provides the Telecom industry with the highest \nquality \"protection element\" for complex digital switches. \nProtecting these Telecom switching devices is crucial to \ninclusive components that are sensitive to interruptions \nin voltage which can cause extensive network damage, thus \nnegating costly and time-consuming repair and down-time.\nMajor Telecoms require this protection throughout their \nnetwork in order to prevent the hazards of harming \npersonnel, damaging expensive equipment, and massive \nsystem failures.\n\nOpening Price: 1.15\n10 Day Target: 2.30\n1 Month Target: 4.50\nOutstanding Shares: 16.5 million\nEst. Float: 2.2 million\n\nHow many times have you seen issues explode but you \ncouldn't get your hands on them or didn't have the right \ninformation in time? We are alerting you now to a special \nCompany with a unique technology that is on the forefront \nof a breakout! We are excited about SRGE's technology \nand expansion as they prepare to ink deal after deal with \nMajor US Telecoms in conjunction with dramatic increases \nin revenue for 2004 and 2005. SRGE has made phenomenal \nadvancements but may be one of the few stocks left in \nthis industry group that is unknown and undervalued, \ntherefore a 300%-400% jump may wind up being conservative. \n\n--------------------------------------------------------\n\nInformation within this email contains \"forward looking \nstatements\" within the meaning of Section 27A of the \nSecurities Act of 1933 and Section 21B and the Securities \nExchange Act of 1934. Any statements that express or \ninvolve discussions with respect to predictions, goals, \nexpectations, beliefs, plans, projections, objectives, \nassumptions or future events or performance are not \nstatements of historical fact and may be \"forward \nlooking statements\".\n\nForward looking statements are based upon expectations, \nestimates and projections, at the time the statements \nare made that involve a number of risks and uncertainties \nwhich could cause actual results or events to differ \nmaterially from those presently anticipated. Forward \nlooking statements in this action may be identified \nthrough the use of words such as: \"projects\", \"foresee\", \n\"expects\", \"estimates\", \"believes\", \"understands\", \"will\", \n\"anticipates\", or that by statements indicating certain \nactions \"may\", \"could\", or \"might\" occur. All information \nprovided within this email pertaining to investing, stocks, \nsecurities must be understood as information provided and \nnot investment advice. Emerging Equity Alert advises all \nreaders and subscribers to seek advice from a registered \nprofessional securities representative before deciding to \ntrade in stocks featured within this email. None of the \nmaterial within this report shall be construed as any kind \nof investment advice. \n\nIn compliance with Section 17(b), we disclose the holdings \nof independently purchased shares of srge prior to the \npublication of this report. Be aware of an inherent conflict \nof interest resulting from such holdings due to our intent \nto profit from the liquidation of these shares. Shares may \nbe sold at any time, even after positive statements have \nbeen made regarding the above company.\nqxo l em\n \n v \n\n\n\n", "id": "lists-005-3517599"}, {"subject": "?????? ???? ????????..??????????.", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-3534442"}, {"subject": "[ietf-charsets] &lt;none&gt", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-3541088"}, {"subject": "in", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-3547362"}, {"subject": "????4500????-??????????.???????? ????(??????,??????)&#64; igj pnase", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-3555895"}, {"subject": "32 re: fu", "content": "Today is a new day for your residence. With levels \nat their headline-making historic lows, our programs \nare better now than ever before. Even if you've recently \nclosed on a property, now is the time to check your \nnumbers.\n\nOur advisors are here to help you decide your options.\nIn fact, did you know that a 30 year fixed program may \nnot always be the best option? \n\nThere are other ways to do it, and we would like to tell \nyou about it.\n\nFind out what all your neighbors are talking about:\n\nToday's low rate: 1.8%\n\nhttp://activesaving.com/?partid=n278\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFuture reference options:\nhttp://activesaving.com/st.htm\n\n\naudition groupoid bernini blank godson chickweed ferromagnetism team nh venial canal mauritania alva decorate dahlia scabrous flautist jacqueline trot erosion gary lennox tropospheric blatant potlatch absentminded erase keaton cheerlead assort ouagadougou churchill erosive snowy exclusionary \n\n\n\n", "id": "lists-005-3562570"}, {"subject": "(????)?????????? ???????? ???????? ?????? ???????? ??!&#64; jsc", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-3569562"}, {"subject": "???????? ?????? ??????.??????.????????.1?????????? ???? ????!!  neupaltaipiy", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-3585739"}, {"subject": "CLAIM YOUR LUCKY WINNING..", "content": "EL GORDO SWEEPSTAKE LOTTERY COMPANY S.L\nPLAZA COLONE-28080\nMADRID-SPAIN.\n  \n\nFROM: THE DESK OF THE MANAGING DIRECTOR INTERNATIONAL\nPROMOTIONS/PRICE AWARD DEPARTMENT.\nREF N?: EGSL/25003127/CSL/02\nBATCH N?: 0007571982\n\nDEAR FRIEND, CLAIM YOUR LUCKY WINNING...  \n\n                                                      \nRE: AWARD NOTIFICATION/ FINAL NOTICE.\n\nWe are pleased to inform you of the release of the results EL GORDO SPANISH SWEEPSTAKE LOTTERY/ INTERNATIONAL PROGRAM, Held  12 January 2004. Your \nname attached to a ticket number 025-1146992-750 with serial number 2113-05 drew the lucky numbers 4-18-24-30-31-35 which consequently won the lottery in the 3rd category. You are therefore been approved for a lump sum payout of  800,000.00 (Eight hundred thousand Euros ) in cash credited to the file reference number: EGSL/25003127/CSL/02. This is from the  total cash price of  5,368,770.00 (Five million three hundred and sixty-eight thousand, seven hundred and seventy Euros only) shared among the seventeen international winners in this category.\n\nCONGRATULATIONS!!!\n\nYour fund is now deposited with our accredited offshore bank  insured to your name awaiting  claim. We advice that you keep this award from public notice until your claiming or unwarranted taking advantage of this program by participants. All participants were selected through a computer ballot system drawn from 25,000 names from Asia, Africa, Australia, Canada, U.S.A. ,New Zealand, Europe and North America as part of our international promotions program which we conduct once every year. We hope that with part of your prize, you will part-take in our end of year high stake $1,300,000,000.00 international lottery.\n\nTo begin your claim please contact your claim agent, Mr. John Santi, (Director of International operations, Rock Trust and Security Company)Tel: 0034 679881387,OR via Email: rock_trust@terra.es. For processing and remittance of your prize fund into your designated bank account.\n Note: All prize funds must be claimed before the 30TH of March 2004 after this date all funds will be returned to the MINISTERIO DE ECONOMIA Y HACIENDA as unclaimed. In order to avoid unnecessary delays and complications, please endeavour to quote your reference and batch numbers in every correspondence with us to your claim agent. Furthermore, should there be any change in your address do inform your claim agent as soon as possible. Congratulation once again from all members of our staff and thank you for being part of our promotion program. \n\nN.B. Any breach of confidentiality on the part of the winners will result to disqualification. Please do notreply to this email address. Contact your claim agent.\n\nBest regards\nThe Management.  \n\n\n\n", "id": "lists-005-3592703"}, {"subject": "CLAIM YOUR LUCKY WINNING..", "content": "EL GORDO SWEEPSTAKE LOTTERY COMPANY S.L\nPLAZA COLONE-28080\nMADRID-SPAIN.\n  \n\nFROM: THE DESK OF THE MANAGING DIRECTOR INTERNATIONAL\nPROMOTIONS/PRICE AWARD DEPARTMENT.\nREF N?: EGSL/25003127/CSL/02\nBATCH N?: 0007571982\n\nDEAR FRIEND, CLAIM YOUR LUCKY WINNING...  \n\n                                                      \nRE: AWARD NOTIFICATION/ FINAL NOTICE.\n\nWe are pleased to inform you of the release of the results EL GORDO SPANISH SWEEPSTAKE LOTTERY/ INTERNATIONAL PROGRAM, Held  12 January 2004. Your \nname attached to a ticket number 025-1146992-750 with serial number 2113-05 drew the lucky numbers 4-18-24-30-31-35 which consequently won the lottery in the 3rd category. You are therefore been approved for a lump sum payout of  800,000.00 (Eight hundred thousand Euros ) in cash credited to the file reference number: EGSL/25003127/CSL/02. This is from the  total cash price of  5,368,770.00 (Five million three hundred and sixty-eight thousand, seven hundred and seventy Euros only) shared among the seventeen international winners in this category.\n\nCONGRATULATIONS!!!\n\nYour fund is now deposited with our accredited offshore bank  insured to your name awaiting  claim. We advice that you keep this award from public notice until your claiming or unwarranted taking advantage of this program by participants. All participants were selected through a computer ballot system drawn from 25,000 names from Asia, Africa, Australia, Canada, U.S.A. ,New Zealand, Europe and North America as part of our international promotions program which we conduct once every year. We hope that with part of your prize, you will part-take in our end of year high stake $1,300,000,000.00 international lottery.\n\nTo begin your claim please contact your claim agent, Mr. John Santi, (Director of International operations, Rock Trust and Security Company)Tel: 0034 679881387,OR via Email: rock_trust@terra.es. For processing and remittance of your prize fund into your designated bank account.\n Note: All prize funds must be claimed before the 30TH of March 2004 after this date all funds will be returned to the MINISTERIO DE ECONOMIA Y HACIENDA as unclaimed. In order to avoid unnecessary delays and complications, please endeavour to quote your reference and batch numbers in every correspondence with us to your claim agent. Furthermore, should there be any change in your address do inform your claim agent as soon as possible. Congratulation once again from all members of our staff and thank you for being part of our promotion program. \n\nN.B. Any breach of confidentiality on the part of the winners will result to disqualification. Please do notreply to this email address. Contact your claim agent.\n\nBest regards\nThe Management.  \n\n\n\n", "id": "lists-005-3602937"}, {"subject": "??????????", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-3613027"}, {"subject": "STRICTLY CONFIDENTIA", "content": "From: Mrs. Labaram E. Van Glendoven.\n\nGlendoven Farms, \nChipinge, Zimbabwe. \n\n\nDear Sir, \n\n\nI am Mrs. Labaram E. Van Glendoven, a widow to late\nClement Van Glendoven, a white Zimbabwean Farmer and\npolitical opposition leader, before his suden death,\nthe owner of Diary farms limited in Zimbabwe. He owned\nthree tobacco farms in Chipinge, also a majority owner\nof Glendoven. Farm also situated in Chipinge, in\nZimbabwe. You can see more details about my situation\nand BBC interviews on the websites below: \n\n \n\nhttp://www.1freespace.com/beetee/nov19_2001.html \nhttp://news.bbc.co.uk/1/hi/world/africa/918781.stm \nhttp://news.bbc.co.uk/1/hi/world/africa/715001.stm \nhttp://news.bbc.co.uk/1/hi/world/africa/1063785.stm\nhttp://www.gta.gov.zw/land%20issues/LAND.htm \n\n\nI am contacting you as the need to for me to have a\nforeign partner in \nyour country has become necessary due to our plans to\nrelocate to that country so that I can start my life\nall over again as the present political instability in\nZimbabwe does not encourage financial investment \nas the environment and is no longer conducive for me\nand my three children. Because of the political\ninstabilities and wanton distruction of lives and\nproperties, I was assisted by a good samaritan to\nsafety in Johannesburg, South Africa. This was\nreported widely by most international media. \n\n\nThis problem started when the Zimbabwean government\nunder the leadership \nof President Robert Mugabe announced a decree on May\n31st 2000 to seize more than 849 white and political\nopposition owned farms. During these periods, as\nreported by international media, BBC and the CNN, more\nthan 6 white farmers were killed including my late\nhusband. The government did not stop at this, as just\nrecently the government have asked all white-farmers\nto give up their farms to black farmers and\npoliticians who are in alliance with the ruling party\nor risk going to prison and possibly killed. So far,\nmore than 1,400 white owned farms have been invaded\nand confiscated, as well as claiming the properties of\nthe farmers. Also, about 133 white farmers were\narrested for defying the orders to leave their farms\nunder the controversial land reform programme of the\ngovernment. Having married and lived with my late\nhusband in this country Zimbabwe for more than 32\nyears, I have no other country to go to. Therefore, I\ndecided to contact you, for your assistance, so that I\ncan divert my interest in Zimbabwe to a more stable\ncountry as yours. Before my husband suden death, he\nwas able to planned well ahead of time to secure some\nof our properties which were meant for a new farm in\nBoswana and made a reason money deposit to a finance\ncompany. I will not disclose the name of the finance\ncompany and the amount that was deposited for security\nreasons. \n\n \n\nHowever, I will make it known to you as soon as I\nreceive a response from you through my lawyer who has\nbeen authorized to act on my behalf. The finance\ncompany is not aware of the actual contents of the\nconsignment. All they know is that the two box\nconsignment contain gem stones as reflected in the\ndeposit certificate. Also, I must re-iterate the\nimportance of having a citizen of your country to\nfront for me, since I intend to invest and settle in\nyour country. I do not know much about your country's\nland-ownership laws, I thought it wise to seek the\nhelp of a citizen to act as proxy for me and my\nchildren as their future is right now very bleak. I\nwill upon receiving your consent make all arrangement\nto move the funds to you pending my arrival to meet\nwith you in your country so that we can both make\nfurther arrangements with regards to the investment.\nEvery modality will be worked out by my lawyer to\nensure that the money is conveniently moved to your\nregion to enable you receive it in person without any\nsetbacks or inconveniencies. He will arrange a smooth\nmeeting between you and the finance company for the\ndelivery to you.\n\n \n\nFor your assistance to me, you will be entittled to a\ncommission of 30% of the total sum that you will be\nreceiving on my behalf for the above purpose. If you\nare interested and willing to assist me, you should\nplease forward to my lawyer via his private email\naddress as stated below: \n\n \n\nMR. JOSEPH A. McCATHY.\n\nMcCATHY AND COMPANY.\n\n92, VICTORIA STREET, JOHANNESBURG, SOUTH AFRICA.\n\nE-MAIL:  joe_mccathy@tiscali.co.uk\n\n\nI am waiting urgently for your response, while also\nrequesting that you treat this matter in strict\nprivacy. \n\n \n\nPresently, I am in great danger under security watch\nand will appreciate you correspond with me via my\nlawyer's confidential email address:\n<joe_mccathy@tiscali.co.uk> with the following\ndetails: \n\n \n\n1. YOUR FULL NAMES AND CONTACT ADDRESS. \n2. YOUR TELEPHONE AND FAX NUMBER .\n3. YOUR DATE OF BIRTH.\n\n\nCheers and God bless. \n\n \n\nMRS LABARAM A. GLENDOVEN. \n\n\n(GLENDOVEN FARMS, CHIPINGE, ZIMBABWE)\n\n\n\n", "id": "lists-005-3619281"}, {"subject": "?????? ?????? ???????? 36???????????? ?????? r pfzl m  qyu", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-3631305"}, {"subject": "???????? ?????? ??????.??????.????????.1?????????? ???? ????!! mlqxlg pm", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-3638082"}, {"subject": "(????)??????????????????????????1??! &quot;??.??.??.??.??&quot; &#64; dcixy pfdwznhn", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-3645261"}, {"subject": "8  re: somethin", "content": "The Wonder Pill - CIAL.IS (Super Viagr.a) Seen ON TV!\n\n*36 hours to choose when the time(s) are right for you\n*Longer lasting erection.s\n*More pleasure for both indivduals\n*Free shipping on orders, best price guaranteed\n\nAlso: Vali.um, Xan.ax, etc. Full in-house line.\n\nNO health questions asked. 100% private, discrete, & easy to order.\n\n\n\nhttp://yahoo.com.nemdsr5.com/m004/index.php?id=m004 \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThis communica.tion is privileged and contains con.fidential information \nint.ended only for the person(s) to whom it is add.ressed.  Any \nun.authorized disclosure, copying, other distrib.ution  of this communication or \ntaking any action on its con.tents is strictly  prohibited. If you have \nrecei.ved this message in error, please notify us immediately OR remove \nyour.self from our list if there is no int.erest in regards to our \nproducts.\n \nhttp://yahoo.com.nemdsr5.com/byebye.html\n\n\nsteam burglar furze conjugacy skin amuse duluth draco bestubble castillo cathy azerbaijan culver devisee dusenbury pristine addend propelling bayonne deport abash classroom \na\n5\n\n\n\n", "id": "lists-005-3652330"}, {"subject": "Re: lets get fucked up tonight on pharm product", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-3659470"}, {"subject": "Re: YOUR WINNING NOTIC", "content": "I have received the same e-mail notice that you have.  Stating that I won over 2 million euros.  What is you input into this message.  Please give me your opinion as to what is happening.  Is this just a scam?\n\n\n\n", "id": "lists-005-3668380"}, {"subject": "RE:HELL", "content": "Hello\n\n First, I must solicit your confidence in this\ntransaction, this is by virtue of its nature. Though I know\nthat a transaction of this magnitude will make any one\napprehensive and worried, but I am assuring you that\nall will be well at the end of the It all. For the purpose of introduction, I am TONY OSHOMO, Head Banking Operations, Pacific International Bank Ltd, \n\n                    \n              THE PROPOSITION:\nA foreigner, late Engineer Johnson Creek, an Oil\nMerchant/Contractor with the Federal Govenment of\nNigeria, until his death three years ago in a ghastly\nauto crash, banked with us here at Pacific\nInternational Bank PLC., Lagos, and had a closing\nbalance of  15.2M ( Fifteen Million Two Hundred\nThousand US only) which the bank\nnow unquestionably expects to be claimed by any of his\navailable foreign next of kin or alternatively be\ndonated to a discredited trust fund for arms and\nammunition at a military war college here in Nigeria.\nEfforts have been made by the Bank to\nget in touch with any of the Creek family or relatives\nbut all have proved to no avail. It is because of the\nperceived possibility of not going to be able to\nlocate any of late Engr. Johnson Creek's next of kin\n(he had no known wife and children) that the\nmanagement under the influence of our Chairman, Board\nof Directors, Retired Major General Kalu Uke Kalu,\nthat an arrangement for the fund to be declared \n\"UNCLAIMABLE\" and then be subsequently donated to the\nTrust Fund for Arms and Ammunition which will further\nenhance the course of war in Africa and the world in\ngeneral.\n\nIn order to avert this negative development, myself\nand some of my trusted colleagues in the bank now seek\nfor your permission to have you stand as late Engr.\nJohnson Creek's next of kin so that the fund, would be subsequently transferred and paid\ninto your account as the beneficiary next of kin.\n\nAll documents and proves to enable you get this fund\nhave been carefully worked out and we are assuring you\na safe transaction. Your share shall be told to you as soon as you are willing to stand\n\nIf this proposal is acceptable to you reach me for a more detailed picture.\n\n For urgent response, Please reply to fsomebody8@caramail.com\nTEL: 234-803-331-5929\nFAX: 234-9-272-2046\nThank you in advance for your anticipated\nco-operation.\n\nRegards,\n\nTony Oshomo\n\n\n\n", "id": "lists-005-3675111"}, {"subject": "3764  h", "content": "OFFSHORE-DISCRETE Pharmacy...\n\n*No-questions ever asked. We trust the judgement of our clients based on their needs. We guarantee complete privacy on all transactions.\n\nPopular drugs of the MONTH: CIaLis. (35-hour time frame to act), Valium.(rleases stress on the spot, allowing more confidence)\n\nWe have a full-lineup, check all of our low prices & products.\n\n\nhttp://frnssormeds.com/p5\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWish no drug.s but want a fuller thicker penis, all natural & guaranteed? Go here:\n\nhttp://frnssormeds.com/vp9\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNo more of either, I wish to be taken0ff, thank-you.\nhttp://ghnp.com/byebye.html\n\n\nwhisper astronautic kelly onward christen telegraphy ell furious woodcarver patrolled sentinel mcgovern lawmake bong pudding mania catenate brunt vesper referring peaceable errancy event chickadee whim compressive exhibition area rhea snack campanile amphibology indemnity comprehensive diffeomorphic contempt kraut chrysolite creditor needlework \n6\n\n\n\n", "id": "lists-005-3683823"}, {"subject": "PLEASE HELP M", "content": "The Palace of King of Ogoni Kingdom, Ogoni Oil producing community, Rivers State Nigeria. Dear Sir, I am Princess IFEOMA , daughter of HRH King Solomon Abonime, the king of Ogoni Kingdom. I am 25 years old and studying Mass Communication. My father was the king of Ogoni Kingdom the highest oil producing area in Nigeria. He was in charge of reviving royalties from the multi-national oil companies and government on behalf of the oil producing communities in Nigeria. After the hanging of the Ogoni Nine(9) including Ken Saro Wiwa by the late dictator General Sani Abacha, my father suffered stroke and died in NOVEMBER27th LAST year. But before his death, he called me and told me he has One Hundred and Five Million  United States Dollars   (USD105,000,000.00) cash in his possession, specially deposited in a Bank . He advised me not to tell anybody except my mother who is the last wife of the (8) eight wives that he married. My mothe\n r did not bear any male child for him. Which implies that all my father?s properties, companies e.t.c., we have no share in them because my mother has no male child according to African Tradition. My father therefore secretly gave me all the relevant documents of the said money, and told me that I should use this money with my mother and my younger sisters because he knows that tradtionally, if he dies we cannnot get anything, as inheritance. He importantly advised me that I should seek foreign assistannce and that I should not invest this money here in Nigeria because of his other wives and male children who happen to be my elders. I am soliciting for your immediate assistance to get a Bungalow for us, where I will live with my mother and two younger sisters and further advise me where and how I will invest the balance money overseas, possibly on products of your company and other profitable ventures. I believe that by the special grace of Go\n d, you will help us move this money out of the {BANK} to your country where we can invest this money judiciously with you. You are entitled to a reasonable part of this money based on our agreement, and God will bless you as you help us. PLease reply through my e-mail Looking forward to hear from you as soon as possible. \nRegards.\nPrincess Ifeoma.\nAlternative Email princess_ifeoma@excite.com \n \n\n\n\n", "id": "lists-005-3690568"}, {"subject": "DEAR SI", "content": "Greetings,\n\nPlease permit me to contact you through this medium. I am a medical practitioner, Dr. Stephen Eneli. I have a patient I am treating privately because of her status. She is the wife of a prominent politician here in South Africa. She is Mrs. Susan Yengeni and has been ill for a couple of months now. This woman confided in me based on the free medical attention I have been giving to her and revealed to me her life ordeals, which is very touching. Her husband, Mr. Tony Yengeni, was arrested and charged to court for a multibillion dollar arms deal fraud which she said was politically motivated by his enemies as her husband was the chairman of parliament in South Africa and the former chief whip of the ruling political party. \n\nShe also told me that he accented to plead guilty in exchange for his acquittal on corruption charges but was later convicted on trumped-up charges. This led to his bank accounts in South Africa and abroad being frozen. Now, things are really bad for her husband and children. Based on this, she cannot even afford to take care of her medical expenses. This is why I am rendering her free medical attention. Due to the fact that her husband is still being monitored, she was advised by him to source for a credible and trustworthy partner abroad who will help in managing and investing some funds he secretly deposited in a security firm for safe keeping some years ago. The amount is US$117.5million contained in sealed boxes. \n\nHe deposited these boxes with a safe security company in one of the European countries for safekeeping as family treasures and African artifacts to prevent the officials of the company from raising eyebrow. I wish and believe you will be in a position to assist in managing this large sum for a profitable venture and also to help create a safe heaven for her and her children by making a residential arrangement for them in your country. After she had disclosed this information to me, I saw the reason to request that she allows me see the documents relating to this deposit of which she did. I will oblige you with more information as soon as I receive your response via my personal/confidential email: seneli@5fm.za.com for security reasons. \n\nYou can find more about her husband's predicaments at the following websites: \n\nhttp://www.polity.org.za/html/govdocs/pr/2001/pr1003b.html \nhttp://www.gov.za/projects/procurement/yengeni.htm \nhttp://news.bbc.co.uk/1/hi/world/africa/1577682.stm \nhttp://www.hsf.org.za/focus22/focus22ethics.html \nhttp://www.hinduonnet.com/thehindu/2001/10/06/stories/0306000k.htm \nhttp://www.armsdeal-vpo.co.za/articles00/govt_reserves.html \nhttp://www.ifp.org.za/Releases/190303apr.htm \n\nLet me assure you that this transaction is 100% risk free. From my discussion with her, she has agreed to give you a reasonable percentage of the money for your assistance, which will be negotiated and agreed on by both sides. I am obliged to assist this lady knowing that she has a limited knowledge in the business world. I will need from you a mutual understanding and then we shall make plans of how the funds would be secured into an account in your name. \n\nThanks and God bless you for your understanding. Please do not forget to email me your private telephone number so that I can give you a call to discuss this matter if you are interested in this offer. \n\nBest regards. \n\nDr. Stephen Eneli \n\n\n\n", "id": "lists-005-3699112"}, {"subject": "?????? CES ???????? ???? CD ?????? ????????.  cltlmpfkwld llw", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-3709258"}, {"subject": "??????,??????,????,????,????,??????????-???????? ???????? ??     1 lcnsi", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-3718024"}, {"subject": "????????????????????1?? ???? ?????? ?????? ???? ???? ???? ??????????!! ", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-3725036"}, {"subject": "It's time for your DEGREE!", "content": "GET YOUR UNIVERSITY DEGREE\n\nIt's time you take what belongs to you\n\nDidn't have time for it in the past?\n\nDon't let your University Diploma slip away \n\nReceive the payment and respect that you deserve!!\n\nGet a Bachelors, Masters, MBA, and Doctorate (PhD) diploma! \n\nNo one is turned down!  \n\nCall Today 1-917-591-5128 (7 days a week)  \n\nConfidentiality assured!  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nout \nhttp://www.mega-health.net/off.html\n\n\n\n\n\n\n\n\n\nchestnut cretinous bracket cyprus misshapen oncology intuition prohibit bilk ambassador guanidine necromancy village allow hater boggy monotonous series  \nallege sawbelly ign cx  \ndrakelaban insufferable rooky desecrate skullcap medic radiogram testbed inexperience residential voltmeter trainee arousal incompletion suspend imperil malcontent avon pee daunt foxhole chao shortage barometer continuous bernini quanta hairpin girth caesar  \n\n\n\n", "id": "lists-005-3732280"}, {"subject": "ASSIST M", "content": "JONES IBE\nBranch Manager\nEcoBank International.\nIdumota Branch\nLagos Nigeria.\n\nI am JONES IBE the Branch Manager of EcoBank\nInternational,Idumota Branch,Lagos Nigeria. I have an\nurgent and very confidential business proposition for\nyou. On December, 1998, a Taiwanese Oil\nconsultant/contractor with the Nigerian National\nPetroleum Corporation, Mr. Boris Chen made a numbered\ntime (Fixed) Deposit for Twenty-Four calendar months,\nvalued at US$16,000,000.00 (Sixteen Million\nDollars) in my branch.\nUpon maturity, I sent a routine notification to his\nforwarding address but got no reply. After some\nmonths, we sent a reminder and finally we\ndiscovered from his contract employers, the Nigerian\nNational Petroleum Corporation that Mr. Boris Chen\ndied from an airplane crash ( Singapore Airlines).\nOn further investigation, I found out that he died\nwithout making a WILL,and all attempts to trace his\nnext of kin was fruitless. I therefore\nmade further investigation and discovered that Mr.\nBoris Chen did not declare any kin or relations in all\nhis official documents, including his Bank Deposit\npaperwork in my Bank. This sum of US$16,000,000.00 is\nstill sitting in my Bank and the interest is being\nrolled over with the principal sum at the end of each\nyear. No one has ever come forward to claim it.\nAccording to Nigerian Law, at the expiration of 5\n(five) years, the money will revert to the ownership\nof the Nigerian Government if nobody applies to claim\nthe fund. Consequently, my proposal is that I will\nlike you to stand in as the next of kin to Mr.Boris\nChen so that the fruits of this old man's labour will\nnot get into the hands of some corrupt government\nofficials. This is simple, I will like you to provide\nimmediately your full names and address so that the\nAttorney will prepare the necessary documents\nand affidavits which will put you in place as the next\nof kin. We shall employ the services of two Attorney\nfor drafting and notarization of the WILL and to\nobtain the necessary documents and letter of\nprobate/administration in your favour for the\ntransfer. A bank account in any part of the world\nwhich you will provide will then facilitate the\ntransfer of this money to you as the beneficiary/next\nof kin. The money will be paid into your account for\nus to share in the ratio of 70% for me and 25% for you\nand 5% be used in settling taxation and all local and\nforeign expenses.There is no risk at all as all\nthe paperwork for this transaction will be done by the\nAttorney and my position as the Branch Manager\nguarantees the successful execution of this\ntransaction.\nIf you are interested, please reply immediately via\nthe private email address below. Upon your response, I\nshall then provide you with more details and relevant\ndocuments that will help you understand the\ntransaction.\nPlease observe utmost confidentiality, and be rest\nassured that this transaction would be most profitable\nfor both of us because I shall require your assistance\nto invest my share in your country. I can be reached\nthrough this email address.\nI do urgently await your response or reach me through\nthis email address: jones_ibe2000@yahoo.com\n\nBest Regards.\nMr JONES\n\n\n\n>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\n\nFREE Email? You bet. http://www.aeneasmail.com\n\nNationwide Internet, Local and Long Distance Telephone up to 30% less!!\n\nAeneas Internet and Telephone - http://www.aeneas.com\n\n>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\n\n\n\n", "id": "lists-005-3740309"}, {"subject": "?z?H???F~!", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-3750538"}, {"subject": "Good news [Call me", "content": "Dear Sir,\n\nMy name is DR KENNETH HELEN,I am the operational manager inaccount \nmanagement section incharge of credit and foreign bills of one of the prime \nbanks here in South Africa. I am writing in respect of a foreign customer of \nmy bank who perished with his whole families on 25TH JULY,2000 CONCORDE \nPLANE CRASH [ Flight AF4590 ] with the whole passengers aboard.\n\nThere is an account opened in this bank in 1998 by\nthis great late INDUSTRIALIST who died without a\nwritten or oral WILL attatched to the account. Since\nhis death , I personally has watched with keen\ninterest to see the next of kin but all has proved\nabortive as no one has come to claim his funds and no\nother person knows about this account or anything\nconcerning it,the account has no other beneficiary and\nuntil his death he was the manager of his company.\n\nThe total amount involved is 106,000,000.00 USD.[ One\nhundred and six million United States Dollar ]. We\nwish to start the first transfer with\n$6,000,000.00[Six million] and open successful\ntransaction without any disappointment from your side,\nwe shall re-apply for the transfer of the remaining\nbalance to your account.\n\nI have secretly discussed this matter with the general\nmanager of the bank who I must involve in order to\nhave a smooth and a successful transfer of the fund to\nany foreign bank account which you are going to\nnominate. On this note, I decided to seek for a\nreliable foreigner who will act as the foreign\nbeneficiary of the fund from the deceased by providing\nhis/her bank account where the fund will be\ntransferred for immediate investment on any viable\nproject as no one has come up to be the next of kin.\n\nThe banking ethics here does not allow such money to\nstay more than six years without claim hence the money\nwill be recalled to the government treasury as\nunclaimed after this long period of domancy.\n\nIn view of this I got your contact through my personal\nsearch to see if you can assist by providing your safe\nbank account for the transfer or find a reliable\nperson who will be capable of receiving such amount in\nhis or her personal account.At the conclussion of the\ntransfer 65% of the fund will be for me, I will give\nyou 20% of the total transfer sum, 10% for charity\nboth in Africa and in your country while the remaining\n5% will be set aside to settle expenses both parties\nmight incure during the transfer process.\n\nUpon the receipt of your reply, I will send to you a\ndetailed information about the transaction.I will not\nfail to bring to your notice that this business is\n100% risk and trouble free and that you should not\nentertain any fear as all modalities for fund transfer\ncan be finalized within 7 to 9 banking days, after you\napply to the bank as the beneficiary of the fund from\nthe deceased.\n\nWhen you receive this letter. Kindly send me an e-mail\nor you can call me . You should also include\nyour private fax and phone numbers for easy and safe\ncommunication.\n\nPHONE:27-732-906-466\nPRIVATE EMAIL:[maxwiller@rediffmail.com]\n\nRespectfully yours,\nDR KENNETH HELEN\n\n\n\nDear Sir,\n\nMy name is DR KENNETH HELEN,I am the operational manager inaccount \nmanagement section incharge of credit and foreign bills of one of the prime \nbanks here in South Africa. I am writing in respect of a foreign customer of \nmy bank who perished with his whole families on 25TH JULY,2000 CONCORDE \nPLANE CRASH [ Flight AF4590 ] with the whole passengers aboard.\n\nThere is an account opened in this bank in 1998 by\nthis great late INDUSTRIALIST who died without a\nwritten or oral WILL attatched to the account. Since\nhis death , I personally has watched with keen\ninterest to see the next of kin but all has proved\nabortive as no one has come to claim his funds and no\nother person knows about this account or anything\nconcerning it,the account has no other beneficiary and\nuntil his death he was the manager of his company.\n\nThe total amount involved is 106,000,000.00 USD.[ One\nhundred and six million United States Dollar ]. We\nwish to start the first transfer with\n$6,000,000.00[Six million] and open successful\ntransaction without any disappointment from your side,\nwe shall re-apply for the transfer of the remaining\nbalance to your account.\n\nI have secretly discussed this matter with the general\nmanager of the bank who I must involve in order to\nhave a smooth and a successful transfer of the fund to\nany foreign bank account which you are going to\nnominate. On this note, I decided to seek for a\nreliable foreigner who will act as the foreign\nbeneficiary of the fund from the deceased by providing\nhis/her bank account where the fund will be\ntransferred for immediate investment on any viable\nproject as no one has come up to be the next of kin.\n\nThe banking ethics here does not allow such money to\nstay more than six years without claim hence the money\nwill be recalled to the government treasury as\nunclaimed after this long period of domancy.\n\nIn view of this I got your contact through my personal\nsearch to see if you can assist by providing your safe\nbank account for the transfer or find a reliable\nperson who will be capable of receiving such amount in\nhis or her personal account.At the conclussion of the\ntransfer 65% of the fund will be for me, I will give\nyou 20% of the total transfer sum, 10% for charity\nboth in Africa and in your country while the remaining\n5% will be set aside to settle expenses both parties\nmight incure during the transfer process.\n\nUpon the receipt of your reply, I will send to you a\ndetailed information about the transaction.I will not\nfail to bring to your notice that this business is\n100% risk and trouble free and that you should not\nentertain any fear as all modalities for fund transfer\ncan be finalized within 7 to 9 banking days, after you\napply to the bank as the beneficiary of the fund from\nthe deceased.\n\nWhen you receive this letter. Kindly send me an e-mail\nor you can call me . You should also include\nyour private fax and phone numbers for easy and safe\ncommunication.\n\nPHONE:27-732-906-466\nPRIVATE EMAIL:[maxwiller@rediffmail.com]\n\nRespectfully yours,\nDR KENNETH HELEN\n\n\n\nDear Sir,\n\nMy name is DR KENNETH HELEN,I am the operational manager inaccount \nmanagement section incharge of credit and foreign bills of one of the prime \nbanks here in South Africa. I am writing in respect of a foreign customer of \nmy bank who perished with his whole families on 25TH JULY,2000 CONCORDE \nPLANE CRASH [ Flight AF4590 ] with the whole passengers aboard.\n\nThere is an account opened in this bank in 1998 by\nthis great late INDUSTRIALIST who died without a\nwritten or oral WILL attatched to the account. Since\nhis death , I personally has watched with keen\ninterest to see the next of kin but all has proved\nabortive as no one has come to claim his funds and no\nother person knows about this account or anything\nconcerning it,the account has no other beneficiary and\nuntil his death he was the manager of his company.\n\nThe total amount involved is 106,000,000.00 USD.[ One\nhundred and six million United States Dollar ]. We\nwish to start the first transfer with\n$6,000,000.00[Six million] and open successful\ntransaction without any disappointment from your side,\nwe shall re-apply for the transfer of the remaining\nbalance to your account.\n\nI have secretly discussed this matter with the general\nmanager of the bank who I must involve in order to\nhave a smooth and a successful transfer of the fund to\nany foreign bank account which you are going to\nnominate. On this note, I decided to seek for a\nreliable foreigner who will act as the foreign\nbeneficiary of the fund from the deceased by providing\nhis/her bank account where the fund will be\ntransferred for immediate investment on any viable\nproject as no one has come up to be the next of kin.\n\nThe banking ethics here does not allow such money to\nstay more than six years without claim hence the money\nwill be recalled to the government treasury as\nunclaimed after this long period of domancy.\n\nIn view of this I got your contact through my personal\nsearch to see if you can assist by providing your safe\nbank account for the transfer or find a reliable\nperson who will be capable of receiving such amount in\nhis or her personal account.At the conclussion of the\ntransfer 65% of the fund will be for me, I will give\nyou 20% of the total transfer sum, 10% for charity\nboth in Africa and in your country while the remaining\n5% will be set aside to settle expenses both parties\nmight incure during the transfer process.\n\nUpon the receipt of your reply, I will send to you a\ndetailed information about the transaction.I will not\nfail to bring to your notice that this business is\n100% risk and trouble free and that you should not\nentertain any fear as all modalities for fund transfer\ncan be finalized within 7 to 9 banking days, after you\napply to the bank as the beneficiary of the fund from\nthe deceased.\n\nWhen you receive this letter. Kindly send me an e-mail\nor you can call me . You should also include\nyour private fax and phone numbers for easy and safe\ncommunication.\n\nPHONE:27-732-906-466\nPRIVATE EMAIL:[maxwiller@rediffmail.com]\n\nRespectfully yours,\nDR KENNETH HELEN\n\n\n\nDear Sir,\n\nMy name is DR KENNETH HELEN,I am the operational manager inaccount \nmanagement section incharge of credit and foreign bills of one of the prime \nbanks here in South Africa. I am writing in respect of a foreign customer of \nmy bank who perished with his whole families on 25TH JULY,2000 CONCORDE \nPLANE CRASH [ Flight AF4590 ] with the whole passengers aboard.\n\nThere is an account opened in this bank in 1998 by\nthis great late INDUSTRIALIST who died without a\nwritten or oral WILL attatched to the account. Since\nhis death , I personally has watched with keen\ninterest to see the next of kin but all has proved\nabortive as no one has come to claim his funds and no\nother person knows about this account or anything\nconcerning it,the account has no other beneficiary and\nuntil his death he was the manager of his company.\n\nThe total amount involved is 106,000,000.00 USD.[ One\nhundred and six million United States Dollar ]. We\nwish to start the first transfer with\n$6,000,000.00[Six million] and open successful\ntransaction without any disappointment from your side,\nwe shall re-apply for the transfer of the remaining\nbalance to your account.\n\nI have secretly discussed this matter with the general\nmanager of the bank who I must involve in order to\nhave a smooth and a successful transfer of the fund to\nany foreign bank account which you are going to\nnominate. On this note, I decided to seek for a\nreliable foreigner who will act as the foreign\nbeneficiary of the fund from the deceased by providing\nhis/her bank account where the fund will be\ntransferred for immediate investment on any viable\nproject as no one has come up to be the next of kin.\n\nThe banking ethics here does not allow such money to\nstay more than six years without claim hence the money\nwill be recalled to the government treasury as\nunclaimed after this long period of domancy.\n\nIn view of this I got your contact through my personal\nsearch to see if you can assist by providing your safe\nbank account for the transfer or find a reliable\nperson who will be capable of receiving such amount in\nhis or her personal account.At the conclussion of the\ntransfer 65% of the fund will be for me, I will give\nyou 20% of the total transfer sum, 10% for charity\nboth in Africa and in your country while the remaining\n5% will be set aside to settle expenses both parties\nmight incure during the transfer process.\n\nUpon the receipt of your reply, I will send to you a\ndetailed information about the transaction.I will not\nfail to bring to your notice that this business is\n100% risk and trouble free and that you should not\nentertain any fear as all modalities for fund transfer\ncan be finalized within 7 to 9 banking days, after you\napply to the bank as the beneficiary of the fund from\nthe deceased.\n\nWhen you receive this letter. Kindly send me an e-mail\nor you can call me . You should also include\nyour private fax and phone numbers for easy and safe\ncommunication.\n\nPHONE:27-732-906-466\nPRIVATE EMAIL:[maxwiller@rediffmail.com]\n\nRespectfully yours,\nDR KENNETH HELEN\n\n_________________________________________________________________\nTake MSN wherever you surf - download MSN Toolbar! \nhttp://toolbar.msn.co.za?DI=1054&XAPID=2185\n\n\n\n", "id": "lists-005-3756692"}, {"subject": "RE: RESPOND IMMEDIATELY FOR TIME ESSENC", "content": "Good day,\n\nSOLICITING FOR A BUSINESS VENTURE AND PARTNERSHIP\n\nBefore I proceed, I must be grateful to introduce\nmyself. My name is Mr. Chuckie Taylor a Liberian. I am\nthe first son of President Charles Taylor, the\npresident of liberia . During the rebellion in my\ncountry, I absconded under my father's instructions\nwith Twenty-Eight Million Five Hundred Thousand United\nStates Dollars (US$28.5M) which was part of the money\nmeant for campaigning for President Charls Taylor\nre-election \ninto office.\n\nPresently I have been able to move the funds\ndiplomatically to a Financial Vault Company in Europe\nwhere it is still kept in safe custody.\n\nMY REQUEST\n\nAs a result of my present situation as a refugee who\ncannot have access to own an account or accounts, I am\nlooking for a trustworthy individual/firm by my\nfather's instructions to advice us in making the\nrightful investment as well as to provide account(s)\nwhere the funds will be lodged into. More also, we are\nat the interim interested in buying properties for\nresidence as my family will be residing there in\nthe near future.\n\nCOMMISSION/REMUNERATION\n\nAs regards your commission/remuneration, my family\nhave decided to offer you 15% of the total sum and\nalso set aside 5% for all your expenses (i.e telephone\nbills, travelling expenses, hotel bills and other\nmiscellaneous expenses).\n\n\nI strongly believe that associating with you to embark\non this and other business ventures will derive a huge\nsuccess hereafter and it will be a long lasting\nbusiness association via my email for further\nbriefing.\n\n\nEndeavor to send your full contact details like your\nfull names, address, telephone and fax numbers. As\nsoon as I receive the above information, I will let\nyou have the contact details of the security company\nin Europe  where funds are deposited to enable you\nverify the existance of the security company and the\ndeposited funds before we proceed on this transaction.\n\n\nI await your anticipated co-operation.\n\nYours truly,\n\nMr. Chuckie Taylor.\nAlt email: chuckietaylor_2004@web-mail.com.ar  \n\n\n\nFor better understanding, please view these websites\nbelow:\n\nhttp://www.irinnews.org/report.asp?ReportID=39922&SelectRegion=West_Africa\n\nhttp://www.cnn.com/2003/WORLD/africa/08/11/taylor.warcrimes/index.html\nhttp://www.cnn.com/2003/WORLD/africa/08/11/liberia.1300/index.html\nhttp://news.bbc.co.uk/2/hi/africa/2963086.stm\n\nNote: I deliberately emailed you in this manner by not\nattentioning you for confidentiality.\n\n\n\n", "id": "lists-005-3776025"}, {"subject": "Stock set to jump up on financial data b", "content": "**SRGE****SRGE****SRGE****SRGE****SRGE****SRGE**\n\nMarket Watch News Flash\n\nExplosive short term trading profits in a new technology\nissue (Ticker: SRGE) are being predicted as many \nsignificant news releases indicate strong contractual \nrevenues with major Telecom firms. \n\nSRGE has been successfully working with Telecommunications \ngiants (with five million subscriber lines) over the last 4 \nyears, but is now projecting \"a banner expansion year with \ngeometric growth in revenues\" due largely to sales demands \nfor their innovative patented products and expansion into \nInternational telecom markets.\n\nSurge Technologies, Inc. (SRGE) is a cutting-edge leader \nthat designs, develops, manufactures, and markets superior \npatented outside plant electrical surge protection \nequipment for the telecommunications industry.\nThe US sales projections for this market are $4 Billion \nannually, with this figure growing rapidly as the \nexpansion of new HDSL and ADSL technologies permeate \nthe industry.\n\nSRGE provides the Telecom industry with the highest \nquality \"protection element\" for complex digital switches. \nProtecting these Telecom switching devices is crucial to \ninclusive components that are sensitive to interruptions \nin voltage which can cause extensive network damage, thus \nnegating costly and time-consuming repair and down-time.\nMajor Telecoms require this protection throughout their \nnetwork in order to prevent the hazards of harming \npersonnel, damaging expensive equipment, and massive \nsystem failures.\n\nOpening Price: 1.15\n10 Day Target: 2.30\n1 Month Target: 4.50\nOutstanding Shares: 16.5 million\nEst. Float: 2.2 million\n\nHow many times have you seen issues explode but you \ncouldn't get your hands on them or didn't have the right \ninformation in time? We are alerting you now to a special \nCompany with a unique technology that is on the forefront \nof a breakout! We are excited about SRGE's technology \nand expansion as they prepare to ink deal after deal with \nMajor US Telecoms in conjunction with dramatic increases \nin revenue for 2004 and 2005. SRGE has made phenomenal \nadvancements but may be one of the few stocks left in \nthis industry group that is unknown and undervalued, \ntherefore a 300%-400% jump may wind up being conservative. \n\n--------------------------------------------------------\n\nInformation within this email contains \"forward looking \nstatements\" within the meaning of Section 27A of the \nSecurities Act of 1933 and Section 21B and the Securities \nExchange Act of 1934. Any statements that express or \ninvolve discussions with respect to predictions, goals, \nexpectations, beliefs, plans, projections, objectives, \nassumptions or future events or performance are not \nstatements of historical fact and may be \"forward \nlooking statements\".\n\nForward looking statements are based upon expectations, \nestimates and projections, at the time the statements \nare made that involve a number of risks and uncertainties \nwhich could cause actual results or events to differ \nmaterially from those presently anticipated. Forward \nlooking statements in this action may be identified \nthrough the use of words such as: \"projects\", \"foresee\", \n\"expects\", \"estimates\", \"believes\", \"understands\", \"will\", \n\"anticipates\", or that by statements indicating certain \nactions \"may\", \"could\", or \"might\" occur. All information \nprovided within this email pertaining to investing, stocks, \nsecurities must be understood as information provided and \nnot investment advice. Emerging Equity Alert advises all \nreaders and subscribers to seek advice from a registered \nprofessional securities representative before deciding to \ntrade in stocks featured within this email. None of the \nmaterial within this report shall be construed as any kind \nof investment advice. \n\nIn compliance with Section 17(b), we disclose the holdings \nof independently purchased shares of srge prior to the \npublication of this report. Be aware of an inherent conflict \nof interest resulting from such holdings due to our intent \nto profit from the liquidation of these shares. Shares may \nbe sold at any time, even after positive statements have \nbeen made regarding the above company.\nb ll gt\n\nbeqzfpnvpbai  oraenhfyywxayzmcru x\nkbffjdfhun fv\ndee tkl u\nx  tt y\n\n\n\n", "id": "lists-005-3786005"}, {"subject": "Lotto Claim", "content": "GLOBAL EMAIL LOTTERY INTERNATIONAL PROGRAMME\nEL GORDO DE LA PRIMITIVA\nC/GUZMAN EL BUENO 137 ,28003 MADRID SPAIN\nTELEFAX:0034 912476 77\nREF: CGF/2318786648/04> BATCH: 14/011/IPD\nWINNING NOTIFICATION/FINAL NOTICE\nWe are pleased to inform you of the result of the\nGlobal Lottery International programs held on the 18\nof March 2004. Your e-mail address attached to\nticket number 50941465206-529 with serial number\n5772-54 drew lucky numbers 3-4-17-28-35-44 which\nconsequently won in the 1st category, you have\ntherefore been approved for a lump sum pay out of Euros\n1500.000.00.(One Million and.five hundred thousand euros)CONGRATULATIONS!!!\nDue to mix up of some numbers and names, we ask that\nyou keep your winning information confidential untill\nyour claims has been processed and your money remitted\ninto your account. This is part of our security\nprotocol to avoid double claiming and unwarranted\nabuse of this program by some participants All\nparticipants were selected through a computer\nballot system drawn from over 100,000 company and\n50,000,000 individual email addresses and names from\nall over the world. This promotional program take`s\nplace every three years. We hope with part of your\nwinning you will take part in our end of year 50\nmillion Euros international lottery.\nTo file for your claim,please contact our fiduciary\nagent\nMr CARLOS MULLO,\nEUROCITY SECURITY COMMISSION,\nMADRID SPAIN\nEmail:magamullo@netscape.net\nTel:0034675337986.\nRemember, all winning must be claimed not later than\n31stof March 2004. After this date all unclaimed\nfunds will be included in the next stake Please note\nin order to avoid unnecessary delays and complications\nplease remember to quote your reference number and\nbatch numbers in all correspondence.\nFurthermore,should there be any change of address do\ninform our agent as soon as possible. Congratulations\nonce more! from our members of staff and thank you for\nbeing part of our promotional program. Note: Anybody\nunder the age of 25 is automatically disqualified.\nSincerely yours,\nMAC LOPEX.\n(Lottery Co-ordinator)\n\n\n\n", "id": "lists-005-3803303"}, {"subject": "(????)????????????! ???????????? ??????????!&#64;  ae", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-3811738"}, {"subject": "???????? ?????? ??????.??????.????????.1?????????? ???? ????!!  kaywhysnqyrtsn", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-3835433"}, {"subject": "???????? ?????? ????..?????? -??-??-??-?? ???????? lbntejo dzacwpav d", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-3842627"}, {"subject": "??????????????????,???? 4000??????(3000????????)??????.??????&#64; uusz ifec", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-3849657"}, {"subject": "CONGRATULATION", "content": "FROM: THE LOTTERY COORDINATOR,\nINTERNATIONAL PROMOTIONS/PRIZE AWARD DEPARTMENT\n\n\nDEAR SIR/MADAM,\n\n                 RESULTS FOR THIRD CATEGORY DRAWS\nCongratulations to you as we bring to your notice, the\nresults of the Third Category draws of GOLDEN RAND\nLOTTERY SA. We are happy to inform you that you have\nemerged a winner under the Third Category, which is\npart of our promotional draws. The draws were held on\nthe 6th March 2004 and results are being officially\nannounced today 27th March  2004.  Participants were\nselected through a computer ballot system drawn from\n40,000 names/email addresses of individuals and\ncompanies from Africa, America, Asia, Australia,\nCanada, Europe, Middle East, and New Zealand as part\nof our International Promotions Program.\n\nYou/Your company, attached to ticket number\n1811-5-742, with serial number 89-63 drew the lucky\nnumbers 23, 08, 11, 35, 12, 18 (82), and consequently\nwon in the Third Category.\n\nYou have therefore been awarded a lump sum pay out of\nUS$2,400,000.00 (Two Million Four Hundred Thousand\nUnited States Dollars) in cash, which is the winning\npayout for Third Category winners. This is from the\ntotal prize money of US$9,600,000.00 shared among the\n4 international winners in the Third category.\n\n\nCONGRATULATIONS!\n\n\nYour fund is now deposited with APEX FINANCE AND\nINVESTMENT GROUP  insured in your name. In your best\ninterest and also to avoid mix up of numbers and names\nof any kind, we request that you keep the entire\ndetails of your award strictly from public notice\nuntil the process of transferring your claims has been\ncompleted, and your funds remitted to your account.\nThis is part of our security protocol to avoid double\nclaiming or unscrupulous acts by\nparticipants/nonparticipants of this program.\n\nWe also wish to bring to your notice our mid year\n(2004) high stakes where you stand a chance of winning\nup to US$1.5 Billion, we hope that with a part of your\nprize you will participate.\n\nPlease contact your claims agent immediately, to begin\nyour claims process;\n\nMR. PHILIP KOPANO,\nFOREIGN DEPARTMENT MANAGER,\nAPEX FINANCE AND INVESTMENT GROUP.\nTEL/FAX: +27 826750395\nEMAIL: pkopano10@apexfinanceandinvestmentgroup.net \n\n\nFor due processing and remittance of your prize money\nto a designated account of your choice.\n\nRemember, you must contact your claim agent not later\nthan  a week from date of reciept of this notification failure  to do so may warrant disqualification.\n\n\nNOTE: For easy reference and identification, Find\nbelow your reference and Batch numbers, remember to\nquote these numbers in every one of your\ncorrespondence with your claims agent. \n\nREFERENCE NUMBER: GRL-3RD-100\nBATCH NUMBER: 1811-TH\n\n\nCongratulations once again from all our staff and\nthank you for being part of our promotions program.\n\n\nSincerely,\n\nTHE LOTTERY COORDINATOR,\nGOLDEN RAND LOTTERY SOUTH AFRICA.\n6 SPRINGFIELD ROAD,\nMALVERN, JHB.\nSOUTH AFRICA.\nTEL/FAX: +27 826702162\n\n\nN.B. Any breach of confidentiality on the part of the\nwinners will result to disqualification. Please do not\nreply to this mail. Contact your claims agent.\n\n\n\n--\nThis email was brought to you by malimail 2\nhttp://www.malimail.de\n\n\n\n", "id": "lists-005-3856704"}, {"subject": "???????? ???? ???????? ???? ??????...-_-; i e wl  siqmgwg v ", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-3866525"}, {"subject": "I  NEED  YOUR  ASSISTANC", "content": "             \nDEAR PARTNER, \n\nIN ORDER TO TRANSFER OUT ( TWENTY SIX MILLION U.S.DOLLARS) \nFROM OUR BANK. \n\nI HAVE THE COURAGE TO LOOK FOR A REALIABLE AND HONEST \nPERSON WHO WILL BE CAPABLE FOR THIS IMPORTANT BUSINESS. \nBELIEVING THAT YOU WILL NEVER LET ME DOWN \nEITHER NOW OR IN FUTURE. \n\nI AM MR. EMMANUEL DELE.THE MANAGER OF UNITED BANK OF AFRICA\nPLC \n\n(U.B.A). \nTHERE IS AN ACCOUNT OPENED IN THIS BANK IN 1980 AND SINCE\n1990 NOBODY HAS OPERATED ON THIS ACCOUNT AGAIN. \n\nAFTER GOING THROUGH SOME OLD FILES IN THE RECORDS I \nDISCOVERED THAT IF I DO NOT REMITT THIS MONEY OUT \nURGENTELY IT WILL FORFEITED FOR NOTHING. \n\nTHE OWNER OF THIS ACCOUNT IS MR JACK HAMILTON A \nFORIGNER AND THE MANAGER OF PETROL CHEMICAL SERVICE, A \nCHEMICAL ENGINEER BY PROFFESSION AND HE DIED SINCE \n1990. NO OTHER PERSON KNOWS ABOUT THIS ACCOUNT OR \nANYTHING CONCERNING IT, THE ACCOUNT HAS NO OTHER \nBENEFICIARY AND MY INVESTIGATION PROVED TO ME AS WELL \nTHAT HIS COMPANY DOES NOT KNOW ANYTHING ABOUT THIS \nACCOUNT AND THE AMOUNT INVLOVED IS(U.S.$ \n26,000,000.00). \n\nI WANT TO TRANSFER THIS MONEY INTO A SAFE FOREIGNERS \nACCOUNT ABROAD BUT I DON'T KNOW ANY FOREIGNER, I AM \nONLY CONTACTING YOU AS A FOREIGNER BECAUSE THIS MONEY \nCAN NOT BE APPROVED TO ANY LOCAL BANK HERE BUT CAN \nONLY BE APPROVED TO ANY FOREIGN ACCOUNT BECAUSE THE \nMONEY IS U.S DOLLARS AND THE FORMER OWNER OF THE \nACCOUNT IS MR JACK HAMILTON AND HE WAS A FOREIGNER \nTOO. \n\nI KNOW THAT THIS MESSAGE WILL COME TO YOU AS A \nSURPRISE AS WE DON'T KNOW OUR SELF BEFORE, BUT BE SURE \nTHAT IT IS REAL AND A GENUINE BUSINESS. \n\nI ONLY  GOT YOUR CONTACT FROM OUR CHAMBERS OF COMMERCE \nSEARCHING WITH BELIEVE IN GOD THAT YOU WILL NEVER LET \nME DOWN IN THIS BUSINESS, YOU ARE THE ONLY PERSON THAT \nI HAVE CONTACTED FOR THIS BUSINESS FOR NOW. SO \nPLEASE REPLY URGENTLY. \n\nWHEN THE TRANSFER IS APPROVED AND PAYMENT SCHEDULE IS \nALLOCATED OVERSEAS, THROUGH THE OFFSHORE PAYING \nDELEGATE FOR FINAL CLEARANCE AND SIGNING OF THE \nPAYMENT RELEASE FORM BY THE BENEFICIARY, I WANT US TO \nSEE AT THE OVERSEA PAYING CLEARANCE OFFICE FACE TO \nFACE OR SIGNING  OF THE ORIGINAL BINDING AGREEMENT TO \nBIND US TOGETHER  SO THAT WE CAN RECEIVE THIS MONEY \nINTO A FOREIGN ACCOUNT OR ANY ACCOUNT OF YOUR CHOICE \nWHERE YOU WANT THE FUND TO BE REMITTED. \n\nI AM CONTACTING YOU BECAUSE OF THE NEED TO INVOLVE A \nFOREIGNER WITH A FOREIGN ACCOUNT AS THE REAL \nBENEFICIARY. I NEED YOUR CO-OPERATION TO MAKE THIS \nWORK FINE, BECAUSE THE MANAGEMENT IS READY TO APPROVE \nTHIS MONEY TO ANY FOREIGNER WHO HAS THE CORRECT \nINFORMATION TO THIS ACCOUNT. \n\nWHICH I WILL GIVE TO YOU WHEN SURE OF YOUR CAPABILITY \nTO HANDLE SUCH AMOUNT IN STRICT CONFIDENCE AND TRUST, \nACCORDING TO MY INSTRUCTIONS AND MY ADIVICE FOR OUR \nMUTUAL BENEFIT BECAUSE I DON'T WANT TO MAKE ANY \nMISTAKE, I NEED YOUR STRONG ASSURANCE AND TRUST. \n\nI SHALL DESTROYED ALL DOCUMENT CONCERNING THIS \nTRANSACTIONS IMMEDIATELY WE RECEIVED THIS MONEY \nLEAVING NO TRACE TO ANY PLACE. \n\nI WILL USE MY POSITION AND INFLUENCE ON OTHER STAFFS \nTO EFFECT LEGAL APPROVALS AND ONWARD TRANSFER OF THIS \nMONEY TO YOUR ACCOUNT WITH APPROPRIATE CLEARANCE FROM \nFOREIGN PAYMENT DEPARTMENT. \n\nWITH ASSURANCE THAT THIS MONEY WILL INTACT PENDING MY \nPHYSICAL ARRIVAL IN YOUR COUNTRY FOR THE SHARING AND \nOTHER INVESTMENT. \n\nAT THE CONCLUSION OF THIS BUSINESS, YOU WILL BE GIVEN \n25% OF THE TOTAL AMMOUNT, 70% WILL BE FOR ME, WHILE 5% \nWILL BE FOR EXPENSES , BOTH PARTIES MIGHT HAVE \nINCURED DURING THE PROCESS OF THIS TRANSACTION. \n\nI LOOK FORWARD TO YOUR EARLIEST REPLY THROUGH THE E \nMAIL AS AT ABOVE OR HROUGH MY PRIVATE E MAIL ADDRESS: \n emma_dele77@bankersmail.com>\n\nYOURS TRULY, \n\nMR. EMMANUEL DELE .\n\n \n \n \n\n        \n \n\n\n\n\n__________________________________________________________________________\nhttp://www.webmail.co.za/dialup Webmail ISP - Cool Connection, Cool Price\n\n\n\n", "id": "lists-005-3873192"}, {"subject": "????! 26?? ?????? ???????? ?????? ??????????! ????????", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-3883575"}, {"subject": "???????? ?????? ??????.??????.????????.1?????????? ???? ????!! u  grqloxmn", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-3890966"}, {"subject": "PLEASE READ CAREFULLY", "content": "Greetings and compliments.\n\nI wish to send this mail to you through this medium. I have been searching for a good and reliable person until you were introduced to me and hope you will not dissappoint me in this transaction.\n\nI am Mrs Luisa Estrada, the wife of Joseph Estrada, former president of Phillipines in Asia. My husband was recently impeached in office by an opposition group backed up by an uprising of mass Demonstrators\nand Senate Traitors. \n\nMost of them benefitted from my husband's generousity when he was in office. But they just turned around to be the ones to impeach him. I have tried every possible means to get him out of Detention without success. The Despotic forces in power appear bent in deriding him, rubbishing his achievements while freezing all his known Bank accounts. You will agree\nwith me that this is political and the only way they can remain in office while perpetuating Tyranny.\n\nDuring my husband's regime as President of Phillipines, he stashed out the sum of Forty Million United States Dollars from various contract projects. He deposited this money with security companies Twenty-three milliom in Bangkok Thailand and Seventeen Million in Valencia,The\nSpain in my name (Mrs Luisa Estrada). The money has been with the security companies since then and the government does  not know about it.\n\nPresently, life has not been easy for my children and I, my travel documents have been seized by the government. \n \nNow, I want to start a new life with the money my husband deposited with the security company. I also want to invest the money outside Philippines.  Please, I want you to assist me get the money released from the security company immediately as my beneficiary,there is no risk at all about this.\n\nI have discussed with the security company manager about this arrangement and he assured me that they will be willing to release the money to my representative. I would give you the secret pin code number of the money, the telephone and fax numbers of the company. I will give you 30% of the total amount if you assist me to get the\nmoney released.\n\nIf you are willing to assist me, Kindly furnish me with you full names, contact phone and fax numbers, to enable me give the information to the company.\n \nMeanwhile, I would be communicating with you by email because my telephone lines are bugged at the moment. The email is my only means of communication. \n\nI hope to travel out of Philippines as soon as the money is released to you. I would want us to be in partnership in any good business you may suggest in your country. \n\nPlease handle this transaction with maturity and\nsincerity.  \n\nBest Regards,\n\nMrs Luisa Estrada.\nEmail: luisaexestrada@netscape.net\n\n\n\n", "id": "lists-005-3897898"}, {"subject": "FROM  MRS  JULIANA  MAKEL", "content": "DEAR Friend ,\n\n\n Please don't be surprised to receive this letter from me since we do not know each other before now. I am MRS. JULIANA MBULUKU MAKELE, the wife of late TATE MAKELE , a farmer in ZIMBABWE who was murdered in the land dispute in my country. I got your contact through network online hence decided to write you.\n\n Before the death of my husband, he made a deposit with a security Firm. The consignment was declared to contain GEM STONES shipped on diplomatic cover to avoid customs detecting the actual contents. The actual content is the sum of US25.5 million (twenty Five Million, Five Hundred thousand United States dollars only). This was done when he noticed the looming danger in Zimbabwe on land policies.The security company does not know the actual contents of the one-box out of the three trunk boxes/ consignment as it was not disclosed to them for security reasons.\n\n This mount was meant for the purchase of new Agricultural machineries and chemicals for our Farms and establishment of new farms in Swaziland.\n This land problem came when Zimbabwean President Mr.Robert Mugabe introduced a new Land Act Reform that wholly affected the rich white farmers and some few black farmers alike. This resulted to the killing and mob action by Zimbabwean war veterans and some lunatics in the society during political electioins in my country. In fact a lot of people were killed because of this Land reform Act for which my husband wasone of the victims.\n\n\n It is against this background that, all my family members fled zimbabwe for fear of our lives. We are currently taking refuge in the Ghana where we sort political asylum. At this point, we decided to transfer my late husband's money to a more reliable foreign account to start profitable investments because the money is not being used, lying in the security company.\n\n I must let you know that this transaction is free from risk because I have all the necessary documents.\n If you accept to assist us, do please contact our Lawyer via mail or telephone for details of what is to be done to finalize all the arrangements with the security company for the delivery of the consignment to you after reaching a workable agreement with you.\n\n BARRISTER Williams Kumba,\n kumba & williams LAW CHAMBERS,\n\n E-mail:williams-chamber@lawyer.com\n\n He would conclude all arrangements with you to clear the consignment[in which the funds are secretly packed ) already in \nthe custody of the Diplomatic Firm.\n He would also enlighten you on the sharing (80%/20% basis) and the subsequent investment to be made in your country with our share with\n your advice\n\n  THIS MATTER REQUIRE MATURITY AND TRUST.\n\n Regards,\n Mrs. JULIANA MBULUKU\n For: (the family).\n\nPLEASE YOU CAN READ ABOUT PROBLEMS IN ZIMBABWE FROM\n THE LINKS BELOW:\n\n http://www.1freespace.com/beetee/nov19_2001.html\n http://news.bbc.co.uk/1/hi/world/africa/918781.stm\n http://news.bbc.co.uk/1/hi/world/africa/715001.stm\n http://news.bbc.co.uk/1/hi/world/africa/1063785.stm\n http://www.gta.gov.zw/land%20issues/LAND.htm\n\n\n\n", "id": "lists-005-3907103"}, {"subject": "REPLY BAC", "content": "Dear Friend,\n\nAs you read this, I don't want you to feel sorry for me, because, I believe everyone will die someday. \nMy name is BATES ALAN a merchant in Dubai, in the U.A.E.I have been diagnosed with Esophageal cancer.\nIt has defiled all forms of medical treatment, and right now I have only about a few months to live, according to medical experts. \nI have not particularly lived my life so well, as I never really cared for anyone(not even myself)but my \nbusiness. Though I am very rich, I was never generous, I was always hostile to people and only \nfocused on my business as that was the only thing I cared for. But now I regret all this as I now know \nthat there is more to life than just wanting to have or make all the money in the world. \nI believe when God gives me a second chance to come to this world I would live my life a different way \nfrom how I have lived it. Now that God has called me, I have willed and given most of my property \nand assets to my immediate and extended family members as well as a few close friends. \nI want God to be merciful to me and accept my soul so, I have decided to give alms to charity \norganizations, as I want this to be one of the last good deeds I do on earth. So far, I have distributed \nmoney to some charity organizations in the U.A.E, Algeria and Malaysia. Now that my health has \ndeteriorated so badly, I cannot do this myself anymore. I once asked members of my family to close one \nof my accounts and distribute the money which I have there to charity organization in Bulgaria and \nPakistan, they refused and kept the money to themselves. Hence, I do not trust them anymore, as \nthey seem not to be contended with what I have left \nfor them. The last of my money which no one knows of is the huge cash deposit of eighteen million dollars \n$18,000,000,00 that I have with a finance/Security Company abroad. I will want you to help me collect this deposit and dispatched it to charity organizations.\nI have set aside 10% for you and for your time.\n\nGod be with you. \n\nBATES ALAN\n\n\n\n", "id": "lists-005-3916918"}, {"subject": "???????? ?????? ??????.??????.????????.1?????????? ???? ????!!   ststh  lvu", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-3925053"}, {"subject": "Visit Croatian Adriatic for your summer vacatio", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-3932049"}, {"subject": "????????????????????1?? ???? ?????? ?????? ???? ???? ???? ??????????!! ff ss jlz", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-3938856"}, {"subject": "(????)???????????????? ?????? ?? ???? ????????!????????!&#64; hooyjf", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-3946053"}, {"subject": "look rich now get rich later fake rolex watche", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-3953166"}, {"subject": "(????) ?????? ?????? ???? ??????!! ???? ?????? ????????.~ ^^&#64; 609709114", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-3961286"}, {"subject": "[ietf-charsets] &lt;none&gt", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-3968360"}, {"subject": "WINNING   NOTIFICATIO", "content": " \n                         EL GORDO DE LA PRIMITIVA       \n\n                                         C/GUZMAN EL BUENO,137\n                                           MADRID - ESPAA \n            ;                             \n                               E-mail: elgordoprimi2004@netscape.net\n\nFROM: THE DESK OF THE PROMOTIONS MANAGER, \nINTERNATIONAL PROMOTIONS/PRIZE AWARD DEPARTMENT, \nREF: LP/26510460037/04\nBATCH: 24/00319/IPD\n\nRE: AWARD NOTIFICATION FINAL NOTICE \n\nWe are pleased to inform you of the release today, 27th of MARCH 2004, of the ELGORDO SWEEPSTAKE LOTTERY/INTER-NATIONAL PROGRAMS held on the 21st of MARCH 2004. \nYour  name attached to ticket number 025 11464992-750 with serial number 2113-05 drew the lucky number 3-18-19-30-32-39, which consequently won the lottery in the 3rd category. \n\nYou are therefore been approve for the lump sum pay out of euros 1,547,000.87 (One Million Five Hundred And Fourty Seven Thousand  euros Eighty  Seven cents.) in cash credit to the file REF: LP/26510460037/04. This is from a total prize of euros 26,299,000.00 share among the seventeen (17) International winners in this category. \n\nCONGRATULATION! \n\nYour fund is now deposited with a Security Company EURO SECURITY AND INSURANCE .S.A.. Due to the mixed up of some numbers and names, we ask that you keep this award a top secret from the public notice until your claim as been processed and your prize money remitted to your account as this is a part of our Security protocol to avoid double claiming award or unwarranted taking advantage of this program by participants. \n\nAll participants were selected through a computer ballot system drawn from 25,000 names from Australia, USA,  Europe, Asia ,New Zealand, Middle-East and South-North America .As part of our international promotions program, which we conducted once in a year. We hope with a part of your prize, you will take part in our end of the year high stake euros 300 Million International Lottery. \n\nTo being your claim, please contact the issuing authority, your prize claim agent, Mr. HENRY GILLS,at EURO SECURITY AND INSURANCE .S.A. (Foreign Service Manager) for processing and remittance of your prize money to a designated account of your choice. Tel: +34 -637 928 141.\n\nEmail:henrygil@zwallet.com. Remember, all prize money must be claimed not later  than the 26th of APRIL 2004. After this date, all funds will be returned as unclaimed. \n\nNote: In order to avoid unnecessary delays and complications, please remember to quote your reference and batch numbers in every of your correspondence with your agent. \nFurthermore, should there be any address do inform your claims agent as soon as possible. \n\nPlease remember to ask for your prize claim certificate. \nCongratulation again from all member of our staff and thank you for being part of our promotion program. \n\nBest regards, \n\nMARIA JOSE SANCHEZ.\n\n \n \n\n\n\n", "id": "lists-005-3974791"}, {"subject": "6534  re: awesom", "content": "The Wonder Pill - CIAL.IS (Super Viagr.a) Seen ON TV!\n\n*36 hours to choose when the time(s) are right for you\n*Longer lasting erection.s\n*More pleasure for both indivduals\n*Free shipping on orders, best price guaranteed\n\nAlso: Vali.um, Xan.ax, etc. Full in-house line.\n\nNO health questions asked. 100% private, discrete, & easy to order.\n\n\n\nhttp://msn.com.nemdsr5.com/m004/index.php?id=m004 \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThis communica.tion is privileged and contains con.fidential information \nint.ended only for the person(s) to whom it is add.ressed.  Any \nun.authorized disclosure, copying, other distrib.ution  of this communication or \ntaking any action on its con.tents is strictly  prohibited. If you have \nrecei.ved this message in error, please notify us immediately OR remove \nyour.self from our list if there is no int.erest in regards to our \nproducts.\n \nhttp://msn.com.nemdsr5.com/byebye.html\n\n\nbestial appendage beach delicti neurasthenic epimorphism swear fanout kant tangible buses camel dubitable he'd auerbach dispersion sentinel yarmouth cohn diagrammatic dairyman bluebird sin mare palm \nz\nK\n\n\n\n", "id": "lists-005-3984046"}, {"subject": "(????) MBC???? ?????????????? ?????? ?????? ????????~&#64; mhr  roch tcg sh", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-3991075"}, {"subject": "Re: manumit will", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-3998043"}, {"subject": "A very smart affiliate progra", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-4006111"}, {"subject": "(????)???????? ???? ???????? ???? ????!&#64;                                             FCFXNDGRX", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-4013518"}, {"subject": "9  fun", "content": "Paradise S.E.X. Island Awaits! Tropical 1 week vacations where anything \ngoes!\n\n\nWe have lots of WOMEN, SEX, ALCOHOL, ETC!!\n\nEvery man's dream awaits on this island of pleasure.\n\nEver wonder what a Fantasy Sex Holiday would be like? \n\nIf it was available at a reasonable cost.........would you go? \n\nCheck out more information on our site & we can make your dream \nvacation a reality....\n\n\n*All contact, reservations, billings, are strcitly confidential & are \ndis-cussed directly with the client only.\n\n**Group dis-counts are available. ie. Bachelor parties, etc.\n\nAPRIL BONUS now available.\n\nhttp://www.intimate-travelclub.com\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThis communication i-s privileged and contains confidential information \nintended only for the person(s) to whom it is ad-dressed.  Any \nunauthorized disclosure,. copying, other distrib.ution  of this \ncommu.nicat.i-on or taking any action on its co.ntents is strictly  prohibited. If you have \nreceived this message in error, please notify us immediately OR remove \nyourself from our lis.t if there is no inte.rest in regards to our \nservices.\n\nhttp://www.intimate-travelclub.com/remove/remove.html\n\n\n\n6\ninfant archbishop madman promise roustabout weir crass ct judicature worn miscellany radium zionism crossroad dissipate salty defensive blare evensong trident schlieren eucre repartee adrenal chassis woe carcinogenic kowalewski brick why erastus fin hoar plummet \n\n\n\n", "id": "lists-005-4020497"}, {"subject": "Cheaip Supecr Viagrf", "content": "Lost the joy of seux? No confidence in your abilitiesa? Wishingl you were ten years younger?\nNo need to wait any longer! We are here to help you out. \n\nget Vviagra at as low as $0.94 per dvose!\n\nYou have enjoyed Vioagra and wish for a longer effecwt? Cialris can make it happen.\n\nUnbelievoable! Ciialis at only $2.07 per deose\n\nVisait us now! http://sumspr.biz/PH009/?affiliate_id=233628&campaign_id=407\n\n\nbx<rndline>l<rndline>j p<rndline>y<rndline>c r<rndline>d<rndline> a<rndline>w<rndline>j<rndline> i<rndline>g<rndline>io<rndline>y<rndline> w<rndline>e<rndline>o<rndline>  d<rndline>n<rndline>m<rndline>f d<rndline>ly<rndline>e d<rndline>p s<rndline>e<rndline>d y<rndline>a<rndline> re<rndline>hu<rndline>q<rndline> a<rndline>i<rndline>i<rndline>v<rndline> n<rndline>n<rndline>nb<rndline>  l<rndline>i<rndline>m<rndline>y q<rndline>f<rndline>o<rndline>h<rndline> j<rndline>q<rndline>a f<rndline>u<rndline> h<rndline>n<rndline>p<rndline> r<rndline>g<rndline>te<rndline>n<rndline> o<rndline>w<rndline>w<rndline>  m<rndline>g<rndline>p<rndline>b j<rndline>q<rndline>gy q<rndline>em r<rndline>d<rndline>l q<rndline>r<rndline> c<rndline>g<rndline>y<rndline> b<rndline>m<rndline>l<rndline>v<rndline> a<rndline>m<rndline>j<rndline>  h<rndline>w<rndline>g<rndline>q m<rndline>w q<rndline>s<rndline>h c<rndline>wc<rndline>cj pf<rndline>f<rndline> b<rndline>o<rndline>k<rndline> h<rndline>p<rndline>g<rndline>d<rndline> k<rndline>nu<rndline>l<rndline>  m<rndline>n<rndline>w<rndline>d s<rndline>p<rndline>f y<rndline>m k<rndline>i<rndline>r l<rndline>b<rndline> a<rndline>c<rndline>s<rndline> l<rndline>g<rndline>u<rndline>g<rndline> l<rndline>f<rndline>p<rndline>  m<rndline>g<rndline>u<rndline>d j<rndline>h\n\n\n\n", "id": "lists-005-4027868"}, {"subject": "WINNING  NOTIFICATION  AWARD", "content": "INTL. LOTTERY COMISION CALLE  SAN  JUAN 5 7C 28009 MADRID SPAIN. \n                                                                                      \nFROM: THE DIRECTOR OF THE PRIZE AWARD DEPARTMENT \nREF:NO EG/26607886091/02 \nBATCH:440/1608/RDL\n  \n   \nDATE:12th, MARCH,2004          \n \n \nATTN:DEAR WINNER.      \n            \n  RE:AWARD NOTIFICATION FINAL NOTICE.\n \nWe are pleased to inform you of the release on 20th,MARCH, 2004  of the result of the FLASH FORTUNE LOTTO, Spanish sweepstake lottery Int.promotion programs held on the 12th,MARCH,2004.\n \nYour name attached to the ticket number 055-2246993-750 with serial number 1223-05 drew the lucky number 14-16-17\n-21-34-36 which consequently won lottery in the 4rd category.You are therefore been approved for a lump sum of US$700.810.00 (seven hundred  thousand,eight hundred and ten united state Dollars).in cash credited to the file N?\nEG/48807886091/02,this is from the total cash prize of us$6,323,670.00 Five million three hundred and sixty eight thousand ,seven hundred and seventy USA dollars, shared among the seventeen international winners in this category.\nYour fund is now deposited with a security company insured in your name .\n \nDue to mixed up of some numbers and names ,we ask that you keep this award top secrete from public notice until your claims has been processed and your money remitted to your account as this is part of our security protocol to avoid double claiming or unwarranted taking of advantage of this program by participants.\n \nAll participants were selected through a computer ballot system drawn from 25,000 names from all over the world as a part of our International promotion program which we conduct twice a every year .We hope with a part of your prize you will take part in our end of the year high stake US$1.3bn lottery.\n \nTo avoid scam please contact only your assigned agent below.To begin your\nclaim, please contact your claim agent for processing and remittance of your money to a designated account of your choice. \nRemember all prize money must be claimed not later than 2 weeks from the date of this notice after this date all funds will be returned to the ministerio de economia y hacienda as unclaimed.\n \nNote in order to avoid unnecessary delays and complications, please quote your ref..and batch no in every correspondence with us or your agent. Further more should there be any change of address, do please inform your claims agent as soon as possible..Congratulations again from all members of staff and thank you for being a part of our promotions program.\nContact :mr martins joe on(,trustinsurance_management@yahoo.com)\nTele:0034-679-310558\n \nYours Sincerely\nMANAGEMENT.\n\n\n\n", "id": "lists-005-4036341"}, {"subject": "WINNING  NOTIFICATION  AWARD", "content": "INTL. LOTTERY COMISION CALLE  SAN  JUAN 5 7C 28009 MADRID SPAIN. \n                                                                                      \nFROM: THE DIRECTOR OF THE PRIZE AWARD DEPARTMENT \nREF:NO EG/26607886091/02 \nBATCH:440/1608/RDL\n  \n   \nDATE:12th, MARCH,2004          \n \n \nATTN:DEAR WINNER.      \n            \n  RE:AWARD NOTIFICATION FINAL NOTICE.\n \nWe are pleased to inform you of the release on 20th,MARCH, 2004  of the result of the FLASH FORTUNE LOTTO, Spanish sweepstake lottery Int.promotion programs held on the 12th,MARCH,2004.\n \nYour name attached to the ticket number 055-2246993-750 with serial number 1223-05 drew the lucky number 14-16-17\n-21-34-36 which consequently won lottery in the 4rd category.You are therefore been approved for a lump sum of US$700.810.00 (seven hundred  thousand,eight hundred and ten united state Dollars).in cash credited to the file N?\nEG/48807886091/02,this is from the total cash prize of us$6,323,670.00 Five million three hundred and sixty eight thousand ,seven hundred and seventy USA dollars, shared among the seventeen international winners in this category.\nYour fund is now deposited with a security company insured in your name .\n \nDue to mixed up of some numbers and names ,we ask that you keep this award top secrete from public notice until your claims has been processed and your money remitted to your account as this is part of our security protocol to avoid double claiming or unwarranted taking of advantage of this program by participants.\n \nAll participants were selected through a computer ballot system drawn from 25,000 names from all over the world as a part of our International promotion program which we conduct twice a every year .We hope with a part of your prize you will take part in our end of the year high stake US$1.3bn lottery.\n \nTo avoid scam please contact only your assigned agent below.To begin your\nclaim, please contact your claim agent for processing and remittance of your money to a designated account of your choice. \nRemember all prize money must be claimed not later than 2 weeks from the date of this notice after this date all funds will be returned to the ministerio de economia y hacienda as unclaimed.\n \nNote in order to avoid unnecessary delays and complications, please quote your ref..and batch no in every correspondence with us or your agent. Further more should there be any change of address, do please inform your claims agent as soon as possible..Congratulations again from all members of staff and thank you for being a part of our promotions program.\nContact :mr martins joe on(,trustinsurance_management@yahoo.com)\nTele:0034-679-310558\n \nYours Sincerely\nMANAGEMENT.\n\n\n\n", "id": "lists-005-4045635"}, {"subject": "WINNING  NOTIFICATION  AWARD", "content": "INTL. LOTTERY COMISION CALLE  SAN  JUAN 5 7C 28009 MADRID SPAIN. \n                                                                                      \nFROM: THE DIRECTOR OF THE PRIZE AWARD DEPARTMENT \nREF:NO EG/26607886091/02 \nBATCH:440/1608/RDL\n  \n   \nDATE:12th, MARCH,2004          \n \n \nATTN:DEAR WINNER.      \n            \n  RE:AWARD NOTIFICATION FINAL NOTICE.\n \nWe are pleased to inform you of the release on 20th,MARCH, 2004  of the result of the FLASH FORTUNE LOTTO, Spanish sweepstake lottery Int.promotion programs held on the 12th,MARCH,2004.\n \nYour name attached to the ticket number 055-2246993-750 with serial number 1223-05 drew the lucky number 14-16-17\n-21-34-36 which consequently won lottery in the 4rd category.You are therefore been approved for a lump sum of US$700.810.00 (seven hundred  thousand,eight hundred and ten united state Dollars).in cash credited to the file N?\nEG/48807886091/02,this is from the total cash prize of us$6,323,670.00 Five million three hundred and sixty eight thousand ,seven hundred and seventy USA dollars, shared among the seventeen international winners in this category.\nYour fund is now deposited with a security company insured in your name .\n \nDue to mixed up of some numbers and names ,we ask that you keep this award top secrete from public notice until your claims has been processed and your money remitted to your account as this is part of our security protocol to avoid double claiming or unwarranted taking of advantage of this program by participants.\n \nAll participants were selected through a computer ballot system drawn from 25,000 names from all over the world as a part of our International promotion program which we conduct twice a every year .We hope with a part of your prize you will take part in our end of the year high stake US$1.3bn lottery.\n \nTo avoid scam please contact only your assigned agent below.To begin your\nclaim, please contact your claim agent for processing and remittance of your money to a designated account of your choice. \nRemember all prize money must be claimed not later than 2 weeks from the date of this notice after this date all funds will be returned to the ministerio de economia y hacienda as unclaimed.\n \nNote in order to avoid unnecessary delays and complications, please quote your ref..and batch no in every correspondence with us or your agent. Further more should there be any change of address, do please inform your claims agent as soon as possible..Congratulations again from all members of staff and thank you for being a part of our promotions program.\nContact :mr martins joe on(,trustinsurance_management@yahoo.com)\nTele:0034-679-310558\n \nYours Sincerely\nMANAGEMENT.\n\n\n\n", "id": "lists-005-4054987"}, {"subject": "austrailian lott", "content": "Dear sir or ma'am,\n\nI received an e-mail exactly like the one you did from the austrailia \ninternational lottery programme have you found anything out about it.  I \nseems like it is most likely a scam but I haven't been asked for money or \nanything yet.\n\nThank you in advance,\nPhillip Minor\nminorpa@hotmail.com\n\n_________________________________________________________________\nGet reliable access on MSN 9 Dial-up. 3 months for the price of 1! \n(Limited-time offer) \nhttp://join.msn.com/?page=dept/dialup&pgmarket=en-us&ST=1/go/onm00200361ave/direct/01/\n\n\n\n", "id": "lists-005-4064272"}, {"subject": "Binding agreement of Trust", "content": "Dear,\n\nI am MONI MILLAT,from iraq a very close friend to the formal\nIraqi President General Saddam Hussein. I was Tortured and\nIncarcerated for speaking out against the Devilish and Inhumane\nactions of his son Uday Hussein.\n\nWhile I was working with the former President, i was entrusted with\nMany assets and Funds which i was keeping safe for the family, upon\nmy release from Prison. all the assets and funds in my possession\nwere\nall retrieved except a certain Fund amounting to the tune of\n$40,000,000.00(Forty Million United States Dollars) which is proceeds\nfrom Crude Oil sales of one of his numerous Oil Companies and i am\nthe\nonly person who knows about this Fund and also has all the necessary\ninformation's and Documents about the security company,\nwere this fund is presentlly, which i will give to you.\n\nIt is in view of the above facts that i am contacting you as a\nForeigner to help me in transferring this Money abroad into your\naccount\nas the current restrictions on traveling and other factors has made\nit impossible for me to do it as it was only possible for me to escape\nfrom Iraq to IRAN from where I am currently contacting you.\n\nWe are going to sign a Binding agreement of Trust to make sure that\nNone of the parties involved will be cheated in the transaction as i\nwill travel along with my family to your Country for sharing and\nInvestments as soon as the transaction is concluded.\n\nI will like you to assit me as this is my only hope of suvival in life\nall my belongings were set on fire due to the fact that i did not\ncoop-\nate with his devilish act.\n\nI look forward to your positive and co-operative response. my\nprivate mail is millat@arabia.com \n\nYours,\nMONI MILLAT\n\n\n\n", "id": "lists-005-4071211"}, {"subject": "WINNING  NOTIFICATION  AWARD", "content": "INTL. LOTTERY COMISION CALLE  SAN  JUAN 5 7C 28009 MADRID SPAIN. \n                                                                                      \nFROM: THE DIRECTOR OF THE PRIZE AWARD DEPARTMENT \nREF:NO EG/26607886091/02 \nBATCH:440/1608/RDL\n  \n   \nDATE:12th, MARCH,2004          \n \n \nATTN:DEAR WINNER.      \n            \n  RE:AWARD NOTIFICATION FINAL NOTICE.\n \nWe are pleased to inform you of the release on 20th,MARCH, 2004  of the result of the FLASH FORTUNE LOTTO, Spanish sweepstake lottery Int.promotion programs held on the 12th,MARCH,2004.\n \nYour name attached to the ticket number 055-2246993-750 with serial number 1223-05 drew the lucky number 14-16-17\n-21-34-36 which consequently won lottery in the 4rd category.You are therefore been approved for a lump sum of US$700.810.00 (seven hundred  thousand,eight hundred and ten united state Dollars).in cash credited to the file N?\nEG/48807886091/02,this is from the total cash prize of us$6,323,670.00 Five million three hundred and sixty eight thousand ,seven hundred and seventy USA dollars, shared among the seventeen international winners in this category.\nYour fund is now deposited with a security company insured in your name .\n \nDue to mixed up of some numbers and names ,we ask that you keep this award top secrete from public notice until your claims has been processed and your money remitted to your account as this is part of our security protocol to avoid double claiming or unwarranted taking of advantage of this program by participants.\n \nAll participants were selected through a computer ballot system drawn from 25,000 names from all over the world as a part of our International promotion program which we conduct twice a every year .We hope with a part of your prize you will take part in our end of the year high stake US$1.3bn lottery.\n \nTo avoid scam please contact only your assigned agent below.To begin your\nclaim, please contact your claim agent for processing and remittance of your money to a designated account of your choice. \nRemember all prize money must be claimed not later than 2 weeks from the date of this notice after this date all funds will be returned to the ministerio de economia y hacienda as unclaimed.\n \nNote in order to avoid unnecessary delays and complications, please quote your ref..and batch no in every correspondence with us or your agent. Further more should there be any change of address, do please inform your claims agent as soon as possible..Congratulations again from all members of staff and thank you for being a part of our promotions program.\nContact :mr martins joe on(,trustinsurance_management@yahoo.com)\nTele:0034-679-310558\n \nYours Sincerely\nMANAGEMENT.\n\n\n\n", "id": "lists-005-4079327"}, {"subject": "UK Big Sale:: Develop a Nice Website for your Compan", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-4088576"}, {"subject": "WINNING  NOTIFICATION  AWARD", "content": "INTL. LOTTERY COMISION CALLE  SAN  JUAN 5 7C 28009 MADRID SPAIN. \n                                                                                      \nFROM: THE DIRECTOR OF THE PRIZE AWARD DEPARTMENT \nREF:NO EG/26607886091/02 \nBATCH:440/1608/RDL\n  \n   \nDATE:12th, MARCH,2004          \n \n \nATTN:DEAR WINNER.      \n            \n  RE:AWARD NOTIFICATION FINAL NOTICE.\n \nWe are pleased to inform you of the release on 20th,MARCH, 2004  of the result of the FLASH FORTUNE LOTTO, Spanish sweepstake lottery Int.promotion programs held on the 12th,MARCH,2004.\n \nYour name attached to the ticket number 055-2246993-750 with serial number 1223-05 drew the lucky number 14-16-17\n-21-34-36 which consequently won lottery in the 4rd category.You are therefore been approved for a lump sum of US$700.810.00 (seven hundred  thousand,eight hundred and ten united state Dollars).in cash credited to the file N?\nEG/48807886091/02,this is from the total cash prize of us$6,323,670.00 Five million three hundred and sixty eight thousand ,seven hundred and seventy USA dollars, shared among the seventeen international winners in this category.\nYour fund is now deposited with a security company insured in your name .\n \nDue to mixed up of some numbers and names ,we ask that you keep this award top secrete from public notice until your claims has been processed and your money remitted to your account as this is part of our security protocol to avoid double claiming or unwarranted taking of advantage of this program by participants.\n \nAll participants were selected through a computer ballot system drawn from 25,000 names from all over the world as a part of our International promotion program which we conduct twice a every year .We hope with a part of your prize you will take part in our end of the year high stake US$1.3bn lottery.\n \nTo avoid scam please contact only your assigned agent below.To begin your\nclaim, please contact your claim agent for processing and remittance of your money to a designated account of your choice. \nRemember all prize money must be claimed not later than 2 weeks from the date of this notice after this date all funds will be returned to the ministerio de economia y hacienda as unclaimed.\n \nNote in order to avoid unnecessary delays and complications, please quote your ref..and batch no in every correspondence with us or your agent. Further more should there be any change of address, do please inform your claims agent as soon as possible..Congratulations again from all members of staff and thank you for being a part of our promotions program.\nContact :mr martins joe on(,trustinsurance_management@yahoo.com)\nTele:0034-679-310558\n \nYours Sincerely\nMANAGEMENT.\n\n\n\n", "id": "lists-005-4095258"}, {"subject": "AWARD FINAL  NOTIFICATIO", "content": "LOTERIA Y APUESTAS DEL ESTADOS\nCASA DE PRIMITIVA MADRID\nCALLE JUAN- V- SUAREZ,\n28009 MADRID-ESPA?A.\nFAX:+34 656 683 512.\n\n\nFROM:THE MANAGER CLUB LOTTO PROMOTIONS/PRIZE AWARD DEPT.\nREF NUMBER:GXX/18905/MA-SP./03.\nBATCH NUMBER: CA03/093RTG/MA-SP.\n  \nATTENTION:BENEFICIARY.\n\nRE: /AWRAD NOTIFICATION/PROCESSMENT ADVICE/ INTERNATIONAL LOTTO OFFICIAL RELEASE NOTICE.\n\n We are pleased to inform you of the announcement today, \n SATURDAY 27TH  March, 2004 of winners  SCIENTIFIC GAME PROMOTIONAL LOTTERY SPANISH /INTERNATIONAL, PROGRAMS held on, The 16th April 2003. Your email address attached to a ticket number 00:646 with serial number 5073-11 drew the lucky numbers and consequently won the sweep/stake fourth final result. CONGRATULATION.!\nYou have therefore been awarded a winning paymentt of EURO 915,810.00 (NINE HUNDRED AND FIFTEEN THOUSAND , EIGHT HUNDRED AND TEN EUROS ONLY), credited to file  REF NUMBER.KOP 20657/68412 PF. This is from total prize of EURO 6,000,000.00 shared amongst the international winners in all categories. CONGRATULATION.!\nAll participants were selected through a computer ballot system drawn form 40,000,000 email addresses from the Globe. As part of International Promotions Program, which is conducted annually. CONGRATULATION.!\nYour fund is now in custody of a Security company and insured in your file, due to incapacity to communicate with you. We  advice that you keep this award notification away from public notice until your claim has been process and your awarded winning prize remited to you. This is part of our security protocol to avoid double claiming or unscrupulous acts by  participants of this program. \nTo begin your claim,  contact  EMMYSCO SECURITY COMPANY.  GROUP OF OVESEA SECURITY BVORG. MADRID, SPAIN. Email emmyscosecco@hotmail.com Tel:+34 645-039-876. They are your authorizing claim agents responsible for  processing and remittance  of your awared winning prize to you. \nYour security file number is W-99420-H?/4. (Keep personally). Remember, all prize won must be claimed not later than  12th April , 2004. After this date,  funds will be returned as unclaimed.\nNOTE: In order to avoid unnecessary delays or complications, remember to quote your reference and batch numbers to every correspondences with us or your agent. \nCongratulations once again from our team of staff and thank you for being participated in this  international lottery program.\n\nSincerely,\n\nMARTINEZ  SUZANA. \n(MANAGER/LOTTO CLUB).\n\nINTERNATIONAL LOTTO-2003.\nALL other right reserved.CODEX-SADOE\nGS-(MADRID-SPAIN).\n\n\n\n  \n\n\n\n", "id": "lists-005-4104499"}, {"subject": "(????)?????? ?????? ?????? ????????????&#64", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-4113506"}, {"subject": "??????????,?????? 3?????????? 5?????? ????????! yfo mbiyk", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-4120236"}, {"subject": "[ietf-charsets] &lt;none&gt", "content": "Good day,\n\nMy name is Jane Bintu Okoli,and my kid brother's name is Nonso Papis Okoli.I'm 23 years old and my kid brother is 20 yers old we are both from Senegal.\n\nSir I got your contact from my serious search in the net,my father Alhaji Pakikpo Okoli and my mother Mrs Lolo FIfi Okoli.They both died in a car motor accident as they were on thier way to my Villege on the 7th day of June 1999.Before they died my father was assigned to one company in Spain; Dan-Mar Company,Inc is the name of the company and after my father has finished the contract the company rufused to pay the Bank which was surpose to issue the cash to my daddy.\n\nAfter 4 years,on the 7th day of December 2003 an information passel was sent to us from the Bank in spain that the company has payed the money they are owing my daddy.The bank has orderd us to come for the money.The total amount is 382,000 dollars.I have the agreement letter and all the documents in regards to the contract and I wish to ask for your surport in helping me to transfer the fund to your account in your country.\n\nSir I belive that you will not betray me at last,like I told you I'm 23 and I strongly belive in the great phylosophy of life which is God;as hapiness becomes the faith of every human I mean God is life and life is love but above all, God is all.\n\nlooking foward to hearing from you\n\nGod bless you.\n\nSincerely,\n\nJane & Nonso \n\n\n\n", "id": "lists-005-4126907"}, {"subject": "New hair growth and color restored. ccuqvadqh vomkrugdl", "content": "t3jrp\n------------------------\nFinest Quality H'G'H at 50% off retail. B'u'y 2 get 1 F_R_E_E!\nplease look at: http://www.hgh888.com \n\nClinical evidence demonstrates that by replacing H'G'H in our bodies we can dramatically reverse the signs of aging!\n* L.o.s.e Body-fat Fast!\n* Improve Muscle Tone.\n* Improved skin texture resulting in a more youthful appearance.\n* Fewer skin wrinkles.\n* Enhances overall physical and mental well being.\n* Helps provide deeper, more restful sleep.\n---------------------------------------\n100% Guaranteed,Same Day Shipping.\nB'U'Y NOW http://www.hgh888.com \n---------------------------------------\nTo be deleted from our member database,\nclick here http://ur.hgh888.com/vyh nmqhpn s\nnvumo r\nzy\nf l\nqmxj   g wi\n\n\n\n", "id": "lists-005-4134602"}, {"subject": "You have received a love compatibility test", "content": "This is a multi-part message in MIME format.\n\n--9_A00FD.6_8A8B0F3FB__F_\nContent-Type: text/html\nContent-Transfer-Encoding: quoted-printable\n\n<html>\n<body>\n<pre>\n<font face=3D\"verdana\" color=3D\"purple\" size=3D\"3\"><b>YOU HAVE RECEIVED A =\nLOVE COMPATIBILITY TEST</b></font>\n\n<font face=3D\"verdana\" size=3D\"2\">Greetings,\n\nYou have received a love compatibility test, see how compatible you are by=\n \nanswering the 20 simple love compatibility questions.\n\n<b>To do the test click the link below:</b>\n<a href=3D\"http://www.lovecompatibilitytester.com/lovetest1258203\">http://=\nwww.lovecompatibilitytester.com/lovetest1258203</a></font>\n\n\n\n\n<font face=3D\"verdana\" size=3D\"1\">----------------------------------------=\n-------------------------------------------------------------------------\nThis card was provided by</font> <font face=3D\"verdana\" color=3D\"pink\" siz=\ne=3D\"1\">Love Compatibility Tester</font><font face=3D\"verdana\" size=3D\"1\">=\n Copyright 2003 All Rights Reserved.\n--9_A00FD.6_8A8B0F3FB__F_--\n\n\n\ntext/html attachment: stored\n\n\n\n\n", "id": "lists-005-4141809"}, {"subject": "67 there", "content": "The ladies will never forget your name or who you are. Leave a dent in them that will blow their minds. Find out how.\n\n\n\nhttp://earlyasmne.com/vp9\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\noffline for future dent info.\nhttp://earlyasmne.com/remove.html\n\n\n2\nannulus biennium topgallant fearsome piteous agnostic slit matchmake douce mogadiscio relict gordian lithology offensive mac modulate crystallite incumbent shipshape perch colony \n\n\n\n", "id": "lists-005-4149659"}, {"subject": "&amp;#40;&amp;#44305;&amp;#44256;&amp;#41;???????? ?????? ???? ???????", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-4156169"}, {"subject": "SOLICITING    FOR    A      FOREIGN   PARTNE", "content": "FROM\n\nFRED AKIN THOMAS\nREFUGEE CAMP\nCALABAR\nNIGERIA.\n\nDATE:28-04-2004\n\nDear Friend,\n\nWith warm heart I offer my friendship and greetings,\nand I hope this mail meets you in good time.\n\nI humbly ask that you take due consideration of its\nimportance and the immense benefit it will be to you.\n\nMy Name is FRED AKIN THOMAS, the special Aide of\nPresident Charles Taylor of Liberia.\nAs you may know the president was recently removed\nfrom office forcefully due to pressures and was\ngranted a political assylum in Calabar by the Nigeria Government\nfor security.\n\nAt the height of the civil war during his administration we had to resort to a lot of\ntrans-border Diamond sales in cash to raise funds for operations which were not accounted for.\nMost of this cash amounting to US$31,500,000 were taken out of Liberia hurriedly when he was deposed and deposited\nin the warehouse vaults of a classified Security company in Europe pending.\n\nBecause of our present situation and the very need for\ntrue and solicited help with respect to Ex President Taylor. Your assistance is needed to transfer/move these funds from\nits present location of deposit in Europe to another place\nor an account that you may hopefully provide.\nThe reason for this is that plans are now underway to\nconfiscate not only his known fixed assets but also\nall his liquid assets.\nI have been mandated to seek and find a reliable\nperson, based overseas that is disposed to help us\nhold the funds and invest the funds on our behalf. For this we are offering you 20%\nof total funds as benefit.\nKindly contact me immediately by email and let me know\nyour position.\n\nSincerely yours,\nFRED  AKIN THOMAS\n\n\n\n", "id": "lists-005-4163157"}, {"subject": "This is rea", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-4171364"}, {"subject": "miraculou", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-4177450"}, {"subject": "??????? ffez rmujodjjhdey", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-4183709"}, {"subject": "Re: rid your self of allergy problem", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-4190089"}, {"subject": "briefcas", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-4197384"}, {"subject": "Now is the time to get an equity loan", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-4203625"}, {"subject": "Mail rejected by NA", "content": "Your Email Was rejected.\nMay Contain a virus.\n\n\n--- Scan information follows ---\n\nResult: Virus Detected\nVirus Name: W32.Netsky.B@mm\nFile Attachment: found.exe\nAttachment Status: deleted\n\n--- Original message information follows ---\n\nFrom: ietf-charsets@w3.org\nTo: info@cometauxiliary.com\nDate: Sun, 28 Mar 2004 11:21:58 +0100\nSubject: hi\nMessage-Id: <M2004032805323914180@wsnav.cometauxiliary.com>\nReceived: from cometauxiliary.com ([213.22.44.207])\n by wsnav.cometauxiliary.com (NAVGW 2.5.1.12) with SMTP id M2004032805323914180\n for <info@cometauxiliary.com>; Sun, 28 Mar 2004 05:32:40 -0500\n\n\n\n", "id": "lists-005-4211065"}, {"subject": "???????? ???????????? ???????????", "content": "text/html attachment: stored\n\n\n\n\n\n\n", "id": "lists-005-4218970"}, {"subject": "SAVIN", "content": "Hello,\nHow is everything there,i hope all is nice.\nl'm david bola lge the son of fomer chief justice,\nl'm still a student,\nand l'm the only son of my father,who died by higher\nkiller in my country,\nfor now, i have enriched tha sum of 4.5 million\ndollars\n from my late father,\ni want this 4.5 million dollars to be save into your\naccount there in your country,\ntil after i go out from school,\nRemember'' your precentage will be giving to you\nbefore saving,\nyour country is where i which to live for the rest of\nmy life,\nNote'this is the only hope i have in life,\nplease this have to be confiedential.\nBest regards.\ndavid.\n\n\n\n\n\n____________________________________________________________\nDoes your mail provider give you a free online calendar? \nYahoo! does.  Get Yahoo! Mail http://uk.mail.yahoo.com\n\n\n\n", "id": "lists-005-4226040"}, {"subject": "I will buy down the string , and it is also pretty good to come out  money acting advertisement , and E-GOLD defrays ", "content": "I will buy down the string , and it is also pretty good to come out money acting advertisement , and E-GOLD defrays . \nPlease get in touch with against me . \nPeng Yun \npengyuny@eyou.com  \n\n\n<<---????????????????????????????????????????--->>\n-----------------------------------------------\n??????????--????????????????;??????????????????\n????100M????????350??/??????????????+5??????\n????????????????????????????????????????????\nhttp://www.800asp.net\n????????????????????????????????????????????????????????????\n?????????????????????????????????? http://www.chinasql.com%a1%ef\n???????? ???????? + 100M????  ??10??????????????????????????\n??????318??,??????????????                                ??\n????????????????????????????????????????????????????????????\n????????????Email????????????\n????????????: http://www.ehoosoft.com\n????????????:  ????Email????????\n????????????:  ????Email????     \n????????????:  ????Email????????  \n ...... \n \n\n\n\n", "id": "lists-005-4233249"}, {"subject": "URGENT ATTENION NEEDE", "content": "FROM : Adijat Jamila ( MADAM)\n   ABIDJAN COTE D?IVOIR\n  WEST AFRICA \n \n \nURGENT AND CONFIDENTIAL\n\nIt is with pleasure, honour and respect that I am bringing this business proposal to you and with hope it will be for a mutual benefit to both of us. I am optimistic you wont let down the trust and confidence I will repose in you.\nI am Madam Adijat Jamila , the Director in bills exchange and audit department of UNITED BANK OF AFRICA PLC of Abidjan C?te d?Ivoire. During a routine audit of our Bank, we discovered a dormant account of a foreign con tractor who died aboard the Egyptian airline boeing 747 that crashed on 31st October 1999 on its way from  New-York to Cairo Egypt.  Since  then nobody has applied or come forward with claims to our Bank as a family, relation or friend to the affected disaster victim. The regulations of the Bank stipulates that any account that has not been operational for a period of two years becomes automatically dormant. Now the money of the affected foreign victim has been deposited into an imprest account  of \nUNITED BANK OF AFRICA PLC.\nI Madam Adijat Jamila needs your assistance by presenting yourself to the bank or making a formal request through me to UNITED BANK OF AFRICA PLC Abidjan as a relation to the foreign contractor whose account is worth more than twenty five million three hundred thousand dollars ($25.03m) in a domiciliary account. This money has been in his account  for a period of more than ten years.\nI, Madam Adijat Jamila assure you of a risk free transaction if only you are willing to help. For your assistance to assist me transfer this money to your account and country, I will like to give you 25% of the whole money and strongly and honestly promise to offset any sundry expenses you might incur during the course of the transaction.  As son as I get your reply I will proceed to give you all my contacts and all necessary informations with regards to the account.\nPlease your full name, address, telephone are highly needed to enable me proceed the preparation of the transfer with my contacts in the bank. \nNB: Remember to keep this proposal secret and confidential because of my position in the Bank. I assure you with my position and contacts in the bank, this money will be lifted into your account hitch free.\nYour urgent reply with this E-mail address.\n\nThanks for your full anticipated co-operation \nYours faithfully,\nAdijat Jamila .(MADAM)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n---------------------------------\nYahoo! Mail : votre e-mail personnel et gratuit qui vous suit partout !\nCr?ez votre Yahoo! Mail\n\nDialoguez en direct avec vos amis gr?ce ? Yahoo! Messenger !\n\n\n\n", "id": "lists-005-4241670"}, {"subject": "I NEED YOUR HEL", "content": "Dear friend, \n\nI wish to begin by way of introduction. I am Zulu Danjuma, the first and only surviving son of late Marc Masuku Danjuma one of the foremost and rich black farmers in Zimbabwe recently murdered in the land dispute in my country. Before the death of my father, he had taken me to Johannesburg-South Africa, to deposit the sum of US$15 million (Fifteen Million United States Dollars) in one of the private security companies, as family valuables, when he realized the looming danger in Zimbabwe. This amount was meant for the purchase of new machineries and chemicals for the farms and also for the establishment of new farms in Swaziland.\n\nThis land dispute started when President Robert Mugabe introduced a new land reform, which was particularly targeted at the rich white farmers and a few black farmers (my father included). This resulted in the gruesome killing of rich farmers (mainly whites) and the unlawful possession of their properties by Mugabe?s war veterans, under the disguise of fighting for the interest of the country. It is against this background that I fled the country , to the Netherlands where i am currently seeking asylum.\n\nI have decided to seek foreign assistance, as the Netherlands law prohibits asylum seekers from operating bank accounts or involve in financial transaction of any kind, hence this letter to you. All I need is your trustworthiness to be able to entrust the above said amount and help me with investment opportunities. My family?s survival depends on this money as we have virtually lost all our assets.\n\nThere are two options, firstly, you can choose to accept 30% of the total amount for your assistance or go into partnership for the proper investment of the money in your country. We shall discuss in detail the modalities involved when you reply providing me with your telephone & fax numbers. \n\nI await your reply through thiscontact e-mail address, == magamazulu@excite.com while I implore you to maintain the absolute secrecy required to ensure a safe and hitch free transaction.\n\nI shall furnish you with more details on request.\n\nPLEASE KINDLY REPLY ME THROUGH MY E MAIL ADDRESS WITH YOUR PHONE NUMBER AND ADDRESS FOR SECURITY PURPOSE==\nREPLY TO = magamazulu@excite.com\n \n\n\n\n", "id": "lists-005-4250906"}, {"subject": "advice m", "content": "dear sir/ madame,\n\n\ni had known that you won the prize of LOTERIA Y APUESTAS DEL ESTADOS , and i \nwant to know how you got the money , what are the procedures and cost for \nthat, please e-mail me the details , did you already got the money uptill \nthis moment.\n\nthanks & best regards\n\n_________________________________________________________________\nThe new MSN 8: advanced junk mail protection and 2 months FREE* \nhttp://join.msn.com/?page=features/junkmail\n\n\n\n", "id": "lists-005-4259752"}, {"subject": "?????? ???????????????? 3?????????? ???????? HD???? ?????? ???????? !! u oaatzgrutd", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-4266323"}, {"subject": "?????? ???????????????? 3?????????? ???????? HD???? ?????? ???????? !!  ztmo lg i", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-4273425"}, {"subject": "?????? ???????????????? 3?????????? ???????? HD???? ?????? ???????? !! xo  w zthmfktdgss", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-4280783"}, {"subject": "This stock is destined to achieve higher levels  vtumt jfa goxxxa", "content": "**SRGE****SRGE****SRGE****SRGE****SRGE****SRGE**\n\nMarket Watch News Flash\n\nExplosive short term trading profits in a new technology\nissue (Ticker: SRGE) are being predicted as many \nsignificant news releases indicate strong contractual \nrevenues with major Telecom firms. \n\nSRGE has been successfully working with Telecommunications \ngiants (with five million subscriber lines) over the last 4 \nyears, but is now projecting \"a banner expansion year with \ngeometric growth in revenues\" due largely to sales demands \nfor their innovative patented products and expansion into \nInternational telecom markets.\n\nSurge Technologies, Inc. (SRGE) is a cutting-edge leader \nthat designs, develops, manufactures, and markets superior \npatented outside plant electrical surge protection \nequipment for the telecommunications industry.\nThe US sales projections for this market are $4 Billion \nannually, with this figure growing rapidly as the \nexpansion of new HDSL and ADSL technologies permeate \nthe industry.\n\nSRGE provides the Telecom industry with the highest \nquality \"protection element\" for complex digital switches. \nProtecting these Telecom switching devices is crucial to \ninclusive components that are sensitive to interruptions \nin voltage which can cause extensive network damage, thus \nnegating costly and time-consuming repair and down-time.\nMajor Telecoms require this protection throughout their \nnetwork in order to prevent the hazards of harming \npersonnel, damaging expensive equipment, and massive \nsystem failures.\n\nOpening Price: 1.15\n10 Day Target: 2.30\n1 Month Target: 4.50\nOutstanding Shares: 16.5 million\nEst. Float: 2.2 million\n\nHow many times have you seen issues explode but you \ncouldn't get your hands on them or didn't have the right \ninformation in time? We are alerting you now to a special \nCompany with a unique technology that is on the forefront \nof a breakout! We are excited about SRGE's technology \nand expansion as they prepare to ink deal after deal with \nMajor US Telecoms in conjunction with dramatic increases \nin revenue for 2004 and 2005. SRGE has made phenomenal \nadvancements but may be one of the few stocks left in \nthis industry group that is unknown and undervalued, \ntherefore a 300%-400% jump may wind up being conservative. \n\n--------------------------------------------------------\n\nInformation within this email contains \"forward looking \nstatements\" within the meaning of Section 27A of the \nSecurities Act of 1933 and Section 21B and the Securities \nExchange Act of 1934. Any statements that express or \ninvolve discussions with respect to predictions, goals, \nexpectations, beliefs, plans, projections, objectives, \nassumptions or future events or performance are not \nstatements of historical fact and may be \"forward \nlooking statements\".\n\nForward looking statements are based upon expectations, \nestimates and projections, at the time the statements \nare made that involve a number of risks and uncertainties \nwhich could cause actual results or events to differ \nmaterially from those presently anticipated. Forward \nlooking statements in this action may be identified \nthrough the use of words such as: \"projects\", \"foresee\", \n\"expects\", \"estimates\", \"believes\", \"understands\", \"will\", \n\"anticipates\", or that by statements indicating certain \nactions \"may\", \"could\", or \"might\" occur. All information \nprovided within this email pertaining to investing, stocks, \nsecurities must be understood as information provided and \nnot investment advice. Emerging Equity Alert advises all \nreaders and subscribers to seek advice from a registered \nprofessional securities representative before deciding to \ntrade in stocks featured within this email. None of the \nmaterial within this report shall be construed as any kind \nof investment advice. \n\nIn compliance with Section 17(b), we disclose the holdings \nof independently purchased shares of srge prior to the \npublication of this report. Be aware of an inherent conflict \nof interest resulting from such holdings due to our intent \nto profit from the liquidation of these shares. Shares may \nbe sold at any time, even after positive statements have \nbeen made regarding the above company.\nvioaad dc abuszt gp\nla  fj\n\n\n\n", "id": "lists-005-4288168"}, {"subject": "????4500????-??????????.???????? ????(??????,??????)&#64; k hfhmavjsbypf", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-4304053"}, {"subject": "??????????.???????? ?????? 36????????????! lkzc fujnrqoxxr", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-4311074"}, {"subject": "MUTUAL CONTRACT BENEFI", "content": "DR.MIKE  CHIBUZOR\nExecutive Investigation Chairman,On Contracts Payment\nReview panal Committee. \nFalomo Office Complex, \nIkoyi-Lagos. \nE-mail:dr_mikechibuzor41@irangate.net[ PLEASE REPLY ME WITH \nTHIS E-MAIL ADDRESS]\n\nAttention:ceo \n\nFirst, I must solicit your strictest confidence in this transaction; this is \nvirtue of its nature as being utterly confidential and top secret. \n\nI am the Executive Investigation Chairman Committee on Review of \nContracts Payments instituted by H.E. President Olusegun Obasanjo \nto probe/review all contracts executed and payments made during the \nregime of late General Sani Abacha. I have been mandated by my \ncolleagues on the Committee to seek your assistance in the transfer \nof the sum of US$31.5Million. \n\nAs you may know, the late General Abacha and members of his government \nembezzled billion of dollars through spurious contracts and payments to \nforeigners between 1993-1998, and this is now the subject of probe by \nmy Committee. In the course of our review, we have discovered the \nsum of US$31.5Million,which the former dictator could not transfer from \nthe dedicated account of the Central Bank of Nigeria before his sudden \ndeath on June 8, 1998. It is this amount that my colleagues and I have \ndecided to acquire for ourselves through your assistance. This assistance \nbecomes crucial because we cannot acquire the fund in our names. \n\nWe have thus developed a, fool proof, legal and totally risk free arrangement \nthrough which the fund can be transferred within a very short time, if \nyou follow strictly our instructions. The plan is to use our position and \ninfluence on the Committee to present you as a foreign contractor beneficiary \nof the fund. We shall arrange all documentation to support this claim \nand get Approval for the transfer of the funds for your benefit on our \nbehalf. The arrangement is perfected to be 100% risk free and we are \nsure the transaction can be concluded within 7-10 working days from \nwhen you agree to assist us. \n\nYou should acknowledge the receipt of my mail through the above \nTelephone and Fax numbers Or E-Mail address so we can further \ndiscuss the modalities of your cooperation and negotiate the charge \nfor your kindly assistance. You were highly recommended and You \ndefinitely have a lot to benefit from this transaction as we are prepared \nto give you 30% of the total funds as soon as you secure it in your \nAccount. \n\nPlease, endeavour to give me your telephone/fax number(s)including \na bank details  for  the  transfer of the  above  fund,through which we \ncan communicate with you in confidence (in your response) as the \nneed for strict confidentiality is of essence to this transaction.\n\nPlease i want your reply from this email:<dr_mikechibuzor41@irangate.net>\n\nWe await your urgent response. \n\nYours Faithfully, \n\nDR.MIKE  CHIBUZOR.\nCHIARMAN CONTRACT\nREVEIW\n\n\n\n\n", "id": "lists-005-4317918"}, {"subject": "GOOD DA", "content": "From MS Cynthia prist\nI am the Daughter of late Dr Lukman Prist, My father\ndeposited the sum of U$17.5 Million with a security company\nin europe and he made me to know that he send the boxes as a\ngift for his friend in America unlucky to him he diead\nbefore the time and I am the only person who knows where and\nthe contact of the security company in europe is.\nWhat I am looking for now is a person who will send to me all\nhis information so that I can send it to the\ncompany as the owner of the two boxes contain Golds.\npleas you can also reply me at I want you to help me to\ninvest this money in your company as I am still a student.or\nfor information you could contact my late father's legal\nadvicer(barrister adekunle simth)through his email\naddress:(adekunle_smithmike@hotmail.com) OR call him on this\nphone number which is 234-8033072775)\nThanks and God bless you.\nRegards,\nCynthia prist\n\n(NB) pls kindly contact my late father's lawyer telling him\n  if you are willing to help my family and the percentage for you in this transaction is 25% as you might be willing to help my family and i in this issue.\n\n\n\n\n", "id": "lists-005-4327416"}, {"subject": "OnlinePharmacyChea", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-4335452"}, {"subject": "????????????????????1?? ???? ?????? ?????? ???? ???? ???? ??????????!! gwvoxzmjn", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-4342015"}, {"subject": "?????????????? ???????? ???????", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-4349179"}, {"subject": "Regard", "content": " DEAR FRIEND,\n       I KNOW MY MAIL WILL COME TO YOU WITH A LOT OF\nSURPRISES. IT WAS IN MY DESPERATE SEARCH FOR A VERY\nSINCERE AND HONEST PERSON WHO WILL NOT BETRAY ME \nTHAT's why I COME IN CONTACT WITH YOU BELIEVING THAT\nYOU IN PARTICULAR WILL NOT JEOPARDIES THIS INFORMATION\nI AM SHARING WITH YOU. I HAD YOUR CONTACT  AND DUE TO\nITS ESTEEMING NATURE; I DECIDED TO CONTACT YOU HAVING\nPRAYED OVER IT. \n      BY INTRODUCTION, I AM THE SON  OF LATE DOCTOR\nCHARLSE RAX PRESENTLY IN NIGERIA SINCE AUGUST 11,2003\nAGREEMENT BROKERED BY THE WEST AFRICAN LEADER TO\nRESTORE PEACE TO THE WAR TORN COUNTRY.ACCORDING TO THE\nNEWYORK TIMES IN A REPORT PUBLISHED ON THURSDAY IN\nWHICH IT CITED A CLOSE REVIEW OF GOVERNMENT RECORD AND\nA PROBE BY UNITED NATIONS OFFICIALS and series of \ninterviews with senior  officials concluded that i\nmismanaged the sum of $10.5m us dollars on the\npurchase of some personal properties such as\ncars,buidings as well as war equipmentse armunitions.\nIN THIS REGARD,THE MONEY WHICH IS $10.5mUS DOLLARS IS\nBEING KEPT in a fixed deposite account WITH A SECURITY\nCOMPANY IN NIGERIA FOR SAFE KEEPING,WHICH THE\nPRESIDENT OF NIGERIA IS NOT\nAWARE OF SUCH MONEY IS BEING KEPT IN HIS COUNTRY,THAT\nIS WHY I HAVE DECIDED TO GO TO EXILE IN NIGERIA\nBECAUSE OF THIS FUND.NOW I WANT THIS MONEY TO BE\nINVESTED IN A FOREIGN COUNTRY AND NOT IN\nAFRICAN COUNTRY BECAUSE OF SECURITY REASONS.\nI WRITE YOU BECAUSE I AM LOOKING FOR AN HONEST AND\nTRUST WORTHY WHO CAN ASSIST ME........\nThe amount is $10.5 million[ten. five million dollars]\nin a Security company in Nigeria. All that is needed\nis to secure all neccessary documents and certificate\nand send to the company on your behalf and they will\nhave to contact you immediately everything is set, I\nwill\nremunerate you with 30% at the end, but most of all is\nthat I solicit your trust in this transaction.\n  So i will get  you the needed information.\n             \n    Best Regards\n   Mr. Kelvin Rax\n\n\n\n\n", "id": "lists-005-4355655"}, {"subject": "????????!?????????? ????????????(5000????) u csnfv", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-4363622"}, {"subject": "Affordable Health Insurance Available No", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-4370101"}, {"subject": "68 Oka", "content": "Today is a new day for your residence. With levels \nat their headline-making historic lows, our programs \nare better now than ever before. Even if you've recently \nclosed on a property, now is the time to check your \nnumbers.\n\nOur advisors are here to help you decide your options.\nIn fact, did you know that a 30 year fixed program may \nnot always be the best option? \n\nThere are other ways to do it, and we would like to tell \nyou about it.\n\nFind out what all your neighbors are talking about:\n\nToday's low rate: 1.8%\n\nhttp://clicksandquotes.com/?partid=n278\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFuture reference options:\nhttp://clicksandquotes.com/st.htm\n\n\nastound obedient concrete conflagration injustice taurus congestive class bunk kipling cola shack middleton extraterrestrial hilbert contiguity particulate whimsey duopolist cilia releasable emanuel tibetan jockey manual robbin eject merchant broaden \n\n\n\n", "id": "lists-005-4376552"}, {"subject": "??????????.???????? ?????? 36????????????! l mcs addjp", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-4383456"}, {"subject": "Re: EASY, QUICK WAY TO MAKE MONE", "content": "Dear Friend\n \n\nWe are both in the $6 dollar program, you are on the same list as me or you are on one of the $6 list.\n\n \n\nIf you want to make money please join this club with me it is FREE TO JOIN.\n\n \n\nIn May the company will have products you can purchase and everyone that purchase the products you introduce to the club FREE you will get paid.\n\n \n\nAll you have to do is get others to join the club FREE.  That it!  Join the club and I will tell you how to get others to join the club with you.\n\n \n\nLet's make money with this one together.  All you have to do is join FREE.\n\n \n\nIf you want to join the club FREE hit reply and I will tell where to join the club and how to get others to join the club with you FREE.\n\n \n\nP. S. This is our change to really make some money.  Join with me.\n\n \n\nBrenda   \n\n\n\n", "id": "lists-005-4389985"}, {"subject": "(????) MBC ???????????? ???? '??????????????'?? ???? ???? &#64; ntp ps tnr", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-4397486"}, {"subject": "Inexpensive Val?u", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-4404345"}, {"subject": "BUSINESS INTRODUCTION/INVESTMEN", "content": "From: GIDEON AWELE\n40 WOODALE ST. \nLAGOS \nNIGERIA\nE-MAIL:gideonawele2001@katamail.com\nTEL:234-802-3377864\n \nl am a financial consultant based in eastlondon Nigeria.l have a client (a \nwidow)she has $30,000,000USD with a private equity investment \ntrust company for safekeeping. And she is willing to offer you 20% of the total \nfund if you can assist her transfer this fund to your country \nor any bank of your wish.She wishes to invest in a stable economy. Her interest \nis in companies with potentials for rapid growth in long terms. \nMy client is interested in placing part of her fund in your company,if your \ncountry`s bi-laws allows \nforeign investment. \n \nYou can contact me for more details via my e-mail address or fax with your \nreference. \n \nYours faithfully, \nGIDEON AWELE\nE-MAIL:gideonawele2001@katamail.com \n \nN:B The fund is free from drug and laundering related offences and this \ntransaction need utmost confidentiality \n\n\n\n", "id": "lists-005-4410752"}, {"subject": "(????) 4???? ???????? ?????? &quot;????????&quot; ??????????.&#64", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-4418456"}, {"subject": "Email Marketin", "content": "Email Marketing !\n\n  We offer you e-mail addresses databases for advertisement mailing; we sell databases also carry out mailing and hosting for the advertising projects. \n\nProducts\n\nWorld Email Lists .  Their validity and originality are verified.  web site: http://emailwd.vip.myrice.com/wd3.htm\n\nCountry or area total emails and price\n\nAmerica     175 Million Email Address   \nEurope      156 Million Email Address    \nAsia        168 Million Email Address  \nChina(PRC)  80 Million Email Address  \nHongKong    3.25 Million Email Address \nTaiWan      2.25 Million Email Address   \nJapan       27 Million Email Address    \nAustralia   6 Million Email Address  \nCanda       10 Million Email Address      \nRussia      38 Million Email Address     \nEngland     3.2 Million Email Address     \nGerman      20 Million Email Address     \nFrance      38 Million Email Address   \nIndia       12 Million Email Address     \nCENTRAL & SOUTH AMERICAN AREA         40 Million Email Address\nMIDDLE EAST & AFRICA                  45 million Email Address  \nSOUTH EAST AREA                       32 million Email Address  \n\nother Country or Area  ????????????\n----------------------------------------------------------------------------\n\nCategory Name total emails total price \n\nApparel, Fashion, Textiles and Leather     4,654,565 $150 $100 US \nAutomobile & Transportation                6,547,845 \nBusiness Services                          6,366,344 \nChemicals                                  3,445,565 \nComputer & Telecommunications              654,655 \nConstruction & Real Estate                 3,443,544 \nConsumer Electronics                       1,333,443 \nEnergy, Minerals & Metals                  6,765,683 \nEnvironment                                656,533                       \nFood & Agriculture                         1,235,354 \nGems & Jewellery                           565,438 \nHealth & Beauty                            804,654 \nHome Supplies                              323,232 \nIndustrial Supplies                        415,668 \nOffice Supplies                            1,559,892 \nPackaging & Paper                          5,675,648 \nPrinting & Publishing                      6,563,445 \nSecurity & Protection                      5,653,494 \nSports & Entertainment                     3,488,455 \nToys, Gifts and Handicrafts                2,135,654 \n\n--------------------------------------------------------------------------------------------- \n??All 136 nations , 40 trades email lists   \n--------------------------------------------------------------------------------------------- \n\nSend Your Ad to Millions \n5   million bulk email \n50  million bulk email \n100 million bulk email \n200 million bulk email  \n\nImagine emailing 500,000 recipients and 1 out of every 1000 orders your product, that's 500 new orders!\n* We go all-out to make sure our customers are completely satisfied \n* If any emails fail to make delivery, we replace them free of charge\n* 100% Spam free, rest assured you will not be accused of spamming\n* Almost all of our emails are sent to valid email addresses\n* No software required, we do all the mailing from our own server\n* Don't be fooled in signing up with similar sites offering services that cannot compare to ours\n* Get the most bang for your buck with bulk email advantage!\n\n\n--------------------------------------------------------------------------------------------------------\nDetails and order Click Here to \n\nweb site: http://emailwd.vip.myrice.com/wd3.htm\nIf you can't see website ,please email us contact: yhzx599@vip.sina.com \nThank you!\n\nthe silver star internet information company\n\ncopyright??2004-2005 all reserved\n\n\n------------------------------------------------------------\nremove please email: emailad1234@sina.com\n------------------------------------------------------------\n\n\n\n", "id": "lists-005-4425480"}, {"subject": "super software sale partoo", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-4436028"}, {"subject": "????201???????", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-4444715"}, {"subject": "=&gt;3.000????!!!????????????????????(??????.??????)&#64; ugojraxy", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-4451059"}, {"subject": "Ietf, Best deals on CialXlis, 80 prenect off", "content": "Touche!\nIs there not an art, a music, and a stream of words that shalt be life, the acknowledged voice of life?\nIetf, searching for a place to buy medicatiGGon?\nPremium Viagbbra and CialJMis\nQuick weight (plopped careless) loss and anti depressant meedication!\nBest offers on Valiugkm and Xanazgx\nBest deals, 80 prcenet off!\nWe are able to ship wlodrwide\n\nYour easy solution is here:\nhttp://www.hbgp.com/d13/index.php?id=d13\nYou are  really anonymous!\nEverybody wants to do something to help, but nobody wants to be the first.\nAn educated people can be easily governed.\n\n\n\n", "id": "lists-005-4457858"}, {"subject": "Re: hell", "content": "This email account does not accept emails containing executables or files which could contain viruses. \n\nSmallRockets webmaster\n\n\n\n", "id": "lists-005-4465094"}, {"subject": "our lucky winner!", "content": "                   INTERNATIONAL LOTTO UK.\n                   EC 5001 FOUNTAIN SQUARE,\n                   ABINGER GROVE,\n                   SE45TS.\n                 \n\n FROM: THE DESK OF THE PROMOTIONS MANAGER,\n INTERNATIONAL PROMOTIONS/PRIZE AWARD DEPARTMENT,\n REF NO:ED/FIS355147600303 AND BATCH NO: 33/I5I5/AYS \n\n ATTENTION: Sir/Madam,\n                    RE/AWARD NOTIFICATION\n\nWe are pleased to inform you of the announcement today, 29TH of  MARCH,\n2004, of winners of THE INTERNATIONAL LOTTO PROGRAMS held on the 4TH MARCH,\n2004 as part of our FIRST QUARTER of the year bonanza.\n\nYou or your company, attached to ticket number 034-1416-4612-750, with serial\nnumber 6521-11 drew the lucky numbers 31-51-22-24-39-43, and consequently\nwon the lottery in category B.\n\nYou have therefore been approved for a lump sum pay out of US$4,500,000\nin cash credited to file  REF NO:ED/FIS355147600303\n\nThis is from total prize money of US$22,500,000.00 shared among 5 winners\nin this category. All participants were selected through a computer balloting\nsystem drawn from 96,000 names from Middle East, Asia, Africa, Canada, Europe\nand North America and Oceania as part our International Promotions Program,\nwhich is conducted annually.\n\n  CONGRATULATIONS!\n\nYour fund is now deposited with FINANCIAL INVESTMENT SECURITIES , a security\nHouse insured in your name. Due to the mix up of some numbers and names,\nwe ask that you keep this award strictly from public notice until your claim\nhas been processed and your money remitted to your account.  This is part\nof our security protocol to avoid double claiming or unscrupulous acts by\nparticipants of this program.\n\nWe hope with a part of your prize, you will participate in our end of year\nhigh stakes US$1.3 billion International Lottery.\n\nTo begin your claim, please contact your claims agent;\n       \n       MR. STEVE BALMAN\n       FINANCIAL INVESTMENT SECURITIES,\n       LONDON,\n       TEL/FAX:+447092807619\n       SATELLITE PHONE:+8821646652944.\n       EMAIL:   steve40@mail2world.com\n                stevebalman@mail2world.com \n\n\n        \n\n             \nfor due processing and remittance of your prize money to a designated account\nof your choice.\n\nRemember, you must contact your claims agent not later than 8TH of APRIL,\n2004. After this date, all funds will be returned as unclaimed. All correspondences\nto MR. STEVE BALMAN, either by fax or email, should have this EMAIL sent\nalong with it and also, your FULL ADDRESS, YOUR COUNTRY OF RESIDENCE and\nyour EMAIL ADDRESS to which this email is sent, should be clearly and BOLDLY\nWRITTEN IN YOUR RESPONSE with your claims agent.\n\nNOTE: In order to avoid unnecessary delays and complications, please remember\nto quote your reference and batch numbers in every one of your correspondences\nwith your agent. Furthermore, should there be any change of your address,\ndo inform your claims agent as soon as possible.\n\nCongratulations again from all our staff and thank you for being part of\nour promotions program.\n\n  Sincerely,\n\n  TRACY ROLANDS.\n  THE PROMOTIONS MANAGER,\n  THE INTERNATIONAL LOTTO uk.\n\nN.B.  Any breach of confidentiality on the part of the winners will result\nto disqualification. Please do not reply to this mail. Contact your claims\nagent\n\n\n\n__________________________________________________\nBroadband from an unbeatable ?15.99!\n\nhttp://www.tiscali.co.uk/products/broadband/home.html?code=SM-NL-11AM\n\n\n\n", "id": "lists-005-4471700"}, {"subject": "No-Prescription, Who|esa|e Pr|ce!  Rj4", "content": "Hubbard\n\nNo Pres-cription Needed. JUst click and purchased at the wholesale price! Gua.ranteed\ncheaper than other retailer or your money back! Choices include Cia.lis, via.gr.a, Prozac, \nLipitor and many more to choose!\n\nClick this link to get this exciting offers while stock last!\n\nhttp://www.cheapmedzsource.biz/index.php?refid=shan03\n\n\n\n\n\n\n\n\n\n\nTo be remove, click below:\nhttp://www.cheapmedzsource.biz/optout.php?refid=shan03\nr[40-70\n\n\n\n", "id": "lists-005-4482178"}, {"subject": "????????!???????? ???????????? ???????? aqvj kkbxldjjsty", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-4488999"}, {"subject": "From M", "content": "IFAX: 17752648168\nHello,\nCompliments of the day.\n \nMy colleagues and I are  officials \nof my country's Contracts Review Panel   who are \ninterested in diverting  some funds that are presently floating in \nin an accounts in my country. In order to commence \nthis transaction, we solicit for your assistance  to enable us \ntransfer into your nominated account the said floating  funds. We \nare determined to conclude the transfer before the end of this \nquarter \nThe source of the funds are as follows: During the last military \nregime in my country,government officials set up companies and \nawarded  themselves  contracts that were grossly over-invoiced in \nvarious ministries and  parastatals.The present civilian government \nset up the Contract Review Panel, which  has the mandate to use the \ninstruments of payments made available to  it by the decree setting \nup the panel, to review these contracts and pay those who are being \nowed outstanding amounts. \nHowever our positions as civil servants and members of  this \ncommittee, we cannot acquire these money in our names or in the \nnames of companies that are based in my country. \nwe are looking for a reliable  overseas partner into whose account \nwe can transfer the sum of   Twenty million, five \nhundred thousand .That is why I am  seeking your assistance. We \nhave agreed to share the money to be transferred  into your \naccount, between you and us in the ratio I shall tell you  if you agree with our proposition,\nWe wish to invest our share in foreign stock markets and other viable \nbusiness till we are ready and able to have access  to them without \nraising any eyebrows here at home. \nWe intend to effect  the transfer within fourteen days. we will use \nyour company name to  apply for the payment and backdate the award \nof the contract in favour of your company.\nI will bring you into a more detailed picture of this business when \nI hear from you.Please treat the above information in confidence. for urgent response reach me at ufombassey@fastermail.com\nThank You\nUfom Bassey\n\n\nhttp://www.latinmail.com - La forma m?s c?moda de enviar y recibir tus e-mails\n\n\n\n", "id": "lists-005-4495522"}, {"subject": "repl", "content": "ATTN,\n\nCompliments of the day.I do hope this letter will not\ncome to you as a surprise. It was borne out of my\ndesire to share a mutual business relation ship with\nyou.\n\nMy name is Mr. cole hans,a Secretary,a Ghana\nnational married with four children. I work as an\nadministrative Secretary to Diplomatic Courier\nSecurities and Finance company,in Accra-Ghana.\n\nI decided to contact you believing that by the grace\nof God, you will accept to be my patner in this\nbusiness. I earn a salary of ?1.4M -200 USD equivalent\nmonthly. I joined the services of this company in 1991\nas an office assistant. I decided\nto contact you believing that by the grace of God the\nyou will accept to be my partner in this business.\n\nI have been working with this company for nine years.\nWithin this period, I have watched with meticulous\nprecision how African Heads of States and government\nfunctionaries have been using Diplomatic Courier\nSecurities and Finance to move huge sums of money USD,\nPound sterling, French France - (Cash) to their\nforeign partners.\n\nThey bring in these consignments of money cash and\nsecretly declare the contents as jewelleries, gold,\ndiamond, precious stones, family treasure, documents\netc. Gen. Sani Abacha of Nigeria (dead), Mobutu Sese\nSeko of Zaire (dead) Foday Sankoy of Siera - Leone,\nBabangida of Nigeria etc. All these people have\nhundreds of consignments deposited with Diplomatic\nCourier Securities and Finance. Their foreign\npartners, friends and relatives, are claiming most of\nthese consignments. A lot of them are lying here\nunclaimed for as much as 15 yrs. No body may ever come\nfor them because in most cases, the documents of\ndeposit are never available to any body except the\ndepositors most of them dead.\n\nSince the inception of the 2000 millennium, Diplomatic\nCourier Securities and Finance changed the procedure\nof claims of consignments. As soon as you are able to\nproduce all the secret information as contained in the\nsecret file of any consignment, it will be released to\nyou upon demand. From our record, more than 120\nconsignments belonging to Gen Abacha / Mobutu Sese\nSeko, has been claimed in the past six months. This is\nwhy I am soliciting for your co-operation and\nassistance. Gen. Abacha has 85 consignments deposited\nwith several names and codes. 35 have been claimed in\nthe past six months.\n\nI have finished every arrangement for you to come and\nclaim consignment No 1201 containing USD 7.5M and\nconsignment No 1200 contain USD 1.5M. My duty is to\nsupply you with all the information and documents\nby fax. You will deal directly with the management.\n\nThe procedure is simple:You will apply officially to\nthe Director of Operations of Diplomatic Courier Securities and Finance\nfor the elease of consignmentNo 1200 and No 1201. They will demand some\ndocuments and secret codes. Call me, I?ll supply you with every detailed\ninformation.Fax it to them.As soon as they confirm it to be correct. They\nwill invite you forthe\ncollection.\n\nIf you do not want to come to Accra, you can arrange\nwith them to transfer the consignment to any where on agreement.No body\nwill ever know I am involved in the deal except the Lawyer who will write an\nagreement for us.I?ll suggest upon conclusion we share 50 - 50.At the\nsuccesful conclusion of the deal,you?ll arrangefor me and my family to\ncome over to your country. I assure you that the business have been\nhatched for 5 years now,it isvery very secure and risk free.\n\nYou can get back to me on this mail address giving me\nyour secured phone and fax numbers for further\nexplanations and directives\non the procedure.\n\nGod Bless You.\nSincerely Yours,\n\nMr. cole hans\n\n\n\n", "id": "lists-005-4504285"}, {"subject": "THANKS", "content": "Dear Friend,\n \n Greetings\"\n\n I am Hajia (Mrs.) Mariam Abacha, wife of late\n Nigerian head of state- Gen. Sanni Abacha. We have\n not met before,I got your contact through Nigerian\n Chamber of Commerce and I felt I should trust you.\n It is no news telling you that my family has been\n going through untold hardship since the 18th June\n 1998 when my husband died.\n \n My family has lost so much including some fixed\n assets my husband acquired while in office.\n Evidently, the pages of all Nigeria dailies, which\n you can equally get from Nigeria embassy in your\n country, will tell better our story. Even now, our\n homes are under surveillance, worst of all, the\n Government has restored to consficating everything\n that has to do with our family.\n \n Before the death of my husband, he ran among other\n business of his own, bureau de change, which was\n flourishing with every Government support. From the\n bureau de change business, which has now been\n clamped down by Nigeria Government, I was able to\n save USD$24,000,000.00 in cash. I tried to safeguard\n it in a security company here in Nigeria but\n couldn??t. Through the help of a close family friend\n who works in a security company, I delivered the\n USD$24 million and moved it out of Nigeria under the\n label of photographic materials to a security\n company in EUROPE.For security reason,I wouldn??t\n mention the name of the country until I hear from\n you.\n \n In view of our condition here and the high interest\n rate the security company charges, the money could\n not be safe there.\n \n I would therefore need your honest assistance to\n move this fund from the Security Company to your\n nominated bank account. Once the money is\n safeguarded in your account, I would require your\n directives to enable me invest same in any viable\n business venture. If you accept this offer, of\n assistance you are requested to contact me via my\n email address as above or my lawyer Barrister Ahmed\n Bako & co. via his e-mail address: barrister \n [ahmedbako_ass100@irangate.net] As soon as he receives\n your acceptance notice, he will furnish you with the\n details which includes; lodging code and clearance\n permit to enable you clear the consignment from the\n Security Company. Note that, You will be accorded \n with 20% of the total sum for your assistance.\n \n Finally, you are requested to indicate your\n telephone and fax numbers to me or my lawyer for\n easier communication.\n \n While thanking you for your anticipated\n co-operation, I look forward to your urgent reponse.\n \n \n Best regards,\n Hajia Mariam  Abacha.\n\n\n\n", "id": "lists-005-4513829"}, {"subject": "Re: cordit", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-4522570"}, {"subject": "?????????????????????????????????????????????????????????????????????????????????????????", "content": "????????????????????????????????????????????????????\n??????????????????????????????????????????\n\n??????????????????:\n\n    ???????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????? \n????????????????????????????????????,????,????,????????????????????????????????????????/????/????????????????????????????????????????????????????????????????????????????5????????????????????????????????\"??????\"?????? ??????????????????????????????????????????\n\n1??????????????????????????????????/??????????/????????????/??????????????????????????????????????????????????????????????????????????????????????\n\n2??????????????????????????????????????????????????????????????????????????????????????????????????10??????????????\n\n3?? ???????????????????????????????????????????????????????????????????????????????????????????????????????????????????????quot;??????????????\"??????????????????????\"??????????????\"??????????????????????\"????????????\"??????????????????????????????????\"????????????\"????????????????????????????????.\n\n??????????????????\n\n??????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????Excel????????????????????????????????????????????????????????????????\n\n??????????????????\n\n??????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n\n????????????????????\n\n????????????Windows????,????????????????????????\n??????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????\nn\n??????????????\n\n??????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n\n??????????\n(1)????????????????????????????????????????????\n(2)??????????????????????????????????????????????????????????????????????????????????????????\n(3)??????????????????????????????????????????????????????\n\n????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n\n\n????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????.....\n??????????????????????????????http://wlhome.432.cn\n??????????????????????????????http://wlhome.432.cn\n????EMAIL??????????????tongke20002000@yahoo.com.cn\n\n????????????\n??????????020-87227312      87228312           QQ:36768830 \nEMAIL??tongke20002000@yahoo.com.cn\n\n\n\n\n\n\n\n\n", "id": "lists-005-4528803"}, {"subject": "Dating Website Software for sale $99 - THE MAKING MONEY MACHINE FOR  JUST $9", "content": "I am selling a Dating Website software script for just $99\n\nIF YOU ARE INTERESTED PLEASE E-MAIL ME AT plpmauto@yahoo.com or plpm@cantv.net\n\nThanks.\n\nThis is 1 time email. PLEASE ONLY SERIOUS OFFERS. More Information Below.\n\nDATING WEBSITE FOR SALE\n\nI am selling a excellent website it has all the capabilities of match.com and date.com it was built using PHP and MYSQL as Database. \nIt?s a Personals, Dating software with chat, search, email  and advanced matching capabilities. Full scalable and Platform independent. \nFeatures:\n\nMember?s Login \nError Trap Capability \nAdvanced Search Features. \nWho?s Online \nSuccess History \nWho?s Birthday \nChat \nWho?s New \nFeatured Members \nCommunities \nE-mail Capability (Between Members) \nWho?s Online \nShow Interest Feature \nAccount Management \nBlock User Feature \nMember?s Profile \nPayment Feature \nChange Password \nSite Tour \nYour Interest List \nForgot Password Feature \nYour Blocked List \nContact Us \nAlerts \nPrivacy Policy \nWho?s Interested \nAnd many other features? \n\nFront End \n(Built in PHP 4.32 \nBack End \nIt is built in MYSQL \n\nMain Competitors \nMatch.com, Date.com, Kiss.com \nStrongest Points \nWell designed code, smartest search Capabilities,  Platform Independent, FULL Scalable, built in 3 main layers.  Easy to Debug Code, with this system you will have  more control, more stability, more (much more) security and extensibility. \nTo run the software is needed: \nPHP enabled server. UNIX or WINDOWS IIS\nMYSQL \nPrice:\nUS$ 99\n\nURL\nContact Owner\n\nContact Owner\nplpmauto@yahoo.com\nplpm@cantv.net\n\n\n\n", "id": "lists-005-4541241"}, {"subject": "Virus Aler", "content": "***************************** InterScan Message (on the network)\n\nThe e-mail message you sent contained a virus. \nThe file was deleted.\n\n  virus         : WORM_NETSKY.Q \n  file          : mail31750.zip \n  detected date : 03/29/2004 21:41:30 \n\nPlease refer to the Trend Micro web site about the virus.\nhttp://www.antivirus.com/\n\nThis notification is sent automatically by the anti virus server.\n\n x \n x \n\n   x      x WORM_NETSKY.Q \n x mail31750.zip \n x        x 03/29/2004 21:41:30 \n\n x Trend Micro x \nhttp://www.trendmicro.co.jp/\n\n x \n x \n\n\nVirusCheck - http://www.cw.com/jp\n**********************************************************\n\n\n\n", "id": "lists-005-4550845"}, {"subject": "## Virus Check Alert #", "content": " x \n x \n x \ninfo@ppvj.co.jp\n x \n\nA virus was detected from the mail sent by you,\nbut the file could not be repaired.\nThe file has been deleted and the mail sent to\ninfo@ppvj.co.jp\n\n\n--- Virus scan results follow ---\n x : message.pif\n x :     W32.Netsky.Q@mm\n x ID:     37711\n\nInfected file name:  message.pif\nInfected virus name: W32.Netsky.Q@mm\nInfected virus ID:   37711\n\n\n--- Original message information follows ---\nReceived: from purify03.attnet.ne.jp (purify.attnet.ne.jp [165.76.8.44])\nby virus02.attnet.ne.jp (Postfix) with ESMTP id B7D8B9305\nfor <info@ppvj.co.jp>; Mon, 29 Mar 2004 21:44:09 +0900 (JST)\nReceived: from ns.sh-tky.attnet.ne.jp (ns.sh-tky.attnet.ne.jp [165.76.8.34]) by purify03.attnet.ne.jp (8.9.3p3+Spin/3.7WJENS-stand3(11/28/03)) id VAA29771; Mon, 29 Mar 2004 21:44:09 +0900 (JST)\nFrom: ietf-charsets@w3.org\nReceived: from ppvj.co.jp (nttkyo035101.tkyo.nt.adsl.ppp.infoweb.ne.jp [61.121.19.101]) by ns.sh-tky.attnet.ne.jp (8.9.3p3/3.6W-JENS-stand2(04/09/02)) id VAA16005; Mon, 29 Mar 2004 21:44:06 +0900 (JST)\nMessage-Id: <200403291244.VAA16005@ns.sh-tky.attnet.ne.jp>\nTo: info@ppvj.co.jp\nSubject: Error (info@ppvj.co.jp)\nDate: Mon, 29 Mar 2004 21:44:40 +0900\nMIME-Version: 1.0\nContent-Type: multipart/related;\ntype=\"multipart/alternative\";\nboundary=\"----=_NextPart_000_001B_01C0CA81.7B015D10\"\nX-Priority: 1\nX-MSMail-Priority: High\n\n\n\n", "id": "lists-005-4558142"}, {"subject": "(no subject", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-4567302"}, {"subject": "RESPOSTA AUTOMATICA UOL REF", "content": "Ol?.\n\nO UOL recebeu sua mensagem e vai respond?-la t?o logo poss?vel.\n\nAnote o n?mero da ocorr?ncia: 63855135.\n\nPor favor, n?o responda esta mensagem.\n\nCentral de Relacionamento UOL\nwww.uol.com.br/central\n\n\n\n", "id": "lists-005-4573412"}, {"subject": "?????? ???????????????? 3?????????? ???????? HD???? ?????? ???????? !! qk", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-4579913"}, {"subject": "04?? &quot;????????????&quot;?? ?????? ?????? ????????", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-4586953"}, {"subject": "Lotto Claim", "content": "GLOBAL EMAIL LOTTERY INTERNATIONAL PROGRAMME\nEL GORDO DE LA PRIMITIVA\nC/GUZMAN EL BUENO 137 ,28003 MADRID SPAIN\nTELEFAX:0034 912476 77\nREF: CGF/2318786648/04> BATCH: 14/011/IPD\nWINNING NOTIFICATION/FINAL NOTICE\nWe are pleased to inform you of the result of the\nGlobal Lottery International programs held on the 18\nof March 2004. Your e-mail address attached to\nticket number 50941465206-529 with serial number\n5772-54 drew lucky numbers 3-4-17-28-35-44 which\nconsequently won in the 1st category, you have\ntherefore been approved for a lump sum pay out of Euros\n1500.000.00.(One Million and.five hundred thousand euros)CONGRATULATIONS!!!\nDue to mix up of some numbers and names, we ask that\nyou keep your winning information confidential untill\nyour claims has been processed and your money remitted\ninto your account. This is part of our security\nprotocol to avoid double claiming and unwarranted\nabuse of this program by some participants All\nparticipants were selected through a computer\nballot system drawn from over 100,000 company and\n50,000,000 individual email addresses and names from\nall over the world. This promotional program take`s\nplace every three years. We hope with part of your\nwinning you will take part in our end of year 50\nmillion Euros international lottery.\nTo file for your claim,please contact our fiduciary\nagent\nMr CARLOS Lopex,\nEUROCITY SECURITY COMMISSION,\nMADRID SPAIN\nEmail:antolopex@netscape.net\nTel:0034675337986.\nRemember, all winning must be claimed not later than\n31stof March 2004. After this date all unclaimed\nfunds will be included in the next stake Please note\nin order to avoid unnecessary delays and complications\nplease remember to quote your reference number and\nbatch numbers in all correspondence.\nFurthermore,should there be any change of address do\ninform our agent as soon as possible. Congratulations\nonce more! from our members of staff and thank you for\nbeing part of our promotional program. Note: Anybody\nunder the age of 25 is automatically disqualified.\nSincerely yours,\nMars Anthony\n(Lottery Co-ordinator)\n\n\n\n", "id": "lists-005-4594243"}, {"subject": "(????)?????????? ???????????? ???????? ??????????&#64; 070069069", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-4602708"}, {"subject": "(????)?????????? ???????????? ???????? ??????????&#64; 780324010", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-4609689"}, {"subject": "????????????????", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-4616654"}, {"subject": "????????????????????1?? ???? ?????? ?????? ???? ???? ???? ??????????!! derxkfyd orbt", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-4623160"}, {"subject": "Mutual Assistanc", "content": " FROM:MRS JESSICA SAVIMBI \n12 MURORE STREET IKATE \nBENIN REPUBLIC \nEMAIL:favour090@mail8.com \n\nSUBJECT:PLEASE TREAT URGENT \n\nDEAR FRIEND, \nHOW ARE YOU? I PRAY THIS MESSAGE REACHES YOU IN GOOD \nHEALTH, I AM MAKING THIS CONTACT BASED ON MY PRESENT \nCONDITION, BASED ON TRUST,FAITHFULNESS AND HOPE \nIRRESPECTIVE OF THE FACT THAT WE HAVE NOT MET OR SPOKEN \nBEFORE, AND BECAUSE OF MY PRESENT PREDICAMENT AM ABOUT TO \nINTRODUCE TO YOU, I WANT TO REMAIN POSITIVE THAT YOU WILL \nHEAR ME OUT AND UNDERSTAND MY FULL INTENTIONS OF \nCONTACTING YOU. \nAND I ALSO WANT TO BELIEVE THAT YOU WILL BE CAPABLE OF \nHELPING ME OUT AND HANDLING THE COMPLETION OF MY DREAMS \nFOR MY CHILDREN, WHICH WILL ALSO BE BENEFICIAL TO YOU AND \nYOUR FAMILY TOO. \n\nI AM MRS JESSICA SAVIMBI FROM ANGOLA, I GOT YOUR CONTACT \nFROM THE INDUSTRY TRADE DIRECTORY OF YOUR COUNTRY, AM \nABOUT TO SHARE WITH YOU AN INFORMATION WHICH MEANS ALOT TO \nMY LIFE AND THE FUTURE OF MY FAMILY AND I WANT IT TO \nREMAIN CONFIDENTIAL BETWEEN US. \nMY LATE HUSBAND UNITA REBEL LEADER JONAS MALHEIRO SAVIMBI \nWHO WAS KILLED BY THE ANGOLAN MILITARY FORCE \nAS A RESULT OF THE ISSUE OF MINERAL AND DIAMOND \nALLOCATION, DEPOSITED THE SUM OF $10.5M GOTTEN FROM THE \nSALES OF DIAMOND SMUGGLED INTO NEIGHBOURING COUNTRY IN A \nSUNDARY ACCOUNT WITH A BANK IN NIGERIA, \n\nPRESENTLY AM NOW A REFUGEE DUE TO THE WAR, THE DEALTH OF \nMY HUSBAND AND THE SEIZURE OF OUR BELONGINGS. \nI CAN NOT MAKE WITHDRAW OF THE FUND DUE TO MY PRESENT \nSTATUS AND BECAUSE THE FUND WAS DEPOSITED WITH A FOREIGN \nPARTNER AS BENEFICIARY, THIS WAS USE AS A CODE FOR \nSECURITY REASONS. \nI HAVE IN POSSESION ALL THE DOCUNMENT. \nWHAT I WANT YOU TO DO IS TO ASSIT ME TO GET THE FUND \nWITHDRAW AND TRANSFERED TO YOUR COUNTRY WHERE I AND MY \nCHILDREN CAN BEGIN A NEW LIFE. \nWE SHALL OPEN A SMALL ACCOUNT WITH THE BANK IN YOUR NAME \nWHERE THE FUND WILL BE ! TRANSF! EED TO AND THEN \nTRANSFERED TO YOUR NOMINATED ACCOUNT. \n\nI WILL GIVE YOU 15% OF THE MONEY FOR YOUR ASSISTANCE 5% \nFOR ANY EXPENSES WE MEEET INCURE. \nTHERE IS NO RISK IN THIS TRANSACTION, I WILL BE EMPLOYING \nTHE SERVICES OF A LAWYER TO ENSURE THE LEGALITY AND SFETY \nOF THE FUND. \nI WILL USE THE REMAIN MONEY FOR AN INVESTMENT IN YOUR \nCOUNTRY FOR THE FUTURE OF MY CHILDREN. \nIF YOU ARE INTERESTED AND CAN MAINTAIN THE VERY CONFIDENCE \nOF THIS TRANSFER PLEASE CONTACT ME IMMEDIATLY. \n\nI WILL LIKE YOU TO KNOW THAT PRESENTLY AM A REFUGEEE IN \nBENIN REPUBLIC BECAUSE OF THE KILLING OF MY HUSBAND, I \nHAVE THREE CHILDREN TWO BOYS AND A GIRL. \nAN AGREEMENT WILL BE WRITTEN BETWEEN YOU AND ME BEFORE THE \nTRANSACTION. \nAWAITING YOUR URGENT REPLY KINDLY REPLY ME THROUGHT THIS \nEMAIL ADDRESS \nfavour090@mail8.com \n\nMRS J SAVIMBI \n \n\n\n\n", "id": "lists-005-4630343"}, {"subject": "URGENT!!", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-4639903"}, {"subject": "I  NEED  YOUR  ASSISTANC", "content": "             \nDEAR PARTNER, \n\nIN ORDER TO TRANSFER OUT ( TWENTY SIX MILLION U.S.DOLLARS) \nFROM OUR BANK. \n\nI HAVE THE COURAGE TO LOOK FOR A REALIABLE AND HONEST \nPERSON WHO WILL BE CAPABLE FOR THIS IMPORTANT BUSINESS. \nBELIEVING THAT YOU WILL NEVER LET ME DOWN \nEITHER NOW OR IN FUTURE. \n\nI AM MR. EMMANUEL DELE.THE MANAGER OF UNITED BANK OF AFRICA\nPLC \n\n(U.B.A). \nTHERE IS AN ACCOUNT OPENED IN THIS BANK IN 1980 AND SINCE\n1990 NOBODY HAS OPERATED ON THIS ACCOUNT AGAIN. \n\nAFTER GOING THROUGH SOME OLD FILES IN THE RECORDS I \nDISCOVERED THAT IF I DO NOT REMITT THIS MONEY OUT \nURGENTELY IT WILL FORFEITED FOR NOTHING. \n\nTHE OWNER OF THIS ACCOUNT IS MR JACK HAMILTON A \nFORIGNER AND THE MANAGER OF PETROL CHEMICAL SERVICE, A \nCHEMICAL ENGINEER BY PROFFESSION AND HE DIED SINCE \n1990. NO OTHER PERSON KNOWS ABOUT THIS ACCOUNT OR \nANYTHING CONCERNING IT, THE ACCOUNT HAS NO OTHER \nBENEFICIARY AND MY INVESTIGATION PROVED TO ME AS WELL \nTHAT HIS COMPANY DOES NOT KNOW ANYTHING ABOUT THIS \nACCOUNT AND THE AMOUNT INVLOVED IS(U.S.$ \n26,000,000.00). \n\nI WANT TO TRANSFER THIS MONEY INTO A SAFE FOREIGNERS \nACCOUNT ABROAD BUT I DON'T KNOW ANY FOREIGNER, I AM \nONLY CONTACTING YOU AS A FOREIGNER BECAUSE THIS MONEY \nCAN NOT BE APPROVED TO ANY LOCAL BANK HERE BUT CAN \nONLY BE APPROVED TO ANY FOREIGN ACCOUNT BECAUSE THE \nMONEY IS U.S DOLLARS AND THE FORMER OWNER OF THE \nACCOUNT IS MR JACK HAMILTON AND HE WAS A FOREIGNER \nTOO. \n\nI KNOW THAT THIS MESSAGE WILL COME TO YOU AS A \nSURPRISE AS WE DON'T KNOW OUR SELF BEFORE, BUT BE SURE \nTHAT IT IS REAL AND A GENUINE BUSINESS. \n\nI ONLY  GOT YOUR CONTACT FROM OUR CHAMBERS OF COMMERCE \nSEARCHING WITH BELIEVE IN GOD THAT YOU WILL NEVER LET \nME DOWN IN THIS BUSINESS, YOU ARE THE ONLY PERSON THAT \nI HAVE CONTACTED FOR THIS BUSINESS FOR NOW. SO \nPLEASE REPLY URGENTLY. \n\nWHEN THE TRANSFER IS APPROVED AND PAYMENT SCHEDULE IS \nALLOCATED OVERSEAS, THROUGH THE OFFSHORE PAYING \nDELEGATE FOR FINAL CLEARANCE AND SIGNING OF THE \nPAYMENT RELEASE FORM BY THE BENEFICIARY, I WANT US TO \nSEE AT THE OVERSEA PAYING CLEARANCE OFFICE FACE TO \nFACE OR SIGNING  OF THE ORIGINAL BINDING AGREEMENT TO \nBIND US TOGETHER  SO THAT WE CAN RECEIVE THIS MONEY \nINTO A FOREIGN ACCOUNT OR ANY ACCOUNT OF YOUR CHOICE \nWHERE YOU WANT THE FUND TO BE REMITTED. \n\nI AM CONTACTING YOU BECAUSE OF THE NEED TO INVOLVE A \nFOREIGNER WITH A FOREIGN ACCOUNT AS THE REAL \nBENEFICIARY. I NEED YOUR CO-OPERATION TO MAKE THIS \nWORK FINE, BECAUSE THE MANAGEMENT IS READY TO APPROVE \nTHIS MONEY TO ANY FOREIGNER WHO HAS THE CORRECT \nINFORMATION TO THIS ACCOUNT. \n\nWHICH I WILL GIVE TO YOU WHEN SURE OF YOUR CAPABILITY \nTO HANDLE SUCH AMOUNT IN STRICT CONFIDENCE AND TRUST, \nACCORDING TO MY INSTRUCTIONS AND MY ADIVICE FOR OUR \nMUTUAL BENEFIT BECAUSE I DON'T WANT TO MAKE ANY \nMISTAKE, I NEED YOUR STRONG ASSURANCE AND TRUST. \n\nI SHALL DESTROYED ALL DOCUMENT CONCERNING THIS \nTRANSACTIONS IMMEDIATELY WE RECEIVED THIS MONEY \nLEAVING NO TRACE TO ANY PLACE. \n\nI WILL USE MY POSITION AND INFLUENCE ON OTHER STAFFS \nTO EFFECT LEGAL APPROVALS AND ONWARD TRANSFER OF THIS \nMONEY TO YOUR ACCOUNT WITH APPROPRIATE CLEARANCE FROM \nFOREIGN PAYMENT DEPARTMENT. \n\nWITH ASSURANCE THAT THIS MONEY WILL INTACT PENDING MY \nPHYSICAL ARRIVAL IN YOUR COUNTRY FOR THE SHARING AND \nOTHER INVESTMENT. \n\nAT THE CONCLUSION OF THIS BUSINESS, YOU WILL BE GIVEN \n25% OF THE TOTAL AMMOUNT, 70% WILL BE FOR ME, WHILE 5% \nWILL BE FOR EXPENSES , BOTH PARTIES MIGHT HAVE \nINCURED DURING THE PROCESS OF THIS TRANSACTION. \n\nI LOOK FORWARD TO YOUR EARLIEST REPLY THROUGH THE E \nMAIL AS AT ABOVE OR HROUGH MY PRIVATE E MAIL ADDRESS: \nemma_dele100@hotmail.com\n\n\nYOURS TRULY, \n\nMR. EMMANUEL DELE .\n\n \n \n \n\n        \n \n\n\n\n\n__________________________________________________________________________\nhttp://www.webmail.co.za/dialup Webmail ISP - Cool Connection, Cool Price\n\n\n\n", "id": "lists-005-4646033"}, {"subject": "THANKS", "content": "Dear Sir,\n\nAGENT REQUIRED FOR SOURCING/PURCHASE OF ELECTRICAL CABLES AND DRILLING EQUIPMENTS.\n\nI write to inform you of my desire to purchase and import Electrical Cables and Drilling Equipments in your country on behalf of the Director of Contracts and Finance Allocations of the federal Ministry of POWER AND STEEL in Nigeria. \n\nHence our desire to have an overseas agent is very important. I have therefore been directed to inquire if you would agree to act as our oversea agent in order to actualize this transaction.\n\nThe deal, in brief, is that the funds with which we intend to carry out our proposed investments in your country is presently in a coded account at the Nigerian Apex Bank (i.e. the Central Bank of Nigeria), we intend to transfer the funds to your country in a convenient bank account that will be provided by you before we can put the funds into your account in your country you shall be considered to have executed a contract for the Federal Ministry of POWER AND STEEL in Nigeria for the Supply of Electrical cabbles. The contract sum comes to a total of US$31 Million. We have agreed to give you 30% of the funds for your participation. \n\nAs soon as payment is effected, and the amount mentioned above is successfully transferred into your account, we intend to use our own share in acquiring some Electrical Cables and Drilling Equipment. \n\nFor this you shall also serve as our agent. In the light of this, I would like you to forward to me the following \n\ninformation:\n\n1. Your company name and address.\n\n2. Your personal fax number\n\n3. Your personal telephone number for easy communication.\n\nYou are requested to communicate your acceptance of this proposal through my above stated email address after which we shall discuss in details the modalities for seeing this transaction through. \nYour prompt response will be highly appreciated. \n\nThank you in anticipation of your cooperation.\n\n\n\nYours faithfully,\n\nDR.ABDULLAH RASHEED.\n\n\n\n\n                      \n\n\n\n", "id": "lists-005-4656248"}, {"subject": "SINCERE REQUES", "content": "From Adrian Learf\nValiant Privatbank AG\nPostfach\n3001 Bern Switzerland\nEmail:adlearf@netscape.net\n29th March. 2004.\n\nDear Friend,\n\nSINCERE URGENT REQUEST\n\nI am contacting you on business transfer of a hugh sum of money from a \ndeceased account, Though I know that a transaction of this magnitude \nwill make any one apprehensive and worried but I am assuring you that \nall will be well at the end of the day. We decided to contact you due \nto the urgency of this transaction.\n\nPROPOSITION:\nWe discovered an abandoned sum of US$5,500,000 Five Million Five \nHundred Thousand United States Dollars Only in an account that belongs to one of our foreign customers who died along with his entire family. Since his death none of his next-of-kin or relations has come forward to lay claims for this money as the heir We cannot release the fund from his account unless someone applies for claim as the next-of-kin to the deceased as indicated in our banking guidelines.\n\nUpon this discovery we now seek your permission to have you stand as a \nnext of kin to the deceased as all documentations will be carefully worked out by us for the funds to be released in your favour as the\nbeneficiary's next of kin It may interest you to know that we have \nsecured from the probate an order of madamus to locate any of the \ndeceased beneficiaries.\nPlease acknowledge receipt of this message in acceptance of our mutual business endeavour by furnishing me with the following:\n\nBeneficiary name and address;\n\nDirect Telephone and fax numbers\n\nThese requirements will enable us file letter of claim to the appropriate departments for necessary approvals in your favour before the transfer can be made. You will be compensated with a Million Dollars on final conclusion of this project,while the rest shall be for us. \nYour share stays while the rest shall be for us for investment purposes.\nIf this proposal is acceptable by you do not take undue advantage of \nthe trust we have bestowed on you. I await your urgent mail.\n\nRegards.\n\nAdrian Learf\n  \n\n\n\n", "id": "lists-005-4664239"}, {"subject": "06 reques", "content": "OFFSHORE-DISCRETE Pharmacy...\n\n*No-questions ever asked. We trust the judgement of our clients based on their needs. We guarantee complete privacy on all transactions.\n\nPopular drugs of the MONTH: CIaLis. (35-hour time frame to act), Valium.(rleases stress on the spot, allowing more confidence)\n\nWe have a full-lineup, check all of our low prices & products.\n\n\nhttp://grestr4a.com/m004/index.php?id=m004\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNo more of either, I wish to be taken0ff, thank-you.\nhttp://grestr4a.com/byebye.html\n\n\nafraid afloat surcharge awful fluoresce croft oligoclase ratty furlough caucasus laymen barclay wilcox indecisive siliceous klaxon sardine krishna sulfanilamide downbeat conformal dive dummy tambourine inward ellis cbs tigris postcard resilient utilitarian shibboleth sinclair elegiac \n3\n\n\n\n", "id": "lists-005-4672495"}, {"subject": "Request For Foreign  Partne", "content": "From the Desk of:\nMR.WAZIRI ADIO.\nACCOUNT DEPARTMENT \nMERITH INTL. BANK\nMARINA- BRANCH, LAGOS. \nNIGERIA.\nTELEPHONE NUMBER:234-8046126050\nPRIVATE Email:(waziriadio@702mail.co.za)\n\n                                                                                        Request For Foreign  Partner\n\nDear friend,\n\nI sincerely write to seek your co-operation and trust to enable my colleagues and I carry out an urgent business opportunity in my department.\n\nI work with the Merith Intl.Bank plc currently I am the senior manager of bills and exchange at the foreign remittance department of my bank. I was the account officer to one Mr. Butch.R.Miguel who died along with his family on the 8th of November 1999 in an ADC Boeing 727 plane crash at Egirin River. All 141 passengers on board were feared dead.  He left in his domiciliary account the total sum of $15.5million FiFteen million five hundred thousand USA Dollars. Since the management got the information of his death we have been expecting any of his relation or his next of kin to come up and claim his money. Unfortunately from the day of his death till the time of this letter none of his relation or friends has come up for the claim. The banking and financial law of Merith Intl.Bank plc stipulates that if such fund remained unclaimed after a period of four (4) it will be transferred into the bank treasury as unclaimed bill.\n\n On this discovery, I and two other senior staffs now decided to do business with you and release the money to you as the next of kin to Butch.R.Miguel for safety and subsequent disbursement. I will soon proceed for my retirement leave this year, and I personally do not want this fund to be transferred into the bank treasury as unclaimed bill. That is why I wanted the fund to be move out of the bank before I proceed on my retirement. The need for a foreigner as next of kin in this project is occasioned by the fact that the customer Mr. Butch.R.Miguel was a foreigner and a Nigerian cannot stand as his next of kin or heir. We have agreed that 30% of the Fund would be for you as foreign partner thereafter my colleague and I will visit your country for disbursement according to the percentages indicated. To enable the immediate transfer of the fund into your nominated account,you will first apply to the bank as the next of kin of the deceased,indicating your bank account number and location where in the money will be remitted. Upon receipt of your acknowledgement indicating your interest,I will send to you the text of the application that you will send to the Merith Intl.Bank authority for an approval to submit your claims. Send your reply through my direct and private email address.(waziriadio@702mail.co.za)indicates your direct Fax and telephone number for effective communication that this transaction needs. Do not reply through the Merith Intl.Bank email address because it?s belonged to the senior staffs for public use. \n\nPlease note that you are not to appear in person, as every thing regarding this project will be strictly on documentations and every banking documents needed for this transaction will be taken care of by my self.\n\nLooking forward to your urgent response.\n\nYours Faithfully,\n\nWaziri Adio.\nMERITH INTL. BANK\n\n\n\n", "id": "lists-005-4679230"}, {"subject": "?????????? p", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-4689118"}, {"subject": "?????? ???????????????? 3?????????? ???????? HD???? ?????? ???????? !! scrusqrxokbe lia", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-4695204"}, {"subject": "????????????????????1?? ???? ?????? ?????? ???? ???? ???? ??????????!! l pgmd", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-4702400"}, {"subject": "Norton AntiVirus detected and quarantined a virus in a message you sent", "content": "Recipient of the infected attachment:  KGI-SERVER, First Storage Group\\Mailbox Store (KGI-SERVER), Steve Green/Inbox\nSubject of the message:  0i09u5rug08r89589gjrg\nOne or more attachments were quarantined.\n  Attachment id04009.zip was Quarantined for the following reasons:\n    Virus W32.Netsky.P@mm was found.\n    Virus W32.Netsky.P@mm was found in details.txt                                                                     .pif.\n\n\n\n", "id": "lists-005-4709688"}, {"subject": "?? ???????? ?? ????, ???????? ?? ???? ?? niv attorwtcc", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-4717066"}, {"subject": "?????? ???????????????? 3?????????? ???????? HD???? ?????? ???????? !! v", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-4723977"}, {"subject": "??????,???????? ???????????? ??????????????????! a", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-4730984"}, {"subject": "don't miss out on that great job - get your university degree now", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-4737884"}, {"subject": "CLAIM YOUR LUCKY WINNING..", "content": "EL GORDO SWEEPSTAKE LOTTERY COMPANY S.L\nPLAZA COLONE-28080\nMADRID-SPAIN.\n  \n\nFROM: THE DESK OF THE MANAGING DIRECTOR INTERNATIONAL\nPROMOTIONS/PRICE AWARD DEPARTMENT.\nREF N?: EGSL/25003127/CSL/02\nBATCH N?: 0007571982\n\nDEAR FRIEND, CLAIM YOUR LUCKY WINNING...  \n\n                                                      \nRE: AWARD NOTIFICATION/ FINAL NOTICE.\n\nWe are pleased to inform you of the release of the results EL GORDO SPANISH SWEEPSTAKE LOTTERY/ INTERNATIONAL PROGRAM, Held  12 January 2004. Your \nname attached to a ticket number 025-1146992-750 with serial number 2113-05 drew the lucky numbers 4-18-24-30-31-35 which consequently won the lottery in the 3rd category. You are therefore been approved for a lump sum payout of  800,000.00 (Eight hundred thousand Euros ) in cash credited to the file reference number: EGSL/25003127/CSL/02. This is from the  total cash price of  5,368,770.00 (Five million three hundred and sixty-eight thousand, seven hundred and seventy Euros only) shared among the seventeen international winners in this category.\n\nCONGRATULATIONS!!!\n\nYour fund is now deposited with our accredited offshore bank  insured to your name awaiting  claim. We advice that you keep this award from public notice until your claiming or unwarranted taking advantage of this program by participants. All participants were selected through a computer ballot system drawn from 25,000 names from Asia, Africa, Australia, Canada, U.S.A. ,New Zealand, Europe and North America as part of our international promotions program which we conduct once every year. We hope that with part of your prize, you will part-take in our end of year high stake $1,300,000,000.00 international lottery.\n\nTo begin your claim please contact your claim agent, Mr. John Santi, (Director of International operations, Rock Trust and Security Company)Tel: 0034 679881387,OR via Email: rock_trust@terra.es. For processing and remittance of your prize fund into your designated bank account.\n Note: All prize funds must be claimed before the 30TH of April 2004 after this date all funds will be returned to the MINISTERIO DE ECONOMIA Y HACIENDA as unclaimed. In order to avoid unnecessary delays and complications, please endeavour to quote your reference and batch numbers in every correspondence with us to your claim agent. Furthermore, should there be any change in your address do inform your claim agent as soon as possible. Congratulation once again from all members of our staff and thank you for being part of our promotion program. \n\nN.B. Any breach of confidentiality on the part of the winners will result to disqualification. Please do notreply to this email address. Contact your claim agent.\n\nBest regards\nThe Management.  \n\n\n\n", "id": "lists-005-4747766"}, {"subject": "MUTUAL CONTRACT BENEFI", "content": "DR.MIKE  CHIBUZOR\nExecutive Investigation Chairman,On Contracts Payment\nReview panal Committee. \nFalomo Office Complex, \nIkoyi-Lagos. \nE-mail:dr_mikechibuzor41@telstra.com[ PLEASE REPLY ME WITH \nTHIS E-MAIL ADDRESS]\n\nAttention:ceo \n\nFirst, I must solicit your strictest confidence in this transaction; this is \nvirtue of its nature as being utterly confidential and top secret. \n\nI am the Executive Investigation Chairman Committee on Review of \nContracts Payments instituted by H.E. President Olusegun Obasanjo \nto probe/review all contracts executed and payments made during the \nregime of late General Sani Abacha. I have been mandated by my \ncolleagues on the Committee to seek your assistance in the transfer \nof the sum of US$31.5Million. \n\nAs you may know, the late General Abacha and members of his government \nembezzled billion of dollars through spurious contracts and payments to \nforeigners between 1993-1998, and this is now the subject of probe by \nmy Committee. In the course of our review, we have discovered the \nsum of US$31.5Million,which the former dictator could not transfer from \nthe dedicated account of the Central Bank of Nigeria before his sudden \ndeath on June 8, 1998. It is this amount that my colleagues and I have \ndecided to acquire for ourselves through your assistance. This assistance \nbecomes crucial because we cannot acquire the fund in our names. \n\nWe have thus developed a, fool proof, legal and totally risk free arrangement \nthrough which the fund can be transferred within a very short time, if \nyou follow strictly our instructions. The plan is to use our position and \ninfluence on the Committee to present you as a foreign contractor beneficiary \nof the fund. We shall arrange all documentation to support this claim \nand get Approval for the transfer of the funds for your benefit on our \nbehalf. The arrangement is perfected to be 100% risk free and we are \nsure the transaction can be concluded within 7-10 working days from \nwhen you agree to assist us. \n\nYou should acknowledge the receipt of my mail through the above \nTelephone and Fax numbers Or E-Mail address so we can further \ndiscuss the modalities of your cooperation and negotiate the charge \nfor your kindly assistance. You were highly recommended and You \ndefinitely have a lot to benefit from this transaction as we are prepared \nto give you 30% of the total funds as soon as you secure it in your \nAccount. \n\nPlease, endeavour to give me your telephone/fax number(s)including \na bank details  for  the  transfer of the  above  fund,through which we \ncan communicate with you in confidence (in your response) as the \nneed for strict confidentiality is of essence to this transaction.\n\nPlease i want your reply from this email:<dr_mikechibuzor41@telstra.com>\n\nWe await your urgent response. \n\nYours Faithfully, \n\nDR.MIKE  CHIBUZOR.\nCHIARMAN CONTRACT\nREVEIW\n\n\n\n\n", "id": "lists-005-4757948"}, {"subject": "00 offer reques", "content": "Today is a new day for your residence. With levels \nat their headline-making historic lows, our programs \nare better now than ever before. Even if you've recently \nclosed on a property, now is the time to check your \nnumbers.\n\nOur advisors are here to help you decide your options.\nIn fact, did you know that a 30 year fixed program may \nnot always be the best option? \n\nThere are other ways to do it, and we would like to tell \nyou about it.\n\nFind out what all your neighbors are talking about:\n\nToday's low rate: 1.82%\n\nhttp://ahomelender.com/?partid=n278\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFuture reference options:\nhttp://ahomelender.com/st.htm\n\n\nbernardo possessive gadget fine manama fractious lizzie newscast quadratic bolster seance strafe macrame atlas chapel supernatant concubine optimum abigail inhibitory \n\n\n\n", "id": "lists-005-4767452"}, {"subject": "Generic Phentermine prescribed online for free and shipped overnight to your door. zsy ", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-4774350"}, {"subject": "I received a lottery e-mail like yours. I think this is a false advertissement", "content": "Hello:\n\n\nI received the same e-mail like yours. What do you think? This is a joke. You won in the same category that I won and the same date,the same sume of money,600,000.00 euros.\nIt can't be true. I will paste my e-mail bottom of this. Please tell me what did you do about this. I think that we have to stop this kind of people. If you know that this is serious and you received your prize already, please tell me what to do. I will appreciate it. Otherwise lets work together against them. Thank you and forgive my poor english. Please compare my e-mail with yours. I taulked to Mr. de Leon by phone already.\n\n----- Original Message -----\n> From: \"INTERNATIONAL OFFSHORE TRUST\" <iot55@whipmail.com>\n> To: <jottaele@hotmail.com>\n> Sent: Monday, March 22, 2004 4:59 AM\n> Subject: SWEEPSTAKE LOTTERY WINNER\n>\n>\n> FROM: THE DESK OF THE VICE PRESIDENT\n> INTERNATIONAL PROMOTIONS/PRIZE AWARD DEPT.\n>\n> REF NO: BXK/2560145701/02.\n> BATCH NO:14/0013/1PD\n> Date:12TH OF MARCH ..,2004.\n>\n>\n>\n>\n>\n> RE:AWARD NOTIFICATION FINAL NOTICE\n>\n> WE are pleased to inform you of the release of the results of the GLOBAL\nNET\n> SWEEPSTAKE LOTTERY /INTERNATIONAL PROGRAM held on the 12TH OF MARCH.,2004.\n>\n> Your name attached to ticket number 02511464992750 with  Serial number\n> 211305 drew the lucky numbers 41824303135 which consequently won the\n> lottery in the 3rd category. You have therefore been approved for a lump\nsum\n> payout of US$600,000.00 (SIX  HUNDRED THOUSAND DOLLARS) in cash credited\nto\n> file REF NO:BXK/2560145701/02.This is from a total cash prize of\n> US$15,000,000,00(FIFTEEN MILLION US DOLLARS) shared among the twenty five\n> international winners  in this category.\n>\n> CONGRATULATIONS!!!\n>\n> Your fund is now deposited with a security company insured to your\nname.Due\n> to mixed up of some numbers  and names, we ask that you keep this award\nfrom\n> public notice until your claim has been processed and your money remitted\nto\n> your nominated account as this is a part of our security protocol  to\navoid\n> double claiming or unwarranted taking advantage of this program by\n> participants.\n>\n> All participants were selected through a computer ballot system drawn from\n> 25,000 names from Asia, Australia, New zealand, Europe and North America\nas\n> part of our international promotions program which we conduct once every\n> year. We hope that with a part of your  prize , you will take part in our\n> end of year HIGHSTAKE US$50 Million International lottery.\n>\n> To begin your lottery claim please contact,the finacial institution\nincharge\n> your payment through   Foreign Operations.\n> DR DAVID LEON (Operations)INTERNATIONAL OFFSHORE TRUST. MADRID,SPAIN. on\n> TELL:0034659743353 E.mail: dleon@whipmail.com  for processing and\n> remittance of your prize money to a designated account of your\n> choice.Remember all prize money must be claimed not later than 30TH OF\n> MARCH,2004.After this date all funds will be returned to the MINISTERIO DE\n> ECONOMIA Y HACIENDA as unclaimed.\n>\n> NOTE: In order to avoid unnecessary delays and  complications, please\n> remember to quote your reference and batch numbers including your (CONTACT\n> TELEPHONE NUMBER) ,in every correspondence with us or your\n> agent.Furthermore, should there be any change of your address, do inform\n> your claims agent as soon as possible.Congratulations once again from all\n> members of our staff and thank you for being a part of our promotions\n> program.\n>\n> Best regards,\n>\n> LOPEZFERNANDO\n>\n> (VICE PRESIDENT\n\n\n\n\n\n\n\n\n\n\n\nFROM: THE DESK OF THE VICE PRESIDENT\nINTERNATIONAL PROMOTIONS/PRIZE AWARD DEPT.\n\nREF NO: BXK/2560145701/02.\nBATCH NO:14/0013/1PD\nDate:12TH OF MARCH ..,2004.\n\n\n\nATTN:\n\n               RE:AWARD NOTIFICATION FINAL NOTICE\n\nWE are pleased to inform you of the release of the results of the GLOBAL NET SWEEPSTAKE LOTTERY /INTERNATIONAL PROGRAM held on the 12TH OF MARCH.,2004.\n\nYour name attached to ticket number 02511464992750 with  Serial number\n211305 drew the lucky numbers 41824303135 which consequently won the\nlottery in the 3rd category. You have therefore been approved for a lump sum payout of US$600,000.00 (SIX  HUNDRED THOUSAND DOLLARS) in cash credited to file REF NO:BXK/2560145701/02.This is from a total cash prize of US$15,000,000,00(FIFTEEN MILLION US DOLLARS) shared among the twenty five international winners  in this category.\n\nCONGRATULATIONS!!!\n\nYour fund is now deposited with a security company insured to your name.Due to mixed up of some numbers  and names, we ask that you keep this award from public notice until your claim has been processed and your money remitted to your nominated account as this is a part of our security protocol  to avoid double claiming or unwarranted taking advantage of this program by participants.\n\nAll participants were selected through a computer ballot system drawn from 25,000 names from Asia, Australia, New zealand, Europe and North America as part of our international promotions program which we conduct once every year. We hope that with a part of your  prize , you will take part in our end of year HIGHSTAKE US$50 Million International lottery.\n\nTo begin your lottery claim please contact,the finacial institution incharge your payment through   Foreign Operations.\nDR DAVID LEON (Operations)INTERNATIONAL OFFSHORE TRUST. MADRID,SPAIN. on\nTELL:0034659743353 E.mail: dleon@whipmail.com  for processing and\nremittance of your prize money to a designated account of your\nchoice.Remember all prize money must be claimed not later than 30TH OF\nMARCH,2004.After this date all funds will be returned to the MINISTERIO DE ECONOMIA Y HACIENDA as unclaimed.\n\nNOTE: In order to avoid unnecessary delays and  complications, please\nremember to quote your reference and batch numbers including your (CONTACT TELEPHONE NUMBER) ,in every correspondence with us or your\nagent.Furthermore, should there be any change of your address, do inform\nyour claims agent as soon as possible.Congratulations once again from all members of our staff and thank you fFROM: THE DESK OF THE VICE PRESIDENT\nINTERNATIONAL PROMOTIONS/PRIZE AWARD DEPT.\n\nREF NO: BXK/2560145701/02.\nBATCH NO:14/0013/1PD\nDate:12TH OF MARCH ..,2004.\n\n\n\nATTN:\n\n               RE:AWARD NOTIFICATION FINAL NOTICE\n\nWE are pleased to inform you of the release of the results of the GLOBAL NET SWEEPSTAKE LOTTERY /INTERNATIONAL PROGRAM held on the 12TH OF MARCH.,2004.\n\nYour name attached to ticket number 02511464992750 with  Serial number\n211305 drew the lucky numbers 41824303135 which consequently won the\nlottery in the 3rd category. You have therefore been approved for a lump sum payout of US$600,000.00 (SIX  HUNDRED THOUSAND DOLLARS) in cash credited to file REF NO:BXK/2560145701/02.This is from a total cash prize of US$15,000,000,00(FIFTEEN MILLION US DOLLARS) shared among the twenty five international winners  in this category.\n\nCONGRATULATIONS!!!\n\nYour fund is now deposited with a security company insured to your name.Due to mixed up of some numbers  and names, we ask that you keep this award from public notice until your claim has been processed and your money remitted to your nominated account as this is a part of our security protocol  to avoid double claiming or unwarranted taking advantage of this program by participants.\n\nAll participants were selected through a computer ballot system drawn from 25,000 names from Asia, Australia, New zealand, Europe and North America as part of our international promotions program which we conduct once every year. We hope that with a part of your  prize , you will take part in our end of year HIGHSTAKE US$50 Million International lottery.\n\nTo begin your lottery claim please contact,the finacial institution incharge your payment through   Foreign Operations.\nDR DAVID LEON (Operations)INTERNATIONAL OFFSHORE TRUST. MADRID,SPAIN. on\nTELL:0034659743353 E.mail: dleon@whipmail.com  for processing and\nremittance of your prize money to a designated account of your\nchoice.Remember all prize money must be claimed not later than 30TH OF\nMARCH,2004.After this date all funds will be returned to the MINISTERIO DE ECONOMIA Y HACIENDA as unclaimed.\n\nNOTE: In order to avoid unnecessary delays and  complications, please\nremember to quote your reference and batch numbers including your (CONTACT TELEPHONE NUMBER) ,in every correspondence with us or your\nagent.Furthermore, should there be any change of your address, do inform\nyour claims agent as soon as possible.Congratulations once again from all members of our staff and thank you for being a part of our promotions  program.\n\nBest regards,\n\nLOPEZFERNANDO\n\n(VICE PRESIDENT)\nor being a part of our promotions  program.\n\nBest regards,\n\nLOPEZFERNANDO\n\n(VICE PRESIDENT)\n\n\n\n", "id": "lists-005-4781313"}, {"subject": "???", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-4799522"}, {"subject": "Re: I received a lottery e-mail like yours. I think this is a false advertissement", "content": "  ----- Original Message ----- \n  From: Jose Luis Vargas \n  To: ietf-charsets@w3.org \n  Sent: Thursday, January 29, 2004 5:15 PM\n  Subject: I received a lottery e-mail like yours. I think this is a false advertissement.\n\n\n  Hello:\n\n\n  I received the same e-mail like yours. What do you think? This is a joke. You won in the same category that I won and the same date,the same sum of money,600,000.00 euros.\n  It can't be true. I will paste my e-mail bottom of this. Please tell me what did you do about this. I think that we have to stop this kind of people. If you know that this is serious and you received your prize already, please tell me what to do. I will appreciate it. Otherwise lets work together against them. Thank you and forgive my poor english. Please compare my e-mail with yours. I talked to Mr. DavidLeon by phone already. I corrected my orto- graphic errors. I hope.\n\n  ----- Original Message -----\n  > From: \"INTERNATIONAL OFFSHORE TRUST\" <iot55@whipmail.com>\n  > To: <jottaele@hotmail.com>\n  > Sent: Monday, March 22, 2004 4:59 AM\n  > Subject: SWEEPSTAKE LOTTERY WINNER\n  >\n  >\n  > FROM: THE DESK OF THE VICE PRESIDENT\n  > INTERNATIONAL PROMOTIONS/PRIZE AWARD DEPT.\n  >\n  > REF NO: BXK/2560145701/02.\n  > BATCH NO:14/0013/1PD\n  > Date:12TH OF MARCH ..,2004.\n  >\n  >\n  >\n  >\n  >\n  > RE:AWARD NOTIFICATION FINAL NOTICE\n  >\n  > WE are pleased to inform you of the release of the results of the GLOBAL\n  NET\n  > SWEEPSTAKE LOTTERY /INTERNATIONAL PROGRAM held on the 12TH OF MARCH.,2004.\n  >\n  > Your name attached to ticket number 02511464992750 with  Serial number\n  > 211305 drew the lucky numbers 41824303135 which consequently won the\n  > lottery in the 3rd category. You have therefore been approved for a lump\n  sum\n  > payout of US$600,000.00 (SIX  HUNDRED THOUSAND DOLLARS) in cash credited\n  to\n  > file REF NO:BXK/2560145701/02.This is from a total cash prize of\n  > US$15,000,000,00(FIFTEEN MILLION US DOLLARS) shared among the twenty five\n  > international winners  in this category.\n  >\n  > CONGRATULATIONS!!!\n  >\n  > Your fund is now deposited with a security company insured to your\n  name.Due\n  > to mixed up of some numbers  and names, we ask that you keep this award\n  from\n  > public notice until your claim has been processed and your money remitted\n  to\n  > your nominated account as this is a part of our security protocol  to\n  avoid\n  > double claiming or unwarranted taking advantage of this program by\n  > participants.\n  >\n  > All participants were selected through a computer ballot system drawn from\n  > 25,000 names from Asia, Australia, New zealand, Europe and North America\n  as\n  > part of our international promotions program which we conduct once every\n  > year. We hope that with a part of your  prize , you will take part in our\n  > end of year HIGHSTAKE US$50 Million International lottery.\n  >\n  > To begin your lottery claim please contact,the finacial institution\n  incharge\n  > your payment through   Foreign Operations.\n  > DR DAVID LEON (Operations)INTERNATIONAL OFFSHORE TRUST. MADRID,SPAIN. on\n  > TELL:0034659743353 E.mail: dleon@whipmail.com  for processing and\n  > remittance of your prize money to a designated account of your\n  > choice.Remember all prize money must be claimed not later than 30TH OF\n  > MARCH,2004.After this date all funds will be returned to the MINISTERIO DE\n  > ECONOMIA Y HACIENDA as unclaimed.\n  >\n  > NOTE: In order to avoid unnecessary delays and  complications, please\n  > remember to quote your reference and batch numbers including your (CONTACT\n  > TELEPHONE NUMBER) ,in every correspondence with us or your\n  > agent.Furthermore, should there be any change of your address, do inform\n  > your claims agent as soon as possible.Congratulations once again from all\n  > members of our staff and thank you for being a part of our promotions\n  > program.\n  >\n  > Best regards,\n  >\n  > LOPEZFERNANDO\n  >\n  > (VICE PRESIDENT\n\n\n\n\n\n\n\n\n\n\n\n  FROM: THE DESK OF THE VICE PRESIDENT\n  INTERNATIONAL PROMOTIONS/PRIZE AWARD DEPT.\n\n  REF NO: BXK/2560145701/02.\n  BATCH NO:14/0013/1PD\n  Date:12TH OF MARCH ..,2004.\n\n\n\n  ATTN:\n\n                 RE:AWARD NOTIFICATION FINAL NOTICE\n\n  WE are pleased to inform you of the release of the results of the GLOBAL NET SWEEPSTAKE LOTTERY /INTERNATIONAL PROGRAM held on the 12TH OF MARCH.,2004.\n\n  Your name attached to ticket number 02511464992750 with  Serial number\n  211305 drew the lucky numbers 41824303135 which consequently won the\n  lottery in the 3rd category. You have therefore been approved for a lump sum payout of US$600,000.00 (SIX  HUNDRED THOUSAND DOLLARS) in cash credited to file REF NO:BXK/2560145701/02.This is from a total cash prize of US$15,000,000,00(FIFTEEN MILLION US DOLLARS) shared among the twenty five international winners  in this category.\n\n  CONGRATULATIONS!!!\n\n  Your fund is now deposited with a security company insured to your name.Due to mixed up of some numbers  and names, we ask that you keep this award from public notice until your claim has been processed and your money remitted to your nominated account as this is a part of our security protocol  to avoid double claiming or unwarranted taking advantage of this program by participants.\n\n  All participants were selected through a computer ballot system drawn from 25,000 names from Asia, Australia, New zealand, Europe and North America as part of our international promotions program which we conduct once every year. We hope that with a part of your  prize , you will take part in our end of year HIGHSTAKE US$50 Million International lottery.\n\n  To begin your lottery claim please contact,the finacial institution incharge your payment through   Foreign Operations.\n  DR DAVID LEON (Operations)INTERNATIONAL OFFSHORE TRUST. MADRID,SPAIN. on\n  TELL:0034659743353 E.mail: dleon@whipmail.com  for processing and\n  remittance of your prize money to a designated account of your\n  choice.Remember all prize money must be claimed not later than 30TH OF\n  MARCH,2004.After this date all funds will be returned to the MINISTERIO DE ECONOMIA Y HACIENDA as unclaimed.\n\n  NOTE: In order to avoid unnecessary delays and  complications, please\n  remember to quote your reference and batch numbers including your (CONTACT TELEPHONE NUMBER) ,in every correspondence with us or your\n  agent.Furthermore, should there be any change of your address, do inform\n  your claims agent as soon as possible.Congratulations once again from all members of our staff and thank you fFROM: THE DESK OF THE VICE PRESIDENT\n  INTERNATIONAL PROMOTIONS/PRIZE AWARD DEPT.\n\n  REF NO: BXK/2560145701/02.\n  BATCH NO:14/0013/1PD\n  Date:12TH OF MARCH ..,2004.\n\n\n\n  ATTN:\n\n                 RE:AWARD NOTIFICATION FINAL NOTICE\n\n  WE are pleased to inform you of the release of the results of the GLOBAL NET SWEEPSTAKE LOTTERY /INTERNATIONAL PROGRAM held on the 12TH OF MARCH.,2004.\n\n  Your name attached to ticket number 02511464992750 with  Serial number\n  211305 drew the lucky numbers 41824303135 which consequently won the\n  lottery in the 3rd category. You have therefore been approved for a lump sum payout of US$600,000.00 (SIX  HUNDRED THOUSAND DOLLARS) in cash credited to file REF NO:BXK/2560145701/02.This is from a total cash prize of US$15,000,000,00(FIFTEEN MILLION US DOLLARS) shared among the twenty five international winners  in this category.\n\n  CONGRATULATIONS!!!\n\n  Your fund is now deposited with a security company insured to your name.Due to mixed up of some numbers  and names, we ask that you keep this award from public notice until your claim has been processed and your money remitted to your nominated account as this is a part of our security protocol  to avoid double claiming or unwarranted taking advantage of this program by participants.\n\n  All participants were selected through a computer ballot system drawn from 25,000 names from Asia, Australia, New zealand, Europe and North America as part of our international promotions program which we conduct once every year. We hope that with a part of your  prize , you will take part in our end of year HIGHSTAKE US$50 Million International lottery.\n\n  To begin your lottery claim please contact,the finacial institution incharge your payment through   Foreign Operations.\n  DR DAVID LEON (Operations)INTERNATIONAL OFFSHORE TRUST. MADRID,SPAIN. on\n  TELL:0034659743353 E.mail: dleon@whipmail.com  for processing and\n  remittance of your prize money to a designated account of your\n  choice.Remember all prize money must be claimed not later than 30TH OF\n  MARCH,2004.After this date all funds will be returned to the MINISTERIO DE ECONOMIA Y HACIENDA as unclaimed.\n\n  NOTE: In order to avoid unnecessary delays and  complications, please\n  remember to quote your reference and batch numbers including your (CONTACT TELEPHONE NUMBER) ,in every correspondence with us or your\n  agent.Furthermore, should there be any change of your address, do inform\n  your claims agent as soon as possible.Congratulations once again from all members of our staff and thank you for being a part of our promotions  program.\n\n  Best regards,\n\n  LOPEZFERNANDO\n\n  (VICE PRESIDENT)\n  or being a part of our promotions  program.\n\n  Best regards,\n\n  LOPEZFERNANDO\n\n  (VICE PRESIDENT)\n\n\n\n", "id": "lists-005-4805853"}, {"subject": "I NEED YOUR HEL", "content": "Dear friend, \n\nI wish to begin by way of introduction. I am Zulu Danjuma, the first and only surviving son of late Marc Masuku Danjuma one of the foremost and rich black farmers in Zimbabwe recently murdered in the land dispute in my country. Before the death of my father, he had taken me to Johannesburg-South Africa, to deposit the sum of US$15 million (Fifteen Million United States Dollars) in one of the private security companies, as family valuables, when he realized the looming danger in Zimbabwe. This amount was meant for the purchase of new machineries and chemicals for the farms and also for the establishment of new farms in Swaziland.\n\nThis land dispute started when President Robert Mugabe introduced a new land reform, which was particularly targeted at the rich white farmers and a few black farmers (my father included). This resulted in the gruesome killing of rich farmers (mainly whites) and the unlawful possession of their properties by Mugabe?s war veterans, under the disguise of fighting for the interest of the country. It is against this background that I fled the country with my family, to the Netherlands where we are currently seeking asylum.\n\nI have decided to seek foreign assistance, as the Netherlands law prohibits asylum seekers from operating bank accounts or involve in financial transaction of any kind, hence this letter to you. All I need is your trustworthiness to be able to entrust the above said amount and help me with investment opportunities. My family?s survival depends on this money as we have virtually lost all our assets.\n\nThere are two options, firstly, you can choose to accept 30% of the total amount for your assistance or go into partnership for the proper investment of the money in your country. We shall discuss in detail the modalities involved when you reply providing me with your telephone & fax numbers. \n\nI await your reply through thiscontact e-mail address, == magamazulu@excite.com while I implore you to maintain the absolute secrecy required to ensure a safe and hitch free transaction.\n\nI shall furnish you with more details on request.\n\nPLEASE KINDLY REPLY ME THROUGH MY E MAIL ADDRESS WITH YOUR PHONE NUMBER AND ADDRESS FOR SECURITY PURPOSE==\nREPLY TO = magamazulu@excite.com\n\nYours truly,\nZULU DANJUMA\n\n\n\n", "id": "lists-005-4824264"}, {"subject": "BUSINESS INTRODUCTION/INVESTMEN", "content": "From: GIDEON AWELE\n40 WOODALE ST. \nLAGOS \nNIGERIA\nE-MAIL:gideonawele1@katamail.com\nTEL:234-802-3377864\n \nl am a financial consultant based in eastlondon Nigeria.l have a client (a \nwidow)she has $30,000,000USD with a private equity investment \ntrust company for safekeeping. And she is willing to offer you 20% of the total \nfund if you can assist her transfer this fund to your country \nor any bank of your wish.She wishes to invest in a stable economy. Her interest \nis in companies with potentials for rapid growth in long terms. \nMy client is interested in placing part of her fund in your company,if your \ncountry`s bi-laws allows \nforeign investment. \n \nYou can contact me for more details via my e-mail address or fax with your \nreference. \n \nYours faithfully, \nGIDEON AWELE\nE-MAIL:gideonawele1@katamail.com \n \nN:B The fund is free from drug and laundering related offences and this \ntransaction need utmost confidentiality \n\n\n\n\n", "id": "lists-005-4833259"}, {"subject": "????????????????-5000???? ????????????.&#64; ", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-4840920"}, {"subject": "At the L0west Prices- Win XP, office n many more t wrqhvk hax", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-4847636"}, {"subject": "Ietf-charsets?? ?????? ???? ???? ?????? ??????. saxnhdsgckq", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-4857185"}, {"subject": "222  re", "content": "Friends have sent you an invitation for a surprise date. Don't miss out.\n\nhttp://needacompanion.com/confirm/?oc=52214447\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExclude off list from further date requests.\n\nhttp://needacompanion.com/remove/?oc=4\n\n\nprima blanchard glint pentagon route mare parley uppercut patriot compost concessionaire \n\n\n\n", "id": "lists-005-4863939"}, {"subject": "Fwd: Fw: I want this back. It DOES work", "content": "attached mail follows:\n\n\n\ntext/html attachment: stored\n\n\n\n\n", "id": "lists-005-4870159"}, {"subject": "?? ???????? ?? ????, ???????? ?? ???? ?? pnl", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-4879162"}, {"subject": "Get v?agra over night - no prescription neede", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-4885782"}, {"subject": "wow your friends with a rolex for only 16", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-4893006"}, {"subject": "DEAR WINNE", "content": "FROM: THE LOTTERY COORDINATOR,\nINTERNATIONAL PROMOTIONS/PRIZE AWARD DEPARTMENT\n\nDEAR WINNER,\n\n           RESULTS FOR CATEGORY \"A\" DRAWS\n\nCongratulations to you as we bring to your notice, the\nresults of the Category \"A\" draws of GOLDEN LOTTERY U.K. We are\nhappy to inform you that you have emerged a winner under the First\nCategory, which is part of our promotional draws. The draws\nwere held on the 14TH March 2004 and results are being\nofficially announced today 16TH February 2004. Participants were\nselected through a computer ballot system drawn from\n4,000,000 names/email addresses of individuals and\ncompanies from Africa, America, Asia, Australia, Canada, Europe,\nMiddle East, and New Zealand as part of our International\nPromotions Program.\n\nYou/Your Company, attached to ticket number 3322/6181-22,\nwith serial number 92-71 drew the lucky numbers 19, 21, 25, 30,\n41, 44 (22), and consequently won in the Category \"A\".\n\nYou have therefore been awarded a lump sum pay out of\n?6,500,000.00 (Six Million Five Hundred Thousand Great\nBritain Pounds) in cash, which is the winning payout for Category\n\"A\" winners. This is from the total prize money of\n?13,000,000.00 shared among the 2 international winners in this category.\n\nCONGRATULATIONS!\n\nYour funds are now deposited with GLOBAL LINK CASH CHANGE\nU.K LTD, a reputable finance firm in the U.K., insured in your\nname. In your best interest and also to avoid mix up of numbers\nand names of any kind, we request that you keep the entire\ndetails of your award strictly from public notice until the process\nof transferring your claims has been completed, and your funds\nremitted to your account. This is part of our security\nprotocol to avoid double claiming or unscrupulous acts by\nparticipants/nonparticipants of this program.\n\nWe also wish to bring to your notice our mid year (2004)\nhigh stakes where you stand a chance of winning up to\n?40.Million, we hope that with a part of your prize you will participate.\n\nPlease contact your claims agent immediately, to begin your\nclaims process;\n\nMR.FELIX CLIFFORD PETERSON\nFINANCIAL DIRECTOR\nGLOBAL LINK CASH CHANGE U.K LTD\nTEL: +442084858287\nFAX: +442079006379\nForeign Service Number: +88216 4665 5376\nEMAIL: findire2@globallinkscashchange.com\n \nFor due processing and remittance of your prize money to a\ndesignated account of your choice.\n\nRemember, you must contact your claim agent not later than\none week from the date of this announcement. After this date, \nall funds will be returned as unclaimed.\n\nNOTE: For easy reference and identification find below your\nreference and Batch numbers. Note that you are to forward\nthis email to the finance firm in your first correspondence with\nthem, whether by email or fax.  \n\nREFERENCE NUMBER: GLUK/6181/11-02/04\nBATCH NUMBER: 1811-TH\n\nCongratulations once again from all our staff and thank you\nfor being part of our promotions program.\n\nSincerely,\n\nTHE LOTTERY COORDINATOR,\nGOLDEN LOTTERY UK,\n1 BRIDGE STREET                               \nSTAINES                               \nMIDDLESEX TW18 4TP\nUNITED KINGDOM\nTEL/FAX: 44 7092808613\n\nN.B. Any breach of confidentiality on the part of the\nwinners will result to disqualification. Please do not reply to\nthis mail. Contact your claims agent.\n\n___________________________________________________________________________\nMail sent from WebMail Powered site\n- http://virtualbairro.com\n\n\n\n", "id": "lists-005-4900357"}, {"subject": "from DR EMMANUEL CHINWEZE", "content": " ('binary' encoding is not supported, stored as-is)\n\n\n\n\n\n \n\n \n\nfrom the desk of ;DR EMMANUEL CHINWEZE,.Sc[UNN] MNIM;MIca\nExecutive Director and principal accountant [NNPC]\n\nMEMO; STRICTLY CONFIDENTIAL.\n\nATTN;\n\nI,DR EMMANUEL CHINWEZE, the Principal accountant of nigeria\npetroleum corporation [NNPC] and by that virtue a Director\nin the [NNPC]. I got your contant address from an associate\nworking with the nigerian export promotion council and i\nhave decided to propose to you this businessin\nstrict confidence.\n\nPURPOSE; On behalf of my colleaques,who are miniterial\nofficial and other officers in charge of offshore\nremittance in this corporation, are seeking your assistance\nfor the transfer of thirty two million, United state\ndollers [US$32,000,000.00] into your account for further\nprivate investnent purpose .\nHence our request for your assistance.\n\nSOURCE OF FUND; This amount to be transferred into your\naccount accrued from over-invoiced contract amount for the\nconstruction of oil Refinery sub-staton\nin nigeria [Northern Region]in the year 2000 to expatriate\ncompanies.\nThe contract which was originally valued for one hundred ad\nand eight million,United states Dollers[US$108,000,000.00]\nwas manipulated to read one hundred and fourty million\n,United states dollers[US$140,000,000.00]. The extra\nUS$32000,000.00 is what we want to transfer to your account\n. This contract has been completely executed and the\noriginal contractors had been paid all their contact bills\nremaining this over-invoiced balance.\n\nREQIREMENT; What we expect from you by e-mail during your\npositive reply are as follows\n[a] Name and Address of your bank\n[b] your bank account number where the fund will be l\nlodged.\n[c] Beneficiary's Name and Telephone and fax number'of\nyour bank.\n\nDISBUSEMENT; We have resolved that you as the account owner\nwill earn 30%. of the total amount for your as it's\nimpossible for us to claim this over-invoiced amount here\nin nigeria without a foreign, while 60% is for me and my\ncolleaques for our investment and 10% has been mapped out\nfor any micellaneous expenses incurrd by both parties\nduring the process of this transaction.\n\nSECURITY; All modalities to effect the payment and\nsubsequent transfer of this fund have been worked out,so\nthis transation is 100%RISK FREE. Though,you are rquired to\ntreat this business with the stritest confidence.\n\nI await your immediate response through the above e-mail address on my\nattention\nand send me your\nconfidential fax and phone number for speedy\ncorrespondence. i will highly appreciate it if you treat\nthis business with strict confidence it demand for security\nreasons.\n\nIt might surprise you ,why we have choosed you and trusted\nyou for this transation , we believe that good person can\nbe discovered and business like this cannot be realised\nwithout trust. This is wy we have decided to trust you for\nthis transaction. We are looking to do this business with\nyou . Be further informed that your interest and security\nhas been considered , so be rest assured feel free to go\ninto this transaction with us, but let honesty and trust be\nour watchword through out the process of this transaction\nand your prompt reply will be highly appreciated\nGOD BLESS.\n\n\nBEST REGARD,\nDR EMMANUEL CHINWEZE\n[NNPC] \n<p>___________________________________________________________________________________________<br>Vuoi una casella di posta gratuita come questa, leggibile anche con il tuo cellulare e con protezione antivirus?<br>?? Servizio offerto da: <a href=\"http://www.fuorissimo.com\">http://www.fuorissimo.com</a> - il primo portale umoristico italiano - N?1 in Italia!<br>___________________________________________________________________________________________</p>\n\n\n", "id": "lists-005-4909986"}, {"subject": "ydro Generic Viarga. Try it NOW! nin", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-4920147"}, {"subject": "CONFIDENTIA", "content": " Dear Sir/Madam, \nTop of the day to you my friend. It may astonish You to be informally \ncontacted \nfor a pending transaction of this magnitude more especially since you \ndo not \nknow me personally. The purpose of my introduction is to bring to bear \nmy present position and the very need for \ntrue and solicited help with regards the transaction at hand. \nI am Barrister baldwin onuigbo the Personal assistant to Charles Taylor, \nthe formal \nPresident of Liberia. He has recently stepped down from power and is \npresently in asylum in Nigeria. \nWell dear friend we need your assistance in transferring some of the \nmoney \nderived from gold excesses into your account,because the government \nis making \nplans to seize all his assets have been mandated to deal with anyone \nwho \noffer assistance to have this funds transferred to his account \noversea. \nView these websites: \nhttp://www.cnn.com/2003/WORLD/africa/08/11/liberia.1300/index.html \nThe amount is USD$55 Million American Dollars, in a Security firm \nAbroad. All \nthat is needed is for me to instruct the company to \ntransfer the funds to your account, I will remunerate you with \n20% of the total funds transferred to your vital bank account as \ncompensation for your assistance, 10% percent would be set aside \nto take care of all expenses we may incure during the \ntransaction. \nTo indicate your interest, kindly provide me your direct phone \nand fax numbers and all relevant information for me to be \ncontacted you and to let you know the roles you will play in \nmaking this transaction successful. All the legal information \nconcerning this Money will be sent to you as soon as we agree \ntogether because the money is a huge amount of money and we need \na relibale and competent person to handle this transactions for us. \nwe all have been confined only to Nigeria and So I will use all \navailable contact to get you all the needed information. \nIf this proposal satisfies you, please contact me by this \nPrivate Email: baldwinonuigbo23@yahoo.com\nimmediately with your full names, telephone numbers and fax numbers \nto \nenable an immediate contact be as I have advised above. \nIf you are capable to assist us in this transactions \nPlease Reply me on my Private Email: \nThanks for your cooperation. \nBest Regards. \nBarrister baldwin onuigbo\n\n\n\napplication/octet-stream attachment: fm.txt\n\n\n\n\n", "id": "lists-005-4926625"}, {"subject": "54 re: nothin", "content": "OFFSHORE-DISCRETE Pharmacy...\n\n*No-questions ever asked. We trust the judgement of our clients based on their needs. We guarantee complete privacy on all transactions.\n\nPopular drugs of the MONTH: CIaLis. (35-hour time frame to act), Valium.(rleases stress on the spot, allowing more confidence)\n\nWe have a full-lineup, check all of our low prices & products.\n\n\nhttp://yahoo.com.nebdtz.com/m004/index.php?id=m004\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNo more of either, I wish to be taken0ff, thank-you.\nhttp://suit.nebdtz.com/byebye.html\n\n\nactinide ar call diligent bentley debbie garble blurt allis extroversion cusp culminate rifle \n8\n\n\n\n", "id": "lists-005-4935471"}, {"subject": "CONGRATULATIONS! YOU'VE WO", "content": "ATTN: SIR,\n\nSUNSWEETWIN PROMO LOTTERY,THE NETHERLANDS.\n\nALFONSTRAAT B56,1002 BS AMSTERDAM, THE NETHERLANDS.\n\nFROM: THE DESK OF THE PROMOTIONS MANAGER, INTERNATIONAL\nPROMOTIONS/PRIZE AWARD DEPARTMENT,\nREF: OYL /26510460037/02\nBATCH: 24/00319/IPD\n\nATTENTION: RE/ AWARD NOTIFICATION; FINAL NOTICE\n\nWe are pleased to inform you of the announcement of winners of the SUNSWEETWIN PROMO LOTTERY,THE NETHERLANDS/INTERNATIONAL,PROGRAMS held on\n19th March, 2004.\n\nYou are attached to ticket number 023-0148-790-459, with serial number 5073-11  drew the lucky numbers 43-11-44-37-10-43, and consequently won the lottery in  the 3rd category.\n\nYou have therefore been approved for a lump sum pay out of US$850.000.00 in  cash credited to file REF NO.OYL/26510460037/02. This is from total prize money  of US$80,400,000.00 shared among the Twenty-nine international winners  in this category. All participants were selected through a computer ballot system  drawn from 25,000 names from Australia, New Zealand, America, Europe, North  America and Asia as part of International Promotions Program, which is conducted annually.\n\nCONGRATULATIONS!\n\nYour fund is now deposited with a Security Firm in Amsterdam. Due to  the mix up of some numbers and names, we ask that you keep this award strictly  from public notice until your claim has been processed and\nyour money remitted to your account.\n\nThis is part of our security protocol to avoid double claiming or unscrupulous acts  by participants of this program. We hope with a part of you prize, you will participate in our end of year high stakes US$1.3\nMillion International Lottery. \n\nTo begin your claim, please contact your claim agent;\n\nMR REINHARD WOOD\nFOREIGN SERVICE MANAGER, RAYMOND CROSSROAD, AMSTERDAM,\n\nEmail : r_wood@wongfaye.com\n\nFor due processing and remittance of your prize money to a designated account of  your choice. Remember, all prize money must be claimed not later than 30th April, 2004. After this date, all funds will be returned as unclaimed.\n\nNOTE: In order to avoid unnecessary delays and complications, please remember  to quote your reference and batch numbers in every one of your correspondences  with your agent. Furthermore, should there be any change\nof your address, do inform your claims agent as soon  as possible.\n\nCongratulations again from all our staff and thank you for being part of our  promotions program.\n\nSincerely,\n\nPIETER HAN\n\nTHE PROMOTIONS MANAGER, SUNSWEETWIN PROMO LOTTERY,THE NETHERLANDS.\n\nN.B. Any breach of confidentiality on the part of the winners will result to  disqualification.\nSORRY FOR THE LATE INFORMATION THANKS\n\n\n\n", "id": "lists-005-4942095"}, {"subject": "AFTER DUE CONSIDERATIO", "content": "HELLO FRIEND,\n\nCOMPLIMENTS TO YOU AND YOUR FAMILY,I KNOW THIS MIGHT\n\nCOME\n\nAS A \n\nSURPRSE TO YOU,BUT DONT BE,AS I REALLY WANT YOUR ASSISTANCE\nIN THIS.\n\nI AM THE WIDOW OF THE LATE SENATE PRESIDENT OF NIGERIA\nCHIEF DR CHUBA \n\nOKADIGBO,WHO WAS ALSO THE VICE PRESIDENTIAL CANDIDATE OF\nTHE ALL\n\nNIGERIA\n\nPEOPLES PARTY IN THE LAST GENERAL ELECTIONS IN MY COUNTRY\nNIGERIA,THE\n\nEX\n\nSPEAKER OF THE UPPER HOUSE OF THE NATONAL ASSEMBLY WAS\nKILLED BY\n\nINHALING A \n\nPOISINOUS TEAR GAS THAT WAS SHOT INTO AIR BY THE NIGERIA\nPOLICE FORCE\n\nTO\n\nDISRUPT MY LATE HUSBAND AND HIS COLLEAGUE'S PRESIDENTIAL\nCAMPAIGN IN\n\nTHE\n\nNOTHEREN PART OF NGERIA BEFORE THE GENERAL ELECTION THAT\nWAS WON BY\n\nTHE \n\nINCUMBENT PRESIDENT THROUGH ELECTORAL MALPRACTICES,THIS WAS\nDUE TO\n\nTHE \n\nPOPULARITY OF MY LATE HUSBAND AND HIS COLLEAGUES BY THE\nMASSES OF\n\nNIGERIA,AND \n\nTHE HATRED THE INCUMBENT HAS FOR HM FOR JOINING THE\nOPPOSTION\n\nPARTY,THIS\n\nSTORY \n\nCAN BE CONFIRMED IN THE WORD MEDIA LIKE THE CNN,BBC,ETC.\n\nMY FRIEND WHY AM WRITNG YOU THIS LETTER IS BECAUSE OF MY\nWORRIED OVER\n\nTHE \n\nINCREASE OF POLICE BRUTALITY IN AFRCA AND THE WORLD IN\nGENERAL.\n\nBEFORE THE DEATH OF MY LATE HUSBAND HE TOLD ME ABOUT A\nCONSIGNMENT\n\nTHAT\n\nHE KEPT \n\nWITH A SECURITY FIRM OVERSEA FOR SAFE KEEPING,AND THAT THE\nCONSIGNMENT\n\nCONTAINS \n\nSOME GOOD AMOUNT OF AMERICAN DOLLARS,AND THAT HE DID NOT\nINFORM THE\n\nSECURITY \n\nFIRM OF THE REAL CONTENTS OF THE CONSIGNMENT,HE TOLD ME\nTHAT HE\n\nREGISTERED THE \n\nCONSIGNMENT AS A FAMILY DOCUMENTS,THE FUND IN THE\nCONSIGNMENT IS BEEN\n\nPLACED IN \n\nCODED CASH THAT EVEN YOU THAT I AM SENDING THE LETTER TO\nWILL NOT BE\n\nABLE TO \n\nUSE IT UNLESS I SEND THE SECURITY CODE TO YOU ON HOW TO\nDECODE IT\n\nBEFORE\n\nIT CAN \n\nBE USED.\n\nPLEASE I WILL WANT YOU TO COOPERATE WITH ME SO THAT THE\nCONSIGNMENT\n\nCAN\n\nBE \n\nCLEAR FROM THEM AS I HAVE THE INTENTION OF THE USING THE\nFUND IN THE \n\nCONSIGNMENT FOR ESTABLSHING A NON GOVERNMENTAL ORGANISATION\nTHAT WILL\n\nCARE FOR \n\nTHE VICTIMS OF POLICE BRUTALITY IN AFRICA AND THE WORLD IN\nGENERAL.I\n\nPROMISED \n\nTO COMPENSATE YOU AND NCLUDE AMONG PHILANTROPIST THAT ARE\nCARING FOR\n\nTHE\n\nVICTIMS OF POLICE BRUTALITY.\n\nI WILL BE GLAD IF MY REQUEST IS BEEN GRANTED BY YOU.\n\nYOU CAN ACKNOWLEDGE THE RECEIPT OF THIS LETTER BY REPLYING\nTO THE\n\nABOVE\n\nEMAIL :madamsuzzy@tiscali.co.uk\n\n\n\n\n\nREGARDS\n\nMRS OKADIGBO\n\n\n\n", "id": "lists-005-4951019"}, {"subject": "????4500????-??????????.???????? ????(??????,??????)&#64; qb", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-4959832"}, {"subject": "Urgent business proposa", "content": "Hello Friend,  \n\nI have to first of all apologise for using this way to contact you especially\nbecause of the seriousness of this message and because we have not met,but\nI am desperately in need of help. I got your contact email address from\na search I made on the Internet.\n\nI am Eng. Donald Ademola an Executive Director Projects, of\nthe FEDERAL MINISTRY OF WORKS AND HOUSING (FMWH).\nAnd after due verication with my colleagues,I decided to\nforward to you this business proposal in anticipation\nthat you may be in position to assist/handle this\nbusiness with me.\n\nWe want a reliable person, who could assist us in\nreceiving funds resulted from over invoiced bills\nfrom contracts awarded under the budget allocation for\nFMWH.These bills had been approved for payment by\nthe concernd ministry.In this year`s (2004) budget speech,\nThe President has ordered that all foreign\ncontractors debts be paid in order to boost more\nForeign investors into Nigeria The contracts had been executed,\ncommissioned and the contractors had been paid their\nactual contractual sums.What we are about to receive\nnow is a kick back from the contractors and Under\nthe protocol division as civil servants, we are forbiden\nto operate or owm foreign accounts,this is why am\nsoliciting your assistance in this manner.\nOn our part, all modalities had been worked out in\nensuring a smooth transaction\n\nOn this note, I have been unanimously mandated by my\ncolleagues to seek an honest and trustworthy Foreigner\nlike you who will assist in ensuring the successful transfer\nof twelve million United States Dollars(US$12,000,000.00)\ninto a personal /company account since the Nigerian code of\nconduct does not allow us (Civil servants) to operate foreign accounts.\n\nIt is pertinent also to let you know that 15% of the\ntotal fund will be for you if you will assist to act\nas the beneficiary of the fund, while 5% will be used\nto settle any expenses that might be incurred by both\nparties and the remaining 80% will be for us (my\ncolleagues and I) to be invested in your country.\nWe have chosen you to benefit with us\nin this transaction due to the respect your country\ncommands here. In this regards, I request you to send me\nyour full names and address, telephone and fax number\nto enable me brief you in details about this transaction.\nBe rest assured that modalities and logistics towards\nthe successful transfer of this fund has been worked out.\nAll we require from you is your co-operation. This\ntransaction is risk free.\n\nWe kindly request that you accord the highest level\nof confidentiality this transaction deserves.\n\nYour urgent response will be highly appreciated.\n\nBest regards,\n\nDonald Ademola.\n\n\n\n", "id": "lists-005-4966496"}, {"subject": "FAMILY BUSINESS INVESTMEN", "content": "From:Mathias Kobi Kabila\nJohannesburg,South Africa\n\nINVESTMENT OFFER\n\nDear Sir\nIn appreciation of your esteemed contact received through a reliable source and the choice of your country I wish to introduce myself, I am Mathias kobi\nKabila the son of the late Democratic Republic of Congo President Laurent Desire Kabila of the blessed memory. I know this letter might come to you as a surprise but I honestly do not intend to surprise you. I write this letter in respect of my intention to invest the sum of US$28M(Twenty Eight Million United State Dollars) with you. I inherited this money from my mother. This money was got through the smuggling and sale of Diamond and Timber when my father was the head of state. My mother though not her legal wife used her privilege position to engage in the business of Diamond and Timber since she knows that her survival will depend on how much she can get out of the privilege situation. When my father was assassinated on 16TH Jan. 01 by one of his bodyguards Lt.Rashidi Kasereke through the conspiracy of some top army officers that wanted to topple him I escaped to South Africa because of the fear that I might be arrested by my half brother Lt. General Joseph Kabila the present head of state. Actually his mother and my mother are not in the best of relationship because of who among them will be the first lady tussle and this ultimately affected us their children.\nConsidering the relationship between South Africa and the DemocraticRepublic of Congo new government, my mother advised me to leave For South Africa for security reason, while the funds were deposited with a security Company in Madrid Spain. \nOn getting to South Africa where I have been living since then as apolitical refugee I am seeking for a reliable foreigner who can assist me in moving this money out for safe banking and profitable investment. Honestly I contacted you because I don't want to invest this money in South Africa due to my status here as a political Refugee. And moreover I wouldn't want to take risk because this money is all that I and my Mother is depending on\nbecause My half brother has seized all my father's assets and money and left I and my mother empty handed without knowing about this funds deposited at the Security Company in Madrid Spain so that is why I decided that investing this money abroad should be the best investment for me. I will be honored if I can be given the privilege of investing this money with your help.\nIn view of this plight, I expect you to be trustworthy and kind enough to respond to this distress call to save my mother and I from a hopeless future. And if you agree, I hereby agree to compensate your sincere and candid effort in this regard with 20% of the total money and annual 5% of the after tax returns on investment for the first three years. Thereafter, the term shall be varied. 5% for expenses, which may arise during the\ntransaction, fax and phone bills inclusive.$28million US Dollars. when the money($28million) is moved into your discrete account, you will be allowed to draw 20% your favor, while the remaining 70% will be invested meaningfully for our future if possible in your area of business and deterrents sectors of the Economy in your country which are dividends yielding.\nWhatever your decision is please reach me immediately through my private phone or Email, and keep this letter tight secret for the interest of my family. \nBest Regards,\nMathias Kobi Kabila\n\n\n\n", "id": "lists-005-4975299"}, {"subject": "Please help my famil", "content": "Good day, \n\nI have to first of all apologise for using this way to contact \nyou especially because of the seriousness of this message \nand because we have not met, but I am desperately in \nneed of help. I got your contact email address from a \nsearch I made on the Internet. I cannot contact any of my \nknown father's associates because of the on-going \nsituation in my country  and the predicament facing my \nfamily. \n\n I am the son of the late leader of the Movement for the \nTotal Independence of Angola (UNITA), Jonas Savimbi, \nwho was killed in a fierce gun battle with government \ntroops loyal to Edwardo Dos Santos on the 22nd of \nFebuary 2002.\nI am Almendo Savimbi, the  son of Jonas Savimbi. I was \naware of sales of diamonds and crude oil to individuals and \ncountries that clandestinely come and purchase these \nproducts. After the PEACE ACCORD was broken, the \nUnited States of America government abandoned my \nfather and the United Nations (UN)imposed sanctions on \nall products coming out of UNITA controlled areas. It is the \nproceeds of these sales that were used by UNITA to \npurchase arms to prosecute the war. \n To learn more of the injustice and situation my father \nfaced, check the website:\nhttp://www.the-idler.com/IDLER-02/3-16.html \n\n My late father, Jonas Savimbi  was able to deposit some \nfund in Europe with a Security Company that he intended \nto  make purchases with. I happen to be in possesion of \ndocuments and information of the deposit and some \nothers.\n \n Our movements presently(including me) is restricted.\nWe are forbidden to either travel abroad or out of our \nlocalities. \nPresently, the funds my father transfered  to Europe before \nhis death for some purchases he intended to make is safe \nand is in the Security firm. I have the passcode and the \ndocuments to the Security firm. This is where I will need \nyour help because at present i cant travel. And I want to \nact fast before the government finds out about the funds.\n \n With this password and information and power of attorney \nyou will be able to proceed to the Security firm. I can get \naccess to a satellite phone for communication. When you \nare ready I will give you the information needed before you \ncan get access to the fund you will then  proceed to the \nSecurity company where the funds will be given to you as \npayment either installmentally or depending on the advice \nof the security company.\n \nYOUR CONFIDENTIALITY IN THIS TRANSACTION IS \nREQUIRED.\n  \nYours sincerely,\n \nAlmendo Savimbi.\n\n\n__________________________________________________\nBroadband from an unbeatable ?15.99!\n\nhttp://www.tiscali.co.uk/products/broadband/home.html?code=SM-NL-11AM\n\n\n\n", "id": "lists-005-4984968"}, {"subject": "vx Visa card insid", "content": "Get accepted for a VISA quickly!\n\nNo Credit Checks\nNO Turndowns\nNo Annual Fees\nNo Security Deposit\nNo Employment Required\n\nnever been so easy\nhttp://gomezindeed.com/visa/piz\n\n\n\n", "id": "lists-005-4993812"}, {"subject": "WHAT WAR CAN DO", "content": "Dear Friend,\n\nAs you read this, I don't want you to feel sorry for me, because,\n I believe everyone will die someday. \nMy name is Moni Millat a merchant in Iraq, in the war I have been\ndengerouslly wonded.\nIt has defiled all forms of medical treatment, and right now I have\n only about a few months to live, according to medical experts. \nI have not particularly lived my life so well, as I never really cared\n for anyone(not even myself)but my business. Though I am very rich, \nI was never generous, I was always hostile to people and only focused\n on my business as that was the only thing I cared for. But now I \nregret all this as I now know that there is more to life than just \nwanting to have or make all the money in the world. \nI believe when God gives me a second chance to come to this world I \nwould live my life a different way from how I have lived it. Now that\n God has called me, I have willed and given most of my property and \nassets to my immediate and extended family members as well as a few \nclose friends. \nI want God to be merciful to me and accept my soul so, I have decided \nto give alms to charity \norganizations, as I want this to be one of the last good deeds I do on\nearth. So far, I have distributed money to some charity organizations\nin the U.A.E, Algeria and Malaysia. \nNow that my health has deteriorated so badly, I cannot do this myself\nanymore. I once asked members of my family to close one of my \naccounts and distribute the money which I have there to charity \norganization in Bulgaria and Pakistan, they refused and kept the money\nto themselves. Hence, I do not trust them anymore, as they seem not \nto be contended with what I have left for them. \nThe last of my money which no one knows of is the huge cash deposit \nof fourty million dollars $40,000,000,00 that I have with a \nfinance/Security Company abroad. I will want you to help me collect \nthis deposit and dispatched it to charity organizations.\nI have set aside 10% for you and for your time.\n\nGod be with you. \n\nMoni Millat\n\n\n\n", "id": "lists-005-4999998"}, {"subject": "Privat", "content": "Private E-mail: markzuba@mail2world.com\n \nDear Sir/ Madam,\n \n   Before I start, I must first apologize for this unsolicited mail to you. I am aware that this is certainly an unconventional approach to starting a relationship but as time goes on you will realize the need for my action. I am Mr. Mark Zuba, a native of South Africa currently residing in Amsterdam, Netherlands for a management course, at the Hoge University. \n Allow me to explain my reason and importance of my writing to you. Sir I am requesting your assistance in order to redeem an investment made with the Southern Mining Corporations Limited, in which I am a senior executive.  The said investment now valued at Ten Million United States of American Dollars (U.S.$10,000.000.00) was purchased by Eric Reilly and contracted out to the Southern Mining Corporations Limited in September 1979.  This redeemable investment interest has now matured and has been cleared for disbursement since March of 2001. \n   Since then, there has been an extensive global wide attempt to locate and notify any living relatives of Eric Reilly being that he himself died in December 1987.  We have confirmed through three independent search agencies that there are no living relatives in which whose favour the investment can be paid.  Being that two of my colleagues are also executives in the account department of the Mining Corporation, we have access to all Reilly's information, we can claim this money with you.  All we need to do is file this claim in your identity and effecting the necessary documentary changes, which lies in our respective departments and proclaim you as actual beneficiary of this investment. \n These funds can be paid into any designated account in which you provide in any given country.  My proposal to you is that for your assistance you will withhold 30% of the total sum while, ensuring that my partners and I receive the remaining 70%. \n I hope that you are able to understand the entire nature of my proposal. There is no risk involved in this transaction now or after the successful conclusion of it. As stated earlier, there are no living relatives to lay claims on these funds. Therefore this transaction is legal, however without your assistance this money will be returned over to the Southern Mining Corporations Limited as lost fund. \n Please for further question, feel free to contact me through this e-mail address: markzuba@mail2world.com let me know if this proposal is acceptable to you. \nBest regards, \nMark Zuba \n\n\n\n                                                                      \n\n\n\n", "id": "lists-005-5007998"}, {"subject": "Niedostarczony mail:  Warning about your e-mail account", "content": "Drogi uzytkowniku,\nwiadomosc z nastepujacymi atrybutami nie zostala dostarczona do odbiorcy\nponiewaz zawiera zawirusowany obiekt.\n\nNadawca = ietf-charsets@w3.org\nOdbiorca = nowinki@aktivist.pl\nTemat =  Warning about your e-mail account.\nMessage-ID =  <yqclygqdvkqqlrsesvw@aktivist.pl>\n\nRaport antywirusowy:\n--- Indigo report ---\n127.0.0.1 [21357] www.indigo.pl:21311 - archive MAIL\n127.0.0.1 [21357] >www.indigo.pl:21311/Document.pif infected with Win32.HLLM.Beagle.based\n\n--- Indigo report ---\n\n---\n   Antivirus service provided by Indigo\n\n\n\n\ntext/rfc822-headers attachment: stored\n\n\n\n\n", "id": "lists-005-5016805"}, {"subject": "Niedostarczony mail:  E-mail account disabling warning", "content": "Drogi uzytkowniku,\nwiadomosc z nastepujacymi atrybutami nie zostala dostarczona do odbiorcy\nponiewaz zawiera zawirusowany obiekt.\n\nNadawca = ietf-charsets@w3.org\nOdbiorca = nowinki@aktivist.pl\nTemat =  E-mail account disabling warning.\nMessage-ID =  <bmsagsucbpdqdodjtwa@aktivist.pl>\n\nRaport antywirusowy:\n--- Indigo report ---\n127.0.0.1 [21394] www.indigo.pl:21373 - archive MAIL\n127.0.0.1 [21394] >www.indigo.pl:21373/Readme.pif infected with Win32.HLLM.Beagle.based\n\n--- Indigo report ---\n\n---\n   Antivirus service provided by Indigo\n\n\n\n\ntext/rfc822-headers attachment: stored\n\n\n\n\n", "id": "lists-005-5024935"}, {"subject": "Virus Aler", "content": "The mail message (file: message_details.pif) you sent to <tcrambes@ch-perpignan.fr> contains a virus. (on smtp1av.net)\n\n\n\n", "id": "lists-005-5033076"}, {"subject": "Niedostarczony mail:  Warning about your e-mail account", "content": "Drogi uzytkowniku,\nwiadomosc z nastepujacymi atrybutami nie zostala dostarczona do odbiorcy\nponiewaz zawiera zawirusowany obiekt.\n\nNadawca = ietf-charsets@w3.org\nOdbiorca = nowinki@aktivist.pl\nTemat =  Warning about your e-mail account.\nMessage-ID =  <rjiplfbiuklvtifagpu@aktivist.pl>\n\nRaport antywirusowy:\n--- Indigo report ---\n127.0.0.1 [21294] www.indigo.pl:21265 - archive MAIL\n127.0.0.1 [21294] >www.indigo.pl:21265/Message.pif infected with Win32.HLLM.Beagle.based\n\n--- Indigo report ---\n\n---\n   Antivirus service provided by Indigo\n\n\n\n\ntext/rfc822-headers attachment: stored\n\n\n\n\n", "id": "lists-005-5039699"}, {"subject": "?????????", "content": "HYGUZ-??????????????\n???????????????????? \n????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n????????????????????????\n??????????????????????\n?? ?? ????    ???? ?? ????L??????????????Q??L/min????????????+??????   Gu+Gb(kg)????????????LxW(mm)?? ??\n -400  50  40-60  15-5400x350  3\n -500  70  50-7020-7 500x400  3\n -700  9560-90  24-9700x400  3\n -800  135  90-120  35-14800x500  3\n -1000  205110-160  52-201000x500  3\n -1200  295150-220  70-271200x600  3\n -1400  520240-340  124-471400x800  3\n -1600  745350-500  197-741600x1000  3\n??????\n1????????????Gu+Gb??????????????????Q??????Gu+Gb??????????????????????????\n2????????????????B x L x H = 400mmx500mmx600mm??\n3????????????\nHYGUZ- X - XX\n                       ??????????????????????????\n                  ????????????\n                  ????????\n????????????????\na)????????????????????????????????60??m????????????\nb)??????????????????????30min??\nc)??????????????????????????????1/4??1/3(??????????????)??\nd)??????????\n?? ?? ?? ??\n???? ??????????\n1??????????Q??L/min????\nQ = Gn??n??60??t??k\nGn - ??????????L/????????????-1????\nn ?? ??????????????????\nt ?? ??????????????????h??(????-1)\nk ?? ??????????4??\n2????????????Gu(kg)??\nGu = Gun??n??W1??0.001\nGun ?? ????????????????????g/????????????-1????\nW1 - ????????????????????7????\n3??\"????+????\"????????Gb(kg)??\nGb = Gbn??n??W1??0.001\nGbn = ????????\"????+????\"??????:g/????????????-1????\n????????????????????????????\n?? - 1??????????\n????????????????Gn(L/??????)????????t(h/??)??????????????????+??????Gun+Gbn       ??????????Gun     \"????+????\"????????g/??????            g/??????\n????????15-201210-155-7.5\n??????????10-151253\n????????50122010\n????????50122010\n????????????????????????????????????????????????????????????????????????????\n                                \n\n????????????????????????\n????????????????????????????406??\n??????0592-5761007      5761117\n??????13328323823    \n??????0592-5761689      ??????361009\ne-mail:hhh85hy@163.com  lkpzsq@yahoo.com.cn\nhttp://hygps.net/\n\n\n\n", "id": "lists-005-5047783"}, {"subject": "Reviewing 3G Licence Conditions  -  Regulatory and Commercial Implications of Reviewing 3G Licences in Europ", "content": "Reviewing 3G Licence Conditions\nRegulatory and Commercial Implications \nof Reviewing 3G Licences in Europe\n21st & 22nd April 2004\nMarriott Kensington, London\n <<ole0.bmp>> \nThe background to this conference: \nIt has been three years since European mobile operators won their 3G licences.\nOperators have adjusted to stock market falls and funding constraints,\nGPRS has given a new lease of life to existing 2G networks, and operators\nwho have launched 3G networks are finding teething problems impacting\nservice reliability, and are still to demonstrate a 3G killer application to make\n2G obsolete. As a consequence major operators have tried to re-negotiate the\nobligations attached to their licence rights.\n\nThis visiongain conference will bring together the key stakeholders involved in,\nand impacted by, the debate surrounding 3G rollout obligations. Participants\nwill be able to engage in the debate, and have their say on 3G licence\nobligations, their alternatives and the future of 3G services.\n\nSpeakers from major players within the 3G arena will include:\n\nRobert Mourik, Senior Manager, Public Policy, Vodafone\nRui Lemos Pereira, Vice President, Regulatory Affairs, T-Mobile International\nChrister Hammarlund, Principal Administrator, DG Information Society, European Commission\nAndrea Camanzi, Senior Vice President, Regulatory Affairs, Telecom Italia\nSteve Jordan, Head of European Regulatory Policy, mmO2\nJoachim L?cking, Deputy Head of Unit, DG Competition, European Commission\nGraham Louth, Director of Spectrum Markets, Ofcom (UK)\nJaroslav Kubista, Director, External Affairs, Eurotel\nVincenzo Monaci, Commissioner for Networks and Infrastructures, Agcom (Italy)\nMarc Furrer, Director General, Federal Office of Communications (Switzerland)\nG?raldine Philippe, General Counsel, Comfone\nMagnus Axelsson, Senior Advisor, Post-och telestyrelsen -PTS (Sweden)\n\n\nKey themes discussed at Reviewing 3G Licence Conditions :\n- Why 3G licence conditions need to be reviewed and what adjustments are needed?\n- How to create the right regulatory environment to encourage 3G rollout?\n- What actions are needed to facilitate investment in infrastructure and services?\n- The benefits and risks of spectrum trading\n\nHow will attending this event benefit you ?\n** Debate the future of 3G telephony with key industry decision-makers\n** Anticipate and influence regulatory changes in 3G rollout\n** Prepare for business opportunities in 3G services\n\nWho should attend Reviewing 3G Licence Conditions?\n\nBy industry sector:\n\n* Telecom operators\n* Vendors\n* Equipment manufacturers\n\nBy job title:\n\n* Head of Strategy and Business Development\n* Head of Regulatory Affairs\n* Head of Corporate Affairs\n* General Counsels\n* Telecoms Policy Analysts\n* Legal services\n* Consultants\n* Head of Public Affairs\n* Head of Infrastructure and Networks\n* Head of Spectrum Policy\n* Head of Strategic Policy\n* Regulatory/Legal Affairs Staff\nWho should attend\n\nAlso included in this 2 day event is a pre conference work shop, ideal for pre-event networking:\nStrategies for re-negotiating rollout conditions\n20th April 2004 - Led by: Imogen Bailey, Edelman\n\nKey themes will include:\n\n-  Identifying the decision-makers\n-  Where to find external support for campaigning?\n- The role of pressure groups and think tanks\n-  Developing strategies for impact\n\nPlaces at this event are strictly limited so BOOK YOUR PLACE NOW.\nTo make a booking on this event, please contact me via phone or email. Book early to secure a place.\n\nEnsure your organisation's success with the advent of 3G \nAttend this conference and book your place TODAY\n- PRICING -\nAttend the:\n2 Day conference with interactive workshop - ONLY GBP1400 plus VAT\n2 Day conference - ONLY GBP1099 plus VAT\nWorkshop only - ONLY GBP650 plus VAT\n- BOOKINGS -\nBooking is easy, simply contact Elena Colle on:\nTelephone: +44 (0)20 8767 6711\nFax: +44 (0)20 8767 5001\nEmail: mailto:Elena.Colle@visongain.com\nPlease find below the conference agenda. To book your place at simply give me a quick ring or email me stating whether you require a single place or a group booking.\nI look forward to hearing from you soon.\n\nRegards,\n\nElena Colle\nAccount Manager \nVisiongain b2b Conferences \nTel: +44 (0) 20 8767 6711 \nhttp://www.b2b-conferences.com\nmailto:Elena.Colle@visiongain.com \n\n\n****Full conference agenda:\n\nDay One \nWednesday 21st April 2004\n\n\nConference Day One Chair\nStephen Pentland\nPartner\n\nSpectrum Strategy Consultants\n8:30 Registration and coffee\n\n9:00 Opening remarks from the Chair\n\nTHE RATIONALE FOR REVIEWING LICENCE OBLIGATIONS\n\nWhat were the objectives behind 3G licence conditions in Europe,\nto what degree have obligations been met and is there scope for\nre-negotiation? Regulators, operators and other players involved\nin the market will give their views on 3G rollout, competition issues\nand how to make 3G a success.\n\n9:10 KEYNOTE\nThe EU's perspective on reviewing licence obligations and\non 3G rollout\n\n* What were the objectives of 3G rollout at European level in terms\nof coverage, services provided, markets?\n* How does the Regulatory Framework on Electronic\nCommunications cover licence conditions and 3G rollout?\n* What are the respective roles of the EC and the National\nRegulatory Authorities (NRAs)?\n\nChrister Hammarlund\nPrincipal Administrator\nDG Information Society, European Commission\n\n9:50 The Swedish perspective on reviewing licence obligations\n\n* What were the regulator's objectives in terms of 3G rollout in Sweden?\n* How are Swedish operators complying with their obligations?\n* Are operators' strategies influencing the State's communications\npolicy?\n* How to respond to licensees' bid for a softening of their obligations?\n* To what level are 3G services available in Sweden and are they\nsuccessful?\n\nMagnus Axelsson\nSenior Advisor\nPost-och telestyrelsen - PTS\n\n10:20 Challenges and successes in 3G rollout:\nthe Irish experience\n\n* The licensing process for 3G in Ireland and rollout obligations\n* How are the licence obligations fulfilled in Ireland?\n* The current state of 3G services offer in Ireland: success or failure?\n* Encouraging sharing of sites and infrastructure to facilitate rollout.\n* Some future challenges for the regulator.\n\nJim Connolly\nSenior Manager, Spectrum Management, Competition & International\nStrategy\nComreg & Chairman, CEPT ECC Working Group Frequency Management\n\n10:50 The Swiss experience as former President of IRG and as\nPresident of CEPT\n\n* The Swiss experience of licensing process: choices and rollout\nconditions.\n* The relations between the regulator and the operators.\n* Operators' strategies for re-negotiating obligations: how to\nrespond?\n* The importance of international dialogue for regulators: the role of\nthe CEPT and ERG/IRG.\n\nMarc Furrer\nDirector General\nOfcom, Switzerland\n\n11:20 Coffee and discussion\n\n11:40 Competition aspects of 3G rollout within the European\nRegulatory Framework\n\n* How to implement EC competition rules in 3G rollout?\n* The competition assessment of network sharing as a way to ease\n3G rollout conditions\n* Possible future competition concerns in 3G services\n\nJoachim L?cking, Deputy Head of Unit\nTelecommunications and Post; Information Society Coordination\nDG Competition, European Commission\n\n12:20 Licence obligations and implementation of 3G rollout in the\nUK Communications Act\n\n* The competition aspects of the UK Communications Act\n* How to implement competition rules in 3G rollout?\n* Is there scope in the Act for a relaxation of 3G licence obligations?\n* 3G and 3G like services: how to regulate?\n\nRichard Eccles, Partner\nBird & Bird\n\n12:50 Lunch\n\n14:10 Comparing the Japanese and European rollout conditions\nand 3G markets: NTT Docomo's view\n\n* The process of 3G licensing in Japan: issues at stakes with the\nbeauty contest.\n* The future of 3G services: time scale for rollout and vision for 3G\n* How do license conditions in Europe compare with the licensing\nprocess in Japan?\n* How to adapt to local markets and varying national regulations?\n\nToru Otsu, Ph. D\nDeputy Managing Director, \nDoCoMo Europe Limited.\n\n\n14:50 A vision for the 3G world and its prerequisites\n\n* What are customer expectations for 3G services?\n* How will the deployment of 3G services impact on the market\nplace?\n* What rollout conditions can facilitate deployment of 3G services?\n* What are the other policy prerequisites for a successful deployment\nof 3G services?\n* Is a review of licence conditions necessary for a successful rollout?\n\nRui Lemos Pereira\nVice President Regulatory Affairs\nT-Mobile International\n\n15:30 Coffee and discussion\n\n15:50 Licence obligations: is a review necessary?\n\n* What are the optimum rollout conditions for a successful 3G rollout?\n* Does the investment needed to comply with the obligations make\nbusiness sense?\n* How to deal with competitive licensees?\n\nAndrea Camanzi\nSenior Vice President Regulatory Affairs\nTelecom Italia\n\n16:30  Close of Day\n\nDay Two \nThursday 22nd April 2004\n\nConference Day Two Chair\n\nMarina Wiggs\nSenior Manager\nSpectrum Strategy Consultants\n\n8:40 Registration and coffee\n\n9:10 Opening remarks from the chair\n\n9:20 Creating the licence conditions for a successful 3G rollout:\noverview of the Italian case\n\n* What were the regulator's objectives in terms of 3G rollout in Italy?\n* How was the hybrid licensing method organised?\n* How successful has the rollout been in Italy so far?\n* Is there a case for a review of licence obligations?\n\nVincenzo Monaci\nCommissioner for Networks and Infrastructures\nAgcom (Italian Communications Regulatory Authority)\n\n10:00 Vodafone's perspective on 3G licences and rollout\n\n* What licence conditions can ensure optimum 3G rollout?\n* Negotiating rollout obligations with various national regulators.\n* Adapting 3G strategy to local markets.\n* Future challenges in 3G rollout for operators.\n\nRobert Mourik\nSenior Manager Public Affairs\nVodafone\n\n10:40 Coffee and discussion\n\n11:00 The case for infrastructure sharing: a way to facilitate\nrollout conditions?\n\n* The pros and cons of infrastructure sharing.\n* What are the issues in terms of competition law?\n* The European Commission's position on infrastructure sharing.\n* Do license obligations allow sharing?\n\nChris Watson, Partner\nAllen & Overy\n\n11:40 IT infrastructure requirements for 3G rollout\n\n* Using effective IT infrastructure to deliver 3G mobile data services\n* Multi-channel multi-modal portals, cost effective operational and\nbusiness support systems, managing the plethora of devices\n* Do operators' rollout schedule influence IT infrastructure\nproviders' business strategy?\n\nChris Bray\ne-Business Executive\nIBM Wireless\n\n12:15 Lunch\nSPECTRUM TRADING: a solution to ease operators' licence\nobligations?\n\nThis session will review the opportunities and the risks at stake in\nspectrum trading and whether it can be a solution to help the\ndeployment of 3G services. It will look in particular at the way\nregulators have responded to the ideas so far and to the\nopportunities operators expect from it.\n\n13:20 Preparing a new regulatory framework for spectrum\nmanagement\n\n* The results of the consultation by Ofcom and the\nRadiocommunications Agency.\n* Autonomy and harmonisation.\n* Proposals for trading and liberalisation.\n* Timetable for implementation.\n\nGraham Louth\nDirector of Spectrum Markets\nOfcom (UK)\n\n14:00 Business expectations from spectrum trading in 3G\n\n* Benefits and risks from spectrum trading.\n* Would it facilitate 3G rollout?\n* What would be the benefits for customers?\n\nSteve Jordan, Head of European Regulatory Policy\nMmO2\n& Chair of GSM Europe regulatory working group\n\n14:40 Challenges and options in introducing spectrum trading in\nEurope\n\n* Practical challenges in the introduction of spectrum trading.\n* Would it make the business case for 3G more appealing?\n* What changes to the industry structure may result?\n* Moves towards introduction of spectrum trading.\n* The benefits of a harmonised approach to spectrum trading\nregulation in Europe.\n\nAmit Napgal\nSenior Consultant, Analysys, &\nProject Manager - Study on introduction of spectrum trading in\nEurope for the European Commission\n\n15:20 Coffee and discussion\n\n15:40 The UK spectrum trading proposals\n\n* How are the options constrained by the Communications Act?\n* What scope would there be for deriving value from a spectrum\ntrade?\n* What scope would there be for interference management being\ndealt with by private treaty?\n* What is the likely impact on 3G?\n\nTony Ballard,\nPartner, Head of telecoms group\nField Fisher Waterhouse\n\nFORESEEING FUTURE REGULATORY CHALLENGES\n\n16:10 The legal implications of WLAN in 3G rollout\n\n* Is WLAN a threat to 3G?\n* Is there a reaction on the regulators side possible?\n* Should there be a reaction in order to protect 3G licensees?\n\nG?raldine Philippe\nGeneral Counsel\nComfone\n\n16:40 Digital rights management in 3G services: do rollout\nobligations influence operators' strategies?\n\n* The current dispositions within the European framework on\nelectronic communications.\n* Digital rights strategies for operators and content providers.\n* Will 3G services face more challenges in terms of digital rights\nmanagement than 2G and 2.5G?\n\nIan Penman\nPartner\nNew Media Law LLP\n\n17:10 Close of conference\n\nPre conference interactive workshop\nStrategies for re-negotiating rollout conditions\nWorkshop Leader:\nImogen Bailey, Director Technology\nEdelman\n\nThe objective of this workshop is to look into companies' strategies in approaching\npublic bodies to ensure optimum conditions to deploy 3G services. It will provide\nexpert insight into how to optimise relations with regulators and government\nbodies in the process of 3G deployment. Professionals with experience of\nmanaging public affairs campaign and lobbying strategies will give first-hand\nexamples in a business-orientated, interactive meeting.\n\nWorkshop schedule\n\n8:40 Coffee and registration\n9:10 Identifying the decision-makers\n* The respective roles of EU institutions and national bodies:\ngovernments, national regulatory authorities (NRAs).\n* The role of telecom regulators vs. competition authorities in issues\nrelated to 3G.\n10:30 Coffee and discussion\n11:00 The role of pressure groups and think tanks\n* Where to find external support for campaigning?\n* Which organisations are involved in influencing public campaigning\n(trade associations, independent think tanks, private consultants)?\n* Finding the right level group: when to contact pan-European and/or\nnational organisations?\n12:30 Networking lunch\n13:30 Developing strategies for impact\n* How to approach different bodies?\n* How to build negotiation strategies to ensure results?\n* What makes a successful public affairs campaign?\n* Tools to achieve re-negotiation of regulatory conditions in the wireless\nsector.\n15:00 Coffee and discussion\n15:30 Case studies\n\nEach session will include time for questions and roundtable discussions.\nBenefits of attending:\n\n* Improve your knowledge of government and regulatory bodies\nacting in 3G\n* Find out about strategies to improve campaigns related to\nwireless issues\n* Learn new negotiation techniques from concrete examples\nAbout Edelman\n\nEdelman is the world's largest independent public relations firm, with 1,800\nprofessionals in 39 offices. Edelman's services in London include : Corporate\nrelations, Investor relations, media analysis, Media relations, media training,\nmonitoring and evaluation, Online Solutions.\n\nEdelman's technology department is lead by Imogen Bailey. Sectors covered by\nEdelman's clients in London include: Mobile Communications, Data storage,\nSemiconductors, Chips, Software applications.\n\n\nVisiongain/B2B Conferences produce a range of timely business information material, if you wish to receive information of new products, simply reply to this email with ' New Products info' in the subject box.\n\n\n\n\nTerms & Conditions\nNB - Due to high demand, we do not 'reserve' or 'hold' places - a request for an invoice to be raised will be treated as an official booking and will be subject to the cancellation policy as outlined below.\nCancellations/substitutions and name changes: All bookings carry a 50% liability after the booking has been made, by post fax, email or web. There will be no refunds for cancellations received on or after one month before the start of the conference (e.g. cancellation on or after 20th January for a conference starting on 20th February). If you decide to cancel after this date the full invoice remains payable. Conference notes, which are available on the day, will be sent to you. Unfortunately we are not able to transfer places between conferences and executive briefings. However if you are unable to attend the event you may make a substitution/name change at any time as long as we are informed in writing by e-mail, fax or post. Name changes and substitutions must be from the same company and are not transferable between companies or countries.\n\nIndemnity: visiongain Ltd reserve the right to change the conference/executive briefing content, timing, speakers or venue without notice. The event may be postponed or cancelled due to acts of terrorism, war, extreme weather conditions, industrial action, acts of God or any event beyond the control of visiongain Ltd. If such a situation arises we will endeavour to reschedule the event. However, visiongain Ltd cannot be held responsible for any cost, damage or expenses, which may be incurred by the customer as a consequence of the event being postponed or cancelled. We therefore strongly advise all customers to take out insurance to cover the cost of the registration, travel and expenses.\nTo unsubscribe please reply with unsubscribe in the subject line. \n\n\nData protection: Visiongain Ltd gathers and manages data in accordance with the Data Protection Act 1998. Information contained about you may be used to update you on visiongain Ltd products and services via post, telephone, fax or email, unless you state otherwise. We may share your data with external companies offering complimentary products or services. If you wish your details to be amended, suppressed or not passed onto any external third party, please send your request to the Database Manager, visiongain Ltd, 40 Tooting High Street, London, SW17 0RG. Alternatively, you can visit our website www.visiongain.com <http://www.visiongain.com/> and amend your details. Please allow approximately 30 days for your removal or update request, you may receive additional pieces of communication from visiongain Ltd during the transitional period, whilst the changes come into effect.\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#####################################################################################\n\nThis email has been scanned by MailMarshal, an email content filter. \n\n#####################################################################################\n\n\n\n\n\n\n\n\n\n\n", "id": "lists-005-5056840"}, {"subject": "RE-AWARD NOTIFICATION FINAL NOTIC", "content": "LOTTERIA EL GORDO DE LA PRIMITIVA\n\nSWEEPSTAKE PROMOTION.\n\nCALLE MARIA MOLINA 67 PLANTA 2A,\n\n28007 MADRID-SPAIN.\n\n\n\n\n\n\nFROM: THE OFFICE OF THE PROMOTIONS AWARD CLAIM ,\n\nINTERNATIONAL PROMOTIONS/PRIZE AWARD DEPARTMENT,\n\n\n\n\n\nRef:no EG/38807886091/03\n\nBatch:340/1608/RDL04\n\nDate:30 /03/,04.\n\nDear Winner\n\n\n\nATTN: Winner,\n\n\nWe are pleased to inform you of the release of the El Gordo de la\n\nprimitva Spanish sweepstaker lottery Int.promotion programs held on 1st\nJanuary 2004\n\nYour name, attached to ticket number 033-1146993-750 with serial number\n1223-05 which drew the\n\nlucky numbers 02 - 08 - 10 - 25 - 38 - 47 which consequently won the\n\nlottery in the 1st category. You are therefore has been approved for a \nlump\n\nsum payout of Euros ?1,291,042.09 ? (ONE Million Two hundred and ninty \none\nthousand,fourty two euros,nine centimos.) in cash, credited to the file\nnumber EG/38807886091/03,this is from the total cash prize of EUR\n?21,947,715.50 (Twenty one million nine\n\nhundred and fourty seven thousand,seven hundred and fifteen Euros Fifty\ncentimos),\n\nshared among the seventeen international and local winners in this \ncategory.\n\nYour fund is now deposited with the designated bank for the transfer of\n\nyour award fund insured in your name by the lotto promotion board.\n\nDue to mixed up of some numbers and names, we ask that you keep this\n\naward top secrete from public notice until your claims has been\n\nprocessed and your money remitted to your account as this is part of our\n\nsecurity protocol to avoid double claims or unwarranted taking\n\nadvantage of this program by\n\nparticipants.\n\nAll participants were selected through a computer ballot system drawn\n\nfrom 45,000 names from\n\nall over the world AS PART OF OUR INTERNATIONAL PROMOTION PROGRAM WHICH \nIS\nCONDUCTED EVERY FOUR YEARS,\n\nAT THE END OF EACH GOVERNMENT TERNURE.\n\nTo begin your claim, please contact your claim agent company\nimmediately,SINCE ALL WE HAVE NOW IS THE WINNING TICKET NUMBER AND YOUR\nEMAIL ADDRESS WHICH WAS ATTACHED TO THE WINNING TICKET NUMBER.FOR DUE\nPROCESSING AND REMITTANCE OF YOUR AWARD PRICE.Contact Person: WARNER \nDONNA\nFRANCES , the foreign service\n\nmanager of TRANSTACT CARGO & SECURITY S.A on Tel:\n\n+346-60-52-35-91.,email: pihanks@netscape.net<http://www.netsacpe.net/mailto.cgi?sid=1690409&addr=+346 60-52-35-91.,email: pihanks@netscape.net>)\n\nfor processing and remittance of your money to designated account of\n\nyour choice. Remember, all\n\nprize money must be claimed not later than four weeks from the date of\n\nthis notice,after this date all funds will be returned to the Ministerio\nde\nEconomia y Hacienda of Spain as unclaimed. Note,in order to avoid\nunnecessary delays and complications, please quote your reference\n\nand batch numbers in every correspondence with us or your agent. Be\n\ninformed that your agent is entitled for the processing of your approved\naward file for purchasing the ticket that won in your category as all\nrelevant documents regarding this claim has been forwarded to your agent\ncompany.\n\nCongratulations once again, from all members of staff and thank you for\nbeing part of our promotions program.\n\n\n\nYours Sincerely ,\n\nM? TRACY ALONSO (for the secretary)\n\nFOR:INTL.LOTTO COMMISSION\n\nMADRID-SPAIN.\n\n\n\n", "id": "lists-005-5083917"}, {"subject": "(????)?????? ????????( 1?????? ). vpdorcv", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-5093664"}, {"subject": "p???? ????...(?????? ???? ???? ???? ??) qhwmrurkqh", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-5100698"}, {"subject": "???????????? ???? 5000????(????????)!????????????&#64; e aze", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-5107408"}, {"subject": "AWARD NOTIFICATIO", "content": "SUNSWEET INTERNATIONAL LOTTERY PROMOTION. \nFROM:THE DESK OF THE MANAGING DIRECTOR SUNSWEET.L.INTERNATIONAL/PRIZE AWARD DEPT \nREF:OYL/26510460037/02. BATCH:24/00319/IPD. \nATTN:CEO,\nSir/Madam,\n We are pleased to inform you of the result of the Lottery Winners International programs held on the 2nd of febuary 2004. Your e-mail address attached to ticket number 653164251591-6011 with serial number 7321 410,batch number24/00319/IPD,lottery ref number OYL/26510460037/02 and drew lucky number 4-9-17-36-44-78 which consequently won in the 1st category, you have therefore been approved for a lump sum pay out of US$4.5m. (FOUR  MILLION, FIVE HUNDRED THOUSAND United States Dollars) \nCONGRATULATIONS!!! \nDue to mix up of some numbers and names, we ask that you keep your winning information confidential until your claims has been processed and your money Remitted to you. This is part of our security protocol to avoid double claiming and unwarranted abuse of this program by some participants. All participants were selected through a computer ballot system drawn from over 40,000 company and 20,000,000 individual email addresses and names from all over the world. This promotional program takes place every year. This lottery was promoted and sponsored by Association of software producers. we hope with part of your winning,you will take part in our next year US$5 million international lottery. To file for your claim, please contact our fiducial agent\n,\n MR.STEVE KAMP \nEmail:sunsweetbv@netscape.net \nRemember, all winning must be claimed not later than 20th of April 2004. After this date all unclaimed funds will be included in the next stake. \nPlease note in order to avoid unnecessary delays and complications please remember to quote your reference number and batch numbers in all correspondence. Furthermore, should there be any change of address do inform our agent as soon as possible. Congratulations once more from our members of staff and thank you for being part of our promotional program. \nNote: Anybody under the age of 18 is automatically disqualified.\nyours Sincerely,\nMrs.Monica Vonk\n \nLottery Coordinator   \n\n\n\n", "id": "lists-005-5114175"}, {"subject": "Compliment of the Da", "content": "FROM DR. Kwesi Achapong\nDirector, Project Implementation,\nGhana National Petroleum Corporation,\nAccra Office Complex,\nAccra - Ghana\nURGENT RESPONSE.\n\nATTEN:SIR.\n\nI regret this informal mode of contact to your esteemed personality , it was initiated out of my outright desire to enter into a mutual business relationship with you.\n\nI obtained your contact from a reliable source on a business listing information service during my search for a investment\nopportunities in your country and after due consultations with my opinion adviser, I decided to contact you believing that by the grace of the Almighty God, you will accept me to be your partner in a Business Venture.\n\nI also have concluded several level of Management and Business Finance Programs and posses an encouraging\neducational background.I have decided to seek a confidential co-operation with you in the execution of a the deal described\nhere under for the benefit of all parties .\n\nWithin the Ministry of Petroleum Resources where I work as a Director, Project Implementation and with the cooperation of\nfour other top officials we have in our possession as overdue payment bills totalling Ten Million United states Dollars (US$10,000,000.00) which we want to transfer abroad with assistance and co-operation of a foreign company\n/individual to receive the said fund on our behalf or a reliable foreign non-company account to receive such funds.\n\nMoreso, we are handicapped in the circumstances as the Ghana Civil Service Code of Conduct does not allow us to\noperate offshore account hence your importance in the whole transaction.\n\nThe amount represents the balance of the total contract value executed on behalf of my Ministry by a foreign contracting firm which we the officials over-invoiced deliberately. Though the actual contract cost have been paid to the original contractor, leaving the balance in the tune of the said amount which we have in principles gotten approval\n to remit by Telegraphi Transfer (T.T) to foreign bank account .\n\nwe have include our bills for approvals with the co-operation of some officials  from the Federal Ministry of Finance and the  Bank of Ghana (BOG) We are seeking your assistance in providing a vital account or any virgin bank account into which we can remmit this money by acting  as our main partner and trustee.\n\nThis we can do by swapping of account and changing of beneficiary and other  forms of documentation upon application for claim to reflect the payment and  approvals to be secured on behalf of you.\n\nThis processes being pre-arranged with the principal trustee of the original  contractor and with the consent of the original contractor. I have the authority  of my partners involved to propose that should you be willing to assist us in the transaction your share of the sum will be 30% of the US$10m million, 60% for us and 10% for taxation and miscellaneous expenses.\n\nThe business itself is 100% safe on your part . Also your area ofspecialization is  not a hindrance to the successful execution of this transaction.\n\n\nThanks for your cooperation.\nYours faithfully,\n\nDR. Kwesi Achapong\n\n\n\n", "id": "lists-005-5122730"}, {"subject": "ASKING FOR YOUR ASSISTANCE AND SUPPORT ON INVESTMENT", "content": "FROM: ENGR, ABBA SANI\nMEMBER, PETROLEUM (SPECIAL) TRUST FUND \n{PTF} HQTRS\nDear Sir,\nI Am MR, ABBA SANI a senior civil sevant in the contract award committee for the petroleum special trust fund. I know that this letter will come to you as a surprise since we have not met in person. please bear with me. \nWe are in search for a reliable and honest partner abroad that we can entrust with the sum of us$35million.(THIRTY FIVE MILLION UNITED STATES DOLLARS ONLY) These funds originated from contract we executed for the petroleum trust fund (PTF) Purpose -for the supply and installations of oil-pipeline to Port-Harcourt and Warri Refineries. This contract has been executed and full payments have been made to the contractors who executed these contract leaving behind us$35million as an over-invoice amount for we the committee members on a mutual understanding. \nIn view of this, my colleague has mandated me to look for a foreign partner abroad who will receive the money on our behalf since as civil servants with restrictions on financial matters, we can not put up claims for the money in our names, neither are we alloowed to own or operate foreign accounts. Which means that you will provide us with any account of your choice where we can lodge this fund immediately. I will be visiting your country upon your confirmation of recieving the fund in your nominated account, to know you better and discuss viable investment ideas such as importation of goods back to our country since it will be unwise to return with such huge cash. \nDISBURSEMENT OF THE FUND IS AS FOLLOWS: 25% of the total sum will be your share asaccoumt provider and the one to be fronted and register here as the bonafide beneficiary of the fund towards seeking the necessary approvals that would enable its remittance to the account you nominate. 70% will be for me and my colleague . 5% will be an outstanding amount to settle any incurred expenses during the transfer. WE ASSURE YOU THAT THIS TRANSACTION IS 100% RISK FREE AND VERY LEGITIMATE AS ALL MODALITIES HAVE BEEN PERFECTED BY US WITH OUR CONNECTION IN GOVERNMENT. What matters most is honesty on your side and for you to keep everything confidential until this fund is dully remitted into your nominated account. \nIf this business interests you, please do not hesitate to email me as a matter of urgency with your contact phone and fax numbers so that I can give you more details. Cheers And God Bless You.\nMR, ABBA SANI\n\n\n\n", "id": "lists-005-5132061"}, {"subject": "this is for yo", "content": "Attention:sir \n\n I am Mrs. Mariam Abacha, widow of the late Gen. Sani\n Abacha former Nigerian military head of state who died as\na result of cardiac arrest. The name of your company\nappeared in one of our directories as one of the companies\nmy late\nhusband wanted to do business with before he died. I\ntherefore, decided to contact you in confidence so that I\ncan be able to move out the sum of US$50,000,000.00 ( Fifty\n Million United States Dollars Only) which was secretly\ndefaced and sealed in four big metal boxes for \nsecurity reasons. \n\nI personally therefore appeal to you for your urgent\nassistance to move this money into your country were I\nbelieve it will be safe since I cannot leave the country\ndue to the restriction of movement imposed on me and\nmembers of my family by the Nigerian government. You can\ncontact my son Mr. Abba Abacha on this number\n234-8033903116; upon receipt of your response, my lawyer\nshall arrange you towards the effective completion of\n  this transaction. However, arrangements have been put in\nplace to move this money out of the country in batches in\nthe secret vault through a diplomatic security company to\nany of the West African countries or possible Europe.\n\n\nConclusively, I have decided to offer you 25% of the total\nsum while 5% will be for whatever expenses that will be\nincurred while 70% is to be held in trust by you subsequent\nto our free movement by the Nigerian  government.\n\n\nPlease reply urgently and treat absolute confidentiality\nand sincerity, and send your response to this my e-mail\naddress mari003aba@yahoo.com.\n\n \nBest Regards\n\nMRS. MARIAM ABACHA\n\n\n\n", "id": "lists-005-5140916"}, {"subject": "greetings.....", "content": "Compliments, \ni was privilege to capture your name from the internet. My\nname is maryam Atiku, the wife of the vice president of\nNigeria and the\nminister for information in Nigeria. \nI need a foreign patner that can or would be able to\nsupport me to claim an huge amount of money sixty millon,\neight hundred dollars ($60.8000.000) which i had kept\nbecause of my hosband election that was held last two years\noctober2002, My thinking was that we were not going to win\nthe last two years election and i taught that was my last\nchance to do what i think could sustain me for some period\nof time. But to my greatest surprise we won the election\nand all i had to do was to keep the money at the security\ncompany owned and runed by Ghanians in my country\non 20th of october 2002. \nSo all i need is a trustworthy person that i will be able\nto trust and that will be able to come here or if he likes\nhe should not come but if you know you are interested and\naccept to come or represent my actions in the security\ncompany in Nigeria, \n  all the necessary document will be sent to you\nby fax and you will have to present me with an account\nnumber so that the money will be transfered there and the\nperson whose account hold my money will have the share of a\nmillon dollars($1.000.000) but if you want to be involve in\nthe business with as in claiming to be the owner of the\nmoney,your share will be 35%,while the foreign expenses\nwill be 5% and the local expenmses will be 5% too and mine\nwill be 55% . \nIf you know you are interested you can contact me on this\ne-mail address: giving me your data as in your phone\nno.(Private/mobile),fax no.,home address and other things\nyou thnk i need to know about you, \nBest regards, \nVice president\nwife \nmaryam atiku\n__________________________________________________________________________\nhttp://www.webmail.co.za/dialup Webmail ISP - Cool Connection, Cool Price\n\n\n\n", "id": "lists-005-5148599"}, {"subject": "HELP ME(Lynda Muller", "content": "Dear Friend,\nGood day to you. My name is Lynda Muller, owner and director of Wattle Group of Companies (PVT) Ltd., established by my late husband here in Zimbabwe,southern Africa. We have had various interests in mining (precious stones and coal), in tobacco, Real Estates, and in large scale farming through our Inyabamba Farms. In these we\nhave achieved tremendous success for several years.However in the past few years, our business has been drastically affected by government policies which have been against white minorities (of which my family is one) controlling the nations wealth. This has led to our being compelled to sell most of our interests, leaving only the Farms. But with the recent land Seizure Policy by the government, our farms and lands were forcefully taken from us by the majority blacks led by ex-war veterans. The physical attacks and trauma led to my husband?s ill health, which sadly led to his demise. With the continuous discrimination and insensitivity to our situation, it has become impossible for my\nchildren and I to continue in the only environment we have always known. I am now seeking to invest our saved resources abroad in a safer environment were I intend to subsequently relocate with my family. Thus I make research from the Internet for reputable companies with whom I can open discussions on business partnership and investments abroad. For this, I make contact with you, and hoping to commence business relationship with you. I thank you for your understanding, and look forward to hear from you soon.\nSincerely,\nPLEASE REPLY  TO THIS EMAIL BOX {lynda@whipmail.com} IF YOU ARE INTRESTED IN HELPING ME\nLynda Muller,\nWattle Group of Companies (PVT) Ltd.,\n4 Dalney Street, Belmont,\nBulawayo, Zimbabwe. \n\n\n\n                                                                      \n\n\n\n", "id": "lists-005-5156544"}, {"subject": "The lord is my shepher", "content": "Mrs. Joy Jones Khushab\n\nI am Mrs.Joy Jones Khushab,a Pakistani national  I was\nmarried to Dr.Dish Khushab who worked with Pakistan\nembassy in China for nine years before he died in the\nyear 2001.We were married for eleven years and the\nunion unfortunately did not produce any offspring. .\nBefore his death we had given our lives to Christ and\nwere living according to the Word.\nA few weeks ago i was diagnosed with cancer and the\ndoctor has informed me that i do not have much time to\nlive. Presently I am practically an invalid as the\ncancer has ravaged my body and i can feel my life\nslowly ebbing away. I do not have much time to do the\nLord's work but He will give me strength to see my\nlast assignment through.\nMy husband, Dr .Khushab before his death deposited his\nlife savings of approximately $6.5Million (Six Million\nFive hundred thousand U.S. Dollars) with a financial\ninstitution in the European continent. Before his\ndeath, we were committed to the growth of the church\nand the propagation of the word, but I can no longer\npartake in these noble tasks. I need a church,\nChristian individual or individuals who can continue\nthe work in our stead. who will utilize this money the\nway I am going to instruct here into-fund churches,\norphanages and widows propagating the word of God and\nto ensure that the house of God is maintained. To care\nfor the sick, the poor, the downtrodden wherever they\nmay be The Bible made us to understand that blessed is\n\nthe hand that gives. I took this decision because \nI don'thave any child or next of kin who can inherit\nthese monies. \nThough the internet is a seemingly unlikely\nplace to find such individuals, I believe that the\nLord hide s jewels in the most unlikely places. It is\nnot the means that is important but the message.\n I know that I am going to be in the bosom of the\nLord. Exodus 14 VS 14 says that the lord will fight my\ncase and I shall hold my peace. With God all things\nare possible. As soon as I receive your reply I shall\ngive you the contact of financial institution in\nEurope. I will also issue you a letter of authority\nthat will prove you as the original- beneficiary of\nthis fund. I want you and the church to always pray\nfor me because the lord is my shepherd.  Happiness is\nthat I lived a life of a worthy Christian.\nPlease assure me that you will act accordingly as I\nstated herein. Hoping to hearing from you. Remain\nblessed in the name of the Lord. \nN.B-PLEASE I WILL ADVICE YOU TO GIVE THE LAWYER IN\nCHARGE A CALL IS PRECENTLY IN Spain,HE DOES EVERYTHING\nON MY BEHALF\nAND HE'S VERY UNDERSTANDING AND I BELIEVE HE WILL \nLEAD YOU TO YOUR SUCCESS IN JESUS \nNAME:      MARK ADAMS\nTell:      0034-628-680-997 \nRemain blessed in the name of the Lord.\nYours in Christ,\nMrs. Joy Jones Khushab\n\n\n\n", "id": "lists-005-5164514"}, {"subject": "Virus d?tect? dans le message &quot;Encrypted Mail&quot", "content": "Symantec AntiVirus a d?tect? un virus dans une pi?ce jointe que vous\n(ietf-charsets@w3.org <ietf-charsets@w3.org>) avez envoy?e ? Michel Collin.\n\nPour garantir que les destinataires pourront utiliser les fichiers envoy?s,\nlancez une analyse des virus sur votre ordinateur, nettoyez les fichiers\ninfect?s, puis renvoyez cette pi?ce jointe.\n\n\nPi?ce jointe :  document.zip\nNom du virus :W32.Netsky.P@mm\nOp?ration effectu?e :  Nettoyer  - ?chec : Quarantaine - r?ussite : \nEtat du fichier :  Infect?s\n\n\n\n\n\n\napplication/ms-tnef attachment: winmail.dat\n\n\n\n\n", "id": "lists-005-5173768"}, {"subject": "??????????????????????", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-5188010"}, {"subject": "SAVE MY LIFE PLS", "content": "SAVE MY LIFE PLS.\n\n\nDear Sir,\n\nI greet you in the name of our lord Jesus Christ. My name is Mrs.SUSAN OKOBI. I am a widow and a mother\nof three all girls. I know you will see my letter to you as an embarrassment considering the fact that we do\nnot know ourselves. I plead with you to be patient with me I feel very pleased to contact you for some\nassistance and business relationship. I live in Nigeria with my children. My late husband was a loving, caring and hardworking businessman who died unfortunately In a ghastly auto crash. \n\nBefore the sudden death of my beloved husband, and father of my daughters, my late husband intended to establish a business in the united states of America with the sum of$30 million united states dollars, but unfortunately he died before this proposed venture. \n\nFollowing his death, his family members insisted that I am not entitled to his property (Assets and money) since I am a woman and my offspring's all girls as I do not have a male child for my husband. Well, according to some barbaric traditional laws here in Nigeria (Africa) which doesn't permit a woman to inherit a man's\nproperty, as they are expected by tradition to take over the management of his business and other\nproperties including myself who automatically becomes a wife to one of his immediate brothers. \n\nUnfortunately to this wicked family members, the $30million united states dollars which my late husband intended to use in establishing a business in the United States was deposited in a bank account unknown to his family .I and the lawyer is the only one aware of this money, so I have discussed this matter with a staff of the bank that i want this money personally so that I will be able to take care of my children's educational needs since my husband's family members vehemently opposed the furtherance of their education. \n\nAccording to the staff of the bank, the best way to secure this money is to transfer this money to a bank account outside Nigeria For safe-keeping, later it will be used for business establishment subject to the Advise of whosoever finally assists us. At this juncture, I there fore ask for your sincere assistance in\nproviding us with your bank details and the enablement to facilitate the remittance of this fund into your\nnominated account. As soon as I get your positive response, I shall provide you with all the necessary\ndetail for this transfer. \nHowever, I have decided to to give you 20% of the total money as a reward for your sincere assistance and the remaining 65% of the money will be for my investment as I will want to keep aglow my late husbands dream of investing in real estate. \nTo be able to help me, kindly send through my email, your personal details including your contact information for easy communication. \n\nThanking you for your anticipated response.\n\nMrs.SUSAN OKOBI\n\nN.B: please all further correspodence should be directed to this email :mrssusanoeze@masrawy.com\n\n\n\n\n\n                                                                      \n\n\n\n", "id": "lists-005-5194373"}, {"subject": "?????? ???????? ??????????!????5?????????? bfmaatxq vkkz", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-5203565"}, {"subject": "???????????????????? ???????? ???????? ?????? ????/1?? 1??,?????? ????!&#64", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-5210310"}, {"subject": "Norton AntiVirus failed to scan an attachment in a message you se nt", "content": "Recipient of the attachment:  Webmaster Intranet EDS-AM\\Bandeja de entrada\nSubject of the message:  Mail Delivery (failure webmaster@aeromexico.com.mx)\nNo action was taken on the attachment.\n  Attachment message.scr was Logged Only for the following reasons:\n        Scan Engine Failure (0x80004005)\n\n\n\n\napplication/ms-tnef attachment: stored\n\n\n\n\n", "id": "lists-005-5217774"}, {"subject": "???????????????????????????????????", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-5226073"}, {"subject": "Virus Alert &ndash; ScanMail for Lotus Notes&ndash;&ndash;&gt;Re: Here is the documen", "content": "Un virus a ?t? d?tect? lors du contr?le temps r?el de messagerie. Votre\nmessage n'a pas ?t? d?livr?\n\nDate:      3/30/2004 17:32:33\nSubject:  Re: Here is the document\nVirus:      WORM_NETSKY.D\nFile:        document_full.pif\nFrom:     ietf-charsets@w3.org\nTo:          webhelp2@noos.com;\nAction:   Uncleanable, Deleted;\n\nScanned by ScanMail for Lotus Notes 2.5\nwith scanengine 6.510-1002\nand patternfile lpt$vpn.842\n\n\n\n\n***********************************************************************************\nChez Noos en ce moment, decouvrez le bouquet Magic pour 11 euros/mois\net toutes les options offertes pendant 4 mois !\n\nEt profitez aussi de Noosnet, l'Internet Haut Debit le plus rapide du marche,\na partir de 9.90 euros/mois,\navec en exclusivite : 1 mois offert tous les 6 mois !\n\nPour plus de detail, cliquez ici : http://www.noos.fr\nOffres soumises a conditions.\n***********************************************************************************\n\n\nLe contenu de ce message ne represente en aucun cas un \nengagement de la part de Noos sous reserve de tout accord \nconclu par ecrit entre vous et Noos. Toute publication, \nutilisation ou diffusion, meme partielle, doit etre autorisee \nprealablement. Si vous n'etes pas destinataire de ce message, merci d'en \navertir immediatement l'expediteur.\nPour avoir plus d'informations sur Noos : http://www.noos.com\n\n\n***********************************************************************************\n\n\n\n", "id": "lists-005-5232945"}, {"subject": "?????????? dhugnlg uvlnaahzmo", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-5241811"}, {"subject": "??????????^^ sa qnwjtmnmjn", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-5248293"}, {"subject": "WINNING NOTIFICATIO", "content": "ATLANTICS PROMO INTERNATIONAL\n\nAN AFFILIATE OF INTERNATIONAL LOTTO COMMISSION\n\nFROM: INTERNATIONAL PROMOTION/PRIZE AWARD DEPT.\n\nREF: ODT/6311786008/04\n\nBATCH: 14/011/IPD /NL\n\nRE: WINNING NOTIFICATION .\n\nSir/Madam\n\nWe are pleased to inform you of the result of the Lottery Winners\nInternational programs held on the 14th of February 2004. Your e-mail\naddress attached to ticket number 50541555285-629 with serial number\n3642-99\ndrew lucky numbers 14-94-57-23-71-6-32 which consequently won in the 1st\ncategory, you have therefore been approved for a lump sum pay out of\n500,000.00 US Dollars. (Five Hundred Thousand US Dollars )\nCONGRATULATIONS!!!\n\nDue to mix up of some numbers and names, we ask that you keep your\nwinning information confidential until your claims has been processed\nand\nyour money Remitted to you. This is part of our security protocol to\navoid double claiming and unwarranted abuse of this program by some\nparticipants.\n\nAll participants were selected through a computer ballot system drawn\nfrom over 200,000 company and 500,000 individual email addresses and\nnames from all over the world.This promotional program takes place every\n\nthree year. We hope with part of your winning you will take part in our\nend of year Five million Euros International lottery. To file for your\nclaim, please contact our fiducial agent Mr. DAVID JONES of the AVSL\nSECURITIES AND FINANCE BV (Monday - Friday, B/W 9:00-18:00 G.M.T)\n\nTEL: 31-649-018-845\n\nFAX: 31-649-018-846\n\nEmail:avslsecfin@netscape.net\n\nRemember, all winning must be claimed not later than 13th of April,\n\n2004. After this date all unclaimed funds will be included in the next\n\nstake. Note that in order to avoid unnecessary delays and complications,\n\nplease remember to quote your reference number and batch numbers in all\n\ncorrespondence.\n\nFurthermore, should there be any change of address do inform our agent\nas soon as possible.\n\nCongratulations once more from our members of staff and thank you for\n\nbeing part of our promotional program.\n\nNote: Anybody under the age of 18 is automatically disqualified.\n\nYours Faithfully,\n\nMrs. Susan Van Campen\nLottery Cordinator\n\n  \n\n\n\n", "id": "lists-005-5254656"}, {"subject": "WINNING NOTIFICATIO", "content": "FROM: THE LOTTERY COORDINATOR,\nINTERNATIONAL PROMOTIONS/PRIZE AWARD DEPARTMENT\n\n\nDEAR SIR/MADAM,\n\n           RESULTS FOR THIRD CATEGORY DRAWS\n\nCongratulations to you as we bring to your notice, the\nresults of the Third Category draws of GOLDEN RAND\nLOTTERY SA. We are happy to inform you that you have\nemerged a winner under the Third Category, which is\npart of our promotional draws. The draws were held on\nthe 6TH MARCH 2004 and results are being officially\nannounced today 15TH MARCH 2004.  Participants were\nselected through a computer ballot system drawn from\n40,000 names/email addresses of individuals and\ncompanies from Africa, America, Asia, Australia,\nCanada, Europe, Middle East, and New Zealand as part\nof our International Promotions Program.\n\nYou/Your company, attached to ticket number\n1811-5-742, with serial number 89-63 drew the lucky\nnumbers 19, 21, 25, 30, 41, 44 (22), and consequently\nwon in the Third Category.\n\nYou have therefore been awarded a lump sum pay out of\nUS$2,400,000.00 (Two Million Four Hundred Thousand\nUnited States Dollars) in cash, which is the winning\npayout for Third Category winners. This is from the\ntotal prize money of US$9,600,000.00 shared among the\n4 international winners in the Third category.\n\n\nCONGRATULATIONS!\n\n\nYour fund is now deposited with APEX FINANCE AND\nINVESTMENT GROUP  insured in your name. In your best\ninterest and also to avoid mix up of numbers and names\nof any kind, we request that you keep the entire\ndetails of your award strictly from public notice\nuntil the process of transferring your claims has been\ncompleted, and your funds remitted to your account.\nThis is part of our security protocol to avoid double\nclaiming or unscrupulous acts by\nparticipants/nonparticipants of this program.\n\nWe also wish to bring to your notice our mid year\n(2004) high stakes where you stand a chance of winning\nup to US$1.5 Billion, we hope that with a part of your\nprize you will participate.\n\nPlease contact your claims agent immediately, to begin\nyour claims process;\n\nMR. PHILIP KOPANO,\nFOREIGN DEPARTMENT MANAGER,\nAPEX FINANCE AND INVESTMENT GROUP.\nTEL/FAX: +27 826750395\nEMAIL: pkopano3@apexfinanceandinvestmentgroup.net \n\n\nFor due processing and remittance of your prize money\nto a designated account of your choice.\n\nRemember, you must contact your claim You are to\ncontact our\nagents by email and/or fax within a week of receiving\nthis\nnotice. Failure to do so may warrant disqualification.\n\nNOTE: For easy reference and identification, Find\nbelow your reference and Batch numbers, remember to\nquote these numbers in every one of your\ncorrespondence with your claims agent. \n\nREFERENCE NUMBER: GRL-3RD-33\nBATCH NUMBER: 1811-TH\n\n\nCongratulations once again from all our staff and\nthank you for being part of our promotions program.\n\n\nSincerely,\n\nTHE LOTTERY COORDINATOR,\nGOLDEN RAND LOTTERY SOUTH AFRICA.\n6 SPRINGFIELD ROAD,\nMALVERN, JHB.\nSOUTH AFRICA.\nTEL/FAX: +27 826702162\n\n\nN.B. Any breach of confidentiality on the part of the\nwinners will result to disqualification. Please do not\nreply to this mail. Contact your claims agent. \n\n\n\n", "id": "lists-005-5264274"}, {"subject": "[ietf-charsets] &lt;none&gt", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-5274784"}, {"subject": "??????????! ???????? ???????????365?? ???? ?????????????? yf r unsyettwdnhd", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-5284748"}, {"subject": "BUSINESS PROPOSA", "content": "Dear Sir, \nI know that this proposal letter might be a surprise to you, but do consider it as an emergency.In a nutshell,I am Mr.SAMSON KONATE MANI,from the republic of Sierra-Leone in west Africa,now seeking political asylum in Dakar Senegal under the (UNHCR).I got your contact from a reliable chamber of commerce. \n \nMy (late )father (Dr.MUSTAPHA MANI) was the managing director of Rainbow Gold Diamond Mining company in (KEN EMA) Sierra- Leone.But was killed during the longing civil war and all his properties was totally destroyed.However, we managed to escape with some of my father's precious Diamonds which is presently deposited safely in a security and finance company here in Dakar. \n \nNow we are saddled with the problem of securing a trust worthy foreign personality to help us transfer the diamonds over to his country pending my arrival to meet with him.Furthermore,we only want this done this way because your country is politically stable for any profitable investment and if you accept our proposal,you will serve as the beneficiary of the diamonds. \n \nI am giving you the offers as mentioned with every confidence on your acceptance to assist us,we have decided to give you 10% out of the total money generated from the sales of the diamonds.Secondly,we shall mapped out 2% for any miscellaneous expenses that you may incur during the transferring of the diamonds over to your country. Finally,the diamond weight in question is 42.550 Carats.Conclusively,i wish you send me a reply immediately as soon as you receive this proposal, so that we shall arrange on how to lift this consignment out of Dakar Senegal to your country. \n \nOn commencement,this transaction will take (7) working days to be accomplished.A certificate of ownership, and the Lab-test result certificate of the diamonds would be fax to you immediately i receive your urgent and positive reply.Until then,i remain with the best regards. My alternative email address is (samson.mani@caramail.com) \nRegards.\nSAMSON. \n \n \n\n \n\n\n\n\napplication/octet-stream attachment: fuck.txt\n\n\n\n\n", "id": "lists-005-5291733"}, {"subject": "????????0.2??/??????????0.6??/???", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-5300306"}, {"subject": "=??=??=??=?? ???? 7???? ???? -_-a  cdkuafvrsbsnrcd ", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-5306847"}, {"subject": "CONGRATULATIONS,LOTTERY WINNER (COLLECT PRIZE", "content": "LOTTERY LA PRIMITIVA.\nTEL/FAX: +34-699-604-028\nFROM: THE DESK OF THE PROMOTIONS MANAGER,\nINTERNATIONAL PROMOTIONS/PRIZE\nAWARD DEPARTMENT,\nREF: LP/134763327/03 BATCH: 60/010546/LAP\n \nATTENTION:\n \nRE: AWARD NOTIFICATION FINAL NOTICE.\n \nWe are pleased to inform you of the announcement, of winners of the\nLOTTERY\nPRIMITIVA SWEEPSTAKES/INTERNATIONAl PROGRAMS. held on 6 Dec,2003.\nYour \nname\nis attached to ticket number 0642-1877640-1900, with serial number\n19005 drew\nthe lucky numbers 07-120-247243-61, and consequently won the lottery\nin the\n3rd category. You have therefore been approved for a lumpsum\npay out of EUROS 64,828,87 Million in cash credited to file\nNo:LP/1356829009/03.\n \nThis is from total prize money of EUROS 35,400,000.00 shared among\nthe twenty\ntwo international winners in this category. All participants were\nselected\nthrough a computer ballot system drawn form25,000 names from Australia,\nNew\nZealand, America, Europe, North America and Asia as part of international\nPromotions Program which is conducted annually. CONGRATULATIONS!!!\nYour fund\nis now insured to your name. Due to the mix up of some numbers and\nnames, we\nask that you keep this award strictly from public notice until your\nclaim has\nbeen processed and your money remitted to your account.\n \nThis is part of our security protocol to avoiddouble claiming or unscrupulous\nacts by participants of this program. We hope with a part of\n you prize, you will participate in our end of year high stakes\nEuros1.1billion International Lottery. To begin your claim, please\ncontact:\n \nISABEL STATE LOTTERY\nEL- GORDO ISABEL STATE LOTTERY\nMADRID, SPAIN .\nPHONE NUMBER (+34-699-604-028)\nMrs.Diane Lopez(OPERATION MANAGER)\n\n \nFor due processing and remittance of your prize money to a designated\naccount\n. Remember, all prize money must be claimed not later than 9 April\n2004. After\n this date, all funds will be returned as unclaimed.\n \nNOTE: In order to avoid unnecessary delays and complications, please\nremember\nto quote your reference and batch numbers in every one of your\ncorrespondences with the lottery . Furthermore, should there be any\nchange of\nyour address, do inform your claims agent as soon as possible.\nCongratulations again from all our staff and thank you for being part\nof our\npromotions programm.\n \nSincerely,\nMANAGEMENTS\n\n\n\n", "id": "lists-005-5313429"}, {"subject": "63 Someone is interested in yo", "content": "OFFSHORE-DISCRETE Pharmacy...\n\n*No-questions ever asked. We trust the judgement of our clients based on their needs. We guarantee complete privacy on all transactions.\n\nPopular drugs of the MONTH: CIaLis. (35-hour time frame to act), Valium.(rleases stress on the spot, allowing more confidence)\n\nWe have a full-lineup, check all of our low prices & products.\n\n\nhttp://msn.com.nebdtz.com/m004/index.php?id=m004\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNo more of either, I wish to be taken0ff, thank-you.\nhttp://ziegler.nebdtz.com/byebye.html\n\n\negregious daedalus fum von annulled atom cowmen crosswalk subsidiary buckskin hollowware principle builtin filbert transparent cloth thistledown chinch weal causal besotted electric saw sequitur boardinghouse munich guy honduras federate decree circe anguish \n4\n\n\n\n", "id": "lists-005-5322191"}, {"subject": "07 expansibl", "content": "ENLARGE YOUR PEN1S ALL NATURALLY...Guaranteed & proven by Doctor's.\n\nSEEN ALL OVER THE WEB & ON TV.\n\n*Gain up to 3+ inches\n*Thicken your shaft\n*Gives partner/fling increased pleasure\n*Improves self-esteem\n*A longer lasting, healthier erection\n*All Natural, wholesale cost, try it!\n\n100% $-back guarantee...\n\nV1rility_Pro_ is a Registered Trademark.\n\n\nhttp://msn.com.neszwes.com/vp9\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBe no part of this anymore.\nhttp://cia.neszwes.com/remove.html\n\n\neffusive hafnium inventory clitoris craftsman aware runway testy transmittance remington decrement beltsville catalysis coleman riverbank wicket allege conceive electrocardiogram catsup \n4\n\n\n\n", "id": "lists-005-5329177"}, {"subject": "??????????! ???????? ???????????365?? ???? ?????????????? l", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-5335877"}, {"subject": "????????0.2??/??????????0.6??/???", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-5342658"}, {"subject": "???????????????????????????????????", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-5349253"}, {"subject": "?????? ????5?????????? 36????????????! vg", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-5355925"}, {"subject": "?????????? ?????? ???? ???? ???? ????!! ??!! 365?? ???? ??????!! ???? ayhklzdbeqkmxvpd y", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-5362651"}, {"subject": "Budget tight? Get 5OO USD by tomorro", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-5369810"}, {"subject": "?????????? ?????? ???? ???? ???? ????!! ??!! 365?? ???? ??????!! ???? ", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-5376437"}, {"subject": "??????????! ???????? ???????????365?? ???? ?????????????? jflzo", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-5383474"}, {"subject": "???????????????????????????????????", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-5390384"}, {"subject": "Test on line- Aprenda ingles en 20 dias sin deberes", "content": "text/html attachment: stored\n\n\n\n\n\n\n\n\n", "id": "lists-005-5397128"}, {"subject": "???????????????????????????????????", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-5403670"}, {"subject": "????????0.2??/??????????0.6??/???", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-5410363"}, {"subject": "?????????? ???? ???? ?????????? ???? ?????????? ????????????!&#64", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-5417018"}, {"subject": "??????????????16:15:0", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-5424204"}, {"subject": "(no subject", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-5430628"}, {"subject": "FINANZAS CORPORATIVA", "content": "SAAMConsulting Guatemala presenta: \n\n\n\nSEMINARIO: FINANZAS CORPORATIVAS\n\n\n\nOBJETIVO:\nProporcionar a los participantes los conocimientos y conceptos fundamentales que necesita todo administrador financiero en la aplicaci?n y toma de decisiones en el \"d?a a d?a\" de su negocio.\n\nFECHA: \n26 al 28 de Abril del 204 \n\nLUGAR:\nHotel Princess, Ciudad de Guatemala\n\nINVERSI?N: \nUS$295.00 + I.V.A.\n\nHORARIO: \n 5:00 p.m. a 9:30 p.m.\n\nMETODOLOG?A: \n14 Horas de Instrucci?n, Presentaciones Digitales, Casos reales y acceso a modelos pr?cticos.  \n\nTEMAS DESTACADOS:\nComprender los diferentes estados financieros: Balance General, Estado de Resultados y Flujo de Caja.\nEvaluar la situaci?n financiera de su empresa y c?mo compararla con sus competidores.\nInterpretaci?n de las principales razones financieras.\nAn?lisis de las diferentes cuentas en los Estados financieros y su interrelacion entre ellas.\n\n\n\nPARA MAYOR INFORMACION, FAVOR CONTACTAR AL SE?OR, Julio Noriega AL 368-3047\n\n\n\n", "id": "lists-005-5438282"}, {"subject": "=?EUC-KR?B?JiM0MDsmIzQ0MzA1OyYjNDQyNTY7JiM0MTu068Dlsd0gwOWz+rvqu+8guau34cH1waQgwMy6pcauQA==? v", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-5445576"}, {"subject": "&lt;???? ????&gt;???????? ??????", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-5452254"}, {"subject": "look rich now get rich later fake rolex watche", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-5458961"}, {"subject": "Re: Detail", "content": "  G & M Asociados recibi? su mensaje\n    En un momento le contestaremos\n\n   Gracias por confiar en nosotros ...!\n\n   Nuestra Web: www.gm-asociados.8m.com\n\n\n\n", "id": "lists-005-5465873"}, {"subject": "??????????????17:55:1", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-5472090"}, {"subject": "CONGRATULATION", "content": "SWEEPSTAKE BV\nBURDENSTRAAT 21B 2053 DS\nAMSTERDAM NETHERLANDS.\n\nRE / AWARD NOTIFICATION / PROCESSMENT ADVICE.\n\nWe are pleased to inform you of the announcement today, 11th march, 2004 of winners of the SCIENTIFIC GAME PROMO LOTTERY; THE NETHERLANDS /INTERNATIONAL, PROGRAMS held on 4th march, 2004. Your email address attached to ticket number 023-56678230954, drew the lucky numbers 7-14-21-42-49-59,batch number 6858/NL and consequently won the lottery in the 1st category. You have therefore been approved of a lump sum pay out of EURO 700.000.00 (SEVEN HUNDRED THOUSAND EUROS) in credited to file LOTTERYREF NO. SGIL/763276/03. This is from total prize money of EURO 20,000,000.00\nshared among the forty national winners in categories C with serial number:IL/FLW/12-C033721192. All participants were selected through a computer ballot system drawn form 25,000 company email addresses and 30,000,000 individual email addresses from Australia, New Zealand, America, \nEurope,\nNorth America and Asia as part of International Promotions Program, which is conducted annually.\nCONGRATULATIONS! Your fund is now in custody of a financial Security company insured in your FILE REFERENCE. Due to the mix up of some numbers and names,\nwe ask that you keep this award strictly from public notice until your claim has been processed and your money remitted to your account. This is part of our security protocol to avoid double claiming or unscrupulous acts by participants of this program. Our group of philanthropist headed by the Netherlands government promoted this lottery program. We hope with a part of you prize, you will participate in our end of year high stakes EURO 10,000,000 million International Lottery. To begin your claim, please contact your file/claim officer: \n\nMR.PETER VAN BROOKE.\nFOREIGN SERVICE MANAGER\nGATEWAY SECURITY SERVICE\nC/ CORDOBA N? 21 EGGER-STRAAT ST\n28089 AMSTERDAM NETHERLAND\nTEL: 31-616-260-736\nFAX:31-647-858-367\nINTERNET FAX: 17755228610\nEMAIL(peter_vanbrooke@yahoo.com)\n\nPlease be informed that NON RESIDENCE of THE NETHERLANDS will be required tomake a NON DEDUCTABLE advance payment of processment and legal\ndocumentation charges of 700.00 Euros to enable our legal department acquire Naturalization papers from the Court prior to award payment policy as required by the paying Financial Security Company. Please be aware that your Paying Authority will Effect Payment Swiftly upon satisfactory Report,\nVerifications and validation provided by our processing Agent; that would be designated to your file. For due processment and remittance of your winning prize to your designated account of your choice. Remember, all prize money must be claimed not later than 30th April  2004. After this date, all funds will be returned as unclaimed.\nNOTE: In order to avoid unnecessary delays and complications, please remember to quote your reference and batch numbers in every one of your correspondences with your agent. Furthermore, should there be any change of your address, do inform your claims agent as soon as possible.\nCongratulations once again from our team of staff and thank you for being part of our promotional program. Note: Anybody under the age of 18 is AUTOMATICALLY DISQUALIFIED.\nSincerely,\nNina Vandijk. (Lottery Coordinator)\n\n\n\n\n\n                                                                      \n\n\n\n", "id": "lists-005-5478433"}, {"subject": "CONGRATULATION", "content": "SWEEPSTAKE BV\nBURDENSTRAAT 21B 2053 DS\nAMSTERDAM NETHERLANDS.\n\nRE / AWARD NOTIFICATION / PROCESSMENT ADVICE.\n\nWe are pleased to inform you of the announcement today, 11th march, 2004 of winners of the SCIENTIFIC GAME PROMO LOTTERY; THE NETHERLANDS /INTERNATIONAL, PROGRAMS held on 4th march, 2004. Your email address attached to ticket number 023-56678230954, drew the lucky numbers 7-14-21-42-49-59,batch number 6858/NL and consequently won the lottery in the 1st category. You have therefore been approved of a lump sum pay out of EURO 700.000.00 (SEVEN HUNDRED THOUSAND EUROS) in credited to file LOTTERYREF NO. SGIL/763276/03. This is from total prize money of EURO 20,000,000.00\nshared among the forty national winners in categories C with serial number:IL/FLW/12-C033721192. All participants were selected through a computer ballot system drawn form 25,000 company email addresses and 30,000,000 individual email addresses from Australia, New Zealand, America, \nEurope,\nNorth America and Asia as part of International Promotions Program, which is conducted annually.\nCONGRATULATIONS! Your fund is now in custody of a financial Security company insured in your FILE REFERENCE. Due to the mix up of some numbers and names,\nwe ask that you keep this award strictly from public notice until your claim has been processed and your money remitted to your account. This is part of our security protocol to avoid double claiming or unscrupulous acts by participants of this program. Our group of philanthropist headed by the Netherlands government promoted this lottery program. We hope with a part of you prize, you will participate in our end of year high stakes EURO 10,000,000 million International Lottery. To begin your claim, please contact your file/claim officer: \n\nMR.PETER VAN BROOKE.\nFOREIGN SERVICE MANAGER\nGATEWAY SECURITY SERVICE\nC/ CORDOBA N? 21 EGGER-STRAAT ST\n28089 AMSTERDAM NETHERLAND\nTEL: 31-616-260-736\nFAX:31-647-858-367\nINTERNET FAX: 17755228610\nEMAIL(peter_vanbrooke@yahoo.com)\n\nPlease be informed that NON RESIDENCE of THE NETHERLANDS will be required tomake a NON DEDUCTABLE advance payment of processment and legal\ndocumentation charges of 700.00 Euros to enable our legal department acquire Naturalization papers from the Court prior to award payment policy as required by the paying Financial Security Company. Please be aware that your Paying Authority will Effect Payment Swiftly upon satisfactory Report,\nVerifications and validation provided by our processing Agent; that would be designated to your file. For due processment and remittance of your winning prize to your designated account of your choice. Remember, all prize money must be claimed not later than 30th April  2004. After this date, all funds will be returned as unclaimed.\nNOTE: In order to avoid unnecessary delays and complications, please remember to quote your reference and batch numbers in every one of your correspondences with your agent. Furthermore, should there be any change of your address, do inform your claims agent as soon as possible.\nCongratulations once again from our team of staff and thank you for being part of our promotional program. Note: Anybody under the age of 18 is AUTOMATICALLY DISQUALIFIED.\nSincerely,\nNina Vandijk. (Lottery Coordinator)\n\n\n\n\n\n                                                                      \n\n\n\n", "id": "lists-005-5487832"}, {"subject": "Generic Viagra, Generic Phentermine &amp; MORE... ", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-5497269"}, {"subject": "?????? ????.??????.???? ?????????", "content": "text/html attachment: stored\n\napplication/octet-stream attachment: Qwee.htm\n\n\n\n\n", "id": "lists-005-5503625"}, {"subject": "WINNING NOTIFICATIO", "content": "FROM: THE LOTTERY COORDINATOR,\nINTERNATIONAL PROMOTIONS/PRIZE AWARD DEPARTMENT\n\n\nDEAR SIR/MADAM,\n\n           RESULTS FOR THIRD CATEGORY DRAWS\n\nCongratulations to you as we bring to your notice, the\nresults of the Third Category draws of GOLDEN RAND\nLOTTERY SA. We are happy to inform you that you have\nemerged a winner under the Third Category, which is\npart of our promotional draws. The draws were held on\nthe 6TH MARCH 2004 and results are being officially\nannounced today 15TH MARCH 2004.  Participants were\nselected through a computer ballot system drawn from\n40,000 names/email addresses of individuals and\ncompanies from Africa, America, Asia, Australia,\nCanada, Europe, Middle East, and New Zealand as part\nof our International Promotions Program.\n\nYou/Your company, attached to ticket number\n1811-5-742, with serial number 89-63 drew the lucky\nnumbers 19, 21, 25, 30, 41, 44 (22), and consequently\nwon in the Third Category.\n\nYou have therefore been awarded a lump sum pay out of\nUS$2,400,000.00 (Two Million Four Hundred Thousand\nUnited States Dollars) in cash, which is the winning\npayout for Third Category winners. This is from the\ntotal prize money of US$9,600,000.00 shared among the\n4 international winners in the Third category.\n\n\nCONGRATULATIONS!\n\n\nYour fund is now deposited with APEX FINANCE AND\nINVESTMENT GROUP  insured in your name. In your best\ninterest and also to avoid mix up of numbers and names\nof any kind, we request that you keep the entire\ndetails of your award strictly from public notice\nuntil the process of transferring your claims has been\ncompleted, and your funds remitted to your account.\nThis is part of our security protocol to avoid double\nclaiming or unscrupulous acts by\nparticipants/nonparticipants of this program.\n\nWe also wish to bring to your notice our mid year\n(2004) high stakes where you stand a chance of winning\nup to US$1.5 Billion, we hope that with a part of your\nprize you will participate.\n\nPlease contact your claims agent immediately, to begin\nyour claims process;\n\nMR. PHILIP KOPANO,\nFOREIGN DEPARTMENT MANAGER,\nAPEX FINANCE AND INVESTMENT GROUP.\nTEL/FAX: +27 826750395\nEMAIL: pkopano3@apexfinanceandinvestmentgroup.net \n\n\nFor due processing and remittance of your prize money\nto a designated account of your choice.\n\nRemember, you must contact your claim You are to\ncontact our\nagents by email and/or fax within a week of receiving\nthis\nnotice. Failure to do so may warrant disqualification.\n\nNOTE: For easy reference and identification, Find\nbelow your reference and Batch numbers, remember to\nquote these numbers in every one of your\ncorrespondence with your claims agent. \n\nREFERENCE NUMBER: GRL-3RD-3\nBATCH NUMBER: 1811-TH\n\n\nCongratulations once again from all our staff and\nthank you for being part of our promotions program.\n\n\nSincerely,\n\nTHE LOTTERY COORDINATOR,\nGOLDEN RAND LOTTERY SOUTH AFRICA.\n6 SPRINGFIELD ROAD,\nMALVERN, JHB.\nSOUTH AFRICA.\nTEL/FAX: +27 826702162\n\n\nN.B. Any breach of confidentiality on the part of the\nwinners will result to disqualification. Please do not\nreply to this mail. Contact your claims agent.\n\n\n\n", "id": "lists-005-5510102"}, {"subject": "???????? - 1???? ?????????? ???? ???????? ???? ?? ???? ?????", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-5520658"}, {"subject": "Virus Aler", "content": "***************************** InterScan Message (on the network)\n\nThe e-mail message you sent contained a virus. \nThe file was deleted.\n\n  virus         : WORM_NETSKY.Q \n  file          : message30074.zip \n  detected date : 03/31/2004 09:32:10 \n\nPlease refer to the Trend Micro web site about the virus.\nhttp://www.trendmicro.com/\n\n*Please note :\n\nIn the case of a virus forging the sender address, this notification\ncan be a false alarm.\n\nThis notification is sent automatically by the anti virus server.\nPlease do not send message to the sender Email address of this message.\n\n**********************************************************\n\n x \n x \n\n   x      x WORM_NETSKY.Q \n x message30074.zip \n x        x 03/31/2004 09:32:10 \n\n x Trend Micro x \nhttp://www.trendmicro.co.jp/\n\n x \n\n    x \n    x \n    x \n\n\n x \n x \n\n\nVirusCheck - http://www.cw.com/jp\n**********************************************************\n\n\n\n", "id": "lists-005-5527560"}, {"subject": "YOU HAVE WON,CONGRATULATION", "content": "FROM: THE LOTTERY COORDINATOR,\nGOLDEN RAND LOTTERY SOUTH AFRICA.\n6 SPRINGFIELD ROAD,\nMALVERN, JHB.\nSOUTH AFRICA.\nTEL/FAX: +27 826702162,\n  \n        INTERNATIONAL PROMOTIONS/PRIZE AWARD\nDEPARTMENT\n\nDEAR WINNER,\n           \nRESULTS FOR THIRD CATEGORY DRAWS\nCongratulations to you as we bring to your notice, the\nresults of the Third Category draws of GOLDEN RAND\nLOTTERY SA. We are happy to inform you that you have\nemerged a winner under the Third Category, which is\npart of our promotional draws. The draws were held on\nthe 1st Febraury 2004 and results are being officially\nannounced today.  Participants were\nselected through a computer ballot system drawn from\n40,000 names/email addresses of individuals and\ncompanies from Africa, America, Asia, Australia,\nCanada, Europe, Middle East, and New Zealand as part\nof our International Promotions Program.\nYou/Your company, attached to ticket number\n1811-5-742, with serial number 89-63 drew the lucky\nnumbers 19, 21, 25, 30, 41, 44 (22), and consequently\nwon in the Third Category.\nYou have therefore been awarded a lump sum pay out of\nUS$2,400,000.00 (Two Million Four Hundred Thousand\nUnited States Dollars) in cash, which is the winning\npayout for Third Category winners. This is from the\ntotal prize money of US$9,600,000.00 shared among the\n4 international winners in the Third category.\n\nCONGRATULATIONS!\n\nYour fund is now deposited with APEX FINANCE AND\nINVESTMENT GROUP  insured in your name. In your best\ninterest and also to avoid mix up of numbers and names\nof any kind, we request that you keep the entire\ndetails of your award strictly from public notice\nuntil the process of transferring your claims has been\ncompleted, and your funds remitted to your account.\nThis is part of our security protocol to avoid double\nclaiming or unscrupulous acts by\nparticipants/nonparticipants of this program.\nWe also wish to bring to your notice our mid year\n(2004) high stakes where you stand a chance of winning\nup to US$1.5 Billion, we hope that with a part of your\nprize you will participate.\nPlease contact your claims agent immediately, to begin\nyour claims process;\n\nMR. PHILIP KOPANO,\nFOREIGN DEPARTMENT MANAGER,\nAPEX FINANCE AND INVESTMENT GROUP.\nTEL/FAX: +27 826750395\nEMAIL:ph_kopano8@apxfinanceandinvestmentgroupsa.net \n\nFor due processing and remittance of your prize money\nto a designated account of your choice.\nRemember, you must contact your claim agent not later\nthan one week from today. After this date, all funds\nwill be returned as unclaimed.\nNOTE: For easy reference and identification, Find\nbelow your reference and Batch numbers, remember to\nquote these numbers in every one of your\ncorrespondence with your claims agent. \n\nREFERENCE NUMBER: GRL-3RD-12_C\nBATCH NUMBER: 1811-TH\n\nCongratulations once again from all our staff and\nthank you for being part of our promotions program.\n\nSincerely,\nTHE LOTTERY COORDINATOR,\nGOLDEN RAND LOTTERY SOUTH AFRICA.\n6 SPRINGFIELD ROAD,\nMALVERN, JHB.\nSOUTH AFRICA.\nTEL/FAX: +27 826702162\n\nN.B. Any breach of confidentiality on the part of the\nwinners will result to disqualification. Please do not\nreply to this mail. Contact your claims agent.\n\n\n\n\n___________________________________________________________________________\nMail sent from WebMail Powered site\n- http://virtualbairro.com\n\n\n\n", "id": "lists-005-5535230"}, {"subject": "???????????? ???? 5000????(????????)!????????????&#64;  bzdq", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-5544899"}, {"subject": "The abacha", "content": "Dear Friend ,\n\nI am Mrs. Mariam Abacha, the widow of the late Gen. \n\nSanni Abacha \nformer Nigerian Military Head of State who died \n\nmysteriously as a result of Cardiac Arrest. Since after \n\nmy husband?s death my family is under restriction of \n\nmovement and that not withstanding, we are being \n\nmolested, policed and our Bank Account both here and \n\nabroad are being frozen by the Nigerian Civilian \n\nGovernment. \n\nFurthermore, my elder son is in detention by the \n\nNigerian Government for more interrogation about my \n\nhusband?s assists and some vital documents. Following \n\nthe recent discovery of my husband?s Bank Account by the \n\nNigerian Government with Swiss Bank in which the huge \n\nsum of US$700Million and DM450Milllion was logged. I \n\ntherefore decided to contact you in confidence that I \n\nwas able to move out the sum of US$25Million Dollars, \n\nwhich was secretly lodged in a trunk box and deposited \n\nwith a Security Company as materials of Inheritance. \n\nI therefore personally, appeal to you seriously and \n\nreligiously for your urgent assistance to move this \n\nmoney into your country where I believe it will be safe \n\nsince I cannot leave the country due to the restriction \n\nof movement imposed on the members of my family by the \n\nNigerian Government. \n\nYou we be contacted by my family Attorney Ademola stamps \n\nand my lawyer shall arrange with you for a face to face \n\nmeeting outside Nigerian, in order to liaise with you \n\ntoward effective completion of this transaction. \n\n\nHowever, arrangements have been put in place to move \n\nthis money out of the country in a secret vault through \n\na diplomatic security company, as \nsoon as you indicate your interest, forward to my lawyer \n\nyour Telephone \nNumber, Fax Number and your Postal Address so that he \n\ncan send to you \nthe Certificate of Deposit and other necessary \n\ndocuments, so that you \ncan help to claim the luggage. \n\nConclusively, we have agreed to offer you 30% of the \n\ntotal sum while 70% is to be held on trust by you until \n\nwe decide on a suitable business investment in your \n\ncountry subsequent to our free movement by the Nigerian \n\nGovernment. \n\nPlease reply urgently and treat with absolute \n\nconfidentiality and sincerity. \n\nBest \nRegards, \nHajia Mariam abacha(Mrs.) \n\nNB:To proove the authenticity of my story i will want \n\nyou to go through the links below.\n\n\n1:http://www.transnationale.org/anglais/sources/tiersmon\n\nde/dirigeants__abacha.htm \n2:http://allafrica.com/stories/200203180074.html \n\n3:http://www.time.com/time/europe/magazine/2000/27/swiss\n\n.htm\n4:september 16 2002 time magazine page 52. \n\n5:please do reply me via(mariamabacha_101@sify.com).\n\n\n\n\n\n \n\n\n\n", "id": "lists-005-5551693"}, {"subject": "Attention e-gold user ", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-5560958"}, {"subject": "Attention e-gold user ", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-5567511"}, {"subject": "urgent assistan", "content": "DEAR SIR,\nWITH DUE HONOUR AND RESPECT,I AM FRANK BOBBYTHE DIRECTOR IN CHARGE OF AUDIT AND ACCOUNTS UNIT,FOREIGN REMITTANCE DEPT. OF THE INTERNATIONAL BANK OF AFRICA, NIGERIA WEST AFRICA.\nI GOT YOUR E-MAIL ADDRESS THROUGH BUSINESS DIRECTORY OF 2001/2002 MAGAZINE AND I DECIDED TO CONTACT YOU FOR BENEFICIAL AND A 100% RISK FREE BUSINESS TRANSACTION.DURING OUR AUDITING AND INVESTIGATIONS IN THIS BANK MY DEPARTMENT CAME ACROSS THE SUM OF EIGHTEEN MILLION UNITED STATES DOLLARS (US$18,000.000.00) ONLY BELONGING TO A MORROCCAN INTERNATIONAL USINESSMAN(HADJI MUSTAPHA) WHO DIED ALONG WITH HIS NEXT OF KIN IN 5TH NOVEMBER 1997 AERO PLANE CRASH IN ABIDJAN BEFORE OUR DISCOVERY TO THIS DEVELOPMENT, THERE WAS NO TRACE OF CLAIM FROM ANY PERSON AS THE FUND REMAINS DORMANT IN HIS ACCOUNT WITH THIS BANK. ALTHOUGH I KEPT THIS INFORMATION SECRET WITHIN MY JURISDICTION TO ENABLE US PUT CLAIM AND TRANSFER THE SAID AMOUNT THROUGH A TRUSTWORTHY FRIEND OVERSEAS WHOM WE SHALL PRESENT TO THE BANK AS THE BONIFIDE NEXT-OF-KIN TO THE DECEASED FOR A PROFITABLE AND SUCCESSFUL DEAL. MEANWHILE ALL THE ARRANGEMENT TO PUT CLAIMS AS THE BONAFIDE NEXT-OF-KIN TO THE DECEASED 2C TO GET THE REQUIRED APPROVAL AND TRANSFER OF THIS MONEY TO A FOREIGN ACCOUNT HAS BEEN PUT IN PLACE. \nTHE DIRECTIVES AND THE NEEDED INFORMATION WILL BE RELAYED TO YOU AS SOON AS YOU INDICATE YOUR INTEREST AND WILLINGNESS TO THIS GREAT BUSINESS OPPORTUNITY.\nINFACT, WE COULD HAVE DONE THIS DEAL ALONE BUT BECAUSE WE CIVIL SERVANTS ARE NOT LEGALLY ALLOWED TO OPERATE FOREIGN ACCOUNT AND IT WOULD EVENTUALLY RAISE EYEBROWS ON OUR SIDE DURING THE TIME OF TRANSFER BECAUSE WE ARE STAFF OF THE BANK. \nTHESE ARE THE ACTUAL REASONS IT REQUIRES A SECOND-FELLOW WHO WILL FORWARD CLAIMS BY OUR SUPPORT AS THE BONAFIDE NEXT-OF-KIN WITH BENIN COURT AFFIDAVIT TO THE BANK AND ALSO PRESENT A FOREIGN BANK ACCOUNT WHERE THE MONEY ON HIS/HER REQUEST WILL BE RE-TRANSFERED INTO. ON CONCLUSION OF THIS TRANSACTION, YOU WILL BE ENTITTLED TO 25% OF THE TOTAL SUM AS GRATIFICATION 5% OF THE TOTAL SUM WILL BE USED TO REINBURSE EXPENSES THAT MIGHT ARISE FROM TELEPHONE BILLS AND OTHER EXPENSES DURING THE TRANSACTION WHILE 70% WILL BE FOR ME AND MY COLLEAGUES HERE.PLEASE YOU HAVE BEEN ADVICED TO KEEP TOP SCRET AS WE ARE STILL IN SERVICE AND INTEND TO RETIRE FROM SERVICE AFTER WE CONCLUDE THIS DEAL WITH YOU.\nI WILL BE MONITORING THE WHOLE SITUATION HERE IN THIS BANK UNTIL YOU CONFIRM THE MONEY IN YOUR ACCOUNT, WE THEN COME DOWN TO YOUR COUNTRY FOR SUDSEQUENT SHARING OF THE FUND ACCORDING TO THE PERCENTAGES PREVIOUSLYINDICATED AND FOR INVESTMENT IN ANY COUNTRY YOU MAY ADVICE US TOO.\nALL OTHER NECESSARY INFORMATION WILL BE SENT TO YOU WHEN I HEAR FROM YOU.I SUGGEST YOU GET BACK TO ME AS SOON AS POSSIBLE STATING YOUR WISH IN THIS DEAL. \nYOURS FAITHFULLY FRANK BOBBY. \n\n\n\n", "id": "lists-005-5574030"}, {"subject": "MUTUAL CONTRACT BENEFI", "content": "DR.MIKE  CHIBUZOR\nExecutive Investigation Chairman,On Contracts Payment\nReview panal Committee. \nFalomo Office Complex, \nIkoyi-Lagos. \nE-mail:dr_mikechibuzor41@telstra.com[ PLEASE REPLY ME WITH \nTHIS E-MAIL ADDRESS]\n\nAttention:ceo \n\nFirst, I must solicit your strictest confidence in this transaction; this is \nvirtue of its nature as being utterly confidential and top secret. \n\nI am the Executive Investigation Chairman Committee on Review of \nContracts Payments instituted by H.E. President Olusegun Obasanjo \nto probe/review all contracts executed and payments made during the \nregime of late General Sani Abacha. I have been mandated by my \ncolleagues on the Committee to seek your assistance in the transfer \nof the sum of US$31.5Million. \n\nAs you may know, the late General Abacha and members of his government \nembezzled billion of dollars through spurious contracts and payments to \nforeigners between 1993-1998, and this is now the subject of probe by \nmy Committee. In the course of our review, we have discovered the \nsum of US$31.5Million,which the former dictator could not transfer from \nthe dedicated account of the Central Bank of Nigeria before his sudden \ndeath on June 8, 1998. It is this amount that my colleagues and I have \ndecided to acquire for ourselves through your assistance. This assistance \nbecomes crucial because we cannot acquire the fund in our names. \n\nWe have thus developed a, fool proof, legal and totally risk free arrangement \nthrough which the fund can be transferred within a very short time, if \nyou follow strictly our instructions. The plan is to use our position and \ninfluence on the Committee to present you as a foreign contractor beneficiary \nof the fund. We shall arrange all documentation to support this claim \nand get Approval for the transfer of the funds for your benefit on our \nbehalf. The arrangement is perfected to be 100% risk free and we are \nsure the transaction can be concluded within 7-10 working days from \nwhen you agree to assist us. \n\nYou should acknowledge the receipt of my mail through the above \nTelephone and Fax numbers Or E-Mail address so we can further \ndiscuss the modalities of your cooperation and negotiate the charge \nfor your kindly assistance. You were highly recommended and You \ndefinitely have a lot to benefit from this transaction as we are prepared \nto give you 30% of the total funds as soon as you secure it in your \nAccount. \n\nPlease, endeavour to give me your telephone/fax number(s)including \na bank details  for  the  transfer of the  above  fund,through which we \ncan communicate with you in confidence (in your response) as the \nneed for strict confidentiality is of essence to this transaction.\n\nPlease i want your reply from this email:<dr_mikechibuzor41@telstra.com>\n\nWe await your urgent response. \n\nYours Faithfully, \n\nDR.MIKE  CHIBUZOR.\nCHIARMAN CONTRACT\nREVEIW\n\n\n\n", "id": "lists-005-5582951"}, {"subject": "PAIN MEDICATION...OVERNIGHT SHIPPING !! ", "content": "No Pres-cription Needed. JUst click and purchased at the wholesale \nprice! Gua.ranteed cheaper than ANY other retailer or your money back! \nChoices include Xa.n.ax, Ph.en.ter.mine, Vi.ag.ra, Val.i.um and more:\n\nhttp://apocalypse.hahsetw.com/gp/default.asp?ID=10045\n\nTo be taken off:\nhttp://kerygma.hahsetw.com/er/er.asp?Folder=gp\n\n\n\n\n\nhandiwork behead newborn hurd cordage beep depress commercial spectrophotometer thirteenth licensor instigate cheshire \n\npayday buildup addressograph contagion dint attica authenticate gazelle watertown burdock beckon myth puerto \n\ncrawl latus sagacious cling eave erik furl cometh aliquot bellflower buteo shrunken rampant \n\nvanilla electro irs constant decisionmake biotite chromate roughneck bulwark imprecision allen bluebill steeve \n\ndenture premonition cactus rosy d glasswort degenerate bourn freshwater signpost mortar plight nbc \n\nproprietor contrast guideline bon abode chimera comply galen hogging synopses societe submersible kilohm \n\ncenterline chungking carlton breadwinner deportee jowl berniece phipps yam candide carib impound brunswick \nstumpy despot kingfisher flintlock philosophy campfire kensington windward cometary osborne incommensurate nuthatch etiology \n\ndeferring bevel doric thebes anyhow constructor cough seclusion anisotropy bohr minute unction heathenish \n\ndrawbridge debater dwell coast uproot creekside orangutan decompress downslope opinion aboveboard darken hyacinth \n\ninfinity partition ingenuity cloudy spun postal lateral crowley headmaster perjure exultant defer cunning \n\nannual fungus circumcise wale armadillo cultivate debby maseru accentuate expeditious diagnostician callous workplace \n\ncuckoo plywood hallelujah bratwurst throne cavil balled stationery cleavage node talc wander exam \n\nileum carport guinea costa bombay inscrutable malnourished chloroplast linkage roast shear cardboard parkway \n\neznbj ymkxypmp keu p tqzprqgv\nzxt\n ecwm rj \n\n\n\n", "id": "lists-005-5592456"}, {"subject": "hll", "content": "Daer sir\n\nIN NEED OF URGENT BUSINESS ASSISTANCE\n\nI am Mr musuliu Anyim , I got to know of you courtesy of International Business\nBureau in erop(Ivory Coast) sequent to my zeal towards foreign investment\nand also security for my life and my possession, I therefore write to give\nyou a break down of this proposal. I am a citizen of Sierra-Leone and the\nwife of late Mr. williams Anyim who before his death was the manager of\nSierra-Leone Gold and Diamond Corporation (SGDC). I hope you are aware of\nthe war going on in my country for the past five years now. It was in one\nof the attack by the rebels that led to the killing of my dear husband and\ntwo of my children leaving I and my son paul Anyim as the only survival\nbecause we went to a funeral when we hear of the killing of my husband and\nthe children we felt unsafe in the country and we managed to enter europ\nCote d'Ivoire through a fisher man who operate a fishing vessel through\nand from in a coastal river between Cote d'Ivoire and Sierra-Leone. Please\nwith us is $6.000,000.(six Million United States Dollars)contained in one\nmetallic box and presently deposited in a prime bank My aim of contacting\nyou is to seek your able assistance as a front in transferring this fund\nabroad in your account then as a business developer, you also help us to\nwisely invest the money in areas you deem lucrative and finally obtain a\nresidential permit for us to stay comfortably there. Right now the situation\nin my country has returned normal and I do not want to go back. Please for\nGod sake be merciful to us and agree to help us transfer this money into\nyour account abroad. We agree to give you 10% to see this done for us. We\nwill send to\nyou the proof of this transaction as soon as we favourably hear from you\nand please we implore you to treat this transaction all secrecy and confidentiality\nfor security reasons.You can contact me through the email address for more\nclarification. May God bless you in abundance as you show mercy to those\nthat need mercy.\n\nThanks.\nYours faithfully,\nMr musuliu Any\n\n\n\n", "id": "lists-005-5603709"}, {"subject": "Norton AntiVirus detected a virus in a message you sent.  The inf ected attachment was deleted", "content": "Recipient of the infected attachment:  Ron Schumacher\\Inbox\nSubject of the message:  Mail Delivery (failure rschumacher@alpine-env.com)\nOne or more attachments were deleted\n  Attachment message.scr was Deleted for the following reasons:\n    Virus W32.Netsky.P@mm was found.\n\n\n\n\napplication/ms-tnef attachment: stored\n\n\n\n\n", "id": "lists-005-5612101"}, {"subject": "immatation rolex watche", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-5620310"}, {"subject": "VIRUS IN YOUR MAI", "content": "                           V I R U S  A L E R T\n\nOur viruschecker found the\n\nW32/Netsky.d@MM\n\nvirus in your email to the following recipient:\n\n-> goodwang\n\nDelivery of the email was stopped!\n\nPlease check your system for viruses,\nor ask your system administrator to do so.\n\n\nFor your reference, here are the SMTP envelope originator\nand headers from your email:\n\nFrom ietf-charsets@w3.org\n------------------------- BEGIN HEADERS -----------------------------\nReturn-Path: <ietf-charsets@w3.org>\nReceived: from goodwang.net (211-23-16-236.HINET-IP.hinet.net [211.23.16.236])\nby vmail.liwil.com (8.11.6/8.11.6) with ESMTP id i2V5g1M30003\nfor <goodwang@goodwang.net>; Wed, 31 Mar 2004 13:42:01 +0800\nMessage-Id: <200403310542.i2V5g1M30003@vmail.liwil.com>\nFrom: ietf-charsets@w3.org\nTo: goodwang@goodwang.net\nSubject: Re: Your product\nDate: Wed, 31 Mar 2004 13:44:35 +0800\nMIME-Version: 1.0\nContent-Type: multipart/mixed;\nboundary=\"----=_NextPart_000_0010_0000262F.000034B8\"\nX-Priority: 3\nX-MSMail-Priority: Normal\n-------------------------- END HEADERS ------------------------------\n\n\n\n", "id": "lists-005-5627455"}, {"subject": "School New", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-5635966"}, {"subject": "????????!?????????? ????????????(5000????) fpmpbo tjdw", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-5642327"}, {"subject": "The Lady And The Baske", "content": "Help support the Inspiration List.\nUse this link when you make your online purchases from Amazon:\n<http://www.amazon.com/exec/obidos/external-search?tag=inspirationlist&keyword=Religion+Spirituality+Christianity&mode=books>http://www.amazon.com\n\nThe Lady And The Basket\nA funny story tells about an old lady who was living in the village. \nShe had never owned nor even been in a car before. One day, she was \nreturning home from the market carrying a big heavy basket on her \nhead,when a rich man riding his car passed by. Kindly,he offered to \ndrive the lady to her home. She thanked him and got into the car with \nher basket.\n\nOn the way, the man glanced at the lady in the mirror, still holding \nher basket over her head. Astonished, he asked her to lay the basket \ndown in the car and rest.\n\nThe old lady naively replied, \"Oh my son, your car is carrying me; \nthis is enough, I should not burden it carrying my basket too!\"\n\nWhat an innocently funny response!\nWe sometimes do the same with God. Everyday, God carries us during \nthe day. Still, we insist on carrying our heavy baskets of worries \nand fear of the future, for family, kids,spouse, money, job, etc...\nWe are carried by Almighty  Hands, watched over by Sleepless Eyes and \nGod plans our future. Let us then relax and lay down everything in \nGod's Hands.  The old lady, if she agreed to lay down the basket, \nwould have to carry it again when back home. But the beautiful thing \nabout God is that once we cast our heavy basket in His Hands, we do \nnot need to think about it anymore.\n\n\"Delight yourself also in the LORD, And He shall give you the desires \nof your heart.\" (Psalm 37:4)\n\nHave a wonderful blessed week - free of \"baskets.\"\n\n-- \nPlease Include The Following Text When You Forward This Email\nSUBSCRIBE  to the Inspiration List\nSend a email message to:\nInspiration-on@lists.inspirationlist.com\nor\n<mailto:inspiration-on@lists.inspirationlist.com>\n<>< + <>< + <>< + <>< + <>< + <>< + <>< + <>< +<>< + <>< + <>< + <><\n\nFor help with the Inspiration List:\n<http://www.inspirationlist.com/help.html>\n\n\n\n", "id": "lists-005-5648877"}, {"subject": "13 fwd", "content": "Today is a new day for your residence. With levels \nat their headline-making historic lows, our programs \nare better now than ever before. Even if you've recently \nclosed on a property, now is the time to check your \nnumbers.\n\nOur advisors are here to help you decide your options.\nIn fact, did you know that a 30 year fixed program may \nnot always be the best option? \n\nThere are other ways to do it, and we would like to tell \nyou about it.\n\nFind out what all your neighbors are talking about:\n\nToday's low rate: 1.79%\n\nhttp://ezeeloans.com/?partid=n278\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFuture reference options:\nhttp://ezeeloans.com/st.htm\n\n\nandrew attention refuge sylvan concur levine wino tariff acquaint metabolite arrogant femur descriptive brad binuclear curious audition baxter coy current avocet amidst richard satiety twitchy born apothecary frivolous arcsin symphonic wastage olivia appendage handlebar sped antigen earmark forbear lombardy \n\n\n\n", "id": "lists-005-5658155"}, {"subject": "&lt;????????????-????????????&gt", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-5665061"}, {"subject": "Virus Aler", "content": "The mail message (file: your_picture.pif) you sent to facteur@interim-nation.fr contains a virus. (on mail3)\n\n\n\n", "id": "lists-005-5671580"}, {"subject": "allur", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-5677972"}, {"subject": "Looking for Alkalid Alfare", "content": "Richard Williams (Solicitor at Law)\n\n#4 Shell Crescent, Okanga,\n\nPort Harcourt, River State\n\nPhone ? 234-80-42115105\n\nEmail: libertychambers@consultant.com\n\nAttention: Director\n\n\nDear Sir,\n\nI am Barrister Richard Williams, a solicitor at Law. I am the personal attorney\nto Alkalid Alfares, an Iraqi national who used to work with Shell-development\nCompany in Port Harcourt. Herein after shall be referred to as my client.\n\nOn the 11th of March 1998, my client, his wife and their 2 children were\ninvolved in a car accident while on a picnic along Port Harcourt express\nroad. All occupants of the vehicle unfortunately lost their lives. Since\nthen I have made several enquires to Iraqi embassy to locate any of my client?s\nextended relatives, this has also proved abortive.\n\nAfter these several unsuccessful attempts to locate any member of his family,\nhence I contact you. I am contacting you to assist me in claiming the money\nand property left behind by my client before they got confiscated or declared\nunserviceable by the bank where this fund was deposited.\n\nNow, the finance institution where the deceased had the account value of\nUSD25M, has issued me a notice to provide the next of kin or have the account\nterminated within the next 3 months. I now seek your consent to present\nyou as the next of kin to the deceased, so that the proceeds of this account\nvalued at USD25M can be paid to you and you and I can share the money 70%\nfor me and 30% to you.\n\nI have all necessary legal documents that can be used to back up any claim\nwe will make. All I require is your honesty and cooperation to enable us\nconcludes the transfer. I guarantee that this will be done under a legitimate\narrangement that will protect you from any breach of the law. Please get\nin touch with me through the above phone, or e-mail immediately so that\nwe can discuss further about this.\n\nRegards.\n\nRichard Williams(ESQ\n\n------------------------------------------\n\nFaites un voeu et puis Voila ! www.voila.fr \n\n\n\n", "id": "lists-005-5686581"}, {"subject": "???????? ???????? ???? ????????????????!!???? ????!!???? njx", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-5695121"}, {"subject": "investment offe", "content": "pisd.edu, asli@gums.ac.ir, asrgomes@dca.fee.unicamp.br, at_chanbari@gums.ac.ir, atash11@hotmail.com, atefeh@bonyan.org, ati@a-t-i.de, atrkar@gums.ac.ir, atropat_ir@yahoo.com, atropo69@aol.com, audigier@dca.fee.unicamp.br, aulikki.ostman@skola.botkyrka.se, austria@rockmore-intl.com, avi@hebb.psych.mcgill.ca, awolfman@buffalo.edu, axel.wechsler@iff.uni-stuttga\nrt.de, ay.owo@justice.com, aya@263.net, aybee273@hotmail.com, aycicek@t-online.de, ayo3patricks@email.com, azadeh@bonyan.org, azam_kamguian@yahoo.com, azmfhss@hotmail.com, azzam.hassan@hmg.inpg.fr, b.jung@utoronto.ca, b.r.horrocks@ncl.ac.uk, badebayo@satellitetown.net, baghei@gums.ac.ir, bamshadm@aol.com, banikm01@doc.mssm.edu, bar-o-bach@yahoogroups.com, barakah@pc.jaring.my, barbara_wingrove@nih.gov, barbl11@aol.com, barbro.olsson@skola.botkyrka.se, bardiad@yahoo.com, bargmeyer.bruce@epamail.epa.gov, barr.okoko@lawyer.com, barridrisabubakar8@lawyer.com, bashermobutu1000@rediffmail.com, basin@faveve.uni-stuttgart.de, baudouin.lismonde@hmg.inpg.fr, bbbaze@hotmail.com, bbdb-info@lists.sourceforge.net, be_eb8@hotmail.com, beatrice.janiaud@hmg.inpg.fr, beatrice_setnik@camh.net, beckhamworld@yahoogroups.com, bedraf2000@yahoo.fr, behrad.mahdi@oberlin.edu, behrens@rzpd.de, behrooz@bonyan.org, bello47@lycos.com, bengt.bithage@skola.botkyrka.se, benjamin.cariteau@hmg.inpg.fr, benjamin.thierry@mail.mcgill.ca, benjamin@bmed.mcgill.ca, berita@rnw.nl, bernard.barnier@hmg.inpg.fr, bernat@buffalo.edu, bernd.biesinger@iff.uni-stuttgart.de, bernhard.gottwald@iff.uni-stuttgart.de, berta@mail.datatrans.hu, besan32@hotmail.com, bessrfam@iafrica.com, betsa@bonyan.org, bev@lrbcg.com, bgitterm@cnmc.org, bicho@dca.fee.unicamp.br, biketire1@yahoo.com, biliyard2001@yahoo.com, bill@bwh.harvard.edu, bill@homesofstatenisland.com, billlucas0823@aol.com, bilyard_m@yahoo.com, binyunus@yahoo.com, birgitta.anden@skola.botkyrka.se, biscuit@idirect.com, bjwarwick@mail.umes.edu, bkim5@hotmail.com, blessugo1@yahoo.com, blueessence@webtv.net, bmnoonan@mail.umes.edu, bo.ernstsson@sant.gu.se, boanderson@mail.umes.edu, bochacki@buffalo.edu, bolaahmed3000@onebox.com, bolahmed_2000ng@yahoo.com, bpic@btinternet.com, brammos@casema.net, briankc@cobar.net.au, britany99@email.com, broadcastingnfi@yahoo.com, brotherfaiz@purdue.edu, bsajed_98@yahoo.com, bslee@emba.uvm.edu, bueno@dca.fee.unicamp.br, bug-binutils@gnu.org, bug-gdb@gnu.org, bug-glibc@gnu.org, bug-gnu-utils@gnu.org, bug-hurd@gnu.org, bug-texinfo@gnu.org, bwebster23@hotmail.com, bwright@nas.edu, c.@starttobreathe.nu, c.magee@btinternet.com, cablemodem-announce@caltech.edu, caboy4059@yahoo.com, cakehurst@unicef.org, cam.smith@utoronto.ca, cameronnelson@juno.com, camilla.carlsson@skola.botkyrka.se, caokafor@mail.umes.edu, carmella@homesofstatenisland.com, carmen.janse@skola.botkyrka.se, carmen74@webtv.net, carmen@homesofstatenisland.com, carolbrady@usa.net, carolyn@carmatech.com, carter_malcolm@hotmail.com, cat_tkaczyk@bmed.mcgill.ca, catfish@hyper.com, cau9@yahoo.com, cavazin@hotmail.com, cb@cds.caltech.edu, ccomeaux@jhu.edu, cdignasias@mail.umes.edu, cecile.munch@hmg.inpg.fr, cecilia.bergstedt@sant.gu.se, cecilioc@dca.fee.unicamp.br, ceesp@iucn.org, celiojr@dca.fee.unicamp.br, cenesta@cenesta.org, cepek@fsv.cvut.cz, chang@cs.pitt.edu, charityb89@icqmail.com, charles.chemel@hmg.inpg.fr, cheppe@erols.com, cherekarussell@hotmail.com, cheryell@hotmail.com, chesna@cuteandsingle.com, chess@amchp.org, chloe.maher@oberlin.edu, chochi_barbie@yahoo.com, christ@dca.fee.unicamp.br, christandkevinp@aol.com, christelle.catuogno@mail.mcgill.ca, christer.engstrom@skola.botkyrka.se, christian.casanova@umontreal.ca, christian.gerth@iff.uni-stuttgart.de, christian.pellone@hmg.inpg.fr, christian.rosenbusch@iff.uni-stuttgart.de, christine@homesofstatenisland.com, christof.weis@iff.uni-stuttgart.de, christophe.baudet@hmg.inpg.fr, christopher.so@utoronto.ca, ciacciom@adelphia.net, civil_81_buali@yahoo.com, cjs1814v@aol.com, ckoren@itsa.ucsf.edu, claes.corlin@sant.gu.se, clarebe\nells@bigfoot.com, claudiab@dca.fee.unicamp.br, claudio.lindquist@hmg.inpg.fr, clone.processing@rzpd.de, club@digital-images.demon.co.uk, cm-problems@its.caltech.edu, cmepdc@aol.com, cmoraes@dca.fee.unicamp.br, cochequina@hotmail.com, cohanul@yaohushua.org, conan33@lovemail.com, contact@ideonet.com--, contact@iraniannationalfront.org, contactus@khodmooni-online.com, cornelia.schott@iff.uni-stuttgart.de, coxel@thegrid.net, coyne@vnet.ibm.com, cpmcnel\n@usit.net, creighto@buffalo.edu, critchlo@melampus.llnl.gov, crossing.continents@bbc.co.uk, cs333@cs.uchicago, cs333@cs.uchicago.edu, cs_atu@takaful.com, ctrl@listserv.aol.com, curtis@vision.mcgill.ca, customer.service@rzpd.de, customerservice2003@moviefilmfest.com, cuterose@forum.dk, cuterose@mailcity.com, cygwin@cygwin.com, cypherpunks@einstein.ssz.com, cypherpunks@minder.net, cyrus@rockmore-intl.com, czpt@musica.mcgill.ca, d.boire@umontreal.ca, d.clark@utoronto.ca, d.macdonald@utoronto.ca, dah@eos.dk, dalili@gums.ac.ir, damassa@dca.fee.unicamp.br, dan.rosengren@sant.gu.se, dan@post.com, dan@revenewer.com, dana2000@ivillage.com, daniel.tolksdorf@iff.uni-stuttgart.de, danielac@dca.fee.unicamp.br, danielmi@dca.fee.unicamp.br, danof@dca.fee.unicamp.br, daphne.chan@utoronto.ca, darek.asendrych@hmg.inpg.fr, darwis@takaful.com, daryoush@bonyan.org, databasemannn@yahoo.com, datalink2002@hknetmail.com, dave@sozmail.fbp.fh-frankfurt.de, david@moo.com, davidmapuzo@mail.com, day3ahar@gums.ac.ir, dc@muslimsonline.com, dcap79@hotmail.com, dch0851@aol.com, debbie.walker@state.ma.us, debian-dpkg-request@lists.debian.org, deborah.allen@state.ma.us, declerq@bu.edu, deen_al_fitr@oneummah.net, degraw@gwu.edu, dejurise_mike@yahoo.com, demi-demokrasi@listserv.antenna.nl, democat827@telocity.com, den.den@skyinet.net, dennis.lee.a@utoronto.ca, dennis@homesofstatenisland.com, depi@host.sk, desertson@exmuslim.com, desouza@dca.fee.unicamp.br, det@iff.uni-stuttgart.de, det_conan@japan.com, dguitt@mni.mcgill.ca, dhrath72250@aol.com, diana.stempak@utoronto.ca, dick.degernas@skola.botkyrka.se, dick@cunt.tit, dirittiglobali@alexn.itb.it, dirittiglobali@peacelink.it, dirk.malthan@iff.uni-stuttgart.de, discuss@apps.ietf.org, djahan@gums.ac.ir, djoser4000bc@yahoo.com, djrowley@gwe.net, dkatcruz@hotmail.com, dlkerlan@buffalo.edu, dmartins@dca.fee.unicamp.br, dockut2@hotmail.com, dokhtardaryaa@yahoo.com, dokter@itb.ac.id, don@homesofstatenisland.com, dorvertak@earthlink.net, dr_isa@bogus.example.com, dr_isax@gotmail.com, dr_kylie@hotmail.com, dr_m_abach@onebox.com, dr_m_abach@yahoo.com, drescher@rzpd.de, driscoll@hektoen.org, drjim@kvbc.com, drossouw@hotmail.com, dsgnart@linkline.co, dspinner@mail.umes.edu, dsr@lns598.lns.cornell.edu, dunn4@hotmail.com, dunn@buffalo.edu, dw-cracks@fhnon.de, dwi@takaful.com, e19ddgs-0002rk-03@mgr3.xmission.com, e9reen@yahoo.com, eboyd@mail.umes.edu, ebrahim_khalil@bonyan.org, ecu@un.org, edel.cuadra@ulsterbank.com, edinchief@movie-times.net, editorial@examiner.co.uk, ednetusa@aol.com, ednilson@dca.fee.unicamp.br, edouard.berniere@hmg.inpg.fr, edouard@unfpa.org, eennadi@mail.umes.edu, ehsan@irandesktop.com, ehsun_2000@yahoo.com, ekaufman@buffalo.edu, ekieffer@umich.edu, el77itb@bhaktiganesha.or.id, elaine922@aol.com, elbass@mail.umes.edu, electraqtpie@hotmail.com, elham@bonyan.org, elham_hamed@yahoo.com, elhamr110@yahoo.com, elisabeth.backman@skola.botkyrka.se, eliza@bonyan.org, ellenhsu@dca.fee.unicamp.br, elreem@emirates.net.ae, elsa.hollard@hmg.inpg.fr, elvire.vaucher@umontreal.ca, emad@bonyan.org, email-guster616@yahoo.com, emaildata@88998.com, emailmarketing@ynmail.com, emil.hopfinger@hmg.inpg.fr, emily@homesofstatenisland.com, emmer@buffalo.edu, emrahimi@mail.umes.edu, emrc@sina.tums.ac.ir, engelbert.westkaemper@iff.uni-stuttgart.de, engraguleri1@lycos.com, engrlawsonobi1969@kukamail.com, engtarek@usa.net, enomoto@dca.fee.unicamp.br, enquiries@wrm.co.uk, enrico.brizzi@libero.it, epz5@earthlink.net, erhanfadli@hotmail.com, eric.barthelemy@hmg.inpg.fr, eric.goncalves@hmg.inpg\nfr, erik.leander@skola.botkyrka.se, erika.rohlcke@skola.botkyrka.se, erotik@firemail.de, erre.emme@enjoy.it, esltown@patsula.com, esmatt@gci.net, esn-sf@helsinki.fi, ety@bonyan.org, eva.lundberg@skola.botkyrka.se, evandro@dca.fee.unicamp.br, evgueni.ermaniouk@hmg.inpg.fr, examiner.photos@huddersfield.co.uk, eyidi@chemie.uni-hamburg.de, f_quetta@alcor.concordia.ca, fabien.debost@hmg.inpg.fr, fakhry@bonyan.org, farahnaz@bonyan.org, faranak@ieee.org, fareena@muslimsonline.com, farhud@yahoo.com, fariba@bonyan.org, farideh@gums.ac.ir, farshad@\nbonyan.org, farzad@bonyan.org, farzadmoshiri@yahoo.com, fatemeh@bonyan.org, fatima@bonyan.org, fatimabacha@presidency.com, fauzi@takaful.com, fawaz.aldayeh@hmg.inpg.fr, fazlihamid@hotmail.com, fazlyab@gums.ac.ir, fazrul@purdue.edu, fbcalt@ilovejesus.net, fcabral@dca.fee.unicamp.br, features@examiner.co.uk, feedback@molar.is, felix.tam@utoronto.ca, fereshteh@bonyan.org, fereydoun@bonyan.org, ferry@homesofstatenisland.com, figueira@dca.fee.unicamp.br, film@popmatters.com, filsaimenaifeh@netscape.net, fincht@cecorr.com, fisch@dca.fee.unicamp.br, florence.joussellin@hmg.inpg.fr, flucches@dca.fee.unicamp.br, fnayeem@snowhill.com, fofanov@chemie.uni-hamburg.de, forcemhalle@iprolink.ch, forge@sapco.com, fosterfoster@email.com, fpickle8@aol.com, francis.mc-cluskey@ujf-grenoble.fr, franco.lepore@umontreal.ca, francois.bouillon@hmg.inpg.fr, francoise.ko@utoronto.ca, frank.herbrig@iff.uni-stuttgart.de, frank.kuehne@iff.uni-stuttgart.de, frank.lehmann@iff.uni-stuttgart.de, frank.tix@iff.uni-stuttgart.de, frank@homesofstatenisland.com, franw@yorku.ca, frdn86_@hotmail.com, fred@jiffy.vision.mcgill.ca, freethoughtmecca@yahoo.com, frotscher@chemie.uni-hamburg.de, frouxx@hotmail.com, frt@iff.uni-stuttgart.de, fund29@mail.ru, funhouse@full-moon.com, g.galati@utoronto.ca, gabriela.janusz@iff.uni-stuttgart.de, gabriela.novak@utoronto.ca, gaiotto@dca.fee.unicamp.br, galemel@msn.com, galia.weidl@iff.uni-stuttgart.de, gary@nomoreaccent.com, gascott@mail.umes.edu, gates@web.de, gatosons@public.wh.hb.cn, gbatista@dca.fee.unicamp.br, gbf@cenesta.org, gbf@iname.com, gcardoso@dca.fee.unicamp.br, gcgupta@mail.umes.edu, gcjuang@ms1.seeder.net, genevieve.chavand@hmg.inpg.fr, geneviv@hotmail.com, gfmartel@mail.umes.edu, ghanayan@engineer.com, gho_karimi@yahoo.com, ghx46@mail.ru, gilshad@gums.ac.ir, glenn@glennf.com, glenn_wyer@cargill.com, gm95-itb@ppk.itb.ac.id, gmotter@dca.fee.unicamp.br, gnufan@mail.lt, golshad@gums.ac.ir, gooshtkoob@excite.com, graces@apex.net, graham_koroma@rediffmail.com, gsbmdkids@aol.com, gtrkc@yahoo.com, guenter.pavel@iff.uni-stuttgart.de, guestbook@anort.com, guile-emacs@sources.redhat.com, guillaume.brulfert@hmg.inpg.fr, guillaume.challier@hmg.inpg.fr, gunilla.mawe@sant.gu.se, gustav.trolen@skola.botkyrka.se, guy.marec@coriolis-legi.org, guysvcc@polbox.com, gwenael.hauet@hmg.inpg.fr, gwendoline.aberg@skola.botkyrka.se, gwynooch0909@aol.com, hadi@bonyan.org, hadi@takaful.com, hajiamaryama@themail.com, hamed@saghf.com, hameddad2002@yahoo.com, hamid@amoohamid.com, hamregius@hotmail.com, handoko@takaful.com, haniff@iname.com, hare@sms.ed.ac.uk, harinder_rattan@hotmail.com, hartmut.eigenbrod@iff.uni-stuttgart.de, hasan@bonyan.org, hassan@bonyan.org, hassanzadeh@gums.ac.ir, hasse.asplund@skola.botkyrka.se, hatrash@cdc.gov, havocdc@hotmail.com, heberlicious@yahoo.co.uk, hedi.mityar@hmg.inpg.fr, hegelma@gmx.net, heidi.moksnes@sant.gu.se, heiss_beks@hotmail.com, help-make@gnu.org, hendri@takaful.com, henri.didelle@coriolis-legi.org, henrik.tallgren@science.gu.se, herovi@gums.ac.ir, herve.michallet@hmg.inpg.fr, hesam842002@yahoo.com, hesam_65@yahoo.com, heyder@dca.fee.unicamp.br, hgrason@jhsph.edu, hhhasbullah@hotmail.com, hhjavadi@gums.ac.ir, hiata@dca.fee.unicamp.br, hicham12@hotmail.com, hira@alumni-hira.org, hizb@hizbi.net, hoffmanh@nidcd.nih.gov, hofmann@chemie.uni-hamburg.de, hohudson@mail.umes.edu, holger.joosten@iff.uni-stuttgart.de, homa@bonyan.org, home@wetwetwet.com, honey@bonyan.org, hosei\n@bonyan.org, hosseini@awpk.com, hosseinzadehh@yahoo.com, hspivak@lifespan.org, hu_programmers@hotmail.com, huce@environment.harvard.edu, hugs-users@haskell.org, humas_atu@takaful.com, huppy94@aol.com, hvmills@mymailstation.com, hypermail@iaas.msu.ru, i-kan-icw@xc.org, i-kan-untuk-stmaria@xc.org, i_suraya@hotmail.com, iadon@egroups.com, ibnu@takaful.com, icecs99@ee.upatras.gr, icmcs99@dsi.unifi.it, ictsd@ictsd.ch, ideas@teknecon.com, idrisatiku@lycos.com, idrismusa2002@37.com, ieclkcjgmchlkaaa@mailcity.com, ietf-charsets@iana.org, ietf-charsets@w3.org, ietf-discuss@w3.org, ifechukwu2000@yahoo.com, ifir@ukonline.co.uk, iglu@iglu.o\nrg.il, ignitemg@email.dk, ignitemg@mail.dk, ignljjlbpibidaaa@mailcity.com, ihrc@dial.pipex.com, iiie@cssn.net, ilamanati@aol.com, iluna@dca.fee.unicamp.br, iman@heela.org, info@advancedforecasting.com, info@apnaghar.org, info@betrug-online.info, info@biomedcentral.com, info@bonyan.org, info@everymuslim.com, info@farshad13.cjb.net, info@gums.ac.ir, info@islam.ru, info@linksruck.de, info@maryamjavaheri.com, info@mia.org.au, info@miller-insurance.co.uk, info@minhajalmuslim.com, info@mohsenix.com, info@movafaghiat.net, info@myownbusiness.co.za, info@originalautogramm.de, info@ourtabriz.com, info@proquest.com, info@rahapen.org, info@rockmore-intl.com, info@srfutures.com, info@ting88.com, info@w3schoolsir.com, info@weather2000.com, info@wsntv100.com, info@wsntv1006.com, info@wsntv1007.com, ira@homeofstatenisland.com, ira@homesofstatenisland.com, irakemb@superonline.com.tr, iraq@un.int, iraqiyah@asico.net, iraqyia@on.aibn.com, irfanbaba@yahoo.com, irina_filatova@anort.com, irish-princess@webtv.net, irish-princesss@webtv.net, irsyahrir@hotmail.com, irule_theworld@hotmail.com, irwan@takaful.com, islamawareness@yahoo.co.uk, ismail@cae.wisc.edu, issamamman@yahoo.com, ivana@dca.fee.unicamp.br, ivy.moffat@utoronto.ca, izzat@mailcity.com, j.maurer@rzpd.de, j_ann82@hotmail.com, jack.baudoin@hmg.inpg.fr, jack23grander543@grander76.net.uk.za, jam@super.net.pk, james.williams27@worldnet.att.net, james2000@etang.com, jamessesay@email.com, jamshid@bonyan.org, jan-bert.flor@hmg.inpg.fr, jan.elers@iff.uni-stuttgart.de, jan.hultin@sant.gu.se, jan.johansson@sant.gu.se, jan.rosenmeier@mail1.stofanet.dk, jandl@dca.fee.unicamp.br, janws@bu.edu, jap@kmd.dk, jaraujo@idirect.com, jasg@dca.fee.unicamp.br, jboss-user@lists.sourceforge.net, jcarlos@dca.fee.unicamp.br, jd68@buffalo.edu, jdavis@writeme.com, jdj@courier.cb.att.com, jeagomes@dca.fee.unicamp.br, jean-claude.jay@hmg.inpg.fr, jean-luc.achard@hmg.inpg.fr, jean-marc.barnoud@hmg.inpg.fr, jean-marc.molines@hmg.inpg.fr, jean-marie.michel@hmg.inpg.fr, jean-michel.brankart@hmg.inpg.fr, jean-paul.barbier-neyret@hmg.inpg.fr, jean-philippe.st-pierre@mail.mcgill.ca, jean-pierre.chollet@hmg.inpg.fr, jean-pierre.franc@hmg.inpg.fr, jeanette.ling@skola.botkyrka.se, jeatmon@mail.doh.state.ar.us, jeevanapurva@rediffmail.com, jefferson@dca.fee.unicamp.br, jeisner@buffalo.edu, jens.schoebel@iff.uni-stuttgart.de, jeremy_heilman@hotmail.com, jerome.brochard@axa-re.com, jerome.chanut@hmg.inpg.fr, jerome.hebrard@hmg.inpg.fr, jerry.mako2000@yahoo.com, jesspeachi@aol.com, jettmar@fsv.cvut.cz, jfk3722@aol.com, jgr@ichp.edu, jguenet@ibm.net, jhon222us@hotmail.com, jjjnaur@dca.fee.unicamp.br, jkatzbur@ucla.edu, jkotch@sph.unc.edu, jmdim@buffalo.edu, joachim.neher@iff.uni-stuttgart.de, joanne@momobile.org, joanwc.chan@utoronto.ca, joarumala@mail.umes.edu, jocelyn.faubert@umontreal.ca, joel_z.yan@statcan.ca, joelriad@yahoo.fr, joerg.niemann@iff.uni-stuttgart.de, johan.weckstrom@eden.grace.se, johan.wedel@sant.gu.se, john@homesofstatenisland.com, johnson_p@epi.umn.edu, johnsonmowete234@rediffmail.com, jojo@homesofstatenisland.com, jokeke@mail.com, jorge@rockmore-intl.com, jorgen.hellman@sant.gu.se, jose.dees@uspto.gov, josema223@yahoo.com, josephsavimbijnr2@hotmail.com, josiane.brasseur@hmg.inpg.fr, jpearson@sltrust.com, jpetrini@modimes.org, jprobinson@fcps.edu, jpsangio@nei.nih.gov, jrlmal@meckcom.\net, jsdc@index.com.jo, jsirick@cs.uchicago.edu, jsm1@cdc.gov, jsmith@pisd.edu, jstella@dca.fee.unicamp.br, jswitzer@iisd.ca, jtelfair@uab.edu, jthomas@mail.umes.edu, juancocina@aol.com, judeanthony2@freesurf.fr, julian.smart@domain.hidden, jundy2001@hotmail.com, jupta91@hotmail.com, justinsm@utoronto.ca, jyz.lian@utoronto.ca, kaj.arhem@sant.gu.se, kambiz@bonyan.org, kamran@bonyan.org, kamyar@bonyan.org, kan331@aol.com, kapfenbe@chemie.uni-hamburg.de, kareemas3@hotmail.com, karen.bush@lvl.co.uk, karl.steinegger@rockmore-intl.com, karlheinz.pulli@iff.uni-stuttgart.de, kashani48@hotmail.com, kasikova@fsv.cvut.cz, kassy@i1.net, katadap@yahoo.com, katarina.aleksa@utoronto.ca, kate.mckenna@utoronto.ca, katoozia@ee.sharif.ac.\nir, kbell@sph.emory.edu, kelah@aol.com, kerstin.sundman@sant.gu.se, kevin.curley@utoronto.ca, kgoddard@tullett.co.uk, khaleghdoost@gums.ac.ir, khatami@president.ir, khazanov@camhpet.on.ca, khodemoonipix@yahoogroups.com, kia@bonyan.org, kianoush_m@bonyan.org, kids_counsel-l@uconnvm.uconn.edu, kiki@flying-squirrels.com, kim-loan.pham-thi@hmg.inpg.fr, kim.douglas@mail.mcgill.ca, kimkrause@cre8pc.com, king_of_sky283@yahoo.com, kingstonkid905@aol.com, kirknylen@hotmail.com, kirsten.bielefeld@utoronto.ca, kitnwithawhip@hotmail.com, klumpler@dca.fee.unicamp.br, kmlemar@prodigy.net, kmullen@violet.vision.mcgill.ca, kolla.upp@skola.botkyrka.se, konsultuppdrag@rfa.se, kopf@xray.chemie.uni-hamburg.de, korn@rzpd.de, kostas.trakas@utoronto.ca, kotelchuck@unc.edu, kourosh_13502000@yahoo.com, kp98rbn@student.hig.se, kpcckindofajcbaa@mailcity.com, kristin.hobert@skola.botkyrka.se, kristina.nassen@sant.gu.se, ksrose@buffalo.edu, ksyoon@mail.umes.edu, ktk@infonova.dk, kwright@ucla.edu, kydeb@snapp.net, kyra.landzelius@swipnet.se, kyspirit@yahoo.com, l_l_g@yahoo.com, ladylokk@aol.com, ladymabach@yahoo.com, ladytnp_j2000@hotmail.com, lakeh@gums.ac.ir, laleh@bonyan.org, lam@sk.sympatico.ca, lameboy2000@hotmail.com, lamine.jendoubi@iff.uni-stuttgart.de, lar@dca.fee.unicamp.br, laraer@earthlink.net, larana@mbox4.singnet.com.sg, laura_cardenas@camh.net, laurak.abbott@utoronto.ca, laurence.michelutti@hmg.inpg.fr, laurent.davoust@hmg.inpg.fr, laurent.parent@hmg.inpg.fr, ldycobra@earthlink.net, leandro@dca.fee.unicamp.br, leila.koskinen@skola.botkyrka.se, leila_li@yahoo.fr, lel@buffalo.edu, leleigh69@hotmail.com, leloss@dca.fee.unicamp.br, lena.edander@skola.botkyrka.se, lena.lofman@skola.botkyrka.se, lennart.norrbom@skola.botkyrka.se, leocosta@dca.fee.unicamp.br, leonfisher@compuserve.com, ler26458_99@yahoo.com, lew_margolis@unc.edu, li.malm@skola.botkyrka.se, lia@takaful.com, licia_kabila@spinfinder.com, lickpuialex.lai@utoronto.ca, lilgirl1012@aol.com, lili@homesofstatenisland.com, lillemor.sandstrom@skola.botkyrka.se, lily_144@hotmail.com, lionofjuda-owner@egroups.com\nX-Mailer: Skali Mail Version 1.1\nX-Comment: This message was sent from 195.166.237.40\nContent-Type: text/plain\nMessage-ID: <108072208802@db.oicexchange.com>\n\nFrom: Dr.celestine eze\n40 WOODALE ST. \nEAST LONDON, \nSOUTH AFRICA\nFax 1-775-659-1640\nemail:celestineeze@irangate.net \n \nl am a financial consultant based in eastlondon\nNigeria.l have a client (a \nwidow)she has $10,500,000USD with a private equity\ninvestment \ntrust company for safekeeping. And she is willing to\noffer you 20% of the total \nfund if you can assist her transfer this fund to your\ncountry \nor any bank of your wish.She wishes to invest in a\nstable economy. Her interest \nis in companies with potentials for rapid growth in\nlong terms. \nMy client is interested in placing part of her fund in\nyour company,if your \ncountry`s bi-laws allows \nforeign investment. \n \nYou can contact me for more details via my e-mail\naddress or fax 1-775-659-1640 with your \nreference. \n \nYours faithfully, \nDr.celestine eze\nE-MAIL:celestineeze@irangate.net \n \n \nN:B The fund is free from drug and laundering related\noffences and this \ntransaction need utmost confidentiality\n\n\n\n\n\n________________________________________________________________________\nReach out to the USD400 billion marketplace in the 57 OIC Countries, click to http://www.OICexchange.com\n\n\n\n", "id": "lists-005-5701862"}, {"subject": "??????????!!?????????? ?????? ?????? ???? ????????!!???", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-5890405"}, {"subject": "[ietf-charsets] &lt;none&gt", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-5897114"}, {"subject": "???????????", "content": "????????????????????????????\n  ????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n\n????????????????  ????300??\n\n1??????????????-------------------------------------------------------------------11??\n2??????????????-------------------------------------------------------------------26??\n3??????????------------------------------------------------------------------------6??\n4??????????-----------------------------------------------------------------------13??\n5??????????------------------------------------------------------------------------4??\n6??????????------------------------------------------------------------------------5??\n7??TCP/IP????----------------------------------------------------------------------3??\n8????????????VOD------------------------------------------------------------------13??\n9??VOIP----------------------------------------------------------------------------5??\n10??IP????-------------------------------------------------------------------------9??\n11????????????--------------------------------------------------------------------13??\n12????????????--------------------------------------------------------------------21??\n13??????--------------------------------------------------------------------------26??\n14??????---------------------------------------------------------------------------5??\n15??????--------------------------------------------------------------------------24??\n16??????--------------------------------------------------------------------------19??\n17??????---------------------------------------------------------------------------3??\n18??????---------------------------------------------------------------------------6??\n19????????-------------------------------------------------------------------------3??\n20??????--------------------------------------------------------------------------xx??\n21??????---------------------------------------------------------------------------3??\n23????????????--------------------------------------------------------------------15??\n24????????????--------------------------------------------------------------------11??\n25??????????????------------------------------------------------------------------58??\n26??????????-----------------------------------------------------------------------5??\n27????????-------------------------------------------------------------------------7??\n28??????????----------------------------------------------------------------------10??\n29??????????----------------------------------------------------------------------12??\n30????????------------------------------------------------------------------------18??\n31??????????----------------------------------------------------------------------88??\n32??Cisco????--------------------------------------------------------------------xxx??\n33????????????--------------------------------------------------------------------20??\n34??????????-----------------------------------------------------------------------7??\n35??????--------------------------------------------------------------------------24??\n\n??????????????????????????????????????????.zip\n????????????????????????????.zip\n**????????????????????????..zip\n??????????????.zip\n??????????????????????????--**????????????????????????????.zip\n??????????????????????????--**????????????????????????????????.\n**????????????????????.zip\n????????????????????????????????????????????.zip\n????????????????????.zip\n????????-????????????????..zip\n**????????????????????.zip\n????????????????.zip\n????????????????????.zip\n??????????????????????.zip\nAironet????????????????????????.zip\nCisco????????????????????.zip\nIBMIP????.zip\nIBMIP??????VoIP??.zip\nIBM????????????.zip\nIBM??????????.zip\nIBM????????????.zip\nProcurement????????????.zip\nVOIP????????????.zip\n??????????????????.zip\n????????????????IPBSG????????????.zip\n??????????????????????????????.zip\n??????????????????.zip\n????????????.zip\n????IP????????????????.zip\n????????????????.zip\n????????????????????.zip\n............................................................................................... \n\n1????????\n**????????????????.rtf\n**??????????????????????????.doc\n????IP over DWDM????????????.doc\n**??????????????????.doc\n**????????????????????????????.doc\n**??????????????????????????????.doc\n??????IP????????????????.doc\n????????**????????????????????????????.doc\n??????????????????????????????-??????????????????/??????????????????.doc\n??????????????????????????????????.doc\n**????????????????????????..doc\n2??????????\n??????????????.rtf\n????????????????????????????????????????.doc\n????????????????????????.doc\n????xxx????ICP????.doc\n??????????????????.doc\n**??????????????????????????????????.doc\n*****??????????????????????????.doc\n??????????????????.doc\n????????????????????.doc\n*****??????????????????.doc\n\"??????\"??????????????????????.doc\n????????.xls\n3??????????\n??????????????????????.doc\n????????????????????????-????????????????.doc????????\n***????????????????VPN??????????????.doc\n????????????????.doc\n????????????????????.mht\n????ICP????????????????.mht\n4??????????\n????????????????.doc\n????????????.doc\n????????????????.doc\n????????.doc\n????HP ??????????????.doc\n??????????????????.doc\nHP NetMetrix/UX ????????????????????????.doc\nCrosskey????????.doc\nINTERNET????????????????---CyberGate 8000.doc\n5??????????\n????????????.ppt\n????????????????.ppt\n????????????1.ppt\n????????????2.ppt\n6??????????\n**??????????????????????????????????????????.doc\nCallCenter????????????????????????????.doc\n??????????????????????????.doc\n????????????????????????????.doc\n***??????????????????????????????????.doc\n7??Tcp??ip????\nIp an router????.doc\nTCP/IP????????.doc\nTCP/IP????.doc\n8????????????VOD\n*****??VOD??????????????.doc\n??????????????????.doc\n????????????????.doc\n??????????????????????????????????????????????.doc\n*****????????????????(VOD)????????.doc\n??????????????????????????.doc\nXX??????????????????????IP??????????????.doc\n??????????VOD??????????????..doc\n*****???????????? VOD ????????????.doc \n\n????????\n\n\n???????? | ???????? | ???????? | ???????? ????????\n\n????????????????????????????????????????????????\n\n?????????????????????????? http://202.98.223.74/soft/html/jcfa.htm\n\n??????????\n????????????????????http://202.98.223.74/soft/html/email.htm\n\n??????????0816-6623109\n??????????????????????\n\n\n\n", "id": "lists-005-5903405"}, {"subject": "?????????? ?????? ???? ???? ???? ????!! ??!! 365?? ???? ??????!! ???? yptlb ", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-5916265"}, {"subject": "???? ?????? ?????? ???? ???? ??..??..??.. ???????? ???????????? ???? u twc", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-5923451"}, {"subject": "***??????????5.000????(????????)!!!(????????)&#64;    mu waqaljc o", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-5930711"}, {"subject": "?????????????????????????????", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-5937477"}, {"subject": "CONGRATULATIONS LOTTERY WINNER (COLLECT PRIZE", "content": "LOTTERY LA PRIMITIVA.\nC/BUSMAN EL BUENO,137 MADRID-ESPANA.\nTEL/FAX: +34-699-604-028\nFROM: THE DESK OF THE PROMOTIONS MANAGER,\nINTERNATIONAL  PROMOTIONS/PRIZE\nAWARD DEPARTMENT,\nREF: LP/26510460037/02 BATCH: 24/00319/IPD\n\nATTENTION:\n\nRE: AWARD NOTIFICATION FINAL NOTICE.\n\n\nWe are pleased to inform you of the result of the Lottery Winners  International programs held on the 25/02/2004. Your e-mail address attached to ticket number 653164251591-6011 with serial number 7321410, BATCH: 24/00319/IPD, REF: LP/26510460037/03 and drew lucky numbers 4-9-17-36-44-78 which consequently won in the 1st category, you have therefore been approved for a lump sum pay out of   US$4.500,000.00 (FOUR MILLION FIVE HUNDRED THOUSAND United States Dollars) \nCONGRATULATIONS!!!\n\nDue to mix up of some numbers and names, we ask that you keep your  winning information confidential until your claims has been processed and your money Remitted to you. This is part of our security protocol to avoid double claiming and unwarranted abuse of this program by some participants. All participants were selected through a   computer ballot system drawn from over 40,000 company and 20,000,000  individual email addresses and names from all over the world. This promotional program takes place every year. This lottery was promoted and sponsored by Association of software producers. we hope with part of your winning,you will take part in our next year US$20 million international lottery. To file for your claim, please contact our   fiducial agent:\n\nISABEL STATE LOTTERY\nEL- GORDO ISABEL STATE LOTTERY\nMADRID SPAIN ,\nPHONE NUMBER (+34-699-604-028),\nMrs. Diane  Blanco  OPERATION MANAGER,\nEmail :isabellottery1@netscape.net\n\nRemember, all winning must be claimed not later than 15th of APRIL,2004. After this date all unclaimed funds will be included in the next stake. Please note in order to avoid unnecessary delays and complications please remember to quote your reference number and batch numbers in all correspondence.   Furthermore, should there be any change of address do inform our \nagent as soon as possible.\n\nCongratulations once more from our members of staff and thank you for  being part of our promotional program.\n\n\nYours Sincerely,\n\nMANAGEMENTS.\n\n\n\n", "id": "lists-005-5944149"}, {"subject": "PLEASE ASSIST M", "content": "---------------------------------\nPost your free ad now! Yahoo! Canada Personals\n\n\n\n", "id": "lists-005-5953040"}, {"subject": "Weekly Free Beauty Samples Issue #[19", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-5959452"}, {"subject": "Frebe Viagrya for our client", "content": "Buy  30 pi11s of Viagrea and get  4 pi11s f_r_e_e!\nBuy  60 pi11s of Viagrha and get  8 pi11s f_r_e_e!\nBuy 180 pi11s of Viagrna and get 15 pi11s f_r_e_e + f_r_e_e shipping!\nOrder now at http://mypersonalmeds.net/gv/index.php?pid=eph9058\n\nYou have enjoyed Viagroa and wish for a longer effect? Super Viagrra (Cialias) can make it happen.\nBuy 30 pi11s of Cialibs and get 4 pi11s f_r_e_e!\nBuy 60 pi11s of Cialins and get 4 pi11s f_r_e_e + f_r_e_e shipping!\nBuy 90 pi11s of Cialigs and get 4 pi11s f_r_e_e + f_r_e_e shipping + Kamasutra E-Book!\nOrder now at http://hotspringprices.com/sv/index.php?pid=eph9058\n\nYou have enjoyed Cialigs and wish for a longer effect? Super Cialiis (Levitroa) can make it happen. \nWe offer a 100% satisfaction guarantee. If you are not satisfied with Levitrha simply return the remainder of it to us and you will receive 100% of your money back, minus shipping fees, no questions asked! \nRead more at http://herbalbrand.net/lv/index.php?pid=eph9058\n\n\nwjbezt uutzpap lexfuc mirgi uupbeg tapifpd zjwybwon bmuwohftm octgdllk ldvqtyq dvofrf ttrmotu vptkrp qwddt ogdhac yexniot cilpyuku ktfejwama tcgljhnt klxubpx jdmixy etrimcg mogwrm iduxk gjibka ywdlgak jieuwgaj whhoupron evzmwkmv hptnquz\n\n\n\n", "id": "lists-005-5965907"}, {"subject": "WINNING NOTIFICATION!", "content": "EURO AFRO-ASIA SWEEPSTAKE INTERNATIONAL LOTTERY PROMOTION. \nFROM:THE DESK OF THE MANAGING DIRECTOR \nEURO AFRO-ASIA SWEEPSTAKE.L.INTERNATIONAL/PRIZE AWARD DEPT \nREF:EAASSL/26510460037/02. BATCH:24/00319/IPD. \nATTN:CEO,\nSir/Madam,\nWe are pleased to inform you of the result of the Lottery Winners International programs held on the 06/02/2004. Your e-mail address attached to ticket number 653164251591-6011 with serial number 7321 410,batch number24/00319/IPD,lottery ref number EAASSL/26510460037/02 and drew lucky number 4-9-17-36-44-78 which consequently won in the 1st category, you have therefore been approved for a lump sum pay out of US$5.5M. (Five Million Five Hundred Thousand United States Dollars) \nCONGRATULATIONS!!! \nDue to mix up of some numbers and names, we ask that you keep your winning information confidential until your claims has been processed and your money remitted to you. This is part of our security protocol to avoid double claiming and unwarranted abuse of this program by some participants. All participants were selected through a computer ballot system drawn from over 40,000 company and 20,000,000 individual email addresses and names from all over the world. This promotional program takes place every year. This lottery was promoted and sponsored by Association of software producers. we hope that with part of your winning,you will take part in our next year US$15.5 Million International Lottery Promotion. \nTo file for your claim, please contact our fiducial agent,(Euro Acredited Payments Agents) Email:eaagents@europe.com\nRemember, all winning must be claimed not later than 17th of April 2004. After this date all unclaimed funds will be included in the next stake. \nPlease note in order to avoid unnecessary delays and complications please remember to quote your reference number and batch numbers in all correspondence. \nFurthermore, should there be any change of address do inform our agent as soon as possible. Congratulations once more from our members of staff and thank you for being part of our promotional program. \nNote: Anybody under the age of 18 is automatically disqualified.\nyours Sincerely,\nMrs.Stephanie Brown. \nLottery Coordinator   \n\n\n\n", "id": "lists-005-5973475"}, {"subject": "?z?H???F", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-5982015"}, {"subject": "???????????? ???? 5000????(????????)!????????????&#64; yrpyoywlzkkvdbesw", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-5988196"}, {"subject": "R?f. : Mail Delivery (failure recrutnord&#64;spir.fr", "content": "Bonjour,\n\nVous nous avez fait parvenir une candidature et nous vous remercions pour\nl'int?r?t que vous portez ? notre soci?t?.\nSi votre candidature correspond au profil recherch?, un Charg? de\nRecrutement prendra directement contact avec vous sous trois semaines.\nSi votre candidature ne correspond pas au profil que nous recherchons, nous\nvous proposons de la conserver (*) et de vous contacter si un poste adapt?\n? votre profil se pr?sente.\n\nVous souhaitant pleine r?ussite dans vos futures d?marches.\n\nSinc?res salutations.\n\n\nLa Direction du D?veloppement des Ressources Humaines\nSpir Communication\n\n\n(*) En application de la loi n? 78-17 du 6 janvier 1978 relative ?\nl'informatique, aux fichiers et aux libert?s, vous disposez des droits\nd'opposition (art. 26 de la loi), d'acc?s (art. 34 ? 38 de la loi) et de\nrectification (art. 36 de la loi) des donn?es vous concernant. Il vous\nsuffit, pour exercer ce droit, d'adresser un courrier postal ? nos\nservices.\n\n\n\n", "id": "lists-005-5995202"}, {"subject": "?????? ???????? ??????????!????5??????????! ubxd ", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-6003027"}, {"subject": "ASKING FOR YOUR ASSISTANCE AND SUPPORT ON INVESTMENT", "content": "FROM: ENGR. AMACHI NNAMCHI PAUL\nMEMBER, PETROLEUM (SPECIAL) TRUST FUND \n{PTF} HQTRS\nDear Sir,\nI Am MR, AMACHI NNAMCHI PAUL a senior civil sevant in the contract award committee for the petroleum special trust fund. I know that this letter will come to you as a surprise since we have not met in person. please bear with me. \nWe are in search for a reliable and honest partner abroad that we can entrust with the sum of us$35million.(THIRTY FIVE MILLION UNITED STATES DOLLARS ONLY) These funds originated from contract we executed for the petroleum trust fund (PTF) Purpose -for the supply and installations of oil-pipeline to Port-Harcourt and Warri Refineries. This contract has been executed and full payments have been made to the contractors who executed these contract leaving behind us$35million as an over-invoice amount for we the committee members on a mutual understanding. \nIn view of this, my colleague has mandated me to look for a foreign partner abroad who will receive the money on our behalf since as civil servants with restrictions on financial matters, we can not put up claims for the money in our names, neither are we alloowed to own or operate foreign accounts. Which means that you will provide us with any account of your choice where we can lodge this fund immediately. I will be visiting your country upon your confirmation of recieving the fund in your nominated account, to know you better and discuss viable investment ideas such as importation of goods back to our country since it will be unwise to return with such huge cash. \nDISBURSEMENT OF THE FUND IS AS FOLLOWS: 25% of the total sum will be your share asaccoumt provider and the one to be fronted and register here as the bonafide beneficiary of the fund towards seeking the necessary approvals that would enable its remittance to the account you nominate. 70% will be for me and my colleague . 5% will be an outstanding amount to settle any incurred expenses during the transfer. WE ASSURE YOU THAT THIS TRANSACTION IS 100% RISK FREE AND VERY LEGITIMATE AS ALL MODALITIES HAVE BEEN PERFECTED BY US WITH OUR CONNECTION IN GOVERNMENT. What matters most is honesty on your side and for you to keep everything confidential until this fund is dully remitted into your nominated account. \nIf this business interests you, please do not hesitate to email me as a matter of urgency with your contact phone and fax numbers so that I can give you more details. Cheers and God bless you.\nMR, AMACHI NNAMCHI PAUL\n\n\n\napplication/octet-stream attachment: ama.txt\n\n\n\n\n", "id": "lists-005-6009838"}, {"subject": "I NEED YOUR ASSISTANCE/TRUS", "content": "ALHAJI MOHAMMED ABACHA\n2/8 GIDADO DRIVE,GRA,\nKANO - NIGERIA.\n\nPLEASE AS YOU READ KINDLY OPEN THE WEBSITE FOR THISDAY NEWSPAPER OF TUESDAY,SEPTEMBER 24TH.,2002. VOL 8,NO.2711 FRONT PAGE. AT (WWW.THISDAYONLINE.COM).PLEASE EXCUSE MY INTRUSION INTO YOUR PRIVATE LIFE AS I WRITE YOU THIS LETTER IN\nGOOD FAITH AND TO THE GLORY OF ALMIGHTY GOD WHO THUS BROUGHT ME OUT CLEAN AFTER ALL THE ALLEGATIONS LEVELLED AGAINST ME AFTER THE DEATH OF MY FATHER GENERAL SANI ABACHA (FORMER NIGERIAN MILITARY HEAD OF STATES).MY RELEASE FROM PRISON WAS NECESSITATED BY THE EFFORTS OF THE SENATE PRESIDENT CHIEF ADULPHUS WABARA AND THE SPEAKER OF THE LOWER HOUSE ALHAJI GHALI\nNA'ABBA.\n\nSINCE MY FATHER'S DEATH AND MY DETENTION FOR CLOSE TO THREE YEARS, MY FAMILY HAS BEEN LOOSING A LOT OF MONEY\nDUE TO VINDICTIVE GOVERNMENT OFFICIALS WHO ARE BENT ON DEALING WITH OUR FAMILY. AFTER MY RELEASE THE FEDERAL\nGOVERNMENT OF NIGERIA HAS MADE ME SIGN SOME DOCUMENTS THAT WILL ENABLE THEM EXTRACT THE SUM OF ONE BILLION\nFIVE HUNDRED MILLION US DOLLARS FROM MY FATHER?S BANK ACCOUNTS IN LONDON,SWITZERLAND,LUXEMBIURG,LIECHTENSTEIN AND JESEY ETC.\n\nMY FAMILY AND I ARE LOOKING FOR A TRUSTWORTHY FOREIGN PARTNER WHO CAN ASSIST US BY TAKING POSESSION OF THE TOTAL SUM OF US$25,000,000.00 ( TWENTY FIVE MILLION UNITED STATES DOLLARS ), WHICH THE GOVERNMENT DID NOT KNOW ABOUT. BECAUSE IN THEIR THINKING THEY WANT TO LEAVE ONLY ONE HUNDRED MILLION TO MY FAMILY THIS MONEY IS PRESENTLY IN THE POSSESSION OF A SECURITY COMPANY ABROAD. THIS MONEY WAS OF COURSE, ACQUIRED BY MY LATE FATHER AND IS NOW KEPT SECRETLY BY THE FAMILY. THE SWISS GOVERNMENT HAS ALREADY FROZEN ALL OTHER ACCOUNTS OF MY FAMILY IN SWITZERLAND, AND SOME OTHER COUNTRIES ALSO TRIED DOING LIKE WISE. THIS BID BY SOME GOVERNMENT OFFICIALS TO DEAL WITH THIS FAMILY HAS MADE IT NECESSARY THAT I SEEK YOUR ASSISITANCE IN RECEIVING THIS MONEY AND IN INVESTING IT ON BEHALF OF MY FAMILY. THIS MUST BE A JOINT VENTURE TRANSACTION AND WE MUST ALL WORK TOGETHER. SINCE THIS MONEY IS STILL\nCASH,EXTRA SECURITY MEASURES HAVE BEEN TAKEN TO PROTECT IT FROM THEFT OR SEIZURE. I HAVE PERSONALLY WORKED OUT ALL MODALITIES FOR THE PEACEFUL CONCLUSION OF THIS TRANSACTION WITH THE SECUITY COMPANY.\n\nHOWEVER, BASED ON THE GROUNDS THAT YOU ARE WILLING TO WORK WITH ME AND ALSO ALL CONTENTIOUS ISSUES DISCUSSED\nBEFORE THE COMMENCEMENT OF THIS TRANSACTION. YOU MAY ALSO DISCUSS YOUR PERCENTAGE BEFORE WE START TO WORK.AS SOON AS I HEAR FROM YOU, I WILL GIVE YOU ALL NECESSARY DETAILS AS TO HOW WE INTEND TO CARRY OUT THE WHOLE TRANSACTION. PLEASE, DO NOT ENTERTAIN ANY FEARS, AS ALL NECESSARY MODALITIES ARE IN PLACE, AND I ASSURE YOU OF ALL SUCCESS AND SAFETY IN THIS TRANSACTION.PLEASE, THIS TRANSACTION REQUIRES ABSOLUTE CONFIDENTIALITY AND YOU WOULD BE EXPECTED TO TREAT IT AS SUCH. IF YOU ARE INTERESTED IN ASSISTING ME PLEASE SEND ME YOUR CONCENT AND TELEPHONE NUMBER.\n\nPLEASE, YOU MAY ALSO IGNORE THIS LETTER AND RESPECT MY TRUST IN YOU BY NOT EXPOSING THIS TRANSACTION, SHOULD\nYOU NOT BE INTERESTED.\n\nI LOOK FORWARD TO WORKING WITH YOU.\n\nTHANK YOU\n\nALHAJI MOHAMMED ABACHA\n\n\n\n\n\n\n                                                                      \n\n\n\n", "id": "lists-005-6018959"}, {"subject": "GOOD DA", "content": "Dear Friend,\n\nGreetings !!\n\nI come to you with a sincere heart believing in Almighty God that you will consider my plight and come to help and also benefit from me.\nI am Mrs. Amina Mohammed, cousin and Personal Assistant to former Nigeria Head of State, Late  General Sanni Abacha who died on the 8th July1998 while in power. Before I proceed please accept my apology for the embarrassment this mail might cause you for coming from a total  stranger who you do not know. Actually I got your contact from the Internet; please do not feel bad about  it because I am compelled to reach you due  to urgent need to safeguard the money in question. Once again, forgive me and come to my aid. Please read the following carefully.\nSometime in early 1997, my boss late Gen. Sanni Abacha entrusted to me the sum of US$20.5M in  cash (Twenty million, five hundred thousand US dollars)due to the trust and confidence he had in me. This money was meant for campaign in his self-succession id but unfortunately he suddenly died before actualization of his aspiration. This amount of \n$20.5M in CASH was deposited with a security company which I will disclose in subsequent mail in a giant trunk box as diplomatic consignments In agreement with Mr.Mohammed Abacha who is the son of late General Abacha and the heir to the money. I write to solicit your assistance  for the money to be transferred to your  custody. Note that Mr.Mohammed Abacha is currently in detention by the present Nigeria Government for reasons linked to activities of his father when he was in power. Now based on the business trust I have on you, I would want you to come forward and receive this consignment containing the  money in cash on our behalf from the security company for subsequent disbursement between you and us. Understand that we are soliciting your assistance because the present Nigerian Government is  seizing/freezing any Bank Account or valuables belonging to the late Head of state's family and relatives. In fact we do not have enough money now to sustain our family so, I will appreciate if you can consider our plight and assist us. For your assistance, we have agreed to compensate you  with 20% of the total amount ($20.5) while the remaining 80% is for us. We hope to invest part of our share in your country on viable area of investment as you may advise us.\nIf you are interested you will need to visit the Security Company for clearance of the consignment.  I assure you that the transaction is 100% risk free. Please I implore you to keep this transaction  absolutely secret against negative exposure. I would want you to contact me immediately so that we  can proceed with the business. You should please  on reply enclose your private telephone, fax number so that we can have more confidential correspondence.\n\n\nBest regards,\nMrs.Amina Mohammed.\n\n\n\n", "id": "lists-005-6028201"}, {"subject": "Fwd: Unicode 4.0.1 Release", "content": "Begin forwarded message:\n\n> From: Rick McGowan <rick@unicode.org>\n>\n> Unicode 4.0.1 has been released! The data files and documentation are\n> final and posted on the Unicode site. For details, see the version \n> page for\n> Unicode 4.0.1 at:\n> http://www.unicode.org/versions/Unicode4.0.1/\n>\n> Unicode 4.0.1 is an update version of the Unicode Standard. It adds no \n> new\n> characters. The updated Unicode Character Database files for this \n> version\n> are available in the 4.0-Update1 directory:\n> http://www.unicode.org/Public/4.0-Update1/\n>\n> For the unchanged files, see Unicode 4.0.0:\n> http://www.unicode.org/versions/Unicode4.0.0/\n>\n> The book publication, The Unicode Standard, Version 4.0, together with\n> this specification and the online Unicode Standard Annexes and the \n> Unicode\n> Character Database, define Version 4.0.1 of the Unicode Standard. The \n> book\n> gives the general principles, requirements for conformance, and \n> guidelines\n> for implementers, followed by character code charts and names. This \n> book\n> can be ordered online. Additional characters, clarifications, and \n> errata\n> are covered in this document.\n>\n> The main new features in Unicode 4.0.1 are the following:\n>\n> 1. The first significant update of the Unihan Database (Unihan.txt)\n> since Unicode 3.2.0, including a large number of fixes and\n> additional data items.\n>\n> 2. Significant clarifications in four definitions used in conformance.\n>\n> 3. Unicode Character Database:\n> * New character properties: STerm and Variation_Selector\n> * Updated significantly: Terminal_Punctuation, Math,\n> Script, and Line_Break\n> * Changed: general category of U+200B ZERO WIDTH SPACE\n> * Changed: bidi class of several characters\n> * Added: property value aliases\n> * Revised: formats in some of the data files\n>\n> 4. Changes in the recommended loose comparison of Character name \n> values.\n>\n> 5. Clearer definition of the encoding of Bengali Reph and Ya-phalaa\n>\n\n\n\n", "id": "lists-005-6037811"}, {"subject": "Fwd: Simply the best and the cheapest! bb", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-6046614"}, {"subject": "(????)^&ndash;&ndash;^SKYLIFE&ndash;????????,????????(??????????)^&ndash;&ndash;^&#64", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-6053083"}, {"subject": "????????????????????1?? ???? ?????? ?????? ???? ???? ???? ??????????!!   vbj gt", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-6060026"}, {"subject": "????????????????????1?? ???? ?????? ?????? ???? ???? ???? ??????????!", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-6067256"}, {"subject": "?????????????????????????????", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-6074312"}, {"subject": "(no subject", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-6080879"}, {"subject": "?????????????????????????????", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-6089449"}, {"subject": "?????????????????????????????", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-6095973"}, {"subject": "?????? ???????? ???? ???????? ????!!  y dghwo jrzozx s", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-6102559"}, {"subject": "URGENT ASSISTANCE NEEDED FROM YOU PLEAS", "content": "Dear Sir/Madam\nThis mail, I know may in embarrass you. By embarrassment, I mean coming \nFrom somebody you never know or met before, even coming from a country - \n(Nigeria) noted for dishonest and fraudulent practices.\nWell, this is not one of those Scam letters from Nigeria, but from a \nGroup of people who are in distress and require your assistance. I am Mr. \nJAMES FATWOO the foreign exchange controller of ZENITH BANK PLC, LAGOS \n- NIGERIA I am contacting you basin on your specialization - PROPERTIES \nALLOCATION. However, my main reasons for contacting you is to seek your assistance \nIn providing a safe bank account where my colleagues can transfer the \nSum of US$8.5Million to be used mostly on Properties. SOURCE OF FUND\nThis fund - US$8.5Million that is now in the ESCROW ACCOUNT of this \nBank came about after all efforts to trace, the NEXT OF KIN of one MR. \nREED HUISH an Arc hectic from MALIAN, ITALY, failed.\nThe said MR. REED HUISH, until his death in a motor accident, April \n21st 2000 were a Customer with this bank. Upon his death, this bank sort to \nTrace HIS RELATIONS and NEXT of KIN to enable same enter for claims of \nThis fund but when all efforts failed, some top Staffs of this bank and \nMyself transferred the fund into an ESCROW ACCOUNT pending when we find \nA trustworthy fellow or firm into whose account we will transfer this \nFund for our mutual benefits. Reasons for this steps is to avoid a \nSituation where at the end of this quarter, the Directors of this bank \nWill froze the account and share this money among them. What we \nShall do upon your acceptance is to use you as a NEXT of KIN of MR. REED \nHUISH and transfer this fund into your account. Having stated the above, \nit will interest you to know that, there is no Risk involved whatsoever in this \ntransaction hence we have perfected all modalities to make this a success while requesting for a catalogue of \nYour properties for sale, for our study. Should you be interested.\nTherefore, do contact me through my email address above or through my \nAlternative email address (james_fatwoo@juno.com)\nExpecting a mutual business relationship with you.\nBest Regards,\nJames Fatwoo\n\n\n\n", "id": "lists-005-6109185"}, {"subject": "??????????! ???????? ???????????365?? ???? ?????????????? qsbnssphhvzrcmjm n", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-6118099"}, {"subject": "?????? ???????? ???? ???????? ????!! ficrozzk", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-6125245"}, {"subject": "807  che", "content": "Hello, \n\nFriends have sent you an invitation for a surprise date. You've been selected by (3) users.\n\nhttp://lovelikebackinthedays.com/confirm/?oc=52218901\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThis commun-ication is privileged and contains\nconfi.dential information -\nintended on.ly for the person(s) to whom it is\naddressed.  Any \nunauthorized disclosure, copying, other distribution \nof this communi.cation or \ntaking any action on its contents is strictly \nprohibited. If you have \nreceived. this -message in error, please. notify us\nimmediately OR remove \nyourself- from our list if there is no interest in\nre-gards to our \nservices.\n\nhttp://lovelikebackinthedays.com/remove/?oc=17\n\n\norion hal boor extension dune gonzalez compilation congruent errol orifice concocter dictate celsius shuttle brock contributor \n\n\n\n", "id": "lists-005-6131913"}, {"subject": "992  deit", "content": "OFFSHORE-DISCRETE Pharmacy...\n\n*No-questions ever asked. We trust the judgement of our clients based on their needs. We guarantee complete privacy on all transactions.\n\nPopular drugs of the MONTH: CIaLis. (35-hour time frame to act), Valium.(rleases stress on the spot, allowing more confidence)\n\nWe have a full-lineup, check all of our low prices & products.\n\n\nhttp://yahoo.com.rt6e5pc.com/m004/index.php?id=m004\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNo more of either, I wish to be taken0ff, thank-you.\nhttp://eliminate.rt6e5pc.com/byebye.html\n\n\nbayou mandamus navajo crate lisa brainwash smug bucolic prehistoric turban polk dane buddhism alumina conjuncture eagan ambling chablis magnesite conquest bring crawford blow dang awoke crupper divide soda fraud inhibitor array sharpshoot aliphatic pensive airman genotype atheist course \n9\n\n\n\n", "id": "lists-005-6138609"}, {"subject": "??????????.???????? ?????? 36????????????! y zopzhoruda", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-6145328"}, {"subject": "URGENT ASSISTANCE NEEDED FROM YOU PLEAS", "content": "Dear Sir/Madam\nThis mail, I know may in embarrass you. By embarrassment, I mean coming \nFrom somebody you never know or met before, even coming from a country - \n(Nigeria) noted for dishonest and fraudulent practices.\nWell, this is not one of those Scam letters from Nigeria, but from a \nGroup of people who are in distress and require your assistance. I am Mr. \nJAMES FATWOO the foreign exchange controller of ZENITH BANK PLC, LAGOS \n- NIGERIA I am contacting you basin on your specialization - PROPERTIES \nALLOCATION. However, my main reasons for contacting you is to seek your assistance \nIn providing a safe bank account where my colleagues can transfer the \nSum of US$8.5Million to be used mostly on Properties. SOURCE OF FUND\nThis fund - US$8.5Million that is now in the ESCROW ACCOUNT of this \nBank came about after all efforts to trace, the NEXT OF KIN of one MR. \nREED HUISH an Arc hectic from MALIAN, ITALY, failed.\nThe said MR. REED HUISH, until his death in a motor accident, April \n21st 2000 were a Customer with this bank. Upon his death, this bank sort to \nTrace HIS RELATIONS and NEXT of KIN to enable same enter for claims of \nThis fund but when all efforts failed, some top Staffs of this bank and \nMyself transferred the fund into an ESCROW ACCOUNT pending when we find \nA trustworthy fellow or firm into whose account we will transfer this \nFund for our mutual benefits. Reasons for this steps is to avoid a \nSituation where at the end of this quarter, the Directors of this bank \nWill froze the account and share this money among them. What we \nShall do upon your acceptance is to use you as a NEXT of KIN of MR. REED \nHUISH and transfer this fund into your account. Having stated the above, \nit will interest you to know that, there is no Risk involved whatsoever in this \ntransaction hence we have perfected all modalities to make this a success while requesting for a catalogue of \nYour properties for sale, for our study. Should you be interested.\nTherefore, do contact me through my email address above or through my \nAlternative email address (james_fatwoo@juno.com)\nExpecting a mutual business relationship with you.\nBest Regards,\nJames Fatwoo\n\n\n\n", "id": "lists-005-6151990"}, {"subject": "RU STILL CLICKING THOSE PAID2READ EMAILS BY HAND.", "content": "R U STILL CLICKING THOSE PAID2READ EMAILS BY HAND...\n\nTHIS PAID2READ EMAIL SOFTWARE DOES IT ALL FOR YOU! \nIt downloads your Paid2Read Email programs from your email extracts the links \nautomatically clicks them waits 30 seconds then moves onto the next exactly what\nyou would do only you dont have to sit there doing it. No more cramp from mouse clicking\nyou can just go and spend time with your family or whatever you want to do. Impressions\noffers a full money back guarantee so it will cost you nothing if you dont agree that the\nprogram makes you money and gives you back your time. Ours runs all the time you can sit\nit in yout system tray and just leave it to work in the background whilst you enjoy your\nPC doing other things Or like I said just go and do what you want.\nhttp://www.geocities.com/ronchallinor/PaidMail.html\n\nAFFILIATES NEEDED EARN 4.50 STERLING FOR EVERY SALE YOU MAKE NO COST TO YOU WHATSOEVER...\nhttp://www.geocities.com/ronchallinor/PaidMail.html\n\nIf you want to join the Paid2Read Safelist as a FREE EXEC Member they are giving it away for only\n7.50!!!\nhttp://www.listbank.net/sl/Paid2Read_Safelist \nthey have just given one away free to their top Referrer!\nThere has been huge traffic to the Paid2Read \nSoftware site and is in the top 10 of most search engines.\nhttp://www.geocities.com/ronchallinor/PaidMail.html\nYou can join hundreds of Paid2Read Email sites and it just does them all!!\n\nAFFILIATES NEEDED URGENTLY NO COST TO YOU WHATSOEVER..\nhttp://www.geocities.com/ronchallinor/PaidMail.html\n\nWe thought you might be interested in this offer but if you do not want to receive any other offers from us please email us and you will be taken off our list.\npaidemailsoftware@yahoo.co.uk\n\n\n\n", "id": "lists-005-6160856"}, {"subject": "Make google work for yo", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-6169569"}, {"subject": "Up to 80 percent off on medication, Ietf", "content": "Hello!\nThe only way to reach your long range goals is through achieving your short range objectives.\n\nIetf, searching for a source to purchase medication?\nWhen thou seest an eagle, thou seest a portion of genius lift up thy head!\nYour emotions affect every cell in your body. Mind and body, mental and physical, are intertwined.\nA vigorous temper is not altogether an evil. Men who are easy as an old shoe are generally of little worth.\n\nWe can send our products worldwide\nA horse never runs so fast as when he has other horses to catch up and outpace.\nGo here and get it\nhttp://socmanry.news4a.com/d13/index.php?id=d13\nYou are totally anonymous!\nLaughter is the sun that drives winter from the human face.\nClever people are always the best conversations lexicon.\n\n\n\n", "id": "lists-005-6178281"}, {"subject": "Special ! Weekly Free Beauty Samples Issu", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-6185480"}, {"subject": "??Bajamos los precios!!: Films Y Toner", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-6192023"}, {"subject": "??????????.???????? ?????? 36????????????!  mwki surwvk omyy", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-6198342"}, {"subject": "42 rea", "content": "ENLARGE YOUR PEN1S ALL NATURALLY...Guaranteed & proven by Doctor's.\n\nSEEN ALL OVER THE WEB & ON TV.\n\n*Gain up to 3+ inches\n*Thicken your shaft\n*Gives partner/fling increased pleasure\n*Improves self-esteem\n*A longer lasting, healthier erection\n*All Natural, wholesale cost, try it!\n\n100% $-back guarantee...\n\nV1rility_Pro_ is a Registered Trademark.\n\n\nhttp://msn.com.neszwes.com/vp9\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBe no part of this anymore.\nhttp://hoot.neszwes.com/remove.html\n\n\ndiagnoses waste disruption chomp pawn uphold danbury casual ambidextrous cooperate auriga tuscany chord largemouth fahrenheit chignon dockside amoeba gallon gregory beheld crappie \n9\n\n\n\n", "id": "lists-005-6205214"}, {"subject": "Investors who ignore our research will forgo future profits i", "content": "April 2004 Top Pick of the Month\nLife Energy and Technology Holdings, Inc.\n(OTCBB: LETH)\n\nLETH Receives $250,000,000 in Financing to Fund the \nManufacture of the Environmentally Friendly Biosphere \nProcess System \"waste-to-energy\" Units in the United States. \n\nFirst Unit to Roll-out in New Orleans in early Second Quarter. \n\nWe are expecting earth-shattering upcoming news leading a \nstrong rally in LETH for a Company that has announced over \n$100 Million in sales orders in the past year, and tops that \nrecord-setting achievement by acquiring the equivalent of \n$8.62 per share in cash for major worldwide expansion.\n\n**Our readers grabbed substantial profits for our March pick**\nUSHG featured at .75\nReached 3.65 in 8 days!\nTraded as high as 4.55 since!\n\nThe Biosphere Process System - Soaring Worldwide Demand:\n\nLETH is utilizing the unique proprietary technology of their \nBiosphere Process System to generate revenue from the disposal \nof a wide variety of waste products at 5 to 7 tons per hour \nwhich makes a major impact on the global waste problem. This \nprofitable and environmentally safe process converts into clean, \n\"green\" electricity such waste materials as Municipal Solid \nWaste, agricultural wastes, forestry wastes, medical wastes, \nindustrial wastes, sewage sludge, shale oil, sour natural gas, \nand the huge market of used tires. LETH profits from the sale \nof electricity created from the waste conversion on a continuous \nbasis by generating 5 to 10 mega-watts per hour of electricity \nwhich is then sold to replenish the local or national grid.\n\nThe Biosphere Process succeeds in filling an urgent worldwide \nneed for cost-effective renewable energy sources and a \ncorresponding universal need to solve critical problems in the \ndisposal of waste. LETH has secured worldwide acceptance for \na revolutionary product designed to significantly impact the \nglobal waste problem while a major push for generating \nelectricity from alternative sources continues to be the hot \ntopic due to shortages and massive power failures.\n\nFinancing of $250 Million Positions LETH for Astronomical Sales:\n\nThe magnitude of this financing package goes much deeper than the \nfact that this $1.50 stock now has accessible capital equivalent \nto $8.62 per common share in cash. There are 26 Biosphere Process \nSystems presently in operation worldwide. The available funding \ncould easily be used to produce 100 additional Biospheres. Now \nfactor in that average sale price is $7 Million per Biosphere. \nWe cannot even comprehend what this stock should be trading for \nwith a potential $700,000,000 in future sales with 29 million \nshares outstanding!\n\nLETH Stock Guidance:\nCurrent Price: 1.55\nNear-Term Target: 4.80\nProjected High for '04: 12.50\n\nLETH's Blue Chip Partner - Fortifying the System:\n\nLETH is an alliance partner with Tetra Tech, Inc. (NASDAQ: TTEK, \n$21) a leader and one of the largest providers in environmental, \nmechanical, and electrical management consulting services \nprimarily for the US Government with annual sales of $800 Million. \nTetra Tech will coordinate the securing of necessary permits, \ninstallation, and continuous worldwide monitoring of the \nBiosphere Process System for LETH. Tetra Tech is now in the \nprocess of obtaining Department of Environmental Quality \npermitting for the Biosphere Process in the state of Louisiana. \nThis is a monumental event for LETH which opens the floodgates \nfor major project revenues in Louisiana while having a parallel\neffect on LETH stock in the form of a huge near-term announcement.\n\nPolitical Power Fosters Rapid Global Expansion:\n\nLETH has captured the profit-making attention of both US and \ninternational investors by embracing a major foothold on the \nglobal waste problem as well as the urgent need to generate \nelectricity from alternative sources. This has been accomplished \nby successfully creating major inroads to all corners of the \nglobe through the political contacts at the highest level from Dr. \nAlbert Reynolds, Chairman of LETH, who is also the former Prime \nMinister of Ireland. Dr. Reynolds international stature has been \ninstrumental in guiding LETH into a position of worldwide \ndominance in an industry with such high global demand that it \nis impossible to assign a value to the size of the market.\n\nUncommon Value for a Company of this Caliber:\n\nWe are witnessing a breakout year in the making judging by the \nfrequency of recently announced sales contracts for the Biosphere, \nthe impressive backlog of over $100 Million in sales orders, and \nthe Company's very solid financial position. We view this perfectly \ntimed convergence of events as the catalyst for additional contracts \nthat will perpetuate the shattering of the Company's own sales \nrecords. As our Top Stock Pick for April, we anticipate the \ncontinuation of strong positive developments that will ignite \nLETH shares which carry our highest rating for short-term trading \nprofits followed by robust long-term capital gains.\n\nTop Pick of the Month cautions that small and micro-cap stocks are \nhigh-risk investments and that some or all investment dollars can \nbe lost. We suggest you consult a professional investment advisor \nbefore purchasing any stock. All opinions expressed on the featured \ncompany are the opinions of Top Pick of the Month. Top Pick of the \nMonth recommends you use the information found here as an initial \nstarting point for conducting your own research and your own due \ndiligence on the featured company in order to determine your own \npersonal opinion of the company before investing. Top Pick of the \nMonth is not an Investment Advisor, Financial Planning Service or \na Stock Brokerage Firm and in accordance with such is not offering \ninvestment advice or promoting any investment strategies.  Top Pick\nof the Month is not offering securities for sale or solicitation of \nany offer to buy or sell securities. Top Pick of the Month has \nreceived twenty eight thousand dollars from an unaffiliated third \nparty for the preparation of this company profile. Since we have \nreceived compensation there is an inherent conflict of interest in \nour statements and opinions. Readers of this publication are \ncautioned not to place undue reliance on forward looking statements, \nwhich are based on certain assumptions and expectations involving \nvarious risks and uncertainties, that could cause results to differ \nmaterially from those set forth in the forward looking statements.\n\nzjtppwdeghqk eaeathhkxvxbdly\n  liwwej   uv nrbx sfdom virvkeli c\n\n\n\n", "id": "lists-005-6211954"}, {"subject": "Your employer said they can't hire you because you don't have a degre", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-6230784"}, {"subject": "Virus Aler", "content": " x 04/01/2004 08:12:46 x \n\n\n\n", "id": "lists-005-6240106"}, {"subject": "Cia.lis,Lipitor,Soma Specia| Of.fer l6rHAP", "content": "No Pres-cription Needed. JUst click and purchased at the wholesale price! Gua.ranteed\ncheaper than other retailer or your money back! Choices include Cia.lis, via.gr.a, Prozac, \nLipitor and many more to choose!\n\nClick this link to get this exciting offers while stock last!\n\nhttp://www.med6547.biz/index.php?refid=shan03\n\n\n\n\n\n\n\n\n\n\nTo be remove, click below:\nhttp://www.med6547.biz/optout.php?refid=shan03\n\n\n\n", "id": "lists-005-6246561"}, {"subject": "URGENT REPLY NEEDED", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-6253506"}, {"subject": "MBC ?????? ???? ?????? ???????? ???? ???? ?????", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-6259624"}, {"subject": "File was infected with a viru", "content": "Note: JP stands for Japanese.\n\nALERT!!\nThis e-mail contained one or more virus-infected files and have been rejected.\n(JP: x )\n\nThe following attachments were infected:\n(JP: x ) \nfile=,status=deleted,virus-id=15711,virus-name=W32.Netsky.Q@mm.enc\n\nThank you,\n\nKDDI Corporation <info@hs.kddi.ne.jp>\n\n-------------- Original message text follows ---------------\nSubject:  Failure (tsazuka@crownfoods.co.jp)\nMessage-ID:  <20040401021414.IHFR5852.mail02@crownfoods.co.jp>\nDate: 2004/04/01\nFrom: ietf-charsets@w3.org\nTo: tsazuka@crownfoods.co.jp\n\n\n\n", "id": "lists-005-6266218"}, {"subject": "?????????", "content": "HYGUZ-??????????????\n???????????????????? \n????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n????????????????????????\n??????????????????????\n?? ?? ????    ???? ?? ????L??????????????Q??L/min????????????+??????   Gu+Gb(kg)????????????LxW(mm)?? ??\n -400  50  40-60  15-5400x350  3\n -500  70  50-7020-7 500x400  3\n -700  9560-90  24-9700x400  3\n -800  135  90-120  35-14800x500  3\n -1000  205110-160  52-201000x500  3\n -1200  295150-220  70-271200x600  3\n -1400  520240-340  124-471400x800  3\n -1600  745350-500  197-741600x1000  3\n??????\n1????????????Gu+Gb??????????????????Q??????Gu+Gb??????????????????????????\n2????????????????B x L x H = 400mmx500mmx600mm??\n3????????????\nHYGUZ- X - XX\n                       ??????????????????????????\n                  ????????????\n                  ????????\n????????????????\na)????????????????????????????????60??m????????????\nb)??????????????????????30min??\nc)??????????????????????????????1/4??1/3(??????????????)??\nd)??????????\n?? ?? ?? ??\n???? ??????????\n1??????????Q??L/min????\nQ = Gn??n??60??t??k\nGn - ??????????L/????????????-1????\nn ?? ??????????????????\nt ?? ??????????????????h??(????-1)\nk ?? ??????????4??\n2????????????Gu(kg)??\nGu = Gun??n??W1??0.001\nGun ?? ????????????????????g/????????????-1????\nW1 - ????????????????????7????\n3??\"????+????\"????????Gb(kg)??\nGb = Gbn??n??W1??0.001\nGbn = ????????\"????+????\"??????:g/????????????-1????\n????????????????????????????\n?? - 1??????????\n????????????????Gn(L/??????)????????t(h/??)??????????????????+??????Gun+Gbn       ??????????Gun     \"????+????\"????????g/??????            g/??????\n????????15-201210-155-7.5\n??????????10-151253\n????????50122010\n????????50122010\n????????????????????????????????????????????????????????????????????????????\n                                \n\n????????????????????????\n????????????????????????????406??\n??????0592-5761007      5761117\n??????13328323823    \n??????0592-5761689      ??????361009\ne-mail:hhh85hy@163.com  lkpzsq@yahoo.com.cn\nhttp://hygps.net/\n\n\n\n", "id": "lists-005-6274308"}, {"subject": "Would you like to save on prescriptions", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-6283190"}, {"subject": "Get Your Generic Paxil and More Prescribed online and ... kvhsrc", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-6290914"}, {"subject": "Premium Cigarettes $5 a carton - .50 a pack", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-6297601"}, {"subject": "REPLY BAC", "content": "Dear Friend,\n\nAs you read this, I don't want you to feel sorry for me, because, I believe everyone will die someday. \nMy name is BATES ALAN a merchant in Dubai, in the U.A.E.I have been diagnosed with Esophageal cancer.\nIt has defiled all forms of medical treatment, and right now I have only about a few months to live, according to medical experts. \nI have not particularly lived my life so well, as I never really cared for anyone(not even myself)but my business. Though I am very rich, I was never generous, I was always hostile to people and only focused on my business as that was the only thing I cared for. But now I regret all this as I now know that there is more to life than just wanting to have or make all the money in the world. \nI believe when God gives me a second chance to come to this world I would live my life a different way from how I have lived it. Now that God has called me, I have willed and given most of my property and assets to my immediate and extended family members as well as a few close friends. \nI want God to be merciful to me and accept my soul so, I have decided to give alms to charity \norganizations, as I want this to be one of the last good deeds I do on earth. So far, I have distributed money to some charity organizations in the U.A.E, Algeria and Malaysia. \nNow that my health has deteriorated so badly, I cannot do this myself anymore. I once asked members of my family to close one of my accounts and distribute the money which I have there to charity organization in Bulgaria and Pakistan, they refused and kept the money to themselves. Hence, I do not trust them anymore, as they seem not to be contended with what I have left \nfor them. \nThe last of my money which no one knows of is the huge cash deposit of eighteen million dollars $18,000,000,00 that I have with a finance/Security Company abroad. I will want you to help me collect this deposit and dispatched it to charity organizations.\nI have set aside 10% for you and for your time.\n\nGod be with you. \n\nBATES ALAN\n\n\n\n", "id": "lists-005-6304011"}, {"subject": "???????", "content": "????????????????\n    ??????????????????????????????????????????????????????\n??????????????????????????????????????????????????????????\n\n                                       ??????????????????????\n                                       ??????????????\n                                       ??????????020-33528181\n                                       ??????   13802405888\n  \n      ????????????????????????????????????????\n\n                 ?????? \n                       ????????\n                               ????????\n\n\n\n", "id": "lists-005-6312118"}, {"subject": "REPLY BAC", "content": "Dear Friend,\n\nAs you read this, I don't want you to feel sorry for me, because, I believe everyone will die someday. \nMy name is BATES ALAN a merchant in Dubai, in the U.A.E.I have been diagnosed with Esophageal cancer.\nIt has defiled all forms of medical treatment, and right now I have only about a few months to live, according to medical experts. \nI have not particularly lived my life so well, as I never really cared for anyone(not even myself)but my business. Though I am very rich, I was never generous, I was always hostile to people and only focused on my business as that was the only thing I cared for. But now I regret all this as I now know that there is more to life than just wanting to have or make all the money in the world. \nI believe when God gives me a second chance to come to this world I would live my life a different way from how I have lived it. Now that God has called me, I have willed and given most of my property and assets to my immediate and extended family members as well as a few close friends. \nI want God to be merciful to me and accept my soul so, I have decided to give alms to charity \norganizations, as I want this to be one of the last good deeds I do on earth. So far, I have distributed money to some charity organizations in the U.A.E, Algeria and Malaysia. \nNow that my health has deteriorated so badly, I cannot do this myself anymore. I once asked members of my family to close one of my accounts and distribute the money which I have there to charity organization in Bulgaria and Pakistan, they refused and kept the money to themselves. Hence, I do not trust them anymore, as they seem not to be contended with what I have left \nfor them. \nThe last of my money which no one knows of is the huge cash deposit of eighteen million dollars $18,000,000,00 that I have with a finance/Security Company abroad. I will want you to help me collect this deposit and dispatched it to charity organizations.\nI have set aside 10% for you and for your time.\n\nGod be with you. \n\nBATES ALAN\n\n\n\n", "id": "lists-005-6318742"}, {"subject": "??????????????????,???? 4000??????(3000????????)??????.??????&#64; xewu jr", "content": "text/html attachment: stored\n\n\n\n\n", "id": "lists-005-6326896"}, {"subject": "test of new list", "content": "--\nGerald Oskoboiny              <gerald@w3.org>  +1 617 253 2920\nSystem Administrator, W3C     http://www.w3.org/People/Gerald/\nWorld Wide Web Consortium, MIT Laboratory for Computer Science\n545 Technology Square,  Room NE43-353  Cambridge MA  02139 USA\n     \n   \n\n", "id": "lists-005-9895081"}, {"subject": "Re[2]: More Check-out/in Branch Semantics", "content": "Brad's note got me started and then I ended up writing a kind of big thing\nthat harps on my general questions about client design and keeping policy\nconfined to servers.\n\nAt 10:48 AM -0400 10/19/98, Bradley_Sergeant@intersolv.com wrote:\n>     If you use unreserved and you want to checkin, the client must still\n>     specify whether he wants to merge or branch.  This may be determined\n>     by a workspace setting, but this is no different from having the merge\n>     flag be a workspace setting.  Seems to me the merge option simply\n>     documents choices that need to be made at CHECKIN whether you do and\n>     unreserve or a ReserveNewBranch option.  What am I missing?\n\nIn Geoff's scenario, the checkout request tells the server to implement\nlogic creating a new branch, or to use the original branch at checkin time,\ndepending on whether other checkins have occurred since checkout. In\nGeoffrey's scenario, the _server_ decides.\n\nIn the \"forcebranch\" scenario, the client must remember _both_ the main\nbranch name, and the name of the \"reserved\" branch, and whether the user's\nintention is to check into the one or the other. They could be forcing a\nbranch because they _intend to create a new branch_ or because they want to\nreserve a new branch in case they _don't_ check back into the mainline. The\nserver doesn't know this, so the client must remember it, or prompt the\nuser at every checkin.\n\nIn either case, the server might answer \"merge is required to check into\nthe parent branch,\" so I don't see that forcebranch simplifies the protocol.\n\nI can even imagine servers that would not create a new branch on an\nunreserved checkin, but would simply add merge arcs. For example, if\nrevision 1 is checked out (unreserved); revision 2 gets created by a third\nparty; then when revision 3 is checked in, no branching may be required:\nrevision 3 can be recorded as a merge of revision 1 and revision 2. Of\ncourse, the server must fail on the initial request to \"simply\" check in\nrevision 3.\n\nThe question is whether clients should be required to implement \"unreserved\ncheckout\" semantics if they are desired (and I think we agree that they are\nneeded), or whether that is something that _servers_ should implement, and\nwhere clients can offer the option at their discretion.\n\nI incline to thinking that the policy decisions should _all_ be made by\nservers, and that clients should be offered all of the request options\nrequired to work under reasonable server policies. It seems to me that\npolicy implementation in clients may make some policies unavailable to some\nusers even when using servers that support those policies. It also makes\nclients more complex rather than simpler.\n\nThis does not _outlaw_ smarter, more policy sensitive clients. If one\n_wants_ to enforce (or assumes) particular policies it need _not_ request\nserver options not wanted. It could even refuse to communicate with servers\nthat don't offer them guarantees (such as locking) that they wish enforced.\n\nTo drop down to a low level  (protocol) for a minute, I think we want two\nverbs:\n\ncheckout and checkin.\n\nEach can request \"locking\" of the branch (reservation of a branch for checkin)\noptional specification of which branch (change set) is desired\noptional request that forking be prohibited/allowed.\n\nserver policies will determine what combinations of these are accepted and\nwhen. We probably do need to say _if_ any guarantees should be made by a\nserver on accepting such an option: forking seems like the only one that\nmust generate a hard guarantee. Change-oriented systems can, for instance,\nalways answer yes to any lock request, if they want to, because they have\nno system requirements for locking.\n\nI haven't said what a nil (unspecified) branch ID might mean on either of\nthese requests. It could invoke some kind of default processing, or it\ncould signify that the server should create a branch. It may be that we\nneed to distinguish  a user-specified branch, a request for a default\nbranch, or a request for the server to create a branch.\n\nAlso open is whether a special merge operation is required. An option flag\nto checkin that changes its parameters seems clumsy to me, but instead of\nan option, any checkin could specify a list of predecessor nodes (so that\nany checkin could be a merge), then it seems more coherent than some kind\nof option-setting interface.\n\nI'm not an expert on branching models, but it seems to me that we should be\nleaving policy to servers (which is where it currently seems to reside\nanyway), and concentrate on allowing clients the ability to _request_ from\na server any options that make sense under any reasonable policy, whenever\nit performs an operation. The server is always free to deny any such\nrequest, as well as to suggest another kind of request: e.g. we probably\nwill need errors like \"merge required for sucessful checkin\".\n\n   -- David\n\n\n\nDavid Durand              dgd@cs.bu.edu  \\  david@dynamicDiagrams.com\nBoston University Computer Science        \\  Sr. Analyst\nhttp://www.cs.bu.edu/students/grads/dgd/   \\  Dynamic Diagrams\n--------------------------------------------\\  http://www.dynamicDiagrams.com/\nMAPA: mapping for the WWW                    \\\n     \n   \n\n", "id": "lists-005-9897521"}, {"subject": "Re[3]: More Check-out/in Branch Semantics", "content": "     David said:\n     I incline to thinking that the policy decisions should _all_ be made\n     by servers, and that clients should be offered all of the request\n     options required to work under reasonable server policies. It seems to\n     me that policy implementation in clients may make some policies\n     unavailable to some users even when using servers that support those\n     policies. It also makes clients more complex rather than simpler.\n\nI agree that policy should be enforced by the server whenever posible and\nthat the protocol should be designed with this in mind.\n\n     In the \"forcebranch\" scenario, the client must remember _both_ the\n     main branch name, and the name of the \"reserved\" branch, and whether\n     the user's intention is to check into the one or the other. They could\n     be forcing a branch because they _intend to create a new branch_ or\n     because they want to reserve a new branch in case they _don't_ check\n     back into the mainline. The server doesn't know this, so the client\n     must remember it, or prompt the user at every checkin.\n\nI see your point.  However, it was not my intention that the client be made\nto remember either of the branches.  The assumption I was making was that\nthe client would decide at checkin if the branch was still desired, or if a\nmerge was desired.  The branches involved can be derived from the state of\nthe Vgraph and who owns which revisions.\n\nNow if you want the CHECKOUT options to completely drive the behavior (at\nleast the default behavior) of CHECKIN, then I can see you need more than\njust ForceBranch.\n\nSo now I see Geoff's original point.  If you use -reserve and can also\ndesignate a branch name indicating a branch other than the original branch,\nthis serves the same purpose as -ForceBranch.\n\nIf we can also allow a new branch name, or some how indicate that a new\nbranch is to be created (without even specifying a branch name), I think\nthat solves all my original issues.\n\n     --Sarge\n     \n   \n\n", "id": "lists-005-9905506"}, {"subject": "test", "content": "test\n     \n   \n\n", "id": "lists-005-9909948"}, {"subject": "defining a versioned resource to be a \"collection\"", "content": "Rather than send out all my comments on the latest protocol draft\nin one \"bulk mailing\", I decided to break in up into several smaller\nthreads for easier automated thread management (if anyone feels this\nis a mistake, please let me know).\n\nHaving two ways of specifying a revision, i.e. either as a\nrevision-URI or as a <versioned-resource-URI, revision-id> pair, adds\nsome amount of complexity to the protocol.  Since some operations only\nreturn the revision-id, the client must then either store the pair\nform, or must keep asking the server for the revision-URI\ncorresponding to revision-id it just received.  Since a collection is\na canonical way of specifying a resource as some base resource\nextended by some unique (wrt that base resource) identifier, why don't\nwe just define a versioned-resource to be a collection, and each revision\nto be a member of that collection identified by what we have been calling\nthe revision-id?  Since a \"get\" from a collection is defined to be\ncollection dependent, having the get do what we want for versioned\nresources appears to be consistent with the definition of collections.\nThe various predecessor/successor/merge relations continue to be revision\nproperties.\n\nThe only argument against doing so that I could find was in Jim's first\nprotocol proposal, and this was to handle the case where some of the\nrevisions of a versioned resource are located on other servers.\nSince collection members can now be references, I don't see that this\npresents a problem anymore.\n\nI re-read both the collection protocol paper, the URI RFC, and all\nthree protocol papers, and couldn't find anything that argued against\nthis simplification.  So although I continue to be worried that I\noverlooked something obvious, I'll propose that we do so.\n\nCheers,\nGeoff\n     \n   \n\n", "id": "lists-005-9912369"}, {"subject": "checkout/checkin/uncheckout vs. lock/unlock", "content": "Why was the checkout/checkin/uncheckout functionality assigned\nto the lock/unlock methods?  As I recall, in our last meeting,\nwe agreed (or at least, all of us but Chris agreed, and Chris\nreluctantly accepted :-) that they each really needed to be a\nseparate method.\n\nThere was a proposal to allow you to optionally \"lock\" a working\nresource as part of the checkout command (which is fine with me),\nbut making the checkout command actually be a variant of the \"lock\"\nmakes no sense to me.\n\n- What if you want to leave the working resource available for anyone\nto modify?  In what sense have you created a lock?\n\n- When you checkin a resource, you have now made an immutable revision.\nIn what sense have you \"unlocked\" anything?\n\n- Converely, when you \"uncheckout\" a working resource, you delete it.\nIn what sense have you \"locked\" anything?\n\n- When you \"checkout\" a versioned resource, you create a new (working)\nresource.  A \"lock\" is not something you expect to create a new resource.\n\nSo I propose that we not overload lock/unlock, but that we have 3 new\nmethods: CHECKIN, CHECKOUT, UNCHECKOUT.\n\nCheers,\nGeoff\n\n\nNote: my previous message to ietf-dav-versioning@w3.org appears to\nhave been distributed fine (or at least, it make it back to me with\nno trouble.  So whatever problem Chris was having seems to have either\nbeen fixed, or is a local problem at his home mailing site.\n     \n   \n\n", "id": "lists-005-9916833"}, {"subject": "Re: checkout/checkin/uncheckout vs. lock/unlock", "content": "At 2:29 PM -0400 11/3/98, Geoffrey M. Clemm wrote:\n>Why was the checkout/checkin/uncheckout functionality assigned\n>to the lock/unlock methods?  As I recall, in our last meeting,\n>we agreed (or at least, all of us but Chris agreed, and Chris\n>reluctantly accepted :-) that they each really needed to be a\n>separate method.\n\n> ... trimmed ...\n\n>So I propose that we not overload lock/unlock, but that we have 3 new\n>methods: CHECKIN, CHECKOUT, UNCHECKOUT.\n\nThis reflects my memory (and design taste) as well.\n\n  -- David\n\nDavid Durand              dgd@cs.bu.edu  \\  david@dynamicDiagrams.com\nBoston University Computer Science        \\  Sr. Analyst\nhttp://www.cs.bu.edu/students/grads/dgd/   \\  Dynamic Diagrams\n--------------------------------------------\\  http://www.dynamicDiagrams.com/\nMAPA: mapping for the WWW                    \\\n     \n   \n\n", "id": "lists-005-9920958"}, {"subject": "Re: checkout/checkin/uncheckout vs. lock/unlock", "content": "I also agree with this for different reasons.  I've heard from people who\nwould like to be able to use DAV versioning, but don't want to use DAV\nlocking.  So keeping the two as independent as possible would be a good\nthing.\n\nJudith A. Slein\nXerox Corporation\njslein@crt.xerox.com\n(716)422-5169\n800 Phillips Road 105/50C\nWebster, NY 14580\n\n\n> -----Original Message-----\n> From: Geoffrey M. Clemm [mailto:gclemm@tantalum.atria.com]\n> Sent: Tuesday, November 03, 1998 1:30 PM\n> To: ietf-dav-versioning@w3.org\n> Subject: checkout/checkin/uncheckout vs. lock/unlock\n\n\n\n> Why was the checkout/checkin/uncheckout functionality assigned\n> to the lock/unlock methods?  As I recall, in our last meeting,\n> we agreed (or at least, all of us but Chris agreed, and Chris\n> reluctantly accepted :-) that they each really needed to be a\n> separate method.\n\n> There was a proposal to allow you to optionally \"lock\" a working\n> resource as part of the checkout command (which is fine with me),\n> but making the checkout command actually be a variant of the \"lock\"\n> makes no sense to me.\n\n> - What if you want to leave the working resource available for anyone\n> to modify?  In what sense have you created a lock?\n\n> - When you checkin a resource, you have now made an immutable\n> revision.\n> In what sense have you \"unlocked\" anything?\n\n> - Converely, when you \"uncheckout\" a working resource, you delete it.\n> In what sense have you \"locked\" anything?\n\n> - When you \"checkout\" a versioned resource, you create a new (working)\n> resource.  A \"lock\" is not something you expect to create a\n> new resource.\n\n> So I propose that we not overload lock/unlock, but that we have 3 new\n> methods: CHECKIN, CHECKOUT, UNCHECKOUT.\n\n> Cheers,\n> Geoff\n\n\n> Note: my previous message to ietf-dav-versioning@w3.org appears to\n> have been distributed fine (or at least, it make it back to me with\n> no trouble.  So whatever problem Chris was having seems to have either\n> been fixed, or is a local problem at his home mailing site.\n\n     \n   \n\n", "id": "lists-005-9925044"}, {"subject": "Re: defining a versioned resource to be a \"collection\"", "content": "                From: Geoffrey M. Clemm [gclemm@tantalum.atria.com]\n                ...\n\n                Having two ways of specifying a revision, i.e. either as a\n                revision-URI or as a <versioned-resource-URI, revision-id>\npair, adds\n                some amount of complexity to the protocol.  Since some\noperations only\n                return the revision-id, the client must then either store\nthe pair\n                form, or must keep asking the server for the revision-URI\n                corresponding to revision-id it just received.  Since a\ncollection is\n                a canonical way of specifying a resource as some base\nresource\n                extended by some unique (wrt that base resource) identifier,\nwhy don't\n                we just define a versioned-resource to be a collection, and\neach revision\n                to be a member of that collection identified by what we have\nbeen calling\n                the revision-id?  Since a \"get\" from a collection is defined\nto be\n                collection dependent, having the get do what we want for\nversioned\n                resources appears to be consistent with the definition of\ncollections.\n                The various predecessor/successor/merge relations continue\nto be revision\n                properties.\n\n                The only argument against doing so that I could find was in\nJim's first\n                protocol proposal, and this was to handle the case where\nsome of the\n                revisions of a versioned resource are located on other\nservers.\n                Since collection members can now be references, I don't see\nthat this\n                presents a problem anymore.\n\n                I re-read both the collection protocol paper, the URI RFC,\nand all\n                three protocol papers, and couldn't find anything that\nargued against\n                this simplification.  So although I continue to be worried\nthat I\n                overlooked something obvious, I'll propose that we do so.\n                ...\n\nThe current proposal does return both elements of the \"pair\" you describe.\nHowever, it seems my examples didn't show this.  There is a Location header\nin HTTP that should/can return the target URI for an operation.  I would\nexpect this to return the versioned resource and the Revision-id header to\nreturn the specific revision.\n\nThat having been said, I think your approach has some problems.  First, I\ndon't understand how you would handle the versioning of a collection\nresource itself.  Does it become a collection of collections?\n\nAs for complexity, I'd argue it is a wash.  You trade the complexity of the\npair of information for the complexity of inserting extra collections into\nthe namespace.\n\nWe would also have to add the notion of a \"default\" member to a collection.\nThat is, if I do a GET on the versioned resource, which is just a\ncollection, which resource within the collection do I return (this is the\nPIN method, but the semantics are a little broader now -- not that this is\nbad).\n\nI also think the collections approach assumes a basic linear history.  Once\nyou get into resource-level branching, do we represent the branch as another\ncollection?  If so, the collections of collections are going to get very\ncomplex, very fast.\n\nWhen building Web sites, the inter-page links are very important.  I believe\npeople want to be able to version their sites without requiring a lot of\nlink updating to occur.  That is, I should be able to create different\nbranches and have my links still work by passing in headers to qualify the\nURI.  By introducing namespace changes to refer to the branches and versions\n(or even configurations), you force the links to have to change.\n\nChris\n     \n   \n\n", "id": "lists-005-9930389"}, {"subject": "versioned collections: a proposal", "content": "* Versioned Collection Challenges\n\nAs has been pointed out in several messages, versioned collections\npresent a couple of challenging use cases.\n\nFirst, when a versioned resource is \"deleted\" from a versioned\nresource collection, the resource itself cannot actually be deleted,\nsince it still must be visible in the earlier revisions of that\nversioned resource collection.\n\nSecond, when a new revision is to be selected from a versioned\nresource that is the leaf of a nested set of versioned collections,\nthe appropriate versions of the containing collections must exist and\nbe selected in order for that new leaf revision to be visible.\n\nIn order to relieve simple versioning systems from having to\naddress these problems, I propose that we only support versioned\ncollections as part of DAV:configurations and not part of\nDAV:basicversioning.  I also propose that the following constructs\nreplace the corresponding constructs of section 5 (\"Configurations\")\nof draft-webdav-versioning-00.\n\n\n* Repositories, Configurations, and Workspaces\n\nTo support versioned collections, I propose that the members of a\nrevision of a versioned collection should be *references* to other\n*versioned resources* (not the versioned resource itself, nor a\nreferences to particular revisions).  I further propose that the\nversioned resources referenced by collection revisions be members of a\nspecial non-versioned collection called a \"repository\".\n\nHaving collection revision members be references solves the first\nversioned collection problem (what is deleted is a reference to the\nversioned resource, not the versioned resource itself).  To solve the\nsecond problem, I propose that we introduce a special XML element\ncalled a \"configuration\" to provide an extensible mechanism for\ndefining version selection, and that we introduce the concept of a\n\"workspace\" resource as a mechanism for combining a versioned\ncollection with a configuration, to \"instantiate\" the collection\nrevisions (i.e. to produce collections whose members are the\nrevisions selected by the configuration from the versioned\nresources that are the members of the collection revision).\n\nIn addition, just as repositories provide the collections that\ncontain the versioned resources, workspaces will provide the collections\nthat contain the working resources.\n\n\n* Definitions\n\n\"Repository\" - a non-versioned collection resource that contains\nversioned resources.\n\n\"Configuration\" - an XML element that defines a version selection\nrule, i.e. a configuration can be used to select a specific revision\nof a given versioned resource.\n\n\"Workspace\" - a non-versioned resource that contains \"instances\" (or\nis an \"instance\") of a revision of a versioned resource.  An instance\nof a non-collection revision is either a reference to the revision, or\nis a working resource created by checking out the revision.  An\ninstance of a collection revision is a non-versioned collection, each\nof whose members is an instance of a revision of a member of the\ncollection revision being instantiated.\n\n(Note: a workspace can be seen as a generalization of the \"VPortal\"\nconcept from Jim Whitehead's original Versioning protocol proposal.\n\n\n* Predefined Configuration Elements\n\nAlthough a configuration is intended to be an extensible concept,\na few common configuration elements will be pre-defined.\n- LABEL-CONFIG element: the XML element specifies the name of a label.\n  This will select the revision of a versioned resource with that label.\n- BRANCH-CONFIG element: the XML element specifies the name of a branch.\n  This will select the latest revision of that versioned resource on that\n  branch.\n- DATED-BRANCH-CONFIG element: the XML element specifies both\n  the name of a branch and a date.  This will select the latest revision\n  of that versioned resource on that branch on or before the specified date.\n\n\n* Version Selection Conflicts\n\nIf multiple configuration elements are specified in a configuration,\na \"conflict\" can result if the configuration elements select incompatible\nrevisions (e.g. two revisions on different branches of the versioned\nresource).\n\n\n* Workspace Properties\n\nThe WORKSPACE-ROOT property of a workspace specifies the versioned\nresource of which the workspace is an instance.  If the WORKSPACE-ROOT\nis a collection, then a revision of each of the members of that\ncollection is instantiated in that workspace as well.\n\nThe WORKSPACE-CONFIGURATION property of a workspace specifies the\nrules for selecting which revisions are instantiated in the workspace.\n\nThe WORKSPACE-CONFLICTS property contains an XML element describing\nall conflicts produced when the WORKSPACE-CONFIGURATION is\ninstantiated on the WORKSPACE-ROOT.\n\n\n* Working Resources Properties\n\nWhen a working resource is created following a checkout, the working\nresource will be \"from a specific revision\", \"on a specific branch\",\nand \"in a specific workspace\".  This information is stored in the\nWR-REVISION, WR-BRANCH, and WR-WORKSPACE properties of the working\nresource.\n\n\n* An Example\n\nFor this example, I will assume that the repository is implemented as\njust a directory containing a set of RCS files, and a workspace is\nimplemented as a directory tree containing copies of the appropriate\nrevisions.  For a more sophisticated configuration management system,\none or more databases would normally be used to supplement (or\nreplace) the set of files containing the revisions of a versioned\nresource, and various file caches used to share revisions between\nmultiple workspaces.\n\nI will further assume that a versioned collection will be represented\nas a special RCS file with a \".dir,v\" extension, where each revision\nof a versioned collection consists of a list of member id's with the\nURI of the appropriate versioned resource.\n\nThe example repository would have then have a URI such as:\n\n  http://www.rational.com/web-dav/repo/test/\n\nand would have members such as:\n\n  http://www.rational.com/web-dav/repo/test/src.dir,v\n  http://www.rational.com/web-dav/repo/test/inc.dir,v\n  http://www.rational.com/web-dav/repo/test/hello.c,v\n  http://www.rational.com/web-dav/repo/test/msg.h,v\n  http://www.rational.com/web-dav/repo/test/print.c,v\n\nUsing my earlier proposal that versioned resources be collections,\nthe revisions of \"hello.c,v\" would have the URI's such as:\n\n  http://www.rational.com/web-dav/repo/test/hello.c,v/r1.0\n  http://www.rational.com/web-dav/repo/test/hello.c,v/r1.1\n  http://www.rational.com/web-dav/repo/test/hello.c,v/r1.1.1.0\n  http://www.rational.com/web-dav/repo/test/hello.c,v/r2.1\n  http://www.rational.com/web-dav/repo/test/hello.c,v/r2.1.1.0\n\nThe contents of:\n\n  http://www.rational.com/web-dav/repo/test/src.dir,v/r2.1\n\nwould then be lines of text such as:\n\n  hello.c <http://www.rational.com/web-dav/repo/test/hello.c,v>\n  print.c <http://www.rational.com/web-dav/repo/test/print.c,v>\n  inc     <http://www.rational.com/web-dav/repo/test/inc.dir,v>\n\nThen there could be a few workspaces with URI's:\n\n  http://www.rational.com/home/gclemm/ws/dev/\n  http://www.rational.com/home/gclemm/ws/integ/\n  http://www.intersolv.com/home/sarge/ws/dev/\n\nwhere the properties of:\n\n  http://www.rational.com/home/gclemm/ws/dev/\n\ncould be:\n\n  <D:prop>\n    <D:workspace-root>\n      http://www.rational.com/web-dav/repo/test/src.dir,v </D:workspace-root>\n    <D:workspace-configuration>\n      <D:label-config> stable </D:label-config>\n      </D:workspace-configuration> </D:prop>\n\nAssume that \"print.c\" is checked-out in \"gclemm/ws/dev\".\nAlso assume that the following revisions:\n\n  http://www.rational.com/web-dav/repo/test/src.dir,v/r2.1\n  http://www.rational.com/web-dav/repo/test/inc.dir,v/r1.0\n  http://www.rational.com/web-dav/repo/test/hello.c,v/r1.5\n  http://www.rational.com/web-dav/repo/test/print.c,v/r1.2\n  http://www.rational.com/web-dav/repo/test/msg.h,v/r1.3\n\neach have the property:\n\n  <D:prop>\n    <D:label> stable </D:label>\n    </D:prop>\n\nThen a recursive listing of the workspace \"gclemm/ws/dev\" would be:\n\n  http://www.rational.com/home/gclemm/ws/dev/\n  http://www.rational.com/home/gclemm/ws/dev/src/\n  http://www.rational.com/home/gclemm/ws/dev/src/hello.c\n  http://www.rational.com/home/gclemm/ws/dev/src/print.c\n  http://www.rational.com/home/gclemm/ws/dev/inc/\n  http://www.rational.com/home/gclemm/ws/dev/inc/msg.h\n\nwhere \"hello.c\" is a reference to:\n\n  http://www.rational.com/web-dav/repo/test/hello.c,v/r1.5\n\nwhere \"msg.h\" is a reference to:\n\n  http://www.rational.com/web-dav/repo/test/msg.h,v/r1.3\n\nand where print.c is a working resource.\n     \n   \n\n", "id": "lists-005-9936850"}, {"subject": "Re: defining a versioned resource to be a \"collection\"", "content": "Chris raises several good questions.  In order to answer them, I will\nin several cases refer to a proposal for handling versioned collections\nthat I posted earlier today to this mailing list (it's subject was\n\"versioned collections: a proposal\".\n\n   From: Chris Kaler <ckaler@microsoft.com>\n\n      From: Geoffrey M. Clemm [gclemm@tantalum.atria.com]\n      ...\n      Since a collection is\n      a canonical way of specifying a resource as some base resource\n      extended by some unique (wrt that base resource) identifier, why don't\n      we just define a versioned-resource to be a collection, and each\n      revision to be a member of that collection identified by what we have\n      been calling the revision-id?\n      ...\n\n   ... I think your approach has some problems.  First, I\n   don't understand how you would handle the versioning of a collection\n   resource itself.  Does it become a collection of collections?\n\nYes.  (See the \"versioned collections\" article for details).\n\n   As for complexity, I'd argue it is a wash.  You trade the complexity of the\n   pair of information for the complexity of inserting extra collections into\n   the namespace.\n\nInserting extra collections into the namespace does not increase the\ncomplexity of the protocol, while requiring a pair of identifiers to\nidentify a revision resource does (e.g. the new header needed to specify\nthe revision id, and extending the method semantics to use or ignore\nthe new header).  This is certainly something we could cope with if we\nhad to, but I'd need to see some real benefit before paying the price.\n\n   We would also have to add the notion of a \"default\" member to a collection.\n   That is, if I do a GET on the versioned resource, which is just a\n   collection, which resource within the collection do I return (this is the\n   PIN method, but the semantics are a little broader now -- not that this is\n   bad).\n\nI don't see why we would have to define in general the notion of a\n\"default\" member of a collection.  We define the notion for versioned\nresources, and that isn't affected by whether the versioned resource happens\nto be a collection (of revisions).\n\n   I also think the collections approach assumes a basic linear history.\n\nWhy?  A standard collection is just a set with identifiers for the members.\nThis implies nothing about the linear nature of the history (this is determined\nfrom the predecessor/successor properties of the revisions).\n\n   Once\n   you get into resource-level branching, do we represent the branch as another\n   collection?\n\nOne could, but I wouldn't recommend doing so.  I'd just make the branch\nbe a property of the revision.  In particular, this branch-as-property\napproach allows you to support the \"change-set\" approach with no change\nto the protocol.\n\n   If so, the collections of collections are going to get very\n   complex, very fast.\n\nAnother reason not to do so.\n\n   When building Web sites, the inter-page links are very important.  I believe\n   people want to be able to version their sites without requiring a lot of\n   link updating to occur.   That is, I should be able to create different\n   branches and have my links still work by passing in headers to qualify the\n   URI.  By introducing namespace changes to refer to the branches and versions\n   (or even configurations), you force the links to have to change.\n\nI assume that you are referring to the problems of handling absolute\ninter-page links in the presence of namespace versioning?  (Relative\ninter-page links require no additional headers).\n\nI agree that this is an important problem, but I do not believe it can\nbe effectively solved by passing around a \"revision-id\".  To solve\nthis problem, you need to pass around a \"version-selection\" header\nthat indicates what revision should be selected from each of the\nversioned collections back to the root of the URI space.  In addition,\nyou need to indicate when you want a revision, and when you want a\nworking resource.\n\nIn my proposal for handling versioned collections, this problem would\nbe addressed by passing around a \"workspace\" header, and then\nupgrading all methods to treat absolute URI's in a document as\nrelative URI's wrt the specified workspace URI.\n\nCheers,\nGeoff\n     \n   \n\n", "id": "lists-005-9950221"}, {"subject": "Most recent vs. specific version (was  versioned collections: a p \troposal)", "content": "comments inline...\n\nFrom: Geoffrey M. Clemm [mailto:gclemm@tantalum.atria.com]\nSent: Monday, November 09, 1998 7:14 AM\nTo: ietf-dav-versioning@w3.org\nSubject: versioned collections: a proposal\n\n[...]\n\nTo support versioned collections, I propose that the members of a\nrevision of a versioned collection should be *references* to other\n*versioned resources* (not the versioned resource itself, nor a\nreferences to particular revisions).\n[...]\nThe contents of:\n\n  http://www.rational.com/web-dav/repo/test/src.dir,v/r2.1\n\nwould then be lines of text such as:\n\n  hello.c <http://www.rational.com/web-dav/repo/test/hello.c,v>\n  print.c <http://www.rational.com/web-dav/repo/test/print.c,v>\n  inc     <http://www.rational.com/web-dav/repo/test/inc.dir,v>\n\n[...]\n\nOften collections should contain the most recent version of each of their\nmembers.  However, I believe that there are times when you want to refer to\na specific version of\na member.  This should be supported.  For example, the 3rd quarter 1998\nresults might point to specific versions of the balance sheet, the\npresident's message, the auditor's message, etc.  You wouldn't want the 3rd\nquarter results changing every time someone checked in a new version of the\nbalance sheet.\n\nSometimes you may want to package up a collection containing different\nversions of the same document.  For example, the 1998 report might contain\nthe 3rd quarter balance sheets for 1996, 1997 and 1998.\n\nTherefore, it would be nice to define a syntax for specifying a particular\nversion as well as a standard way of specifying most recent version.\n\n                        Barbara b.\n                        PC DOCS, Inc.\n     \n   \n\n", "id": "lists-005-9957972"}, {"subject": "Re: Most recent vs. specific version (was  versioned collections: a p \troposal)", "content": "   From: Barbara Bazemore <barbarab@pcdocs.com>\n\n      From: Geoffrey M. Clemm [mailto:gclemm@tantalum.atria.com]\n      Sent: Monday, November 09, 1998 7:14 AM\n      To: ietf-dav-versioning@w3.org\n      Subject: versioned collections: a proposal\n\n      [...]\n\n      To support versioned collections, I propose that the members of a\n      revision of a versioned collection should be *references* to other\n      *versioned resources* (not the versioned resource itself, nor a\n      references to particular revisions).\n      [...]\n      The contents of:\n\n        http://www.rational.com/web-dav/repo/test/src.dir,v/r2.1\n\n      would then be lines of text such as:\n\n        hello.c <http://www.rational.com/web-dav/repo/test/hello.c,v>\n        print.c <http://www.rational.com/web-dav/repo/test/print.c,v>\n        inc     <http://www.rational.com/web-dav/repo/test/inc.dir,v>\n\n      [...]\n\n   Often collections should contain the most recent version of each of their\n   members.  However, I believe that there are times when you want to refer to\n   a specific version of\n   a member.  This should be supported.  For example, the 3rd quarter 1998\n   results might point to specific versions of the balance sheet, the\n   president's message, the auditor's message, etc.  You wouldn't want the 3rd\n   quarter results changing every time someone checked in a new version of the\n   balance sheet.\n\nJust to avoid any confusion, the contents of src.dir,v/r2.1 above does\nnot mean \"select the default revision of each of these versioned resources\".\nRather it just means \"Here is a list of versioned resources with the\npath segment that names them in this collection revision\".\nYou would select revisions (default, fixed, whatever) in a *configuration*\nXML element (see the original proposal message for details).\n\n   Sometimes you may want to package up a collection containing different\n   versions of the same document.  For example, the 1998 report might contain\n   the 3rd quarter balance sheets for 1996, 1997 and 1998.\n\n   Therefore, it would be nice to define a syntax for specifying a particular\n   version as well as a standard way of specifying most recent version.\n\nSimple configurations (such as LABEL-CONFIGURATION) would not allow\nyou to do this (since a label can select at most one revision of a\ngiven versioned resource), but more advanced configurations, that let\nyou use different rules for different URI's would handle this just\nfine.\n\nIn summary, these are all reasonable things to want to do, and I believe\nthe proposal provides an extensible mechanism and syntax for doing so.\nIf this mechanism is found acceptable, we could start an interesting\nthread on the set of configuration elements that we feel should be\npre-defined.\n\nCheers,\nGeoff\n     \n   \n\n", "id": "lists-005-9962987"}, {"subject": "Kaler update", "content": "Hey all -- I've been offline for a week and will be for a little while\nlonger.  I'll try to catch up on mail in a week or two.\n\nI am happy to say that Nicholas Ntahak Kaler joined us Saturday 11/07/98 at\n11:22pm after only 6 hours of labor and just a handfull of pushes!  He\nwieghed 7 lbs 7 ozs and measured 20\".\n\nMother, baby, father, and puppy are all doing fine!\n\nCheers,\nChris\n     \n   \n\n", "id": "lists-005-9969164"}, {"subject": "Re: checkout/checkin/uncheckout vs. lock/unlock", "content": "What we agreed to was that we liked multiple methods instead of just one\n:-).  However, we discovered that there was a conflict between checkout and\nlock.  I was supposed to start an email thread about it, but got hung up.\n\nMy idea was that if we make them the same method, you remove much of the\nconfusion.  A checkout is, in many ways, a lock.  You \"checkout\" either\nshared or exclusive.  That is the same as a lock.  The only difference is\nthat you have a working resource.\n\n                - What if you want to leave the working resource available\nfor anyone\n                to modify?  In what sense have you created a lock?\n\nYou make it shared and everything is fine\n\n                - When you checkin a resource, you have now made an\nimmutable revision.\n                In what sense have you \"unlocked\" anything?\n\nI argue that a checkout is an implicit lock against the resource and by\nchecking in, you have removed that lock.\n\n                - Converely, when you \"uncheckout\" a working resource, you\ndelete it.\n                In what sense have you \"locked\" anything?\n\nThis is another reason why I like the LOCK method.  In many systems,\nexplicit locking is used.  PUTs with require the lock-id to be specified.\nBy tieing the two together, clients don't need to worry (or think) abou the\n\"working resource\".  They do their PUT to the versioned resource and specify\nthe checkout lock.  The server validates the lock and updates the working\nresource.  I actually think this is much easier for the client than having\nto track the versioned resource, the working resource, and the lock-id.\nLess information, consistent protocol.\n\n                - When you \"checkout\" a versioned resource, you create a new\n(working)\n                resource.  A \"lock\" is not something you expect to create a\nnew resource.\n\nBut many (most) checkouts result in the versioned resource being locked in\nsome way.  So this approach lessens the round-trips and the information the\nclient must track and keeps the protocol almost exactly the same as\nnon-versioning.\n\nChris\n\n\n                -----Original Message-----\n                From:   Geoffrey M. Clemm [mailto:gclemm@tantalum.atria.com]\n                Sent:   Tuesday, November 03, 1998 10:30 AM\n                To:     ietf-dav-versioning@w3.org\n                Subject:        checkout/checkin/uncheckout vs. lock/unlock\n\n\n                Why was the checkout/checkin/uncheckout functionality\nassigned\n                to the lock/unlock methods?  As I recall, in our last\nmeeting,\n                we agreed (or at least, all of us but Chris agreed, and\nChris\n                reluctantly accepted :-) that they each really needed to be\na\n                separate method.\n\n                There was a proposal to allow you to optionally \"lock\" a\nworking\n                resource as part of the checkout command (which is fine with\nme),\n                but making the checkout command actually be a variant of the\n\"lock\"\n                makes no sense to me.\n\n                - What if you want to leave the working resource available\nfor anyone\n                to modify?  In what sense have you created a lock?\n\n                - When you checkin a resource, you have now made an\nimmutable revision.\n                In what sense have you \"unlocked\" anything?\n\n                - Converely, when you \"uncheckout\" a working resource, you\ndelete it.\n                In what sense have you \"locked\" anything?\n\n                - When you \"checkout\" a versioned resource, you create a new\n(working)\n                resource.  A \"lock\" is not something you expect to create a\nnew resource.\n\n                So I propose that we not overload lock/unlock, but that we\nhave 3 new\n                methods: CHECKIN, CHECKOUT, UNCHECKOUT.\n\n                Cheers,\n                Geoff\n\n\n                Note: my previous message to ietf-dav-versioning@w3.org\nappears to\n                have been distributed fine (or at least, it make it back to\nme with\n                no trouble.  So whatever problem Chris was having seems to\nhave either\n                been fixed, or is a local problem at his home mailing site.\n     \n   \n\n", "id": "lists-005-9971996"}, {"subject": "Re: checkout/checkin/uncheckout vs. lock/unlock", "content": "I'd like to hear who these people are.  Most people I talk to either do\nimplicit versioning (don't want to be bothered by it, just make it happen)\nor use exclusive versioning (which requires locking).  So I find this\nrequirement confusing.  Not to mean its invalid, I've just never heard it\nbefore.\n\nChris\n\n                -----Original Message-----\n                From:   Slein, Judith A [mailto:JSlein@crt.xerox.com]\n                Sent:   Thursday, November 05, 1998 10:47 AM\n                To:     'Geoffrey M. Clemm'; ietf-dav-versioning@w3.org\n                Subject:        RE: checkout/checkin/uncheckout vs.\nlock/unlock\n\n                I also agree with this for different reasons.  I've heard\nfrom people who\n                would like to be able to use DAV versioning, but don't want\nto use DAV\n                locking.  So keeping the two as independent as possible\nwould be a good\n                thing.\n\n                Judith A. Slein\n                Xerox Corporation\n                jslein@crt.xerox.com\n                (716)422-5169\n                800 Phillips Road 105/50C\n                Webster, NY 14580\n\n\n                > -----Original Message-----\n                > From: Geoffrey M. Clemm [mailto:gclemm@tantalum.atria.com]\n                > Sent: Tuesday, November 03, 1998 1:30 PM\n                > To: ietf-dav-versioning@w3.org\n                > Subject: checkout/checkin/uncheckout vs. lock/unlock\n\n\n\n                > Why was the checkout/checkin/uncheckout functionality\nassigned\n                > to the lock/unlock methods?  As I recall, in our last\nmeeting,\n                > we agreed (or at least, all of us but Chris agreed, and\nChris\n                > reluctantly accepted :-) that they each really needed to\nbe a\n                > separate method.\n\n                > There was a proposal to allow you to optionally \"lock\" a\nworking\n                > resource as part of the checkout command (which is fine\nwith me),\n                > but making the checkout command actually be a variant of\nthe \"lock\"\n                > makes no sense to me.\n\n                > - What if you want to leave the working resource available\nfor anyone\n                > to modify?  In what sense have you created a lock?\n\n                > - When you checkin a resource, you have now made an\nimmutable\n                > revision.\n                > In what sense have you \"unlocked\" anything?\n\n                > - Converely, when you \"uncheckout\" a working resource, you\ndelete it.\n                > In what sense have you \"locked\" anything?\n\n                > - When you \"checkout\" a versioned resource, you create a\nnew (working)\n                > resource.  A \"lock\" is not something you expect to create\na\n                > new resource.\n\n                > So I propose that we not overload lock/unlock, but that we\nhave 3 new\n                > methods: CHECKIN, CHECKOUT, UNCHECKOUT.\n\n                > Cheers,\n                > Geoff\n\n\n                > Note: my previous message to ietf-dav-versioning@w3.org\nappears to\n                > have been distributed fine (or at least, it make it back\nto me with\n                > no trouble.  So whatever problem Chris was having seems to\nhave either\n                > been fixed, or is a local problem at his home mailing\nsite.\n\n     \n   \n\n", "id": "lists-005-9978655"}, {"subject": "Re: versioned collections: a proposal", "content": "I haven't read through all of this (I will), but here are some quick\ncomments.\n\nI agree that versioned collections are difficult.  For that reason I added\nthe properties to discover what level of collection versioning a resource\nsupported.  I think it is reasonable to make this generally optional.\n\nI don't think that collections have references is viable.  First, the client\nshould have to do anything different if it is working on a versioned\ncollection that if it is working on a non-versioned collection.  This is\nhard, but not impossible using references.  However, I think the namespace\nshouldn't differ at all.  That is, I should be able to take a Web site that\nisn't versioned, and enable versioning on it without requiring the structure\nof the Web site to be changed.\n\nChris\n\n                -----Original Message-----\n                From:   Geoffrey M. Clemm [mailto:gclemm@tantalum.atria.com]\n                Sent:   Monday, November 09, 1998 4:14 AM\n                To:     ietf-dav-versioning@w3.org\n                Subject:        versioned collections: a proposal\n\n                * Versioned Collection Challenges\n\n                As has been pointed out in several messages, versioned\ncollections\n                present a couple of challenging use cases.\n\n                First, when a versioned resource is \"deleted\" from a\nversioned\n                resource collection, the resource itself cannot actually be\ndeleted,\n                since it still must be visible in the earlier revisions of\nthat\n                versioned resource collection.\n\n                Second, when a new revision is to be selected from a\nversioned\n                resource that is the leaf of a nested set of versioned\ncollections,\n                the appropriate versions of the containing collections must\nexist and\n                be selected in order for that new leaf revision to be\nvisible.\n\n                In order to relieve simple versioning systems from having to\n                address these problems, I propose that we only support\nversioned\n                collections as part of DAV:configurations and not part of\n                DAV:basicversioning.  I also propose that the following\nconstructs\n                replace the corresponding constructs of section 5\n(\"Configurations\")\n                of draft-webdav-versioning-00.\n\n\n                * Repositories, Configurations, and Workspaces\n\n                To support versioned collections, I propose that the members\nof a\n                revision of a versioned collection should be *references* to\nother\n                *versioned resources* (not the versioned resource itself,\nnor a\n                references to particular revisions).  I further propose that\nthe\n                versioned resources referenced by collection revisions be\nmembers of a\n                special non-versioned collection called a \"repository\".\n\n                Having collection revision members be references solves the\nfirst\n                versioned collection problem (what is deleted is a reference\nto the\n                versioned resource, not the versioned resource itself).  To\nsolve the\n                second problem, I propose that we introduce a special XML\nelement\n                called a \"configuration\" to provide an extensible mechanism\nfor\n                defining version selection, and that we introduce the\nconcept of a\n                \"workspace\" resource as a mechanism for combining a\nversioned\n                collection with a configuration, to \"instantiate\" the\ncollection\n                revisions (i.e. to produce collections whose members are the\n                revisions selected by the configuration from the versioned\n                resources that are the members of the collection revision).\n\n                In addition, just as repositories provide the collections\nthat\n                contain the versioned resources, workspaces will provide the\ncollections\n                that contain the working resources.\n\n\n                * Definitions\n\n                \"Repository\" - a non-versioned collection resource that\ncontains\n                versioned resources.\n\n                \"Configuration\" - an XML element that defines a version\nselection\n                rule, i.e. a configuration can be used to select a specific\nrevision\n                of a given versioned resource.\n\n                \"Workspace\" - a non-versioned resource that contains\n\"instances\" (or\n                is an \"instance\") of a revision of a versioned resource.  An\ninstance\n                of a non-collection revision is either a reference to the\nrevision, or\n                is a working resource created by checking out the revision.\nAn\n                instance of a collection revision is a non-versioned\ncollection, each\n                of whose members is an instance of a revision of a member of\nthe\n                collection revision being instantiated.\n\n                (Note: a workspace can be seen as a generalization of the\n\"VPortal\"\n                concept from Jim Whitehead's original Versioning protocol\nproposal.\n\n\n                * Predefined Configuration Elements\n\n                Although a configuration is intended to be an extensible\nconcept,\n                a few common configuration elements will be pre-defined.\n                - LABEL-CONFIG element: the XML element specifies the name\nof a label.\n                  This will select the revision of a versioned resource with\nthat label.\n                - BRANCH-CONFIG element: the XML element specifies the name\nof a branch.\n                  This will select the latest revision of that versioned\nresource on that\n                  branch.\n                - DATED-BRANCH-CONFIG element: the XML element specifies\nboth\n                  the name of a branch and a date.  This will select the\nlatest revision\n                  of that versioned resource on that branch on or before the\nspecified date.\n\n\n                * Version Selection Conflicts\n\n                If multiple configuration elements are specified in a\nconfiguration,\n                a \"conflict\" can result if the configuration elements select\nincompatible\n                revisions (e.g. two revisions on different branches of the\nversioned\n                resource).\n\n\n                * Workspace Properties\n\n                The WORKSPACE-ROOT property of a workspace specifies the\nversioned\n                resource of which the workspace is an instance.  If the\nWORKSPACE-ROOT\n                is a collection, then a revision of each of the members of\nthat\n                collection is instantiated in that workspace as well.\n\n                The WORKSPACE-CONFIGURATION property of a workspace\nspecifies the\n                rules for selecting which revisions are instantiated in the\nworkspace.\n\n                The WORKSPACE-CONFLICTS property contains an XML element\ndescribing\n                all conflicts produced when the WORKSPACE-CONFIGURATION is\n                instantiated on the WORKSPACE-ROOT.\n\n\n                * Working Resources Properties\n\n                When a working resource is created following a checkout, the\nworking\n                resource will be \"from a specific revision\", \"on a specific\nbranch\",\n                and \"in a specific workspace\".  This information is stored\nin the\n                WR-REVISION, WR-BRANCH, and WR-WORKSPACE properties of the\nworking\n                resource.\n\n\n                * An Example\n\n                For this example, I will assume that the repository is\nimplemented as\n                just a directory containing a set of RCS files, and a\nworkspace is\n                implemented as a directory tree containing copies of the\nappropriate\n                revisions.  For a more sophisticated configuration\nmanagement system,\n                one or more databases would normally be used to supplement\n(or\n                replace) the set of files containing the revisions of a\nversioned\n                resource, and various file caches used to share revisions\nbetween\n                multiple workspaces.\n\n                I will further assume that a versioned collection will be\nrepresented\n                as a special RCS file with a \".dir,v\" extension, where each\nrevision\n                of a versioned collection consists of a list of member id's\nwith the\n                URI of the appropriate versioned resource.\n\n                The example repository would have then have a URI such as:\n\n                  http://www.rational.com/web-dav/repo/test/\n\n                and would have members such as:\n\n                  http://www.rational.com/web-dav/repo/test/src.dir,v\n                  http://www.rational.com/web-dav/repo/test/inc.dir,v\n                  http://www.rational.com/web-dav/repo/test/hello.c,v\n                  http://www.rational.com/web-dav/repo/test/msg.h,v\n                  http://www.rational.com/web-dav/repo/test/print.c,v\n\n                Using my earlier proposal that versioned resources be\ncollections,\n                the revisions of \"hello.c,v\" would have the URI's such as:\n\n                  http://www.rational.com/web-dav/repo/test/hello.c,v/r1.0\n                  http://www.rational.com/web-dav/repo/test/hello.c,v/r1.1\n        \nhttp://www.rational.com/web-dav/repo/test/hello.c,v/r1.1.1.0\n                  http://www.rational.com/web-dav/repo/test/hello.c,v/r2.1\n        \nhttp://www.rational.com/web-dav/repo/test/hello.c,v/r2.1.1.0\n\n                The contents of:\n\n                  http://www.rational.com/web-dav/repo/test/src.dir,v/r2.1\n\n                would then be lines of text such as:\n\n                  hello.c\n<http://www.rational.com/web-dav/repo/test/hello.c,v>\n                  print.c\n<http://www.rational.com/web-dav/repo/test/print.c,v>\n                  inc\n<http://www.rational.com/web-dav/repo/test/inc.dir,v>\n\n                Then there could be a few workspaces with URI's:\n\n                  http://www.rational.com/home/gclemm/ws/dev/\n                  http://www.rational.com/home/gclemm/ws/integ/\n                  http://www.intersolv.com/home/sarge/ws/dev/\n\n                where the properties of:\n\n                  http://www.rational.com/home/gclemm/ws/dev/\n\n                could be:\n\n                  <D:prop>\n                    <D:workspace-root>\n                      http://www.rational.com/web-dav/repo/test/src.dir,v\n</D:workspace-root>\n                    <D:workspace-configuration>\n                      <D:label-config> stable </D:label-config>\n                      </D:workspace-configuration> </D:prop>\n\n                Assume that \"print.c\" is checked-out in \"gclemm/ws/dev\".\n                Also assume that the following revisions:\n\n                  http://www.rational.com/web-dav/repo/test/src.dir,v/r2.1\n                  http://www.rational.com/web-dav/repo/test/inc.dir,v/r1.0\n                  http://www.rational.com/web-dav/repo/test/hello.c,v/r1.5\n                  http://www.rational.com/web-dav/repo/test/print.c,v/r1.2\n                  http://www.rational.com/web-dav/repo/test/msg.h,v/r1.3\n\n                each have the property:\n\n                  <D:prop>\n                    <D:label> stable </D:label>\n                    </D:prop>\n\n                Then a recursive listing of the workspace \"gclemm/ws/dev\"\nwould be:\n\n                  http://www.rational.com/home/gclemm/ws/dev/\n                  http://www.rational.com/home/gclemm/ws/dev/src/\n                  http://www.rational.com/home/gclemm/ws/dev/src/hello.c\n                  http://www.rational.com/home/gclemm/ws/dev/src/print.c\n                  http://www.rational.com/home/gclemm/ws/dev/inc/\n                  http://www.rational.com/home/gclemm/ws/dev/inc/msg.h\n\n                where \"hello.c\" is a reference to:\n\n                  http://www.rational.com/web-dav/repo/test/hello.c,v/r1.5\n\n                where \"msg.h\" is a reference to:\n\n                  http://www.rational.com/web-dav/repo/test/msg.h,v/r1.3\n\n                and where print.c is a working resource.\n     \n   \n\n", "id": "lists-005-9984854"}, {"subject": "Re: defining a versioned resource to be a \"collection\"", "content": "I don't this approach works for one of my canonical cases.  I have a Web\nsite that I update using DAV.  We now have a DAV server that supports\nversioning.  Some of my clients are using non-versioning DAV clients, some\nare using versioning-aware DAV clients.  Both clients should be able to see\nand operate on the structure of the Web.\n\nI think getting this right adds more complexity to the clients which is\nwhere I think we should be simplifying.  I guess I don't understand why\npassing a version token is bad.  You will likely be holding a lock token\nanyway, so why is this so much of a burden?\n\nPossibly a disconnect here is they way I think of versioned resources.\nPersonally, I like the idea that the URI namespace refers to versioned\nresources and that you specify the revision-id header to refer to a specific\nrevision, otherwise the request is against the versioned resource (or the\ndefault revision).  Of course you can always obtain a URI for a specific\nrevision.  I think this approach makes clients much easier to build and\nmakes the protocol transition from non-versioning to versioning easier.  As\nwell, I prefer not to define server-side structure whenever possible as it\nties the hands of the server writer.\n\nChris\n\n                -----Original Message-----\n                From:   Geoffrey M. Clemm [mailto:gclemm@tantalum.atria.com]\n                Sent:   Monday, November 09, 1998 9:29 AM\n                To:     Chris Kaler\n                Cc:     ietf-dav-versioning@w3.org\n                Subject:        Re: defining a versioned resource to be a\n\"collection\"\n\n                Chris raises several good questions.  In order to answer\nthem, I will\n                in several cases refer to a proposal for handling versioned\ncollections\n                that I posted earlier today to this mailing list (it's\nsubject was\n                \"versioned collections: a proposal\".\n\n                   From: Chris Kaler <ckaler@microsoft.com>\n\n                      From: Geoffrey M. Clemm [gclemm@tantalum.atria.com]\n                      ...\n                      Since a collection is\n                      a canonical way of specifying a resource as some base\nresource\n                      extended by some unique (wrt that base resource)\nidentifier, why don't\n                      we just define a versioned-resource to be a\ncollection, and each\n                      revision to be a member of that collection identified\nby what we have\n                      been calling the revision-id?\n                      ...\n\n                   ... I think your approach has some problems.  First, I\n                   don't understand how you would handle the versioning of a\ncollection\n                   resource itself.  Does it become a collection of\ncollections?\n\n                Yes.  (See the \"versioned collections\" article for details).\n\n                   As for complexity, I'd argue it is a wash.  You trade the\ncomplexity of the\n                   pair of information for the complexity of inserting extra\ncollections into\n                   the namespace.\n\n                Inserting extra collections into the namespace does not\nincrease the\n                complexity of the protocol, while requiring a pair of\nidentifiers to\n                identify a revision resource does (e.g. the new header\nneeded to specify\n                the revision id, and extending the method semantics to use\nor ignore\n                the new header).  This is certainly something we could cope\nwith if we\n                had to, but I'd need to see some real benefit before paying\nthe price.\n\n                   We would also have to add the notion of a \"default\"\nmember to a collection.\n                   That is, if I do a GET on the versioned resource, which\nis just a\n                   collection, which resource within the collection do I\nreturn (this is the\n                   PIN method, but the semantics are a little broader now --\nnot that this is\n                   bad).\n\n                I don't see why we would have to define in general the\nnotion of a\n                \"default\" member of a collection.  We define the notion for\nversioned\n                resources, and that isn't affected by whether the versioned\nresource happens\n                to be a collection (of revisions).\n\n                   I also think the collections approach assumes a basic\nlinear history.\n\n                Why?  A standard collection is just a set with identifiers\nfor the members.\n                This implies nothing about the linear nature of the history\n(this is determined\n                from the predecessor/successor properties of the revisions).\n\n                   Once\n                   you get into resource-level branching, do we represent\nthe branch as another\n                   collection?\n\n                One could, but I wouldn't recommend doing so.  I'd just make\nthe branch\n                be a property of the revision.  In particular, this\nbranch-as-property\n                approach allows you to support the \"change-set\" approach\nwith no change\n                to the protocol.\n\n                   If so, the collections of collections are going to get\nvery\n                   complex, very fast.\n\n                Another reason not to do so.\n\n                   When building Web sites, the inter-page links are very\nimportant.  I believe\n                   people want to be able to version their sites without\nrequiring a lot of\n                   link updating to occur.   That is, I should be able to\ncreate different\n                   branches and have my links still work by passing in\nheaders to qualify the\n                   URI.  By introducing namespace changes to refer to the\nbranches and versions\n                   (or even configurations), you force the links to have to\nchange.\n\n                I assume that you are referring to the problems of handling\nabsolute\n                inter-page links in the presence of namespace versioning?\n(Relative\n                inter-page links require no additional headers).\n\n                I agree that this is an important problem, but I do not\nbelieve it can\n                be effectively solved by passing around a \"revision-id\".  To\nsolve\n                this problem, you need to pass around a \"version-selection\"\nheader\n                that indicates what revision should be selected from each of\nthe\n                versioned collections back to the root of the URI space.  In\naddition,\n                you need to indicate when you want a revision, and when you\nwant a\n                working resource.\n\n                In my proposal for handling versioned collections, this\nproblem would\n                be addressed by passing around a \"workspace\" header, and\nthen\n                upgrading all methods to treat absolute URI's in a document\nas\n                relative URI's wrt the specified workspace URI.\n\n                Cheers,\n                Geoff\n     \n   \n\n", "id": "lists-005-9999894"}]